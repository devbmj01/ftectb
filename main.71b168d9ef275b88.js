(self.webpackChunkapp_BTCETF = self.webpackChunkapp_BTCETF || []).push([
    [179], {
        4691: (ft, G, I) => {
            "use strict";

            function _e(t) {
                return "function" == typeof t
            }

            function Ee(t) {
                const e = t(i => {
                    Error.call(i), i.stack = (new Error).stack
                });
                return e.prototype = Object.create(Error.prototype), e.prototype.constructor = e, e
            }
            const ge = Ee(t => function(e) {
                t(this), this.message = e ? `${e.length} errors occurred during unsubscription:\n${e.map((i,s)=>`${s+1}) ${i.toString()}`).join("\n  ")}` : "", this.name = "UnsubscriptionError", this.errors = e
            });

            function Ce(t, n) {
                if (t) {
                    const e = t.indexOf(n);
                    0 <= e && t.splice(e, 1)
                }
            }
            class U {
                constructor(n) {
                    this.initialTeardown = n, this.closed = !1, this._parentage = null, this._finalizers = null
                }
                unsubscribe() {
                    let n;
                    if (!this.closed) {
                        this.closed = !0;
                        const {
                            _parentage: e
                        } = this;
                        if (e)
                            if (this._parentage = null, Array.isArray(e))
                                for (const r of e) r.remove(this);
                            else e.remove(this);
                        const {
                            initialTeardown: i
                        } = this;
                        if (_e(i)) try {
                            i()
                        } catch (r) {
                            n = r instanceof ge ? r.errors : [r]
                        }
                        const {
                            _finalizers: s
                        } = this;
                        if (s) {
                            this._finalizers = null;
                            for (const r of s) try {
                                ie(r)
                            } catch (l) {
                                n = n ? ? [], l instanceof ge ? n = [...n, ...l.errors] : n.push(l)
                            }
                        }
                        if (n) throw new ge(n)
                    }
                }
                add(n) {
                    var e;
                    if (n && n !== this)
                        if (this.closed) ie(n);
                        else {
                            if (n instanceof U) {
                                if (n.closed || n._hasParent(this)) return;
                                n._addParent(this)
                            }(this._finalizers = null !== (e = this._finalizers) && void 0 !== e ? e : []).push(n)
                        }
                }
                _hasParent(n) {
                    const {
                        _parentage: e
                    } = this;
                    return e === n || Array.isArray(e) && e.includes(n)
                }
                _addParent(n) {
                    const {
                        _parentage: e
                    } = this;
                    this._parentage = Array.isArray(e) ? (e.push(n), e) : e ? [e, n] : n
                }
                _removeParent(n) {
                    const {
                        _parentage: e
                    } = this;
                    e === n ? this._parentage = null : Array.isArray(e) && Ce(e, n)
                }
                remove(n) {
                    const {
                        _finalizers: e
                    } = this;
                    e && Ce(e, n), n instanceof U && n._removeParent(this)
                }
            }
            U.EMPTY = (() => {
                const t = new U;
                return t.closed = !0, t
            })();
            const se = U.EMPTY;

            function z(t) {
                return t instanceof U || t && "closed" in t && _e(t.remove) && _e(t.add) && _e(t.unsubscribe)
            }

            function ie(t) {
                _e(t) ? t() : t.unsubscribe()
            }
            const ee = {
                    onUnhandledError: null,
                    onStoppedNotification: null,
                    Promise: void 0,
                    useDeprecatedSynchronousErrorHandling: !1,
                    useDeprecatedNextContext: !1
                },
                oe = {
                    setTimeout(t, n, ...e) {
                        const {
                            delegate: i
                        } = oe;
                        return i ? .setTimeout ? i.setTimeout(t, n, ...e) : setTimeout(t, n, ...e)
                    },
                    clearTimeout(t) {
                        const {
                            delegate: n
                        } = oe;
                        return (n ? .clearTimeout || clearTimeout)(t)
                    },
                    delegate: void 0
                };

            function ve(t) {
                oe.setTimeout(() => {
                    const {
                        onUnhandledError: n
                    } = ee;
                    if (!n) throw t;
                    n(t)
                })
            }

            function Te() {}
            const Me = Ye("C", void 0, void 0);

            function Ye(t, n, e) {
                return {
                    kind: t,
                    value: n,
                    error: e
                }
            }
            let Je = null;

            function te(t) {
                if (ee.useDeprecatedSynchronousErrorHandling) {
                    const n = !Je;
                    if (n && (Je = {
                            errorThrown: !1,
                            error: null
                        }), t(), n) {
                        const {
                            errorThrown: e,
                            error: i
                        } = Je;
                        if (Je = null, e) throw i
                    }
                } else t()
            }
            class Oe extends U {
                constructor(n) {
                    super(), this.isStopped = !1, n ? (this.destination = n, z(n) && n.add(this)) : this.destination = tt
                }
                static create(n, e, i) {
                    return new R(n, e, i)
                }
                next(n) {
                    this.isStopped ? Ze(function We(t) {
                        return Ye("N", t, void 0)
                    }(n), this) : this._next(n)
                }
                error(n) {
                    this.isStopped ? Ze(function Be(t) {
                        return Ye("E", void 0, t)
                    }(n), this) : (this.isStopped = !0, this._error(n))
                }
                complete() {
                    this.isStopped ? Ze(Me, this) : (this.isStopped = !0, this._complete())
                }
                unsubscribe() {
                    this.closed || (this.isStopped = !0, super.unsubscribe(), this.destination = null)
                }
                _next(n) {
                    this.destination.next(n)
                }
                _error(n) {
                    try {
                        this.destination.error(n)
                    } finally {
                        this.unsubscribe()
                    }
                }
                _complete() {
                    try {
                        this.destination.complete()
                    } finally {
                        this.unsubscribe()
                    }
                }
            }
            const J = Function.prototype.bind;

            function Ie(t, n) {
                return J.call(t, n)
            }
            class Xe {
                constructor(n) {
                    this.partialObserver = n
                }
                next(n) {
                    const {
                        partialObserver: e
                    } = this;
                    if (e.next) try {
                        e.next(n)
                    } catch (i) {
                        ce(i)
                    }
                }
                error(n) {
                    const {
                        partialObserver: e
                    } = this;
                    if (e.error) try {
                        e.error(n)
                    } catch (i) {
                        ce(i)
                    } else ce(n)
                }
                complete() {
                    const {
                        partialObserver: n
                    } = this;
                    if (n.complete) try {
                        n.complete()
                    } catch (e) {
                        ce(e)
                    }
                }
            }
            class R extends Oe {
                constructor(n, e, i) {
                    let s;
                    if (super(), _e(n) || !n) s = {
                        next: n ? ? void 0,
                        error: e ? ? void 0,
                        complete: i ? ? void 0
                    };
                    else {
                        let r;
                        this && ee.useDeprecatedNextContext ? (r = Object.create(n), r.unsubscribe = () => this.unsubscribe(), s = {
                            next: n.next && Ie(n.next, r),
                            error: n.error && Ie(n.error, r),
                            complete: n.complete && Ie(n.complete, r)
                        }) : s = n
                    }
                    this.destination = new Xe(s)
                }
            }

            function ce(t) {
                ee.useDeprecatedSynchronousErrorHandling ? function Pe(t) {
                    ee.useDeprecatedSynchronousErrorHandling && Je && (Je.errorThrown = !0, Je.error = t)
                }(t) : ve(t)
            }

            function Ze(t, n) {
                const {
                    onStoppedNotification: e
                } = ee;
                e && oe.setTimeout(() => e(t, n))
            }
            const tt = {
                    closed: !0,
                    next: Te,
                    error: function Ve(t) {
                        throw t
                    },
                    complete: Te
                },
                at = "function" == typeof Symbol && Symbol.observable || "@@observable";

            function Ge(t) {
                return t
            }

            function Re(t) {
                return 0 === t.length ? Ge : 1 === t.length ? t[0] : function(e) {
                    return t.reduce((i, s) => s(i), e)
                }
            }
            let we = (() => {
                class t {
                    constructor(e) {
                        e && (this._subscribe = e)
                    }
                    lift(e) {
                        const i = new t;
                        return i.source = this, i.operator = e, i
                    }
                    subscribe(e, i, s) {
                        const r = function Mt(t) {
                            return t && t instanceof Oe || function _t(t) {
                                return t && _e(t.next) && _e(t.error) && _e(t.complete)
                            }(t) && z(t)
                        }(e) ? e : new R(e, i, s);
                        return te(() => {
                            const {
                                operator: l,
                                source: u
                            } = this;
                            r.add(l ? l.call(r, u) : u ? this._subscribe(r) : this._trySubscribe(r))
                        }), r
                    }
                    _trySubscribe(e) {
                        try {
                            return this._subscribe(e)
                        } catch (i) {
                            e.error(i)
                        }
                    }
                    forEach(e, i) {
                        return new(i = je(i))((s, r) => {
                            const l = new R({
                                next: u => {
                                    try {
                                        e(u)
                                    } catch (h) {
                                        r(h), l.unsubscribe()
                                    }
                                },
                                error: r,
                                complete: s
                            });
                            this.subscribe(l)
                        })
                    }
                    _subscribe(e) {
                        var i;
                        return null === (i = this.source) || void 0 === i ? void 0 : i.subscribe(e)
                    }[at]() {
                        return this
                    }
                    pipe(...e) {
                        return Re(e)(this)
                    }
                    toPromise(e) {
                        return new(e = je(e))((i, s) => {
                            let r;
                            this.subscribe(l => r = l, l => s(l), () => i(r))
                        })
                    }
                }
                return t.create = n => new t(n), t
            })();

            function je(t) {
                var n;
                return null !== (n = t ? ? ee.Promise) && void 0 !== n ? n : Promise
            }
            const Lt = Ee(t => function() {
                t(this), this.name = "ObjectUnsubscribedError", this.message = "object unsubscribed"
            });
            let He = (() => {
                class t extends we {
                    constructor() {
                        super(), this.closed = !1, this.currentObservers = null, this.observers = [], this.isStopped = !1, this.hasError = !1, this.thrownError = null
                    }
                    lift(e) {
                        const i = new St(this, this);
                        return i.operator = e, i
                    }
                    _throwIfClosed() {
                        if (this.closed) throw new Lt
                    }
                    next(e) {
                        te(() => {
                            if (this._throwIfClosed(), !this.isStopped) {
                                this.currentObservers || (this.currentObservers = Array.from(this.observers));
                                for (const i of this.currentObservers) i.next(e)
                            }
                        })
                    }
                    error(e) {
                        te(() => {
                            if (this._throwIfClosed(), !this.isStopped) {
                                this.hasError = this.isStopped = !0, this.thrownError = e;
                                const {
                                    observers: i
                                } = this;
                                for (; i.length;) i.shift().error(e)
                            }
                        })
                    }
                    complete() {
                        te(() => {
                            if (this._throwIfClosed(), !this.isStopped) {
                                this.isStopped = !0;
                                const {
                                    observers: e
                                } = this;
                                for (; e.length;) e.shift().complete()
                            }
                        })
                    }
                    unsubscribe() {
                        this.isStopped = this.closed = !0, this.observers = this.currentObservers = null
                    }
                    get observed() {
                        var e;
                        return (null === (e = this.observers) || void 0 === e ? void 0 : e.length) > 0
                    }
                    _trySubscribe(e) {
                        return this._throwIfClosed(), super._trySubscribe(e)
                    }
                    _subscribe(e) {
                        return this._throwIfClosed(), this._checkFinalizedStatuses(e), this._innerSubscribe(e)
                    }
                    _innerSubscribe(e) {
                        const {
                            hasError: i,
                            isStopped: s,
                            observers: r
                        } = this;
                        return i || s ? se : (this.currentObservers = null, r.push(e), new U(() => {
                            this.currentObservers = null, Ce(r, e)
                        }))
                    }
                    _checkFinalizedStatuses(e) {
                        const {
                            hasError: i,
                            thrownError: s,
                            isStopped: r
                        } = this;
                        i ? e.error(s) : r && e.complete()
                    }
                    asObservable() {
                        const e = new we;
                        return e.source = this, e
                    }
                }
                return t.create = (n, e) => new St(n, e), t
            })();
            class St extends He {
                constructor(n, e) {
                    super(), this.destination = n, this.source = e
                }
                next(n) {
                    var e, i;
                    null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.next) || void 0 === i || i.call(e, n)
                }
                error(n) {
                    var e, i;
                    null === (i = null === (e = this.destination) || void 0 === e ? void 0 : e.error) || void 0 === i || i.call(e, n)
                }
                complete() {
                    var n, e;
                    null === (e = null === (n = this.destination) || void 0 === n ? void 0 : n.complete) || void 0 === e || e.call(n)
                }
                _subscribe(n) {
                    var e, i;
                    return null !== (i = null === (e = this.source) || void 0 === e ? void 0 : e.subscribe(n)) && void 0 !== i ? i : se
                }
            }

            function Ft(t) {
                return _e(t ? .lift)
            }

            function Dt(t) {
                return n => {
                    if (Ft(n)) return n.lift(function(e) {
                        try {
                            return t(e, this)
                        } catch (i) {
                            this.error(i)
                        }
                    });
                    throw new TypeError("Unable to lift unknown Observable type")
                }
            }

            function Ct(t, n, e, i, s) {
                return new Gt(t, n, e, i, s)
            }
            class Gt extends Oe {
                constructor(n, e, i, s, r, l) {
                    super(n), this.onFinalize = r, this.shouldUnsubscribe = l, this._next = e ? function(u) {
                        try {
                            e(u)
                        } catch (h) {
                            n.error(h)
                        }
                    } : super._next, this._error = s ? function(u) {
                        try {
                            s(u)
                        } catch (h) {
                            n.error(h)
                        } finally {
                            this.unsubscribe()
                        }
                    } : super._error, this._complete = i ? function() {
                        try {
                            i()
                        } catch (u) {
                            n.error(u)
                        } finally {
                            this.unsubscribe()
                        }
                    } : super._complete
                }
                unsubscribe() {
                    var n;
                    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
                        const {
                            closed: e
                        } = this;
                        super.unsubscribe(), !e && (null === (n = this.onFinalize) || void 0 === n || n.call(this))
                    }
                }
            }

            function kt(t, n) {
                return Dt((e, i) => {
                    let s = 0;
                    e.subscribe(Ct(i, r => {
                        i.next(t.call(n, r, s++))
                    }))
                })
            }

            function qn(t) {
                return this instanceof qn ? (this.v = t, this) : new qn(t)
            }

            function pi(t) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var e, n = t[Symbol.asyncIterator];
                return n ? n.call(t) : (t = function Mi(t) {
                    var n = "function" == typeof Symbol && Symbol.iterator,
                        e = n && t[n],
                        i = 0;
                    if (e) return e.call(t);
                    if (t && "number" == typeof t.length) return {
                        next: function() {
                            return t && i >= t.length && (t = void 0), {
                                value: t && t[i++],
                                done: !t
                            }
                        }
                    };
                    throw new TypeError(n ? "Object is not iterable." : "Symbol.iterator is not defined.")
                }(t), e = {}, i("next"), i("throw"), i("return"), e[Symbol.asyncIterator] = function() {
                    return this
                }, e);

                function i(r) {
                    e[r] = t[r] && function(l) {
                        return new Promise(function(u, h) {
                            ! function s(r, l, u, h) {
                                Promise.resolve(h).then(function(v) {
                                    r({
                                        value: v,
                                        done: u
                                    })
                                }, l)
                            }(u, h, (l = t[r](l)).done, l.value)
                        })
                    }
                }
            }
            "function" == typeof SuppressedError && SuppressedError;
            const xs = t => t && "number" == typeof t.length && "function" != typeof t;

            function ea(t) {
                return _e(t ? .then)
            }

            function Ha(t) {
                return _e(t[at])
            }

            function ao(t) {
                return Symbol.asyncIterator && _e(t ? .[Symbol.asyncIterator])
            }

            function Un(t) {
                return new TypeError(`You provided ${null!==t&&"object"==typeof t?"an invalid object":`'${t}'`} where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`)
            }
            const Ys = function zs() {
                return "function" == typeof Symbol && Symbol.iterator ? Symbol.iterator : "@@iterator"
            }();

            function sr(t) {
                return _e(t ? .[Ys])
            }

            function et(t) {
                return function Wi(t, n, e) {
                    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                    var s, i = e.apply(t, n || []),
                        r = [];
                    return s = {}, l("next"), l("throw"), l("return"), s[Symbol.asyncIterator] = function() {
                        return this
                    }, s;

                    function l(M) {
                        i[M] && (s[M] = function(L) {
                            return new Promise(function(j, Z) {
                                r.push([M, L, j, Z]) > 1 || u(M, L)
                            })
                        })
                    }

                    function u(M, L) {
                        try {
                            ! function h(M) {
                                M.value instanceof qn ? Promise.resolve(M.value.v).then(v, _) : C(r[0][2], M)
                            }(i[M](L))
                        } catch (j) {
                            C(r[0][3], j)
                        }
                    }

                    function v(M) {
                        u("next", M)
                    }

                    function _(M) {
                        u("throw", M)
                    }

                    function C(M, L) {
                        M(L), r.shift(), r.length && u(r[0][0], r[0][1])
                    }
                }(this, arguments, function*() {
                    const e = t.getReader();
                    try {
                        for (;;) {
                            const {
                                value: i,
                                done: s
                            } = yield qn(e.read());
                            if (s) return yield qn(void 0);
                            yield yield qn(i)
                        }
                    } finally {
                        e.releaseLock()
                    }
                })
            }

            function st(t) {
                return _e(t ? .getReader)
            }

            function pt(t) {
                if (t instanceof we) return t;
                if (null != t) {
                    if (Ha(t)) return function Vt(t) {
                        return new we(n => {
                            const e = t[at]();
                            if (_e(e.subscribe)) return e.subscribe(n);
                            throw new TypeError("Provided object does not correctly implement Symbol.observable")
                        })
                    }(t);
                    if (xs(t)) return function Zt(t) {
                        return new we(n => {
                            for (let e = 0; e < t.length && !n.closed; e++) n.next(t[e]);
                            n.complete()
                        })
                    }(t);
                    if (ea(t)) return function gn(t) {
                        return new we(n => {
                            t.then(e => {
                                n.closed || (n.next(e), n.complete())
                            }, e => n.error(e)).then(null, ve)
                        })
                    }(t);
                    if (ao(t)) return Ni(t);
                    if (sr(t)) return function Tn(t) {
                        return new we(n => {
                            for (const e of t)
                                if (n.next(e), n.closed) return;
                            n.complete()
                        })
                    }(t);
                    if (st(t)) return function yr(t) {
                        return Ni(et(t))
                    }(t)
                }
                throw Un(t)
            }

            function Ni(t) {
                return new we(n => {
                    (function br(t, n) {
                        var e, i, s, r;
                        return function ir(t, n, e, i) {
                            return new(e || (e = Promise))(function(r, l) {
                                function u(_) {
                                    try {
                                        v(i.next(_))
                                    } catch (C) {
                                        l(C)
                                    }
                                }

                                function h(_) {
                                    try {
                                        v(i.throw(_))
                                    } catch (C) {
                                        l(C)
                                    }
                                }

                                function v(_) {
                                    _.done ? r(_.value) : function s(r) {
                                        return r instanceof e ? r : new e(function(l) {
                                            l(r)
                                        })
                                    }(_.value).then(u, h)
                                }
                                v((i = i.apply(t, n || [])).next())
                            })
                        }(this, void 0, void 0, function*() {
                            try {
                                for (e = pi(t); !(i = yield e.next()).done;)
                                    if (n.next(i.value), n.closed) return
                            } catch (l) {
                                s = {
                                    error: l
                                }
                            } finally {
                                try {
                                    i && !i.done && (r = e.return) && (yield r.call(e))
                                } finally {
                                    if (s) throw s.error
                                }
                            }
                            n.complete()
                        })
                    })(t, n).catch(e => n.error(e))
                })
            }

            function as(t, n, e, i = 0, s = !1) {
                const r = n.schedule(function() {
                    e(), s ? t.add(this.schedule(null, i)) : this.unsubscribe()
                }, i);
                if (t.add(r), !s) return r
            }

            function zi(t, n, e = 1 / 0) {
                return _e(n) ? zi((i, s) => kt((r, l) => n(i, r, s, l))(pt(t(i, s))), e) : ("number" == typeof n && (e = n), Dt((i, s) => function ba(t, n, e, i, s, r, l, u) {
                    const h = [];
                    let v = 0,
                        _ = 0,
                        C = !1;
                    const M = () => {
                            C && !h.length && !v && n.complete()
                        },
                        L = Z => v < i ? j(Z) : h.push(Z),
                        j = Z => {
                            r && n.next(Z), v++;
                            let Q = !1;
                            pt(e(Z, _++)).subscribe(Ct(n, Ae => {
                                s ? .(Ae), r ? L(Ae) : n.next(Ae)
                            }, () => {
                                Q = !0
                            }, void 0, () => {
                                if (Q) try {
                                    for (v--; h.length && v < i;) {
                                        const Ae = h.shift();
                                        l ? as(n, l, () => j(Ae)) : j(Ae)
                                    }
                                    M()
                                } catch (Ae) {
                                    n.error(Ae)
                                }
                            }))
                        };
                    return t.subscribe(Ct(n, L, () => {
                        C = !0, M()
                    })), () => {
                        u ? .()
                    }
                }(i, s, t, e)))
            }

            function ks(t = 1 / 0) {
                return zi(Ge, t)
            }
            const os = new we(t => t.complete());

            function o(t) {
                return t && _e(t.schedule)
            }

            function c(t) {
                return t[t.length - 1]
            }

            function d(t) {
                return _e(c(t)) ? t.pop() : void 0
            }

            function f(t) {
                return o(c(t)) ? t.pop() : void 0
            }

            function m(t, n = 0) {
                return Dt((e, i) => {
                    e.subscribe(Ct(i, s => as(i, t, () => i.next(s), n), () => as(i, t, () => i.complete(), n), s => as(i, t, () => i.error(s), n)))
                })
            }

            function y(t, n = 0) {
                return Dt((e, i) => {
                    i.add(t.schedule(() => e.subscribe(i), n))
                })
            }

            function k(t, n) {
                if (!t) throw new Error("Iterable cannot be null");
                return new we(e => {
                    as(e, n, () => {
                        const i = t[Symbol.asyncIterator]();
                        as(e, n, () => {
                            i.next().then(s => {
                                s.done ? e.complete() : e.next(s.value)
                            })
                        }, 0, !0)
                    })
                })
            }

            function $(t, n) {
                return n ? function B(t, n) {
                    if (null != t) {
                        if (Ha(t)) return function x(t, n) {
                            return pt(t).pipe(y(n), m(n))
                        }(t, n);
                        if (xs(t)) return function S(t, n) {
                            return new we(e => {
                                let i = 0;
                                return n.schedule(function() {
                                    i === t.length ? e.complete() : (e.next(t[i++]), e.closed || this.schedule())
                                })
                            })
                        }(t, n);
                        if (ea(t)) return function w(t, n) {
                            return pt(t).pipe(y(n), m(n))
                        }(t, n);
                        if (ao(t)) return k(t, n);
                        if (sr(t)) return function T(t, n) {
                            return new we(e => {
                                let i;
                                return as(e, n, () => {
                                    i = t[Ys](), as(e, n, () => {
                                        let s, r;
                                        try {
                                            ({
                                                value: s,
                                                done: r
                                            } = i.next())
                                        } catch (l) {
                                            return void e.error(l)
                                        }
                                        r ? e.complete() : e.next(s)
                                    }, 0, !0)
                                }), () => _e(i ? .return) && i.return()
                            })
                        }(t, n);
                        if (st(t)) return function O(t, n) {
                            return k(et(t), n)
                        }(t, n)
                    }
                    throw Un(t)
                }(t, n) : pt(t)
            }

            function ne(...t) {
                const n = f(t),
                    e = function p(t, n) {
                        return "number" == typeof c(t) ? t.pop() : n
                    }(t, 1 / 0),
                    i = t;
                return i.length ? 1 === i.length ? pt(i[0]) : ks(e)($(i, n)) : os
            }
            class re extends He {
                constructor(n) {
                    super(), this._value = n
                }
                get value() {
                    return this.getValue()
                }
                _subscribe(n) {
                    const e = super._subscribe(n);
                    return !e.closed && n.next(this._value), e
                }
                getValue() {
                    const {
                        hasError: n,
                        thrownError: e,
                        _value: i
                    } = this;
                    if (n) throw e;
                    return this._throwIfClosed(), i
                }
                next(n) {
                    super.next(this._value = n)
                }
            }

            function b(...t) {
                return $(t, f(t))
            }

            function A(t = {}) {
                const {
                    connector: n = (() => new He),
                    resetOnError: e = !0,
                    resetOnComplete: i = !0,
                    resetOnRefCountZero: s = !0
                } = t;
                return r => {
                    let l, u, h, v = 0,
                        _ = !1,
                        C = !1;
                    const M = () => {
                            u ? .unsubscribe(), u = void 0
                        },
                        L = () => {
                            M(), l = h = void 0, _ = C = !1
                        },
                        j = () => {
                            const Z = l;
                            L(), Z ? .unsubscribe()
                        };
                    return Dt((Z, Q) => {
                        v++, !C && !_ && M();
                        const Ae = h = h ? ? n();
                        Q.add(() => {
                            v--, 0 === v && !C && !_ && (u = F(j, s))
                        }), Ae.subscribe(Q), !l && v > 0 && (l = new R({
                            next: De => Ae.next(De),
                            error: De => {
                                C = !0, M(), u = F(L, e, De), Ae.error(De)
                            },
                            complete: () => {
                                _ = !0, M(), u = F(L, i), Ae.complete()
                            }
                        }), pt(Z).subscribe(l))
                    })(r)
                }
            }

            function F(t, n, ...e) {
                if (!0 === n) return void t();
                if (!1 === n) return;
                const i = new R({
                    next: () => {
                        i.unsubscribe(), t()
                    }
                });
                return pt(n(...e)).subscribe(i)
            }

            function X(t, n) {
                return Dt((e, i) => {
                    let s = null,
                        r = 0,
                        l = !1;
                    const u = () => l && !s && i.complete();
                    e.subscribe(Ct(i, h => {
                        s ? .unsubscribe();
                        let v = 0;
                        const _ = r++;
                        pt(t(h, _)).subscribe(s = Ct(i, C => i.next(n ? n(h, C, _, v++) : C), () => {
                            s = null, u()
                        }))
                    }, () => {
                        l = !0, u()
                    }))
                })
            }

            function Se(t, n) {
                return t === n
            }

            function Le(t) {
                for (let n in t)
                    if (t[n] === Le) return n;
                throw Error("Could not find renamed property on target object.")
            }

            function ze(t, n) {
                for (const e in n) n.hasOwnProperty(e) && !t.hasOwnProperty(e) && (t[e] = n[e])
            }

            function nt(t) {
                if ("string" == typeof t) return t;
                if (Array.isArray(t)) return "[" + t.map(nt).join(", ") + "]";
                if (null == t) return "" + t;
                if (t.overriddenName) return `${t.overriddenName}`;
                if (t.name) return `${t.name}`;
                const n = t.toString();
                if (null == n) return "" + n;
                const e = n.indexOf("\n");
                return -1 === e ? n : n.substring(0, e)
            }

            function yt(t, n) {
                return null == t || "" === t ? null === n ? "" : n : null == n || "" === n ? t : t + " " + n
            }
            const dt = Le({
                __forward_ref__: Le
            });

            function Tt(t) {
                return t.__forward_ref__ = Tt, t.toString = function() {
                    return nt(this())
                }, t
            }

            function wt(t) {
                return ln(t) ? t() : t
            }

            function ln(t) {
                return "function" == typeof t && t.hasOwnProperty(dt) && t.__forward_ref__ === Tt
            }

            function Jt(t) {
                return t && !!t.\u0275providers
            }
            const Ti = "https://g.co/ng/security#xss";
            class ke extends Error {
                constructor(n, e) {
                    super(function Ke(t, n) {
                        return `NG0${Math.abs(t)}${n?": "+n:""}`
                    }(n, e)), this.code = n
                }
            }

            function qe(t) {
                return "string" == typeof t ? t : null == t ? "" : String(t)
            }

            function Mn(t, n) {
                throw new ke(-201, !1)
            }

            function es(t, n) {
                null == t && function an(t, n, e, i) {
                    throw new Error(`ASSERTION ERROR: ${t}` + (null == i ? "" : ` [Expected=> ${e} ${i} ${n} <=Actual]`))
                }(n, t, null, "!=")
            }

            function Et(t) {
                return {
                    token: t.token,
                    providedIn: t.providedIn || null,
                    factory: t.factory,
                    value: void 0
                }
            }

            function zn(t) {
                return {
                    providers: t.providers || [],
                    imports: t.imports || []
                }
            }

            function dc(t) {
                return Pp(t, pu) || Pp(t, Op)
            }

            function Pp(t, n) {
                return t.hasOwnProperty(n) ? t[n] : null
            }

            function fu(t) {
                return t && (t.hasOwnProperty(eh) || t.hasOwnProperty(p0)) ? t[eh] : null
            }
            const pu = Le({\
                    u0275prov: Le
                }),
                eh = Le({\
                    u0275inj: Le
                }),
                Op = Le({
                    ngInjectableDef: Le
                }),
                p0 = Le({
                    ngInjectorDef: Le
                });
            var Rn = function(t) {
                return t[t.Default = 0] = "Default", t[t.Host = 1] = "Host", t[t.Self = 2] = "Self", t[t.SkipSelf = 4] = "SkipSelf", t[t.Optional = 8] = "Optional", t
            }(Rn || {});
            let th;

            function Zs(t) {
                const n = th;
                return th = t, n
            }

            function Lp(t, n, e) {
                const i = dc(t);
                return i && "root" == i.providedIn ? void 0 === i.value ? i.value = i.factory() : i.value : e & Rn.Optional ? null : void 0 !== n ? n : void Mn(nt(t))
            }
            const $i = globalThis;
            class zt {
                constructor(n, e) {
                    this._desc = n, this.ngMetadataName = "InjectionToken", this.\u0275prov = void 0, "number" == typeof e ? this.__NG_ELEMENT_ID__ = e : void 0 !== e && (this.\u0275prov = Et({
                        token: this,
                        providedIn: e.providedIn || "root",
                        factory: e.factory
                    }))
                }
                get multi() {
                    return this
                }
                toString() {
                    return `InjectionToken ${this._desc}`
                }
            }
            const hc = {},
                ah = "__NG_DI_FLAG__",
                mu = "ngTempTokenPath",
                Np = /\n/gm,
                Rp = "__source";
            let wl;

            function za(t) {
                const n = wl;
                return wl = t, n
            }

            function y0(t, n = Rn.Default) {
                if (void 0 === wl) throw new ke(-203, !1);
                return null === wl ? Lp(t, void 0, n) : wl.get(t, n & Rn.Optional ? null : void 0, n)
            }

            function vt(t, n = Rn.Default) {
                return (function Ip() {
                    return th
                }() || y0)(wt(t), n)
            }

            function Xt(t, n = Rn.Default) {
                return vt(t, Cl(n))
            }

            function Cl(t) {
                return typeof t > "u" || "number" == typeof t ? t : 0 | (t.optional && 8) | (t.host && 1) | (t.self && 2) | (t.skipSelf && 4)
            }

            function Sl(t) {
                const n = [];
                for (let e = 0; e < t.length; e++) {
                    const i = wt(t[e]);
                    if (Array.isArray(i)) {
                        if (0 === i.length) throw new ke(900, !1);
                        let s, r = Rn.Default;
                        for (let l = 0; l < i.length; l++) {
                            const u = i[l],
                                h = Bp(u);
                            "number" == typeof h ? -1 === h ? s = u.token : r |= h : s = u
                        }
                        n.push(vt(s, r))
                    } else n.push(vt(i))
                }
                return n
            }

            function fc(t, n) {
                return t[ah] = n, t.prototype[ah] = n, t
            }

            function Bp(t) {
                return t[ah]
            }

            function _a(t) {
                return {
                    toString: t
                }.toString()
            }
            var pc = function(t) {
                    return t[t.OnPush = 0] = "OnPush", t[t.Default = 1] = "Default", t
                }(pc || {}),
                _r = function(t) {
                    return t[t.Emulated = 0] = "Emulated", t[t.None = 2] = "None", t[t.ShadowDom = 3] = "ShadowDom", t
                }(_r || {});
            const na = {},
                li = [],
                gc = Le({\
                    u0275cmp: Le
                }),
                co = Le({\
                    u0275dir: Le
                }),
                lh = Le({\
                    u0275pipe: Le
                }),
                zp = Le({\
                    u0275mod: Le
                }),
                ja = Le({\
                    u0275fac: Le
                }),
                Tl = Le({
                    __NG_ELEMENT_ID__: Le
                }),
                ch = Le({
                    __NG_ENV_ID__: Le
                });

            function uh(t, n, e) {
                let i = t.length;
                for (;;) {
                    const s = t.indexOf(n, e);
                    if (-1 === s) return s;
                    if (0 === s || t.charCodeAt(s - 1) <= 32) {
                        const r = n.length;
                        if (s + r === i || t.charCodeAt(s + r) <= 32) return s
                    }
                    e = s + 1
                }
            }

            function dh(t, n, e) {
                let i = 0;
                for (; i < e.length;) {
                    const s = e[i];
                    if ("number" == typeof s) {
                        if (0 !== s) break;
                        i++;
                        const r = e[i++],
                            l = e[i++],
                            u = e[i++];
                        t.setAttribute(n, l, u, r)
                    } else {
                        const r = s,
                            l = e[++i];
                        $p(r) ? t.setProperty(n, r, l) : t.setAttribute(n, r, l), i++
                    }
                }
                return i
            }

            function jp(t) {
                return 3 === t || 4 === t || 6 === t
            }

            function $p(t) {
                return 64 === t.charCodeAt(0)
            }

            function mc(t, n) {
                if (null !== n && 0 !== n.length)
                    if (null === t || 0 === t.length) t = n.slice();
                    else {
                        let e = -1;
                        for (let i = 0; i < n.length; i++) {
                            const s = n[i];
                            "number" == typeof s ? e = s : 0 === e || hh(t, e, s, null, -1 === e || 2 === e ? n[++i] : null)
                        }
                    }
                return t
            }

            function hh(t, n, e, i, s) {
                let r = 0,
                    l = t.length;
                if (-1 === n) l = -1;
                else
                    for (; r < t.length;) {
                        const u = t[r++];
                        if ("number" == typeof u) {
                            if (u === n) {
                                l = -1;
                                break
                            }
                            if (u > n) {
                                l = r - 1;
                                break
                            }
                        }
                    }
                for (; r < t.length;) {
                    const u = t[r];
                    if ("number" == typeof u) break;
                    if (u === e) {
                        if (null === i) return void(null !== s && (t[r + 1] = s));
                        if (i === t[r + 1]) return void(t[r + 2] = s)
                    }
                    r++, null !== i && r++, null !== s && r++
                } - 1 !== l && (t.splice(l, 0, n), r = l + 1), t.splice(r++, 0, e), null !== i && t.splice(r++, 0, i), null !== s && t.splice(r++, 0, s)
            }
            const Up = "ng-template";

            function Wp(t, n, e) {
                let i = 0,
                    s = !0;
                for (; i < t.length;) {
                    let r = t[i++];
                    if ("string" == typeof r && s) {
                        const l = t[i++];
                        if (e && "class" === r && -1 !== uh(l.toLowerCase(), n, 0)) return !0
                    } else {
                        if (1 === r) {
                            for (; i < t.length && "string" == typeof(r = t[i++]);)
                                if (r.toLowerCase() === n) return !0;
                            return !1
                        }
                        "number" == typeof r && (s = !1)
                    }
                }
                return !1
            }

            function Gp(t) {
                return 4 === t.type && t.value !== Up
            }

            function Xp(t, n, e) {
                return n === (4 !== t.type || e ? t.value : Up)
            }

            function fh(t, n, e) {
                let i = 4;
                const s = t.attrs || [],
                    r = function yu(t) {
                        for (let n = 0; n < t.length; n++)
                            if (jp(t[n])) return n;
                        return t.length
                    }(s);
                let l = !1;
                for (let u = 0; u < n.length; u++) {
                    const h = n[u];
                    if ("number" != typeof h) {
                        if (!l)
                            if (4 & i) {
                                if (i = 2 | 1 & i, "" !== h && !Xp(t, h, e) || "" === h && 1 === n.length) {
                                    if (ia(i)) return !1;
                                    l = !0
                                }
                            } else {
                                const v = 8 & i ? h : n[++u];
                                if (8 & i && null !== t.attrs) {
                                    if (!Wp(t.attrs, v, e)) {
                                        if (ia(i)) return !1;
                                        l = !0
                                    }
                                    continue
                                }
                                const C = b0(8 & i ? "class" : h, s, Gp(t), e);
                                if (-1 === C) {
                                    if (ia(i)) return !1;
                                    l = !0;
                                    continue
                                }
                                if ("" !== v) {
                                    let M;
                                    M = C > r ? "" : s[C + 1].toLowerCase();
                                    const L = 8 & i ? M : null;
                                    if (L && -1 !== uh(L, v, 0) || 2 & i && v !== M) {
                                        if (ia(i)) return !1;
                                        l = !0
                                    }
                                }
                            }
                    } else {
                        if (!l && !ia(i) && !ia(h)) return !1;
                        if (l && ia(h)) continue;
                        l = !1, i = h | 1 & i
                    }
                }
                return ia(i) || l
            }

            function ia(t) {
                return 0 == (1 & t)
            }

            function b0(t, n, e, i) {
                if (null === n) return -1;
                let s = 0;
                if (i || !e) {
                    let r = !1;
                    for (; s < n.length;) {
                        const l = n[s];
                        if (l === t) return s;
                        if (3 === l || 6 === l) r = !0;
                        else {
                            if (1 === l || 2 === l) {
                                let u = n[++s];
                                for (;
                                    "string" == typeof u;) u = n[++s];
                                continue
                            }
                            if (4 === l) break;
                            if (0 === l) {
                                s += 4;
                                continue
                            }
                        }
                        s += r ? 1 : 2
                    }
                    return -1
                }
                return function _0(t, n) {
                    let e = t.indexOf(4);
                    if (e > -1)
                        for (e++; e < t.length;) {
                            const i = t[e];
                            if ("number" == typeof i) return -1;
                            if (i === n) return e;
                            e++
                        }
                    return -1
                }(n, t)
            }

            function Yp(t, n, e = !1) {
                for (let i = 0; i < n.length; i++)
                    if (fh(t, n[i], e)) return !0;
                return !1
            }

            function w0(t, n) {
                e: for (let e = 0; e < n.length; e++) {
                    const i = n[e];
                    if (t.length === i.length) {
                        for (let s = 0; s < t.length; s++)
                            if (t[s] !== i[s]) continue e;
                        return !0
                    }
                }
                return !1
            }

            function qp(t, n) {
                return t ? ":not(" + n.trim() + ")" : n
            }

            function C0(t) {
                let n = t[0],
                    e = 1,
                    i = 2,
                    s = "",
                    r = !1;
                for (; e < t.length;) {
                    let l = t[e];
                    if ("string" == typeof l)
                        if (2 & i) {
                            const u = t[++e];
                            s += "[" + l + (u.length > 0 ? '="' + u + '"' : "") + "]"
                        } else 8 & i ? s += "." + l : 4 & i && (s += " " + l);
                    else "" !== s && !ia(l) && (n += qp(r, s), s = ""), i = l, r = r || !ia(i);
                    e++
                }
                return "" !== s && (n += qp(r, s)), n
            }

            function cn(t) {
                return _a(() => {
                    const n = ph(t),
                        e = { ...n,
                            decls: t.decls,
                            vars: t.vars,
                            template: t.template,
                            consts: t.consts || null,
                            ngContentSelectors: t.ngContentSelectors,
                            onPush: t.changeDetection === pc.OnPush,
                            directiveDefs: null,
                            pipeDefs: null,
                            dependencies: n.standalone && t.dependencies || null,
                            getStandaloneInjector: null,
                            signals: t.signals ? ? !1,
                            data: t.data || {},
                            encapsulation: t.encapsulation || _r.Emulated,
                            styles: t.styles || li,
                            _: null,
                            schemas: t.schemas || null,
                            tView: null,
                            id: ""
                        };
                    Jp(e);
                    const i = t.dependencies;
                    return e.directiveDefs = bu(i, !1), e.pipeDefs = bu(i, !0), e.id = function E0(t) {
                        let n = 0;
                        const e = [t.selectors, t.ngContentSelectors, t.hostVars, t.hostAttrs, t.consts, t.vars, t.decls, t.encapsulation, t.standalone, t.signals, t.exportAs, JSON.stringify(t.inputs), JSON.stringify(t.outputs), Object.getOwnPropertyNames(t.type.prototype), !!t.contentQueries, !!t.viewQuery].join("|");
                        for (const s of e) n = Math.imul(31, n) + s.charCodeAt(0) << 0;
                        return n += 2147483648, "c" + n
                    }(e), e
                })
            }

            function D0(t) {
                return ti(t) || Ms(t)
            }

            function Kp(t) {
                return null !== t
            }

            function jn(t) {
                return _a(() => ({
                    type: t.type,
                    bootstrap: t.bootstrap || li,
                    declarations: t.declarations || li,
                    imports: t.imports || li,
                    exports: t.exports || li,
                    transitiveCompileScopes: null,
                    schemas: t.schemas || null,
                    id: t.id || null
                }))
            }

            function Qp(t, n) {
                if (null == t) return na;
                const e = {};
                for (const i in t)
                    if (t.hasOwnProperty(i)) {
                        let s = t[i],
                            r = s;
                        Array.isArray(s) && (r = s[1], s = s[0]), e[s] = i, n && (n[s] = r)
                    }
                return e
            }

            function tn(t) {
                return _a(() => {
                    const n = ph(t);
                    return Jp(n), n
                })
            }

            function Es(t) {
                return {
                    type: t.type,
                    name: t.name,
                    factory: null,
                    pure: !1 !== t.pure,
                    standalone: !0 === t.standalone,
                    onDestroy: t.type.prototype.ngOnDestroy || null
                }
            }

            function ti(t) {
                return t[gc] || null
            }

            function Ms(t) {
                return t[co] || null
            }

            function Ks(t) {
                return t[lh] || null
            }

            function wr(t, n) {
                const e = t[zp] || null;
                if (!e && !0 === n) throw new Error(`Type ${nt(t)} does not have '\u0275mod' property.`);
                return e
            }

            function ph(t) {
                const n = {};
                return {
                    type: t.type,
                    providersResolver: null,
                    factory: null,
                    hostBindings: t.hostBindings || null,
                    hostVars: t.hostVars || 0,
                    hostAttrs: t.hostAttrs || null,
                    contentQueries: t.contentQueries || null,
                    declaredInputs: n,
                    inputTransforms: null,
                    inputConfig: t.inputs || na,
                    exportAs: t.exportAs || null,
                    standalone: !0 === t.standalone,
                    signals: !0 === t.signals,
                    selectors: t.selectors || li,
                    viewQuery: t.viewQuery || null,
                    features: t.features || null,
                    setInput: null,
                    findHostDirectiveDefs: null,
                    hostDirectives: null,
                    inputs: Qp(t.inputs, n),
                    outputs: Qp(t.outputs)
                }
            }

            function Jp(t) {
                t.features ? .forEach(n => n(t))
            }

            function bu(t, n) {
                if (!t) return null;
                const e = n ? Ks : D0;
                return () => ("function" == typeof t ? t() : t).map(i => e(i)).filter(Kp)
            }
            const ns = 0,
                Wt = 1,
                Pn = 2,
                qi = 3,
                sa = 4,
                ra = 5,
                Ps = 6,
                Al = 7,
                ls = 8,
                uo = 9,
                kl = 10,
                An = 11,
                El = 12,
                eg = 13,
                Ml = 14,
                cs = 15,
                cr = 16,
                $a = 17,
                _i = 18,
                vc = 19,
                tg = 20,
                ho = 21,
                Ua = 22,
                yc = 23,
                bc = 24,
                Jn = 25,
                xu = 1,
                xc = 2,
                Y = 7,
                P = 9,
                Ne = 11;

            function Rt(t) {
                return Array.isArray(t) && "object" == typeof t[xu]
            }

            function nn(t) {
                return Array.isArray(t) && !0 === t[xu]
            }

            function $n(t) {
                return 0 != (4 & t.flags)
            }

            function mi(t) {
                return t.componentOffset > -1
            }

            function fo(t) {
                return 1 == (1 & t.flags)
            }

            function Wa(t) {
                return !!t.template
            }

            function P0(t) {
                return 0 != (512 & t[Pn])
            }

            function _c(t, n) {
                return t.hasOwnProperty(ja) ? t[ja] : null
            }
            let Qs = null,
                ng = !1;

            function wa(t) {
                const n = Qs;
                return Qs = t, n
            }
            const mD = {
                version: 0,
                dirty: !1,
                producerNode: void 0,
                producerLastReadVersion: void 0,
                producerIndexOfThis: void 0,
                nextProducerIndex: 0,
                liveConsumerNode: void 0,
                liveConsumerIndexOfThis: void 0,
                consumerAllowSignalWrites: !1,
                consumerIsAlwaysLive: !1,
                producerMustRecompute: () => !1,
                producerRecomputeValue: () => {},
                consumerMarkedDirty: () => {}
            };

            function yD(t) {
                if (!gh(t) || t.dirty) {
                    if (!t.producerMustRecompute(t) && !_D(t)) return void(t.dirty = !1);
                    t.producerRecomputeValue(t), t.dirty = !1
                }
            }

            function xD(t) {
                t.dirty = !0,
                    function bD(t) {
                        if (void 0 === t.liveConsumerNode) return;
                        const n = ng;
                        ng = !0;
                        try {
                            for (const e of t.liveConsumerNode) e.dirty || xD(e)
                        } finally {
                            ng = n
                        }
                    }(t), t.consumerMarkedDirty ? .(t)
            }

            function I0(t) {
                return t && (t.nextProducerIndex = 0), wa(t)
            }

            function L0(t, n) {
                if (wa(n), t && void 0 !== t.producerNode && void 0 !== t.producerIndexOfThis && void 0 !== t.producerLastReadVersion) {
                    if (gh(t))
                        for (let e = t.nextProducerIndex; e < t.producerNode.length; e++) ig(t.producerNode[e], t.producerIndexOfThis[e]);
                    for (; t.producerNode.length > t.nextProducerIndex;) t.producerNode.pop(), t.producerLastReadVersion.pop(), t.producerIndexOfThis.pop()
                }
            }

            function _D(t) {
                _u(t);
                for (let n = 0; n < t.producerNode.length; n++) {
                    const e = t.producerNode[n],
                        i = t.producerLastReadVersion[n];
                    if (i !== e.version || (yD(e), i !== e.version)) return !0
                }
                return !1
            }

            function wD(t) {
                if (_u(t), gh(t))
                    for (let n = 0; n < t.producerNode.length; n++) ig(t.producerNode[n], t.producerIndexOfThis[n]);
                t.producerNode.length = t.producerLastReadVersion.length = t.producerIndexOfThis.length = 0, t.liveConsumerNode && (t.liveConsumerNode.length = t.liveConsumerIndexOfThis.length = 0)
            }

            function ig(t, n) {
                if (function SD(t) {
                        t.liveConsumerNode ? ? = [], t.liveConsumerIndexOfThis ? ? = []
                    }(t), _u(t), 1 === t.liveConsumerNode.length)
                    for (let i = 0; i < t.producerNode.length; i++) ig(t.producerNode[i], t.producerIndexOfThis[i]);
                const e = t.liveConsumerNode.length - 1;
                if (t.liveConsumerNode[n] = t.liveConsumerNode[e], t.liveConsumerIndexOfThis[n] = t.liveConsumerIndexOfThis[e], t.liveConsumerNode.length--, t.liveConsumerIndexOfThis.length--, n < t.liveConsumerNode.length) {
                    const i = t.liveConsumerIndexOfThis[n],
                        s = t.liveConsumerNode[n];
                    _u(s), s.producerIndexOfThis[i] = n
                }
            }

            function gh(t) {
                return t.consumerIsAlwaysLive || (t ? .liveConsumerNode ? .length ? ? 0) > 0
            }

            function _u(t) {
                t.producerNode ? ? = [], t.producerIndexOfThis ? ? = [], t.producerLastReadVersion ? ? = []
            }
            let TD = null;
            const ED = () => {},
                w6 = (() => ({ ...mD,
                    consumerIsAlwaysLive: !0,
                    consumerAllowSignalWrites: !1,
                    consumerMarkedDirty: t => {
                        t.schedule(t.ref)
                    },
                    hasRun: !1,
                    cleanupFn: ED
                }))();
            class C6 {
                constructor(n, e, i) {
                    this.previousValue = n, this.currentValue = e, this.firstChange = i
                }
                isFirstChange() {
                    return this.firstChange
                }
            }

            function ni() {
                return MD
            }

            function MD(t) {
                return t.type.prototype.ngOnChanges && (t.setInput = T6), S6
            }

            function S6() {
                const t = OD(this),
                    n = t ? .current;
                if (n) {
                    const e = t.previous;
                    if (e === na) t.previous = n;
                    else
                        for (let i in n) e[i] = n[i];
                    t.current = null, this.ngOnChanges(n)
                }
            }

            function T6(t, n, e, i) {
                const s = this.declaredInputs[e],
                    r = OD(t) || function D6(t, n) {
                        return t[PD] = n
                    }(t, {
                        previous: na,
                        current: null
                    }),
                    l = r.current || (r.current = {}),
                    u = r.previous,
                    h = u[s];
                l[s] = new C6(h && h.currentValue, n, u === na), t[i] = n
            }
            ni.ngInherit = !0;
            const PD = "__ngSimpleChanges__";

            function OD(t) {
                return t[PD] || null
            }
            const po = function(t, n, e) {},
                ID = "svg";

            function Zi(t) {
                for (; Array.isArray(t);) t = t[ns];
                return t
            }

            function sg(t, n) {
                return Zi(n[t])
            }

            function Hr(t, n) {
                return Zi(n[t.index])
            }

            function FD(t, n) {
                return t.data[n]
            }

            function wu(t, n) {
                return t[n]
            }

            function aa(t, n) {
                const e = n[t];
                return Rt(e) ? e : e[ns]
            }

            function Ol(t, n) {
                return null == n ? null : t[n]
            }

            function ND(t) {
                t[$a] = 0
            }

            function O6(t) {
                1024 & t[Pn] || (t[Pn] |= 1024, BD(t, 1))
            }

            function RD(t) {
                1024 & t[Pn] && (t[Pn] &= -1025, BD(t, -1))
            }

            function BD(t, n) {
                let e = t[qi];
                if (null === e) return;
                e[ra] += n;
                let i = e;
                for (e = e[qi]; null !== e && (1 === n && 1 === i[ra] || -1 === n && 0 === i[ra]);) e[ra] += n, i = e, e = e[qi]
            }
            const Dn = {
                lFrame: qD(null),
                bindingsEnabled: !0,
                skipHydrationRootTNode: null
            };

            function zD() {
                return Dn.bindingsEnabled
            }

            function Cu() {
                return null !== Dn.skipHydrationRootTNode
            }

            function At() {
                return Dn.lFrame.lView
            }

            function di() {
                return Dn.lFrame.tView
            }

            function Ot(t) {
                return Dn.lFrame.contextLView = t, t[ls]
            }

            function It(t) {
                return Dn.lFrame.contextLView = null, t
            }

            function Js() {
                let t = jD();
                for (; null !== t && 64 === t.type;) t = t.parent;
                return t
            }

            function jD() {
                return Dn.lFrame.currentTNode
            }

            function go(t, n) {
                const e = Dn.lFrame;
                e.currentTNode = t, e.isParent = n
            }

            function V0() {
                return Dn.lFrame.isParent
            }

            function H0() {
                Dn.lFrame.isParent = !1
            }

            function Cr() {
                const t = Dn.lFrame;
                let n = t.bindingRootIndex;
                return -1 === n && (n = t.bindingRootIndex = t.tView.bindingStartIndex), n
            }

            function zo() {
                return Dn.lFrame.bindingIndex
            }

            function Su() {
                return Dn.lFrame.bindingIndex++
            }

            function jo(t) {
                const n = Dn.lFrame,
                    e = n.bindingIndex;
                return n.bindingIndex = n.bindingIndex + t, e
            }

            function U6(t, n) {
                const e = Dn.lFrame;
                e.bindingIndex = e.bindingRootIndex = t, z0(n)
            }

            function z0(t) {
                Dn.lFrame.currentDirectiveIndex = t
            }

            function GD() {
                return Dn.lFrame.currentQueryIndex
            }

            function $0(t) {
                Dn.lFrame.currentQueryIndex = t
            }

            function G6(t) {
                const n = t[Wt];
                return 2 === n.type ? n.declTNode : 1 === n.type ? t[Ps] : null
            }

            function XD(t, n, e) {
                if (e & Rn.SkipSelf) {
                    let s = n,
                        r = t;
                    for (; !(s = s.parent, null !== s || e & Rn.Host || (s = G6(r), null === s || (r = r[Ml], 10 & s.type))););
                    if (null === s) return !1;
                    n = s, t = r
                }
                const i = Dn.lFrame = YD();
                return i.currentTNode = n, i.lView = t, !0
            }

            function U0(t) {
                const n = YD(),
                    e = t[Wt];
                Dn.lFrame = n, n.currentTNode = e.firstChild, n.lView = t, n.tView = e, n.contextLView = t, n.bindingIndex = e.bindingStartIndex, n.inI18n = !1
            }

            function YD() {
                const t = Dn.lFrame,
                    n = null === t ? null : t.child;
                return null === n ? qD(t) : n
            }

            function qD(t) {
                const n = {
                    currentTNode: null,
                    isParent: !0,
                    lView: null,
                    tView: null,
                    selectedIndex: -1,
                    contextLView: null,
                    elementDepthCount: 0,
                    currentNamespace: null,
                    currentDirectiveIndex: -1,
                    bindingRootIndex: -1,
                    bindingIndex: -1,
                    currentQueryIndex: 0,
                    parent: t,
                    child: null,
                    inI18n: !1
                };
                return null !== t && (t.child = n), n
            }

            function ZD() {
                const t = Dn.lFrame;
                return Dn.lFrame = t.parent, t.currentTNode = null, t.lView = null, t
            }
            const KD = ZD;

            function W0() {
                const t = ZD();
                t.isParent = !0, t.tView = null, t.selectedIndex = -1, t.contextLView = null, t.elementDepthCount = 0, t.currentDirectiveIndex = -1, t.currentNamespace = null, t.bindingRootIndex = -1, t.bindingIndex = -1, t.currentQueryIndex = 0
            }

            function Sr() {
                return Dn.lFrame.selectedIndex
            }

            function wc(t) {
                Dn.lFrame.selectedIndex = t
            }

            function us() {
                const t = Dn.lFrame;
                return FD(t.tView, t.selectedIndex)
            }

            function Kt() {
                Dn.lFrame.currentNamespace = ID
            }

            function rg() {
                ! function Z6() {
                    Dn.lFrame.currentNamespace = null
                }()
            }
            let JD = !0;

            function ag() {
                return JD
            }

            function Il(t) {
                JD = t
            }

            function og(t, n) {
                for (let e = n.directiveStart, i = n.directiveEnd; e < i; e++) {
                    const r = t.data[e].type.prototype,
                        {
                            ngAfterContentInit: l,
                            ngAfterContentChecked: u,
                            ngAfterViewInit: h,
                            ngAfterViewChecked: v,
                            ngOnDestroy: _
                        } = r;
                    l && (t.contentHooks ? ? = []).push(-e, l), u && ((t.contentHooks ? ? = []).push(e, u), (t.contentCheckHooks ? ? = []).push(e, u)), h && (t.viewHooks ? ? = []).push(-e, h), v && ((t.viewHooks ? ? = []).push(e, v), (t.viewCheckHooks ? ? = []).push(e, v)), null != _ && (t.destroyHooks ? ? = []).push(e, _)
                }
            }

            function lg(t, n, e) {
                eA(t, n, 3, e)
            }

            function cg(t, n, e, i) {
                (3 & t[Pn]) === e && eA(t, n, e, i)
            }

            function G0(t, n) {
                let e = t[Pn];
                (3 & e) === n && (e &= 8191, e += 1, t[Pn] = e)
            }

            function eA(t, n, e, i) {
                const r = i ? ? -1,
                    l = n.length - 1;
                let u = 0;
                for (let h = void 0 !== i ? 65535 & t[$a] : 0; h < l; h++)
                    if ("number" == typeof n[h + 1]) {
                        if (u = n[h], null != i && u >= i) break
                    } else n[h] < 0 && (t[$a] += 65536), (u < r || -1 == r) && (Q6(t, e, n, h), t[$a] = (4294901760 & t[$a]) + h + 2), h++
            }

            function tA(t, n) {
                po(4, t, n);
                const e = wa(null);
                try {
                    n.call(t)
                } finally {
                    wa(e), po(5, t, n)
                }
            }

            function Q6(t, n, e, i) {
                const s = e[i] < 0,
                    r = e[i + 1],
                    u = t[s ? -e[i] : e[i]];
                s ? t[Pn] >> 13 < t[$a] >> 16 && (3 & t[Pn]) === n && (t[Pn] += 8192, tA(u, r)) : tA(u, r)
            }
            const Tu = -1;
            class vh {
                constructor(n, e, i) {
                    this.factory = n, this.resolving = !1, this.canSeeViewProviders = e, this.injectImpl = i
                }
            }

            function Y0(t) {
                return t !== Tu
            }

            function yh(t) {
                return 32767 & t
            }

            function bh(t, n) {
                let e = function n4(t) {
                        return t >> 16
                    }(t),
                    i = n;
                for (; e > 0;) i = i[Ml], e--;
                return i
            }
            let q0 = !0;

            function ug(t) {
                const n = q0;
                return q0 = t, n
            }
            const nA = 255,
                iA = 5;
            let i4 = 0;
            const mo = {};

            function dg(t, n) {
                const e = sA(t, n);
                if (-1 !== e) return e;
                const i = n[Wt];
                i.firstCreatePass && (t.injectorIndex = n.length, Z0(i.data, t), Z0(n, null), Z0(i.blueprint, null));
                const s = hg(t, n),
                    r = t.injectorIndex;
                if (Y0(s)) {
                    const l = yh(s),
                        u = bh(s, n),
                        h = u[Wt].data;
                    for (let v = 0; v < 8; v++) n[r + v] = u[l + v] | h[l + v]
                }
                return n[r + 8] = s, r
            }

            function Z0(t, n) {
                t.push(0, 0, 0, 0, 0, 0, 0, 0, n)
            }

            function sA(t, n) {
                return -1 === t.injectorIndex || t.parent && t.parent.injectorIndex === t.injectorIndex || null === n[t.injectorIndex + 8] ? -1 : t.injectorIndex
            }

            function hg(t, n) {
                if (t.parent && -1 !== t.parent.injectorIndex) return t.parent.injectorIndex;
                let e = 0,
                    i = null,
                    s = n;
                for (; null !== s;) {
                    if (i = dA(s), null === i) return Tu;
                    if (e++, s = s[Ml], -1 !== i.injectorIndex) return i.injectorIndex | e << 16
                }
                return Tu
            }

            function K0(t, n, e) {
                ! function s4(t, n, e) {
                    let i;
                    "string" == typeof e ? i = e.charCodeAt(0) || 0 : e.hasOwnProperty(Tl) && (i = e[Tl]), null == i && (i = e[Tl] = i4++);
                    const s = i & nA;
                    n.data[t + (s >> iA)] |= 1 << s
                }(t, n, e)
            }

            function rA(t, n, e) {
                if (e & Rn.Optional || void 0 !== t) return t;
                Mn()
            }

            function aA(t, n, e, i) {
                if (e & Rn.Optional && void 0 === i && (i = null), !(e & (Rn.Self | Rn.Host))) {
                    const s = t[uo],
                        r = Zs(void 0);
                    try {
                        return s ? s.get(n, i, e & Rn.Optional) : Lp(n, i, e & Rn.Optional)
                    } finally {
                        Zs(r)
                    }
                }
                return rA(i, 0, e)
            }

            function oA(t, n, e, i = Rn.Default, s) {
                if (null !== t) {
                    if (2048 & n[Pn] && !(i & Rn.Self)) {
                        const l = function u4(t, n, e, i, s) {
                            let r = t,
                                l = n;
                            for (; null !== r && null !== l && 2048 & l[Pn] && !(512 & l[Pn]);) {
                                const u = lA(r, l, e, i | Rn.Self, mo);
                                if (u !== mo) return u;
                                let h = r.parent;
                                if (!h) {
                                    const v = l[tg];
                                    if (v) {
                                        const _ = v.get(e, mo, i);
                                        if (_ !== mo) return _
                                    }
                                    h = dA(l), l = l[Ml]
                                }
                                r = h
                            }
                            return s
                        }(t, n, e, i, mo);
                        if (l !== mo) return l
                    }
                    const r = lA(t, n, e, i, mo);
                    if (r !== mo) return r
                }
                return aA(n, e, i, s)
            }

            function lA(t, n, e, i, s) {
                const r = function o4(t) {
                    if ("string" == typeof t) return t.charCodeAt(0) || 0;
                    const n = t.hasOwnProperty(Tl) ? t[Tl] : void 0;
                    return "number" == typeof n ? n >= 0 ? n & nA : c4 : n
                }(e);
                if ("function" == typeof r) {
                    if (!XD(n, t, i)) return i & Rn.Host ? rA(s, 0, i) : aA(n, e, i, s);
                    try {
                        let l;
                        if (l = r(i), null != l || i & Rn.Optional) return l;
                        Mn()
                    } finally {
                        KD()
                    }
                } else if ("number" == typeof r) {
                    let l = null,
                        u = sA(t, n),
                        h = Tu,
                        v = i & Rn.Host ? n[cs][Ps] : null;
                    for ((-1 === u || i & Rn.SkipSelf) && (h = -1 === u ? hg(t, n) : n[u + 8], h !== Tu && uA(i, !1) ? (l = n[Wt], u = yh(h), n = bh(h, n)) : u = -1); - 1 !== u;) {
                        const _ = n[Wt];
                        if (cA(r, u, _.data)) {
                            const C = a4(u, n, e, l, i, v);
                            if (C !== mo) return C
                        }
                        h = n[u + 8], h !== Tu && uA(i, n[Wt].data[u + 8] === v) && cA(r, u, n) ? (l = _, u = yh(h), n = bh(h, n)) : u = -1
                    }
                }
                return s
            }

            function a4(t, n, e, i, s, r) {
                const l = n[Wt],
                    u = l.data[t + 8],
                    _ = fg(u, l, e, null == i ? mi(u) && q0 : i != l && 0 != (3 & u.type), s & Rn.Host && r === u);
                return null !== _ ? Cc(n, l, _, u) : mo
            }

            function fg(t, n, e, i, s) {
                const r = t.providerIndexes,
                    l = n.data,
                    u = 1048575 & r,
                    h = t.directiveStart,
                    _ = r >> 20,
                    M = s ? u + _ : t.directiveEnd;
                for (let L = i ? u : u + _; L < M; L++) {
                    const j = l[L];
                    if (L < h && e === j || L >= h && j.type === e) return L
                }
                if (s) {
                    const L = l[h];
                    if (L && Wa(L) && L.type === e) return h
                }
                return null
            }

            function Cc(t, n, e, i) {
                let s = t[e];
                const r = n.data;
                if (function J6(t) {
                        return t instanceof vh
                    }(s)) {
                    const l = s;
                    l.resolving && function jt(t, n) {
                        const e = n ? `. Dependency path: ${n.join(" > ")} > ${t}` : "";
                        throw new ke(-200, `Circular dependency in DI detected for ${t}${e}`)
                    }(function gt(t) {
                        return "function" == typeof t ? t.name || t.toString() : "object" == typeof t && null != t && "function" == typeof t.type ? t.type.name || t.type.toString() : qe(t)
                    }(r[e]));
                    const u = ug(l.canSeeViewProviders);
                    l.resolving = !0;
                    const v = l.injectImpl ? Zs(l.injectImpl) : null;
                    XD(t, i, Rn.Default);
                    try {
                        s = t[e] = l.factory(void 0, r, t, i), n.firstCreatePass && e >= i.directiveStart && function K6(t, n, e) {
                            const {
                                ngOnChanges: i,
                                ngOnInit: s,
                                ngDoCheck: r
                            } = n.type.prototype;
                            if (i) {
                                const l = MD(n);
                                (e.preOrderHooks ? ? = []).push(t, l), (e.preOrderCheckHooks ? ? = []).push(t, l)
                            }
                            s && (e.preOrderHooks ? ? = []).push(0 - t, s), r && ((e.preOrderHooks ? ? = []).push(t, r), (e.preOrderCheckHooks ? ? = []).push(t, r))
                        }(e, r[e], n)
                    } finally {
                        null !== v && Zs(v), ug(u), l.resolving = !1, KD()
                    }
                }
                return s
            }

            function cA(t, n, e) {
                return !!(e[n + (t >> iA)] & 1 << t)
            }

            function uA(t, n) {
                return !(t & Rn.Self || t & Rn.Host && n)
            }
            class Tr {
                constructor(n, e) {
                    this._tNode = n, this._lView = e
                }
                get(n, e, i) {
                    return oA(this._tNode, this._lView, n, Cl(i), e)
                }
            }

            function c4() {
                return new Tr(Js(), At())
            }

            function _s(t) {
                return _a(() => {
                    const n = t.prototype.constructor,
                        e = n[ja] || Q0(n),
                        i = Object.prototype;
                    let s = Object.getPrototypeOf(t.prototype).constructor;
                    for (; s && s !== i;) {
                        const r = s[ja] || Q0(s);
                        if (r && r !== e) return r;
                        s = Object.getPrototypeOf(s)
                    }
                    return r => new r
                })
            }

            function Q0(t) {
                return ln(t) ? () => {
                    const n = Q0(wt(t));
                    return n && n()
                } : _c(t)
            }

            function dA(t) {
                const n = t[Wt],
                    e = n.type;
                return 2 === e ? n.declTNode : 1 === e ? t[Ps] : null
            }
            const Au = "__parameters__";

            function Eu(t, n, e) {
                return _a(() => {
                    const i = function J0(t) {
                        return function(...e) {
                            if (t) {
                                const i = t(...e);
                                for (const s in i) this[s] = i[s]
                            }
                        }
                    }(n);

                    function s(...r) {
                        if (this instanceof s) return i.apply(this, r), this;
                        const l = new s(...r);
                        return u.annotation = l, u;

                        function u(h, v, _) {
                            const C = h.hasOwnProperty(Au) ? h[Au] : Object.defineProperty(h, Au, {
                                value: []
                            })[Au];
                            for (; C.length <= _;) C.push(null);
                            return (C[_] = C[_] || []).push(l), h
                        }
                    }
                    return e && (s.prototype = Object.create(e.prototype)), s.prototype.ngMetadataName = t, s.annotationCls = s, s
                })
            }

            function Pu(t, n) {
                t.forEach(e => Array.isArray(e) ? Pu(e, n) : n(e))
            }

            function fA(t, n, e) {
                n >= t.length ? t.push(e) : t.splice(n, 0, e)
            }

            function gg(t, n) {
                return n >= t.length - 1 ? t.pop() : t.splice(n, 1)[0]
            }

            function wh(t, n) {
                const e = [];
                for (let i = 0; i < t; i++) e.push(n);
                return e
            }

            function oa(t, n, e) {
                let i = Ou(t, n);
                return i >= 0 ? t[1 | i] = e : (i = ~i, function v4(t, n, e, i) {
                    let s = t.length;
                    if (s == n) t.push(e, i);
                    else if (1 === s) t.push(i, t[0]), t[0] = e;
                    else {
                        for (s--, t.push(t[s - 1], t[s]); s > n;) t[s] = t[s - 2], s--;
                        t[n] = e, t[n + 1] = i
                    }
                }(t, i, n, e)), i
            }

            function eb(t, n) {
                const e = Ou(t, n);
                if (e >= 0) return t[1 | e]
            }

            function Ou(t, n) {
                return function pA(t, n, e) {
                    let i = 0,
                        s = t.length >> e;
                    for (; s !== i;) {
                        const r = i + (s - i >> 1),
                            l = t[r << e];
                        if (n === l) return r << e;
                        l > n ? s = r : i = r + 1
                    }
                    return ~(s << e)
                }(t, n, 1)
            }
            const Sc = fc(Eu("Optional"), 8),
                Ch = fc(Eu("SkipSelf"), 4);

            function _g(t) {
                return 128 == (128 & t.flags)
            }
            var Ll = function(t) {
                return t[t.Important = 1] = "Important", t[t.DashCase = 2] = "DashCase", t
            }(Ll || {});
            const B4 = /^>|^->|<!--|-->|--!>|<!-$/g,
                V4 = /(<|>)/g,
                H4 = "\u200b$1\u200b";
            const rb = new Map;
            let z4 = 0;
            const ob = "__ngContext__";

            function ur(t, n) {
                Rt(n) ? (t[ob] = n[vc], function $4(t) {
                    rb.set(t[vc], t)
                }(n)) : t[ob] = n
            }
            let lb;

            function cb(t, n) {
                return lb(t, n)
            }

            function Dh(t) {
                const n = t[qi];
                return nn(n) ? n[qi] : n
            }

            function LA(t) {
                return NA(t[El])
            }

            function FA(t) {
                return NA(t[sa])
            }

            function NA(t) {
                for (; null !== t && !nn(t);) t = t[sa];
                return t
            }

            function Fu(t, n, e, i, s) {
                if (null != i) {
                    let r, l = !1;
                    nn(i) ? r = i : Rt(i) && (l = !0, i = i[ns]);
                    const u = Zi(i);
                    0 === t && null !== e ? null == s ? HA(n, e, u) : Tc(n, e, u, s || null, !0) : 1 === t && null !== e ? Tc(n, e, u, s || null, !0) : 2 === t ? function kg(t, n, e) {
                        const i = Dg(t, n);
                        i && function lV(t, n, e, i) {
                            t.removeChild(n, e, i)
                        }(t, i, n, e)
                    }(n, u, l) : 3 === t && n.destroyNode(u), null != r && function dV(t, n, e, i, s) {
                        const r = e[Y];
                        r !== Zi(e) && Fu(n, t, i, r, s);
                        for (let u = Ne; u < e.length; u++) {
                            const h = e[u];
                            kh(h[Wt], h, t, n, i, r)
                        }
                    }(n, t, r, e, s)
                }
            }

            function ub(t, n) {
                return t.createComment(function DA(t) {
                    return t.replace(B4, n => n.replace(V4, H4))
                }(n))
            }

            function Sg(t, n, e) {
                return t.createElement(n, e)
            }

            function BA(t, n) {
                const e = t[P],
                    i = e.indexOf(n);
                RD(n), e.splice(i, 1)
            }

            function Tg(t, n) {
                if (t.length <= Ne) return;
                const e = Ne + n,
                    i = t[e];
                if (i) {
                    const s = i[cr];
                    null !== s && s !== t && BA(s, i), n > 0 && (t[e - 1][sa] = i[sa]);
                    const r = gg(t, Ne + n);
                    ! function eV(t, n) {
                        kh(t, n, n[An], 2, null, null), n[ns] = null, n[Ps] = null
                    }(i[Wt], i);
                    const l = r[_i];
                    null !== l && l.detachView(r[Wt]), i[qi] = null, i[sa] = null, i[Pn] &= -129
                }
                return i
            }

            function db(t, n) {
                if (!(256 & n[Pn])) {
                    const e = n[An];
                    n[yc] && wD(n[yc]), n[bc] && wD(n[bc]), e.destroyNode && kh(t, n, e, 3, null, null),
                        function iV(t) {
                            let n = t[El];
                            if (!n) return hb(t[Wt], t);
                            for (; n;) {
                                let e = null;
                                if (Rt(n)) e = n[El];
                                else {
                                    const i = n[Ne];
                                    i && (e = i)
                                }
                                if (!e) {
                                    for (; n && !n[sa] && n !== t;) Rt(n) && hb(n[Wt], n), n = n[qi];
                                    null === n && (n = t), Rt(n) && hb(n[Wt], n), e = n && n[sa]
                                }
                                n = e
                            }
                        }(n)
                }
            }

            function hb(t, n) {
                if (!(256 & n[Pn])) {
                    n[Pn] &= -129, n[Pn] |= 256,
                        function oV(t, n) {
                            let e;
                            if (null != t && null != (e = t.destroyHooks))
                                for (let i = 0; i < e.length; i += 2) {
                                    const s = n[e[i]];
                                    if (!(s instanceof vh)) {
                                        const r = e[i + 1];
                                        if (Array.isArray(r))
                                            for (let l = 0; l < r.length; l += 2) {
                                                const u = s[r[l]],
                                                    h = r[l + 1];
                                                po(4, u, h);
                                                try {
                                                    h.call(u)
                                                } finally {
                                                    po(5, u, h)
                                                }
                                            } else {
                                                po(4, s, r);
                                                try {
                                                    r.call(s)
                                                } finally {
                                                    po(5, s, r)
                                                }
                                            }
                                    }
                                }
                        }(t, n),
                        function aV(t, n) {
                            const e = t.cleanup,
                                i = n[Al];
                            if (null !== e)
                                for (let r = 0; r < e.length - 1; r += 2)
                                    if ("string" == typeof e[r]) {
                                        const l = e[r + 3];
                                        l >= 0 ? i[l]() : i[-l].unsubscribe(), r += 2
                                    } else e[r].call(i[e[r + 1]]);
                            null !== i && (n[Al] = null);
                            const s = n[ho];
                            if (null !== s) {
                                n[ho] = null;
                                for (let r = 0; r < s.length; r++)(0, s[r])()
                            }
                        }(t, n), 1 === n[Wt].type && n[An].destroy();
                    const e = n[cr];
                    if (null !== e && nn(n[qi])) {
                        e !== n[qi] && BA(e, n);
                        const i = n[_i];
                        null !== i && i.detachView(t)
                    }! function U4(t) {
                        rb.delete(t[vc])
                    }(n)
                }
            }

            function fb(t, n, e) {
                return function VA(t, n, e) {
                    let i = n;
                    for (; null !== i && 40 & i.type;) i = (n = i).parent;
                    if (null === i) return e[ns]; {
                        const {
                            componentOffset: s
                        } = i;
                        if (s > -1) {
                            const {
                                encapsulation: r
                            } = t.data[i.directiveStart + s];
                            if (r === _r.None || r === _r.Emulated) return null
                        }
                        return Hr(i, e)
                    }
                }(t, n.parent, e)
            }

            function Tc(t, n, e, i, s) {
                t.insertBefore(n, e, i, s)
            }

            function HA(t, n, e) {
                t.appendChild(n, e)
            }

            function zA(t, n, e, i, s) {
                null !== i ? Tc(t, n, e, i, s) : HA(t, n, e)
            }

            function Dg(t, n) {
                return t.parentNode(n)
            }

            function jA(t, n, e) {
                return UA(t, n, e)
            }
            let pb, Eg, yb, Mg, UA = function $A(t, n, e) {
                return 40 & t.type ? Hr(t, e) : null
            };

            function Ag(t, n, e, i) {
                const s = fb(t, i, n),
                    r = n[An],
                    u = jA(i.parent || n[Ps], i, n);
                if (null != s)
                    if (Array.isArray(e))
                        for (let h = 0; h < e.length; h++) zA(r, s, e[h], u, !1);
                    else zA(r, s, e, u, !1);
                void 0 !== pb && pb(r, i, n, e, s)
            }

            function Ah(t, n) {
                if (null !== n) {
                    const e = n.type;
                    if (3 & e) return Hr(n, t);
                    if (4 & e) return gb(-1, t[n.index]);
                    if (8 & e) {
                        const i = n.child;
                        if (null !== i) return Ah(t, i); {
                            const s = t[n.index];
                            return nn(s) ? gb(-1, s) : Zi(s)
                        }
                    }
                    if (32 & e) return cb(n, t)() || Zi(t[n.index]); {
                        const i = GA(t, n);
                        return null !== i ? Array.isArray(i) ? i[0] : Ah(Dh(t[cs]), i) : Ah(t, n.next)
                    }
                }
                return null
            }

            function GA(t, n) {
                return null !== n ? t[cs][Ps].projection[n.projection] : null
            }

            function gb(t, n) {
                const e = Ne + t + 1;
                if (e < n.length) {
                    const i = n[e],
                        s = i[Wt].firstChild;
                    if (null !== s) return Ah(i, s)
                }
                return n[Y]
            }

            function mb(t, n, e, i, s, r, l) {
                for (; null != e;) {
                    const u = i[e.index],
                        h = e.type;
                    if (l && 0 === n && (u && ur(Zi(u), i), e.flags |= 2), 32 != (32 & e.flags))
                        if (8 & h) mb(t, n, e.child, i, s, r, !1), Fu(n, t, s, u, r);
                        else if (32 & h) {
                        const v = cb(e, i);
                        let _;
                        for (; _ = v();) Fu(n, t, s, _, r);
                        Fu(n, t, s, u, r)
                    } else 16 & h ? YA(t, n, i, e, s, r) : Fu(n, t, s, u, r);
                    e = l ? e.projectionNext : e.next
                }
            }

            function kh(t, n, e, i, s, r) {
                mb(e, i, t.firstChild, n, s, r, !1)
            }

            function YA(t, n, e, i, s, r) {
                const l = e[cs],
                    h = l[Ps].projection[i.projection];
                if (Array.isArray(h))
                    for (let v = 0; v < h.length; v++) Fu(n, t, s, h[v], r);
                else {
                    let v = h;
                    const _ = l[qi];
                    _g(i) && (v.flags |= 128), mb(t, n, v, _, s, r, !0)
                }
            }

            function qA(t, n, e) {
                "" === e ? t.removeAttribute(n, "class") : t.setAttribute(n, "class", e)
            }

            function ZA(t, n, e) {
                const {
                    mergedAttrs: i,
                    classes: s,
                    styles: r
                } = e;
                null !== i && dh(t, n, i), null !== s && qA(t, n, s), null !== r && function fV(t, n, e) {
                    t.setAttribute(n, "style", e)
                }(t, n, r)
            }

            function Nu(t) {
                return function vb() {
                    if (void 0 === Eg && (Eg = null, $i.trustedTypes)) try {
                        Eg = $i.trustedTypes.createPolicy("angular", {
                            createHTML: t => t,
                            createScript: t => t,
                            createScriptURL: t => t
                        })
                    } catch {}
                    return Eg
                }() ? .createHTML(t) || t
            }

            function Ru() {
                if (void 0 !== yb) return yb;
                if (typeof document < "u") return document;
                throw new ke(210, !1)
            }

            function bb() {
                if (void 0 === Mg && (Mg = null, $i.trustedTypes)) try {
                    Mg = $i.trustedTypes.createPolicy("angular#unsafe-bypass", {
                        createHTML: t => t,
                        createScript: t => t,
                        createScriptURL: t => t
                    })
                } catch {}
                return Mg
            }

            function KA(t) {
                return bb() ? .createHTML(t) || t
            }

            function JA(t) {
                return bb() ? .createScriptURL(t) || t
            }
            class e2 {
                constructor(n) {
                    this.changingThisBreaksApplicationSecurity = n
                }
                toString() {
                    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${Ti})`
                }
            }

            function Fl(t) {
                return t instanceof e2 ? t.changingThisBreaksApplicationSecurity : t
            }

            function Eh(t, n) {
                const e = function CV(t) {
                    return t instanceof e2 && t.getTypeName() || null
                }(t);
                if (null != e && e !== n) {
                    if ("ResourceURL" === e && "URL" === n) return !0;
                    throw new Error(`Required a safe ${n}, got a ${e} (see ${Ti})`)
                }
                return e === n
            }
            class SV {
                constructor(n) {
                    this.inertDocumentHelper = n
                }
                getInertBodyElement(n) {
                    n = "<body><remove></remove>" + n;
                    try {
                        const e = (new window.DOMParser).parseFromString(Nu(n), "text/html").body;
                        return null === e ? this.inertDocumentHelper.getInertBodyElement(n) : (e.removeChild(e.firstChild), e)
                    } catch {
                        return null
                    }
                }
            }
            class TV {
                constructor(n) {
                    this.defaultDoc = n, this.inertDocument = this.defaultDoc.implementation.createHTMLDocument("sanitization-inert")
                }
                getInertBodyElement(n) {
                    const e = this.inertDocument.createElement("template");
                    return e.innerHTML = Nu(n), e
                }
            }
            const AV = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;

            function xb(t) {
                return (t = String(t)).match(AV) ? t : "unsafe:" + t
            }

            function $o(t) {
                const n = {};
                for (const e of t.split(",")) n[e] = !0;
                return n
            }

            function Mh(...t) {
                const n = {};
                for (const e of t)
                    for (const i in e) e.hasOwnProperty(i) && (n[i] = !0);
                return n
            }
            const n2 = $o("area,br,col,hr,img,wbr"),
                s2 = $o("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
                r2 = $o("rp,rt"),
                _b = Mh(n2, Mh(s2, $o("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")), Mh(r2, $o("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")), Mh(r2, s2)),
                wb = $o("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
                a2 = Mh(wb, $o("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"), $o("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),
                kV = $o("script,style,template");
            class EV {
                constructor() {
                    this.sanitizedSomething = !1, this.buf = []
                }
                sanitizeChildren(n) {
                    let e = n.firstChild,
                        i = !0;
                    for (; e;)
                        if (e.nodeType === Node.ELEMENT_NODE ? i = this.startElement(e) : e.nodeType === Node.TEXT_NODE ? this.chars(e.nodeValue) : this.sanitizedSomething = !0, i && e.firstChild) e = e.firstChild;
                        else
                            for (; e;) {
                                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                                let s = this.checkClobberedElement(e, e.nextSibling);
                                if (s) {
                                    e = s;
                                    break
                                }
                                e = this.checkClobberedElement(e, e.parentNode)
                            }
                    return this.buf.join("")
                }
                startElement(n) {
                    const e = n.nodeName.toLowerCase();
                    if (!_b.hasOwnProperty(e)) return this.sanitizedSomething = !0, !kV.hasOwnProperty(e);
                    this.buf.push("<"), this.buf.push(e);
                    const i = n.attributes;
                    for (let s = 0; s < i.length; s++) {
                        const r = i.item(s),
                            l = r.name,
                            u = l.toLowerCase();
                        if (!a2.hasOwnProperty(u)) {
                            this.sanitizedSomething = !0;
                            continue
                        }
                        let h = r.value;
                        wb[u] && (h = xb(h)), this.buf.push(" ", l, '="', o2(h), '"')
                    }
                    return this.buf.push(">"), !0
                }
                endElement(n) {
                    const e = n.nodeName.toLowerCase();
                    _b.hasOwnProperty(e) && !n2.hasOwnProperty(e) && (this.buf.push("</"), this.buf.push(e), this.buf.push(">"))
                }
                chars(n) {
                    this.buf.push(o2(n))
                }
                checkClobberedElement(n, e) {
                    if (e && (n.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) throw new Error(`Failed to sanitize html because the element is clobbered: ${n.outerHTML}`);
                    return e
                }
            }
            const MV = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
                PV = /([^\#-~ |!])/g;

            function o2(t) {
                return t.replace(/&/g, "&amp;").replace(MV, function(n) {
                    return "&#" + (1024 * (n.charCodeAt(0) - 55296) + (n.charCodeAt(1) - 56320) + 65536) + ";"
                }).replace(PV, function(n) {
                    return "&#" + n.charCodeAt(0) + ";"
                }).replace(/</g, "&lt;").replace(/>/g, "&gt;")
            }
            let Pg;

            function Cb(t) {
                return "content" in t && function IV(t) {
                    return t.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === t.nodeName
                }(t) ? t.content : null
            }
            var Bu = function(t) {
                return t[t.NONE = 0] = "NONE", t[t.HTML = 1] = "HTML", t[t.STYLE = 2] = "STYLE", t[t.SCRIPT = 3] = "SCRIPT", t[t.URL = 4] = "URL", t[t.RESOURCE_URL = 5] = "RESOURCE_URL", t
            }(Bu || {});

            function Ph(t) {
                const n = Oh();
                return n ? KA(n.sanitize(Bu.HTML, t) || "") : Eh(t, "HTML") ? KA(Fl(t)) : function OV(t, n) {
                    let e = null;
                    try {
                        Pg = Pg || function t2(t) {
                            const n = new TV(t);
                            return function DV() {
                                try {
                                    return !!(new window.DOMParser).parseFromString(Nu(""), "text/html")
                                } catch {
                                    return !1
                                }
                            }() ? new SV(n) : n
                        }(t);
                        let i = n ? String(n) : "";
                        e = Pg.getInertBodyElement(i);
                        let s = 5,
                            r = i;
                        do {
                            if (0 === s) throw new Error("Failed to sanitize html because the input is unstable");
                            s--, i = r, r = e.innerHTML, e = Pg.getInertBodyElement(i)
                        } while (i !== r);
                        return Nu((new EV).sanitizeChildren(Cb(e) || e))
                    } finally {
                        if (e) {
                            const i = Cb(e) || e;
                            for (; i.firstChild;) i.removeChild(i.firstChild)
                        }
                    }
                }(Ru(), qe(t))
            }

            function jr(t) {
                const n = Oh();
                return n ? n.sanitize(Bu.URL, t) || "" : Eh(t, "URL") ? Fl(t) : xb(qe(t))
            }

            function l2(t) {
                const n = Oh();
                if (n) return JA(n.sanitize(Bu.RESOURCE_URL, t) || "");
                if (Eh(t, "ResourceURL")) return JA(Fl(t));
                throw new ke(904, !1)
            }

            function Oh() {
                const t = At();
                return t && t[kl].sanitizer
            }
            const Ih = new zt("ENVIRONMENT_INITIALIZER"),
                u2 = new zt("INJECTOR", -1),
                d2 = new zt("INJECTOR_DEF_TYPES");
            class Sb {
                get(n, e = hc) {
                    if (e === hc) {
                        const i = new Error(`NullInjectorError: No provider for ${nt(n)}!`);
                        throw i.name = "NullInjectorError", i
                    }
                    return e
                }
            }

            function VV(...t) {
                return {\
                    u0275providers: h2(0, t),
                    \u0275fromNgModule: !0
                }
            }

            function h2(t, ...n) {
                const e = [],
                    i = new Set;
                let s;
                const r = l => {
                    e.push(l)
                };
                return Pu(n, l => {
                    const u = l;
                    Og(u, r, [], i) && (s || = [], s.push(u))
                }), void 0 !== s && f2(s, r), e
            }

            function f2(t, n) {
                for (let e = 0; e < t.length; e++) {
                    const {
                        ngModule: i,
                        providers: s
                    } = t[e];
                    Db(s, r => {
                        n(r, i)
                    })
                }
            }

            function Og(t, n, e, i) {
                if (!(t = wt(t))) return !1;
                let s = null,
                    r = fu(t);
                const l = !r && ti(t);
                if (r || l) {
                    if (l && !l.standalone) return !1;
                    s = t
                } else {
                    const h = t.ngModule;
                    if (r = fu(h), !r) return !1;
                    s = h
                }
                const u = i.has(s);
                if (l) {
                    if (u) return !1;
                    if (i.add(s), l.dependencies) {
                        const h = "function" == typeof l.dependencies ? l.dependencies() : l.dependencies;
                        for (const v of h) Og(v, n, e, i)
                    }
                } else {
                    if (!r) return !1; {
                        if (null != r.imports && !u) {
                            let v;
                            i.add(s);
                            try {
                                Pu(r.imports, _ => {
                                    Og(_, n, e, i) && (v || = [], v.push(_))
                                })
                            } finally {}
                            void 0 !== v && f2(v, n)
                        }
                        if (!u) {
                            const v = _c(s) || (() => new s);
                            n({
                                provide: s,
                                useFactory: v,
                                deps: li
                            }, s), n({
                                provide: d2,
                                useValue: s,
                                multi: !0
                            }, s), n({
                                provide: Ih,
                                useValue: () => vt(s),
                                multi: !0
                            }, s)
                        }
                        const h = r.providers;
                        if (null != h && !u) {
                            const v = t;
                            Db(h, _ => {
                                n(_, v)
                            })
                        }
                    }
                }
                return s !== t && void 0 !== t.providers
            }

            function Db(t, n) {
                for (let e of t) Jt(e) && (e = e.\u0275providers), Array.isArray(e) ? Db(e, n) : n(e)
            }
            const HV = Le({
                provide: String,
                useValue: Le
            });

            function Ab(t) {
                return null !== t && "object" == typeof t && HV in t
            }

            function Dc(t) {
                return "function" == typeof t
            }
            const kb = new zt("Set Injector scope."),
                Ig = {},
                jV = {};
            let Eb;

            function Lg() {
                return void 0 === Eb && (Eb = new Sb), Eb
            }
            class la {}
            class Vu extends la {
                get destroyed() {
                    return this._destroyed
                }
                constructor(n, e, i, s) {
                    super(), this.parent = e, this.source = i, this.scopes = s, this.records = new Map, this._ngOnDestroyHooks = new Set, this._onDestroyHooks = [], this._destroyed = !1, Pb(n, l => this.processProvider(l)), this.records.set(u2, Hu(void 0, this)), s.has("environment") && this.records.set(la, Hu(void 0, this));
                    const r = this.records.get(kb);
                    null != r && "string" == typeof r.value && this.scopes.add(r.value), this.injectorDefTypes = new Set(this.get(d2.multi, li, Rn.Self))
                }
                destroy() {
                    this.assertNotDestroyed(), this._destroyed = !0;
                    try {
                        for (const e of this._ngOnDestroyHooks) e.ngOnDestroy();
                        const n = this._onDestroyHooks;
                        this._onDestroyHooks = [];
                        for (const e of n) e()
                    } finally {
                        this.records.clear(), this._ngOnDestroyHooks.clear(), this.injectorDefTypes.clear()
                    }
                }
                onDestroy(n) {
                    return this.assertNotDestroyed(), this._onDestroyHooks.push(n), () => this.removeOnDestroy(n)
                }
                runInContext(n) {
                    this.assertNotDestroyed();
                    const e = za(this),
                        i = Zs(void 0);
                    try {
                        return n()
                    } finally {
                        za(e), Zs(i)
                    }
                }
                get(n, e = hc, i = Rn.Default) {
                    if (this.assertNotDestroyed(), n.hasOwnProperty(ch)) return n[ch](this);
                    i = Cl(i);
                    const r = za(this),
                        l = Zs(void 0);
                    try {
                        if (!(i & Rn.SkipSelf)) {
                            let h = this.records.get(n);
                            if (void 0 === h) {
                                const v = function XV(t) {
                                    return "function" == typeof t || "object" == typeof t && t instanceof zt
                                }(n) && dc(n);
                                h = v && this.injectableDefInScope(v) ? Hu(Mb(n), Ig) : null, this.records.set(n, h)
                            }
                            if (null != h) return this.hydrate(n, h)
                        }
                        return (i & Rn.Self ? Lg() : this.parent).get(n, e = i & Rn.Optional && e === hc ? null : e)
                    } catch (u) {
                        if ("NullInjectorError" === u.name) {
                            if ((u[mu] = u[mu] || []).unshift(nt(n)), r) throw u;
                            return function Vp(t, n, e, i) {
                                const s = t[mu];
                                throw n[Rp] && s.unshift(n[Rp]), t.message = function Hp(t, n, e, i = null) {
                                    t = t && "\n" === t.charAt(0) && "\u0275" == t.charAt(1) ? t.slice(2) : t;
                                    let s = nt(n);
                                    if (Array.isArray(n)) s = n.map(nt).join(" -> ");
                                    else if ("object" == typeof n) {
                                        let r = [];
                                        for (let l in n)
                                            if (n.hasOwnProperty(l)) {
                                                let u = n[l];
                                                r.push(l + ":" + ("string" == typeof u ? JSON.stringify(u) : nt(u)))
                                            }
                                        s = `{${r.join(", ")}}`
                                    }
                                    return `${e}${i?"("+i+")":""}[${s}]: ${t.replace(Np,"\n  ")}`
                                }("\n" + t.message, s, e, i), t.ngTokenPath = s, t[mu] = null, t
                            }(u, n, "R3InjectorError", this.source)
                        }
                        throw u
                    } finally {
                        Zs(l), za(r)
                    }
                }
                resolveInjectorInitializers() {
                    const n = za(this),
                        e = Zs(void 0);
                    try {
                        const s = this.get(Ih.multi, li, Rn.Self);
                        for (const r of s) r()
                    } finally {
                        za(n), Zs(e)
                    }
                }
                toString() {
                    const n = [],
                        e = this.records;
                    for (const i of e.keys()) n.push(nt(i));
                    return `R3Injector[${n.join(", ")}]`
                }
                assertNotDestroyed() {
                    if (this._destroyed) throw new ke(205, !1)
                }
                processProvider(n) {
                    let e = Dc(n = wt(n)) ? n : wt(n && n.provide);
                    const i = function UV(t) {
                        return Ab(t) ? Hu(void 0, t.useValue) : Hu(m2(t), Ig)
                    }(n);
                    if (Dc(n) || !0 !== n.multi) this.records.get(e);
                    else {
                        let s = this.records.get(e);
                        s || (s = Hu(void 0, Ig, !0), s.factory = () => Sl(s.multi), this.records.set(e, s)), e = n, s.multi.push(n)
                    }
                    this.records.set(e, i)
                }
                hydrate(n, e) {
                    return e.value === Ig && (e.value = jV, e.value = e.factory()), "object" == typeof e.value && e.value && function GV(t) {
                        return null !== t && "object" == typeof t && "function" == typeof t.ngOnDestroy
                    }(e.value) && this._ngOnDestroyHooks.add(e.value), e.value
                }
                injectableDefInScope(n) {
                    if (!n.providedIn) return !1;
                    const e = wt(n.providedIn);
                    return "string" == typeof e ? "any" === e || this.scopes.has(e) : this.injectorDefTypes.has(e)
                }
                removeOnDestroy(n) {
                    const e = this._onDestroyHooks.indexOf(n); - 1 !== e && this._onDestroyHooks.splice(e, 1)
                }
            }

            function Mb(t) {
                const n = dc(t),
                    e = null !== n ? n.factory : _c(t);
                if (null !== e) return e;
                if (t instanceof zt) throw new ke(204, !1);
                if (t instanceof Function) return function $V(t) {
                    const n = t.length;
                    if (n > 0) throw wh(n, "?"), new ke(204, !1);
                    const e = function f0(t) {
                        return t && (t[pu] || t[Op]) || null
                    }(t);
                    return null !== e ? () => e.factory(t) : () => new t
                }(t);
                throw new ke(204, !1)
            }

            function m2(t, n, e) {
                let i;
                if (Dc(t)) {
                    const s = wt(t);
                    return _c(s) || Mb(s)
                }
                if (Ab(t)) i = () => wt(t.useValue);
                else if (function g2(t) {
                        return !(!t || !t.useFactory)
                    }(t)) i = () => t.useFactory(...Sl(t.deps || []));
                else if (function p2(t) {
                        return !(!t || !t.useExisting)
                    }(t)) i = () => vt(wt(t.useExisting));
                else {
                    const s = wt(t && (t.useClass || t.provide));
                    if (! function WV(t) {
                            return !!t.deps
                        }(t)) return _c(s) || Mb(s);
                    i = () => new s(...Sl(t.deps))
                }
                return i
            }

            function Hu(t, n, e = !1) {
                return {
                    factory: t,
                    value: n,
                    multi: e ? [] : void 0
                }
            }

            function Pb(t, n) {
                for (const e of t) Array.isArray(e) ? Pb(e, n) : e && Jt(e) ? Pb(e.\u0275providers, n) : n(e)
            }
            const Fg = new zt("AppId", {
                    providedIn: "root",
                    factory: () => YV
                }),
                YV = "ng",
                v2 = new zt("Platform Initializer"),
                ws = new zt("Platform ID", {
                    providedIn: "platform",
                    factory: () => "unknown"
                }),
                y2 = new zt("AnimationModuleType"),
                b2 = new zt("CSP nonce", {
                    providedIn: "root",
                    factory: () => Ru().body ? .querySelector("[ngCspNonce]") ? .getAttribute("ngCspNonce") || null
                });
            let x2 = (t, n, e) => null;

            function Vb(t, n, e = !1) {
                return x2(t, n, e)
            }
            class sH {}
            class C2 {}
            class aH {
                resolveComponentFactory(n) {
                    throw function rH(t) {
                        const n = Error(`No component factory found for ${nt(t)}.`);
                        return n.ngComponent = t, n
                    }(n)
                }
            }
            let $u = (() => {
                class t {
                    static# e = this.NULL = new aH
                }
                return t
            })();

            function oH() {
                return Uu(Js(), At())
            }

            function Uu(t, n) {
                return new ii(Hr(t, n))
            }
            let ii = (() => {
                class t {
                    constructor(e) {
                        this.nativeElement = e
                    }
                    static# e = this.__NG_ELEMENT_ID__ = oH
                }
                return t
            })();

            function lH(t) {
                return t instanceof ii ? t.nativeElement : t
            }
            class Ac {}
            let Ts = (() => {
                    class t {
                        constructor() {
                            this.destroyNode = null
                        }
                        static# e = this.__NG_ELEMENT_ID__ = () => function cH() {
                            const t = At(),
                                e = aa(Js().index, t);
                            return (Rt(e) ? e : t)[An]
                        }()
                    }
                    return t
                })(),
                uH = (() => {
                    class t {
                        static# e = this.\u0275prov = Et({
                            token: t,
                            providedIn: "root",
                            factory: () => null
                        })
                    }
                    return t
                })();
            class Nh {
                constructor(n) {
                    this.full = n, this.major = n.split(".")[0], this.minor = n.split(".")[1], this.patch = n.split(".").slice(2).join(".")
                }
            }
            const dH = new Nh("16.2.12"),
                jb = {};

            function k2(t, n = null, e = null, i) {
                const s = E2(t, n, e, i);
                return s.resolveInjectorInitializers(), s
            }

            function E2(t, n = null, e = null, i, s = new Set) {
                const r = [e || li, VV(t)];
                return i = i || ("object" == typeof t ? void 0 : nt(t)), new Vu(r, n || Lg(), i || null, s)
            }
            let js = (() => {
                class t {
                    static# e = this.THROW_IF_NOT_FOUND = hc;
                    static# t = this.NULL = new Sb;
                    static create(e, i) {
                        if (Array.isArray(e)) return k2({
                            name: ""
                        }, i, e, ""); {
                            const s = e.name ? ? "";
                            return k2({
                                name: s
                            }, e.parent, e.providers, s)
                        }
                    }
                    static# n = this.\u0275prov = Et({
                        token: t,
                        providedIn: "any",
                        factory: () => vt(u2)
                    });
                    static# i = this.__NG_ELEMENT_ID__ = -1
                }
                return t
            })();

            function Ub(t) {
                return t.ngOriginalError
            }
            class vo {
                constructor() {
                    this._console = console
                }
                handleError(n) {
                    const e = this._findOriginalError(n);
                    this._console.error("ERROR", n), e && this._console.error("ORIGINAL ERROR", e)
                }
                _findOriginalError(n) {
                    let e = n && Ub(n);
                    for (; e && Ub(e);) e = Ub(e);
                    return e || null
                }
            }

            function Gb(t) {
                return n => {
                    setTimeout(t, void 0, n)
                }
            }
            const Pt = class yH extends He {
                constructor(n = !1) {
                    super(), this.__isAsync = n
                }
                emit(n) {
                    super.next(n)
                }
                subscribe(n, e, i) {
                    let s = n,
                        r = e || (() => null),
                        l = i;
                    if (n && "object" == typeof n) {
                        const h = n;
                        s = h.next ? .bind(h), r = h.error ? .bind(h), l = h.complete ? .bind(h)
                    }
                    this.__isAsync && (r = Gb(r), s && (s = Gb(s)), l && (l = Gb(l)));
                    const u = super.subscribe({
                        next: s,
                        error: r,
                        complete: l
                    });
                    return n instanceof U && n.add(u), u
                }
            };

            function P2(...t) {}
            class si {
                constructor({
                    enableLongStackTrace: n = !1,
                    shouldCoalesceEventChangeDetection: e = !1,
                    shouldCoalesceRunChangeDetection: i = !1
                }) {
                    if (this.hasPendingMacrotasks = !1, this.hasPendingMicrotasks = !1, this.isStable = !0, this.onUnstable = new Pt(!1), this.onMicrotaskEmpty = new Pt(!1), this.onStable = new Pt(!1), this.onError = new Pt(!1), typeof Zone > "u") throw new ke(908, !1);
                    Zone.assertZonePatched();
                    const s = this;
                    s._nesting = 0, s._outer = s._inner = Zone.current, Zone.TaskTrackingZoneSpec && (s._inner = s._inner.fork(new Zone.TaskTrackingZoneSpec)), n && Zone.longStackTraceZoneSpec && (s._inner = s._inner.fork(Zone.longStackTraceZoneSpec)), s.shouldCoalesceEventChangeDetection = !i && e, s.shouldCoalesceRunChangeDetection = i, s.lastRequestAnimationFrameId = -1, s.nativeRequestAnimationFrame = function bH() {
                            const t = "function" == typeof $i.requestAnimationFrame;
                            let n = $i[t ? "requestAnimationFrame" : "setTimeout"],
                                e = $i[t ? "cancelAnimationFrame" : "clearTimeout"];
                            if (typeof Zone < "u" && n && e) {
                                const i = n[Zone.__symbol__("OriginalDelegate")];
                                i && (n = i);
                                const s = e[Zone.__symbol__("OriginalDelegate")];
                                s && (e = s)
                            }
                            return {
                                nativeRequestAnimationFrame: n,
                                nativeCancelAnimationFrame: e
                            }
                        }().nativeRequestAnimationFrame,
                        function wH(t) {
                            const n = () => {
                                ! function _H(t) {
                                    t.isCheckStableRunning || -1 !== t.lastRequestAnimationFrameId || (t.lastRequestAnimationFrameId = t.nativeRequestAnimationFrame.call($i, () => {
                                        t.fakeTopEventTask || (t.fakeTopEventTask = Zone.root.scheduleEventTask("fakeTopEventTask", () => {
                                            t.lastRequestAnimationFrameId = -1, Yb(t), t.isCheckStableRunning = !0, Xb(t), t.isCheckStableRunning = !1
                                        }, void 0, () => {}, () => {})), t.fakeTopEventTask.invoke()
                                    }), Yb(t))
                                }(t)
                            };
                            t._inner = t._inner.fork({
                                name: "angular",
                                properties: {
                                    isAngularZone: !0
                                },
                                onInvokeTask: (e, i, s, r, l, u) => {
                                    if (function SH(t) {
                                            return !(!Array.isArray(t) || 1 !== t.length) && !0 === t[0].data ? .__ignore_ng_zone__
                                        }(u)) return e.invokeTask(s, r, l, u);
                                    try {
                                        return O2(t), e.invokeTask(s, r, l, u)
                                    } finally {
                                        (t.shouldCoalesceEventChangeDetection && "eventTask" === r.type || t.shouldCoalesceRunChangeDetection) && n(), I2(t)
                                    }
                                },
                                onInvoke: (e, i, s, r, l, u, h) => {
                                    try {
                                        return O2(t), e.invoke(s, r, l, u, h)
                                    } finally {
                                        t.shouldCoalesceRunChangeDetection && n(), I2(t)
                                    }
                                },
                                onHasTask: (e, i, s, r) => {
                                    e.hasTask(s, r), i === s && ("microTask" == r.change ? (t._hasPendingMicrotasks = r.microTask, Yb(t), Xb(t)) : "macroTask" == r.change && (t.hasPendingMacrotasks = r.macroTask))
                                },
                                onHandleError: (e, i, s, r) => (e.handleError(s, r), t.runOutsideAngular(() => t.onError.emit(r)), !1)
                            })
                        }(s)
                }
                static isInAngularZone() {
                    return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone")
                }
                static assertInAngularZone() {
                    if (!si.isInAngularZone()) throw new ke(909, !1)
                }
                static assertNotInAngularZone() {
                    if (si.isInAngularZone()) throw new ke(909, !1)
                }
                run(n, e, i) {
                    return this._inner.run(n, e, i)
                }
                runTask(n, e, i, s) {
                    const r = this._inner,
                        l = r.scheduleEventTask("NgZoneEvent: " + s, n, xH, P2, P2);
                    try {
                        return r.runTask(l, e, i)
                    } finally {
                        r.cancelTask(l)
                    }
                }
                runGuarded(n, e, i) {
                    return this._inner.runGuarded(n, e, i)
                }
                runOutsideAngular(n) {
                    return this._outer.run(n)
                }
            }
            const xH = {};

            function Xb(t) {
                if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable) try {
                    t._nesting++, t.onMicrotaskEmpty.emit(null)
                } finally {
                    if (t._nesting--, !t.hasPendingMicrotasks) try {
                        t.runOutsideAngular(() => t.onStable.emit(null))
                    } finally {
                        t.isStable = !0
                    }
                }
            }

            function Yb(t) {
                t.hasPendingMicrotasks = !!(t._hasPendingMicrotasks || (t.shouldCoalesceEventChangeDetection || t.shouldCoalesceRunChangeDetection) && -1 !== t.lastRequestAnimationFrameId)
            }

            function O2(t) {
                t._nesting++, t.isStable && (t.isStable = !1, t.onUnstable.emit(null))
            }

            function I2(t) {
                t._nesting--, Xb(t)
            }
            class CH {
                constructor() {
                    this.hasPendingMicrotasks = !1, this.hasPendingMacrotasks = !1, this.isStable = !0, this.onUnstable = new Pt, this.onMicrotaskEmpty = new Pt, this.onStable = new Pt, this.onError = new Pt
                }
                run(n, e, i) {
                    return n.apply(e, i)
                }
                runGuarded(n, e, i) {
                    return n.apply(e, i)
                }
                runOutsideAngular(n) {
                    return n()
                }
                runTask(n, e, i, s) {
                    return n.apply(e, i)
                }
            }
            const L2 = new zt("", {
                providedIn: "root",
                factory: F2
            });

            function F2() {
                const t = Xt(si);
                let n = !0;
                return ne(new we(s => {
                    n = t.isStable && !t.hasPendingMacrotasks && !t.hasPendingMicrotasks, t.runOutsideAngular(() => {
                        s.next(n), s.complete()
                    })
                }), new we(s => {
                    let r;
                    t.runOutsideAngular(() => {
                        r = t.onStable.subscribe(() => {
                            si.assertNotInAngularZone(), queueMicrotask(() => {
                                !n && !t.hasPendingMacrotasks && !t.hasPendingMicrotasks && (n = !0, s.next(!0))
                            })
                        })
                    });
                    const l = t.onUnstable.subscribe(() => {
                        si.assertInAngularZone(), n && (n = !1, t.runOutsideAngular(() => {
                            s.next(!1)
                        }))
                    });
                    return () => {
                        r.unsubscribe(), l.unsubscribe()
                    }
                }).pipe(A()))
            }

            function Nl(t) {
                return t.ownerDocument.defaultView
            }

            function N2(t) {
                return t.ownerDocument
            }

            function Uo(t) {
                return t instanceof Function ? t() : t
            }
            let qb = (() => {
                class t {
                    constructor() {
                        this.renderDepth = 0, this.handler = null
                    }
                    begin() {
                        this.handler ? .validateBegin(), this.renderDepth++
                    }
                    end() {
                        this.renderDepth--, 0 === this.renderDepth && this.handler ? .execute()
                    }
                    ngOnDestroy() {
                        this.handler ? .destroy(), this.handler = null
                    }
                    static# e = this.\u0275prov = Et({
                        token: t,
                        providedIn: "root",
                        factory: () => new t
                    })
                }
                return t
            })();

            function Rh(t) {
                for (; t;) {
                    t[Pn] |= 64;
                    const n = Dh(t);
                    if (P0(t) && !n) return t;
                    t = n
                }
                return null
            }
            const z2 = new zt("", {
                providedIn: "root",
                factory: () => !1
            });
            let jg = null;

            function W2(t, n) {
                return t[n] ? ? Y2()
            }

            function G2(t, n) {
                const e = Y2();
                e.producerNode ? .length && (t[n] = jg, e.lView = t, jg = X2())
            }
            const OH = { ...mD,
                consumerIsAlwaysLive: !0,
                consumerMarkedDirty: t => {
                    Rh(t.lView)
                },
                lView: null
            };

            function X2() {
                return Object.create(OH)
            }

            function Y2() {
                return jg ? ? = X2(), jg
            }
            const Bn = {};

            function xe(t) {
                q2(di(), At(), Sr() + t, !1)
            }

            function q2(t, n, e, i) {
                if (!i)
                    if (3 == (3 & n[Pn])) {
                        const r = t.preOrderCheckHooks;
                        null !== r && lg(n, r, e)
                    } else {
                        const r = t.preOrderHooks;
                        null !== r && cg(n, r, 0, e)
                    }
                wc(e)
            }

            function $e(t, n = Rn.Default) {
                const e = At();
                return null === e ? vt(t, n) : oA(Js(), e, wt(t), n)
            }

            function $g(t, n, e, i, s, r, l, u, h, v, _) {
                const C = n.blueprint.slice();
                return C[ns] = s, C[Pn] = 140 | i, (null !== v || t && 2048 & t[Pn]) && (C[Pn] |= 2048), ND(C), C[qi] = C[Ml] = t, C[ls] = e, C[kl] = l || t && t[kl], C[An] = u || t && t[An], C[uo] = h || t && t[uo] || null, C[Ps] = r, C[vc] = function j4() {
                    return z4++
                }(), C[Ua] = _, C[tg] = v, C[cs] = 2 == n.type ? t[cs] : C, C
            }

            function Xu(t, n, e, i, s) {
                let r = t.data[n];
                if (null === r) r = function Zb(t, n, e, i, s) {
                        const r = jD(),
                            l = V0(),
                            h = t.data[n] = function HH(t, n, e, i, s, r) {
                                let l = n ? n.injectorIndex : -1,
                                    u = 0;
                                return Cu() && (u |= 128), {
                                    type: e,
                                    index: i,
                                    insertBeforeIndex: null,
                                    injectorIndex: l,
                                    directiveStart: -1,
                                    directiveEnd: -1,
                                    directiveStylingLast: -1,
                                    componentOffset: -1,
                                    propertyBindings: null,
                                    flags: u,
                                    providerIndexes: 0,
                                    value: s,
                                    attrs: r,
                                    mergedAttrs: null,
                                    localNames: null,
                                    initialInputs: void 0,
                                    inputs: null,
                                    outputs: null,
                                    tView: null,
                                    next: null,
                                    prev: null,
                                    projectionNext: null,
                                    child: null,
                                    parent: n,
                                    projection: null,
                                    styles: null,
                                    stylesWithoutHost: null,
                                    residualStyles: void 0,
                                    classes: null,
                                    classesWithoutHost: null,
                                    residualClasses: void 0,
                                    classBindings: 0,
                                    styleBindings: 0
                                }
                            }(0, l ? r : r && r.parent, e, n, i, s);
                        return null === t.firstChild && (t.firstChild = h), null !== r && (l ? null == r.child && null !== h.parent && (r.child = h) : null === r.next && (r.next = h, h.prev = r)), h
                    }(t, n, e, i, s),
                    function $6() {
                        return Dn.lFrame.inI18n
                    }() && (r.flags |= 32);
                else if (64 & r.type) {
                    r.type = e, r.value = i, r.attrs = s;
                    const l = function mh() {
                        const t = Dn.lFrame,
                            n = t.currentTNode;
                        return t.isParent ? n : n.parent
                    }();
                    r.injectorIndex = null === l ? -1 : l.injectorIndex
                }
                return go(r, !0), r
            }

            function Bh(t, n, e, i) {
                if (0 === e) return -1;
                const s = n.length;
                for (let r = 0; r < e; r++) n.push(i), t.blueprint.push(i), t.data.push(null);
                return s
            }

            function K2(t, n, e, i, s) {
                const r = W2(n, yc),
                    l = Sr(),
                    u = 2 & i;
                try {
                    wc(-1), u && n.length > Jn && q2(t, n, Jn, !1), po(u ? 2 : 0, s);
                    const v = u ? r : null,
                        _ = I0(v);
                    try {
                        null !== v && (v.dirty = !1), e(i, s)
                    } finally {
                        L0(v, _)
                    }
                } finally {
                    u && null === n[yc] && G2(n, yc), wc(l), po(u ? 3 : 1, s)
                }
            }

            function Kb(t, n, e) {
                if ($n(n)) {
                    const i = wa(null);
                    try {
                        const r = n.directiveEnd;
                        for (let l = n.directiveStart; l < r; l++) {
                            const u = t.data[l];
                            u.contentQueries && u.contentQueries(1, e[l], l)
                        }
                    } finally {
                        wa(i)
                    }
                }
            }

            function Qb(t, n, e) {
                zD() && (function XH(t, n, e, i) {
                    const s = e.directiveStart,
                        r = e.directiveEnd;
                    mi(e) && function e8(t, n, e) {
                        const i = Hr(n, t),
                            s = Q2(e);
                        let l = 16;
                        e.signals ? l = 4096 : e.onPush && (l = 64);
                        const u = Ug(t, $g(t, s, null, l, i, n, null, t[kl].rendererFactory.createRenderer(i, e), null, null, null));
                        t[n.index] = u
                    }(n, e, t.data[s + e.componentOffset]), t.firstCreatePass || dg(e, n), ur(i, n);
                    const l = e.initialInputs;
                    for (let u = s; u < r; u++) {
                        const h = t.data[u],
                            v = Cc(n, t, u, e);
                        ur(v, n), null !== l && t8(0, u - s, v, h, 0, l), Wa(h) && (aa(e.index, n)[ls] = Cc(n, t, u, e))
                    }
                }(t, n, e, Hr(e, n)), 64 == (64 & e.flags) && ik(t, n, e))
            }

            function Jb(t, n, e = Hr) {
                const i = n.localNames;
                if (null !== i) {
                    let s = n.index + 1;
                    for (let r = 0; r < i.length; r += 2) {
                        const l = i[r + 1],
                            u = -1 === l ? e(n, t) : t[l];
                        t[s++] = u
                    }
                }
            }

            function Q2(t) {
                const n = t.tView;
                return null === n || n.incompleteFirstPass ? t.tView = ex(1, null, t.template, t.decls, t.vars, t.directiveDefs, t.pipeDefs, t.viewQuery, t.schemas, t.consts, t.id) : n
            }

            function ex(t, n, e, i, s, r, l, u, h, v, _) {
                const C = Jn + i,
                    M = C + s,
                    L = function LH(t, n) {
                        const e = [];
                        for (let i = 0; i < n; i++) e.push(i < t ? null : Bn);
                        return e
                    }(C, M),
                    j = "function" == typeof v ? v() : v;
                return L[Wt] = {
                    type: t,
                    blueprint: L,
                    template: e,
                    queries: null,
                    viewQuery: u,
                    declTNode: n,
                    data: L.slice().fill(null, C),
                    bindingStartIndex: C,
                    expandoStartIndex: M,
                    hostBindingOpCodes: null,
                    firstCreatePass: !0,
                    firstUpdatePass: !0,
                    staticViewQueries: !1,
                    staticContentQueries: !1,
                    preOrderHooks: null,
                    preOrderCheckHooks: null,
                    contentHooks: null,
                    contentCheckHooks: null,
                    viewHooks: null,
                    viewCheckHooks: null,
                    destroyHooks: null,
                    cleanup: null,
                    contentQueries: null,
                    components: null,
                    directiveRegistry: "function" == typeof r ? r() : r,
                    pipeRegistry: "function" == typeof l ? l() : l,
                    firstChild: null,
                    schemas: h,
                    consts: j,
                    incompleteFirstPass: !1,
                    ssrId: _
                }
            }
            let J2 = t => null;

            function ek(t, n, e, i) {
                for (let s in t)
                    if (t.hasOwnProperty(s)) {
                        e = null === e ? {} : e;
                        const r = t[s];
                        null === i ? tk(e, n, s, r) : i.hasOwnProperty(s) && tk(e, n, i[s], r)
                    }
                return e
            }

            function tk(t, n, e, i) {
                t.hasOwnProperty(e) ? t[e].push(n, i) : t[e] = [n, i]
            }

            function ca(t, n, e, i, s, r, l, u) {
                const h = Hr(n, e);
                let _, v = n.inputs;
                !u && null != v && (_ = v[i]) ? (rx(t, e, _, i, s), mi(n) && function $H(t, n) {
                    const e = aa(n, t);
                    16 & e[Pn] || (e[Pn] |= 64)
                }(e, n.index)) : 3 & n.type && (i = function jH(t) {
                    return "class" === t ? "className" : "for" === t ? "htmlFor" : "formaction" === t ? "formAction" : "innerHtml" === t ? "innerHTML" : "readonly" === t ? "readOnly" : "tabindex" === t ? "tabIndex" : t
                }(i), s = null != l ? l(s, n.value || "", i) : s, r.setProperty(h, i, s))
            }

            function tx(t, n, e, i) {
                if (zD()) {
                    const s = null === i ? null : {
                            "": -1
                        },
                        r = function qH(t, n) {
                            const e = t.directiveRegistry;
                            let i = null,
                                s = null;
                            if (e)
                                for (let r = 0; r < e.length; r++) {
                                    const l = e[r];
                                    if (Yp(n, l.selectors, !1))
                                        if (i || (i = []), Wa(l))
                                            if (null !== l.findHostDirectiveDefs) {
                                                const u = [];
                                                s = s || new Map, l.findHostDirectiveDefs(l, u, s), i.unshift(...u, l), nx(t, n, u.length)
                                            } else i.unshift(l), nx(t, n, 0);
                                    else s = s || new Map, l.findHostDirectiveDefs ? .(l, i, s), i.push(l)
                                }
                            return null === i ? null : [i, s]
                        }(t, e);
                    let l, u;
                    null === r ? l = u = null : [l, u] = r, null !== l && nk(t, n, e, l, s, u), s && function ZH(t, n, e) {
                        if (n) {
                            const i = t.localNames = [];
                            for (let s = 0; s < n.length; s += 2) {
                                const r = e[n[s + 1]];
                                if (null == r) throw new ke(-301, !1);
                                i.push(n[s], r)
                            }
                        }
                    }(e, i, s)
                }
                e.mergedAttrs = mc(e.mergedAttrs, e.attrs)
            }

            function nk(t, n, e, i, s, r) {
                for (let v = 0; v < i.length; v++) K0(dg(e, n), t, i[v].type);
                ! function QH(t, n, e) {
                    t.flags |= 1, t.directiveStart = n, t.directiveEnd = n + e, t.providerIndexes = n
                }(e, t.data.length, i.length);
                for (let v = 0; v < i.length; v++) {
                    const _ = i[v];
                    _.providersResolver && _.providersResolver(_)
                }
                let l = !1,
                    u = !1,
                    h = Bh(t, n, i.length, null);
                for (let v = 0; v < i.length; v++) {
                    const _ = i[v];
                    e.mergedAttrs = mc(e.mergedAttrs, _.hostAttrs), JH(t, e, n, h, _), KH(h, _, s), null !== _.contentQueries && (e.flags |= 4), (null !== _.hostBindings || null !== _.hostAttrs || 0 !== _.hostVars) && (e.flags |= 64);
                    const C = _.type.prototype;
                    !l && (C.ngOnChanges || C.ngOnInit || C.ngDoCheck) && ((t.preOrderHooks ? ? = []).push(e.index), l = !0), !u && (C.ngOnChanges || C.ngDoCheck) && ((t.preOrderCheckHooks ? ? = []).push(e.index), u = !0), h++
                }! function zH(t, n, e) {
                    const s = n.directiveEnd,
                        r = t.data,
                        l = n.attrs,
                        u = [];
                    let h = null,
                        v = null;
                    for (let _ = n.directiveStart; _ < s; _++) {
                        const C = r[_],
                            M = e ? e.get(C) : null,
                            j = M ? M.outputs : null;
                        h = ek(C.inputs, _, h, M ? M.inputs : null), v = ek(C.outputs, _, v, j);
                        const Z = null === h || null === l || Gp(n) ? null : n8(h, _, l);
                        u.push(Z)
                    }
                    null !== h && (h.hasOwnProperty("class") && (n.flags |= 8), h.hasOwnProperty("style") && (n.flags |= 16)), n.initialInputs = u, n.inputs = h, n.outputs = v
                }(t, e, r)
            }

            function ik(t, n, e) {
                const i = e.directiveStart,
                    s = e.directiveEnd,
                    r = e.index,
                    l = function W6() {
                        return Dn.lFrame.currentDirectiveIndex
                    }();
                try {
                    wc(r);
                    for (let u = i; u < s; u++) {
                        const h = t.data[u],
                            v = n[u];
                        z0(u), (null !== h.hostBindings || 0 !== h.hostVars || null !== h.hostAttrs) && YH(h, v)
                    }
                } finally {
                    wc(-1), z0(l)
                }
            }

            function YH(t, n) {
                null !== t.hostBindings && t.hostBindings(1, n)
            }

            function nx(t, n, e) {
                n.componentOffset = e, (t.components ? ? = []).push(n.index)
            }

            function KH(t, n, e) {
                if (e) {
                    if (n.exportAs)
                        for (let i = 0; i < n.exportAs.length; i++) e[n.exportAs[i]] = t;
                    Wa(n) && (e[""] = t)
                }
            }

            function JH(t, n, e, i, s) {
                t.data[i] = s;
                const r = s.factory || (s.factory = _c(s.type)),
                    l = new vh(r, Wa(s), $e);
                t.blueprint[i] = l, e[i] = l,
                    function WH(t, n, e, i, s) {
                        const r = s.hostBindings;
                        if (r) {
                            let l = t.hostBindingOpCodes;
                            null === l && (l = t.hostBindingOpCodes = []);
                            const u = ~n.index;
                            (function GH(t) {
                                let n = t.length;
                                for (; n > 0;) {
                                    const e = t[--n];
                                    if ("number" == typeof e && e < 0) return e
                                }
                                return 0
                            })(l) != u && l.push(u), l.push(e, i, r)
                        }
                    }(t, n, i, Bh(t, e, s.hostVars, Bn), s)
            }

            function yo(t, n, e, i, s, r) {
                const l = Hr(t, n);
                ! function ix(t, n, e, i, s, r, l) {
                    if (null == r) t.removeAttribute(n, s, e);
                    else {
                        const u = null == l ? qe(r) : l(r, i || "", s);
                        t.setAttribute(n, s, u, e)
                    }
                }(n[An], l, r, t.value, e, i, s)
            }

            function t8(t, n, e, i, s, r) {
                const l = r[n];
                if (null !== l)
                    for (let u = 0; u < l.length;) sk(i, e, l[u++], l[u++], l[u++])
            }

            function sk(t, n, e, i, s) {
                const r = wa(null);
                try {
                    const l = t.inputTransforms;
                    null !== l && l.hasOwnProperty(i) && (s = l[i].call(n, s)), null !== t.setInput ? t.setInput(n, s, e, i) : n[i] = s
                } finally {
                    wa(r)
                }
            }

            function n8(t, n, e) {
                let i = null,
                    s = 0;
                for (; s < e.length;) {
                    const r = e[s];
                    if (0 !== r)
                        if (5 !== r) {
                            if ("number" == typeof r) break;
                            if (t.hasOwnProperty(r)) {
                                null === i && (i = []);
                                const l = t[r];
                                for (let u = 0; u < l.length; u += 2)
                                    if (l[u] === n) {
                                        i.push(r, l[u + 1], e[s + 1]);
                                        break
                                    }
                            }
                            s += 2
                        } else s += 2;
                    else s += 4
                }
                return i
            }

            function rk(t, n, e, i) {
                return [t, !0, !1, n, null, 0, i, e, null, null, null]
            }

            function ak(t, n) {
                const e = t.contentQueries;
                if (null !== e)
                    for (let i = 0; i < e.length; i += 2) {
                        const r = e[i + 1];
                        if (-1 !== r) {
                            const l = t.data[r];
                            $0(e[i]), l.contentQueries(2, n[r], r)
                        }
                    }
            }

            function Ug(t, n) {
                return t[El] ? t[eg][sa] = n : t[El] = n, t[eg] = n, n
            }

            function sx(t, n, e) {
                $0(0);
                const i = wa(null);
                try {
                    n(t, e)
                } finally {
                    wa(i)
                }
            }

            function ok(t) {
                return t[Al] || (t[Al] = [])
            }

            function lk(t) {
                return t.cleanup || (t.cleanup = [])
            }

            function uk(t, n) {
                const e = t[uo],
                    i = e ? e.get(vo, null) : null;
                i && i.handleError(n)
            }

            function rx(t, n, e, i, s) {
                for (let r = 0; r < e.length;) {
                    const l = e[r++],
                        u = e[r++];
                    sk(t.data[l], n[l], i, u, s)
                }
            }

            function Wo(t, n, e) {
                const i = sg(n, t);
                ! function RA(t, n, e) {
                    t.setValue(n, e)
                }(t[An], i, e)
            }

            function i8(t, n) {
                const e = aa(n, t),
                    i = e[Wt];
                ! function s8(t, n) {
                    for (let e = n.length; e < t.blueprint.length; e++) n.push(t.blueprint[e])
                }(i, e);
                const s = e[ns];
                null !== s && null === e[Ua] && (e[Ua] = Vb(s, e[uo])), ax(i, e, e[ls])
            }

            function ax(t, n, e) {
                U0(n);
                try {
                    const i = t.viewQuery;
                    null !== i && sx(1, i, e);
                    const s = t.template;
                    null !== s && K2(t, n, s, 1, e), t.firstCreatePass && (t.firstCreatePass = !1), t.staticContentQueries && ak(t, n), t.staticViewQueries && sx(2, t.viewQuery, e);
                    const r = t.components;
                    null !== r && function r8(t, n) {
                        for (let e = 0; e < n.length; e++) i8(t, n[e])
                    }(n, r)
                } catch (i) {
                    throw t.firstCreatePass && (t.incompleteFirstPass = !0, t.firstCreatePass = !1), i
                } finally {
                    n[Pn] &= -5, W0()
                }
            }
            let dk = (() => {
                class t {
                    constructor() {
                        this.all = new Set, this.queue = new Map
                    }
                    create(e, i, s) {
                        const r = typeof Zone > "u" ? null : Zone.current,
                            l = function _6(t, n, e) {
                                const i = Object.create(w6);
                                e && (i.consumerAllowSignalWrites = !0), i.fn = t, i.schedule = n;
                                const s = l => {
                                    i.cleanupFn = l
                                };
                                return i.ref = {
                                    notify: () => xD(i),
                                    run: () => {
                                        if (i.dirty = !1, i.hasRun && !_D(i)) return;
                                        i.hasRun = !0;
                                        const l = I0(i);
                                        try {
                                            i.cleanupFn(), i.cleanupFn = ED, i.fn(s)
                                        } finally {
                                            L0(i, l)
                                        }
                                    },
                                    cleanup: () => i.cleanupFn()
                                }, i.ref
                            }(e, v => {
                                this.all.has(v) && this.queue.set(v, r)
                            }, s);
                        let u;
                        this.all.add(l), l.notify();
                        const h = () => {
                            l.cleanup(), u ? .(), this.all.delete(l), this.queue.delete(l)
                        };
                        return u = i ? .onDestroy(h), {
                            destroy: h
                        }
                    }
                    flush() {
                        if (0 !== this.queue.size)
                            for (const [e, i] of this.queue) this.queue.delete(e), i ? i.run(() => e.run()) : e.run()
                    }
                    get isQueueEmpty() {
                        return 0 === this.queue.size
                    }
                    static# e = this.\u0275prov = Et({
                        token: t,
                        providedIn: "root",
                        factory: () => new t
                    })
                }
                return t
            })();

            function Wg(t, n, e) {
                let i = e ? t.styles : null,
                    s = e ? t.classes : null,
                    r = 0;
                if (null !== n)
                    for (let l = 0; l < n.length; l++) {
                        const u = n[l];
                        "number" == typeof u ? r = u : 1 == r ? s = yt(s, u) : 2 == r && (i = yt(i, u + ": " + n[++l] + ";"))
                    }
                e ? t.styles = i : t.stylesWithoutHost = i, e ? t.classes = s : t.classesWithoutHost = s
            }

            function Vh(t, n, e, i, s = !1) {
                for (; null !== e;) {
                    const r = n[e.index];
                    null !== r && i.push(Zi(r)), nn(r) && hk(r, i);
                    const l = e.type;
                    if (8 & l) Vh(t, n, e.child, i);
                    else if (32 & l) {
                        const u = cb(e, n);
                        let h;
                        for (; h = u();) i.push(h)
                    } else if (16 & l) {
                        const u = GA(n, e);
                        if (Array.isArray(u)) i.push(...u);
                        else {
                            const h = Dh(n[cs]);
                            Vh(h[Wt], h, u, i, !0)
                        }
                    }
                    e = s ? e.projectionNext : e.next
                }
                return i
            }

            function hk(t, n) {
                for (let e = Ne; e < t.length; e++) {
                    const i = t[e],
                        s = i[Wt].firstChild;
                    null !== s && Vh(i[Wt], i, s, n)
                }
                t[Y] !== t[ns] && n.push(t[Y])
            }

            function Gg(t, n, e, i = !0) {
                const s = n[kl],
                    r = s.rendererFactory,
                    l = s.afterRenderEventManager;
                r.begin ? .(), l ? .begin();
                try {
                    fk(t, n, t.template, e)
                } catch (h) {
                    throw i && uk(n, h), h
                } finally {
                    r.end ? .(), s.effectManager ? .flush(), l ? .end()
                }
            }

            function fk(t, n, e, i) {
                const s = n[Pn];
                if (256 != (256 & s)) {
                    n[kl].effectManager ? .flush(), U0(n);
                    try {
                        ND(n),
                            function UD(t) {
                                return Dn.lFrame.bindingIndex = t
                            }(t.bindingStartIndex), null !== e && K2(t, n, e, 2, i);
                        const l = 3 == (3 & s);
                        if (l) {
                            const v = t.preOrderCheckHooks;
                            null !== v && lg(n, v, null)
                        } else {
                            const v = t.preOrderHooks;
                            null !== v && cg(n, v, 0, null), G0(n, 0)
                        }
                        if (function l8(t) {
                                for (let n = LA(t); null !== n; n = FA(n)) {
                                    if (!n[xc]) continue;
                                    const e = n[P];
                                    for (let i = 0; i < e.length; i++) {
                                        O6(e[i])
                                    }
                                }
                            }(n), pk(n, 2), null !== t.contentQueries && ak(t, n), l) {
                            const v = t.contentCheckHooks;
                            null !== v && lg(n, v)
                        } else {
                            const v = t.contentHooks;
                            null !== v && cg(n, v, 1), G0(n, 1)
                        }! function IH(t, n) {
                            const e = t.hostBindingOpCodes;
                            if (null === e) return;
                            const i = W2(n, bc);
                            try {
                                for (let s = 0; s < e.length; s++) {
                                    const r = e[s];
                                    if (r < 0) wc(~r);
                                    else {
                                        const l = r,
                                            u = e[++s],
                                            h = e[++s];
                                        U6(u, l), i.dirty = !1;
                                        const v = I0(i);
                                        try {
                                            h(2, n[l])
                                        } finally {
                                            L0(i, v)
                                        }
                                    }
                                }
                            } finally {
                                null === n[bc] && G2(n, bc), wc(-1)
                            }
                        }(t, n);
                        const u = t.components;
                        null !== u && mk(n, u, 0);
                        const h = t.viewQuery;
                        if (null !== h && sx(2, h, i), l) {
                            const v = t.viewCheckHooks;
                            null !== v && lg(n, v)
                        } else {
                            const v = t.viewHooks;
                            null !== v && cg(n, v, 2), G0(n, 2)
                        }!0 === t.firstUpdatePass && (t.firstUpdatePass = !1), n[Pn] &= -73, RD(n)
                    } finally {
                        W0()
                    }
                }
            }

            function pk(t, n) {
                for (let e = LA(t); null !== e; e = FA(e))
                    for (let i = Ne; i < e.length; i++) gk(e[i], n)
            }

            function c8(t, n, e) {
                gk(aa(n, t), e)
            }

            function gk(t, n) {
                if (! function M6(t) {
                        return 128 == (128 & t[Pn])
                    }(t)) return;
                const e = t[Wt],
                    i = t[Pn];
                if (80 & i && 0 === n || 1024 & i || 2 === n) fk(e, t, e.template, t[ls]);
                else if (t[ra] > 0) {
                    pk(t, 1);
                    const s = e.components;
                    null !== s && mk(t, s, 1)
                }
            }

            function mk(t, n, e) {
                for (let i = 0; i < n.length; i++) c8(t, n[i], e)
            }
            class Hh {
                get rootNodes() {
                    const n = this._lView,
                        e = n[Wt];
                    return Vh(e, n, e.firstChild, [])
                }
                constructor(n, e) {
                    this._lView = n, this._cdRefInjectingView = e, this._appRef = null, this._attachedToViewContainer = !1
                }
                get context() {
                    return this._lView[ls]
                }
                set context(n) {
                    this._lView[ls] = n
                }
                get destroyed() {
                    return 256 == (256 & this._lView[Pn])
                }
                destroy() {
                    if (this._appRef) this._appRef.detachView(this);
                    else if (this._attachedToViewContainer) {
                        const n = this._lView[qi];
                        if (nn(n)) {
                            const e = n[8],
                                i = e ? e.indexOf(this) : -1;
                            i > -1 && (Tg(n, i), gg(e, i))
                        }
                        this._attachedToViewContainer = !1
                    }
                    db(this._lView[Wt], this._lView)
                }
                onDestroy(n) {
                    ! function VD(t, n) {
                        if (256 == (256 & t[Pn])) throw new ke(911, !1);
                        null === t[ho] && (t[ho] = []), t[ho].push(n)
                    }(this._lView, n)
                }
                markForCheck() {
                    Rh(this._cdRefInjectingView || this._lView)
                }
                detach() {
                    this._lView[Pn] &= -129
                }
                reattach() {
                    this._lView[Pn] |= 128
                }
                detectChanges() {
                    Gg(this._lView[Wt], this._lView, this.context)
                }
                checkNoChanges() {}
                attachToViewContainerRef() {
                    if (this._appRef) throw new ke(902, !1);
                    this._attachedToViewContainer = !0
                }
                detachFromAppRef() {
                    this._appRef = null,
                        function nV(t, n) {
                            kh(t, n, n[An], 2, null, null)
                        }(this._lView[Wt], this._lView)
                }
                attachToAppRef(n) {
                    if (this._attachedToViewContainer) throw new ke(902, !1);
                    this._appRef = n
                }
            }
            class u8 extends Hh {
                constructor(n) {
                    super(n), this._view = n
                }
                detectChanges() {
                    const n = this._view;
                    Gg(n[Wt], n, n[ls], !1)
                }
                checkNoChanges() {}
                get context() {
                    return null
                }
            }
            class vk extends $u {
                constructor(n) {
                    super(), this.ngModule = n
                }
                resolveComponentFactory(n) {
                    const e = ti(n);
                    return new zh(e, this.ngModule)
                }
            }

            function yk(t) {
                const n = [];
                for (let e in t) t.hasOwnProperty(e) && n.push({
                    propName: t[e],
                    templateName: e
                });
                return n
            }
            class h8 {
                constructor(n, e) {
                    this.injector = n, this.parentInjector = e
                }
                get(n, e, i) {
                    i = Cl(i);
                    const s = this.injector.get(n, jb, i);
                    return s !== jb || e === jb ? s : this.parentInjector.get(n, e, i)
                }
            }
            class zh extends C2 {
                get inputs() {
                    const n = this.componentDef,
                        e = n.inputTransforms,
                        i = yk(n.inputs);
                    if (null !== e)
                        for (const s of i) e.hasOwnProperty(s.propName) && (s.transform = e[s.propName]);
                    return i
                }
                get outputs() {
                    return yk(this.componentDef.outputs)
                }
                constructor(n, e) {
                    super(), this.componentDef = n, this.ngModule = e, this.componentType = n.type, this.selector = function Zp(t) {
                        return t.map(C0).join(",")
                    }(n.selectors), this.ngContentSelectors = n.ngContentSelectors ? n.ngContentSelectors : [], this.isBoundToModule = !!e
                }
                create(n, e, i, s) {
                    let r = (s = s || this.ngModule) instanceof la ? s : s ? .injector;
                    r && null !== this.componentDef.getStandaloneInjector && (r = this.componentDef.getStandaloneInjector(r) || r);
                    const l = r ? new h8(n, r) : n,
                        u = l.get(Ac, null);
                    if (null === u) throw new ke(407, !1);
                    const C = {
                            rendererFactory: u,
                            sanitizer: l.get(uH, null),
                            effectManager: l.get(dk, null),
                            afterRenderEventManager: l.get(qb, null)
                        },
                        M = u.createRenderer(null, this.componentDef),
                        L = this.componentDef.selectors[0][0] || "div",
                        j = i ? function FH(t, n, e, i) {
                            const r = i.get(z2, !1) || e === _r.ShadowDom,
                                l = t.selectRootElement(n, r);
                            return function NH(t) {
                                J2(t)
                            }(l), l
                        }(M, i, this.componentDef.encapsulation, l) : Sg(M, L, function d8(t) {
                            const n = t.toLowerCase();
                            return "svg" === n ? ID : "math" === n ? "math" : null
                        }(L)),
                        Ae = this.componentDef.signals ? 4608 : this.componentDef.onPush ? 576 : 528;
                    let De = null;
                    null !== j && (De = Vb(j, l, !0));
                    const Ue = ex(0, null, null, 1, 0, null, null, null, null, null, null),
                        it = $g(null, Ue, null, Ae, null, null, C, M, l, null, De);
                    let lt, ht;
                    U0(it);
                    try {
                        const Ht = this.componentDef;
                        let on, hi = null;
                        Ht.findHostDirectiveDefs ? (on = [], hi = new Map, Ht.findHostDirectiveDefs(Ht, on, hi), on.push(Ht)) : on = [Ht];
                        const Ln = function p8(t, n) {
                                const e = t[Wt],
                                    i = Jn;
                                return t[i] = n, Xu(e, i, 2, "#host", null)
                            }(it, j),
                            rn = function g8(t, n, e, i, s, r, l) {
                                const u = s[Wt];
                                ! function m8(t, n, e, i) {
                                    for (const s of t) n.mergedAttrs = mc(n.mergedAttrs, s.hostAttrs);
                                    null !== n.mergedAttrs && (Wg(n, n.mergedAttrs, !0), null !== e && ZA(i, e, n))
                                }(i, t, n, l);
                                let h = null;
                                null !== n && (h = Vb(n, s[uo]));
                                const v = r.rendererFactory.createRenderer(n, e);
                                let _ = 16;
                                e.signals ? _ = 4096 : e.onPush && (_ = 64);
                                const C = $g(s, Q2(e), null, _, s[t.index], t, r, v, null, null, h);
                                return u.firstCreatePass && nx(u, t, i.length - 1), Ug(s, C), s[t.index] = C
                            }(Ln, j, Ht, on, it, C, M);
                        ht = FD(Ue, Jn), j && function y8(t, n, e, i) {
                            if (i) dh(t, e, ["ng-version", dH.full]);
                            else {
                                const {
                                    attrs: s,
                                    classes: r
                                } = function S0(t) {
                                    const n = [],
                                        e = [];
                                    let i = 1,
                                        s = 2;
                                    for (; i < t.length;) {
                                        let r = t[i];
                                        if ("string" == typeof r) 2 === s ? "" !== r && n.push(r, t[++i]) : 8 === s && e.push(r);
                                        else {
                                            if (!ia(s)) break;
                                            s = r
                                        }
                                        i++
                                    }
                                    return {
                                        attrs: n,
                                        classes: e
                                    }
                                }(n.selectors[0]);
                                s && dh(t, e, s), r && r.length > 0 && qA(t, e, r.join(" "))
                            }
                        }(M, Ht, j, i), void 0 !== e && function b8(t, n, e) {
                            const i = t.projection = [];
                            for (let s = 0; s < n.length; s++) {
                                const r = e[s];
                                i.push(null != r ? Array.from(r) : null)
                            }
                        }(ht, this.ngContentSelectors, e), lt = function v8(t, n, e, i, s, r) {
                            const l = Js(),
                                u = s[Wt],
                                h = Hr(l, s);
                            nk(u, s, l, e, null, i);
                            for (let _ = 0; _ < e.length; _++) ur(Cc(s, u, l.directiveStart + _, l), s);
                            ik(u, s, l), h && ur(h, s);
                            const v = Cc(s, u, l.directiveStart + l.componentOffset, l);
                            if (t[ls] = s[ls] = v, null !== r)
                                for (const _ of r) _(v, n);
                            return Kb(u, l, t), v
                        }(rn, Ht, on, hi, it, [x8]), ax(Ue, it, null)
                    } finally {
                        W0()
                    }
                    return new f8(this.componentType, lt, Uu(ht, it), it, ht)
                }
            }
            class f8 extends sH {
                constructor(n, e, i, s, r) {
                    super(), this.location = i, this._rootLView = s, this._tNode = r, this.previousInputValues = null, this.instance = e, this.hostView = this.changeDetectorRef = new u8(s), this.componentType = n
                }
                setInput(n, e) {
                    const i = this._tNode.inputs;
                    let s;
                    if (null !== i && (s = i[n])) {
                        if (this.previousInputValues ? ? = new Map, this.previousInputValues.has(n) && Object.is(this.previousInputValues.get(n), e)) return;
                        const r = this._rootLView;
                        rx(r[Wt], r, s, n, e), this.previousInputValues.set(n, e), Rh(aa(this._tNode.index, r))
                    }
                }
                get injector() {
                    return new Tr(this._tNode, this._rootLView)
                }
                destroy() {
                    this.hostView.destroy()
                }
                onDestroy(n) {
                    this.hostView.onDestroy(n)
                }
            }

            function x8() {
                const t = Js();
                og(At()[Wt], t)
            }

            function Pi(t) {
                let n = function bk(t) {
                        return Object.getPrototypeOf(t.prototype).constructor
                    }(t.type),
                    e = !0;
                const i = [t];
                for (; n;) {
                    let s;
                    if (Wa(t)) s = n.\u0275cmp || n.\u0275dir;
                    else {
                        if (n.\u0275cmp) throw new ke(903, !1);
                        s = n.\u0275dir
                    }
                    if (s) {
                        if (e) {
                            i.push(s);
                            const l = t;
                            l.inputs = Xg(t.inputs), l.inputTransforms = Xg(t.inputTransforms), l.declaredInputs = Xg(t.declaredInputs), l.outputs = Xg(t.outputs);
                            const u = s.hostBindings;
                            u && S8(t, u);
                            const h = s.viewQuery,
                                v = s.contentQueries;
                            if (h && w8(t, h), v && C8(t, v), ze(t.inputs, s.inputs), ze(t.declaredInputs, s.declaredInputs), ze(t.outputs, s.outputs), null !== s.inputTransforms && (null === l.inputTransforms && (l.inputTransforms = {}), ze(l.inputTransforms, s.inputTransforms)), Wa(s) && s.data.animation) {
                                const _ = t.data;
                                _.animation = (_.animation || []).concat(s.data.animation)
                            }
                        }
                        const r = s.features;
                        if (r)
                            for (let l = 0; l < r.length; l++) {
                                const u = r[l];
                                u && u.ngInherit && u(t), u === Pi && (e = !1)
                            }
                    }
                    n = Object.getPrototypeOf(n)
                }! function _8(t) {
                    let n = 0,
                        e = null;
                    for (let i = t.length - 1; i >= 0; i--) {
                        const s = t[i];
                        s.hostVars = n += s.hostVars, s.hostAttrs = mc(s.hostAttrs, e = mc(e, s.hostAttrs))
                    }
                }(i)
            }

            function Xg(t) {
                return t === na ? {} : t === li ? [] : t
            }

            function w8(t, n) {
                const e = t.viewQuery;
                t.viewQuery = e ? (i, s) => {
                    n(i, s), e(i, s)
                } : n
            }

            function C8(t, n) {
                const e = t.contentQueries;
                t.contentQueries = e ? (i, s, r) => {
                    n(i, s, r), e(i, s, r)
                } : n
            }

            function S8(t, n) {
                const e = t.hostBindings;
                t.hostBindings = e ? (i, s) => {
                    n(i, s), e(i, s)
                } : n
            }

            function Ck(t) {
                const n = t.inputConfig,
                    e = {};
                for (const i in n)
                    if (n.hasOwnProperty(i)) {
                        const s = n[i];
                        Array.isArray(s) && s[2] && (e[i] = s[2])
                    }
                t.inputTransforms = e
            }

            function Yg(t) {
                return !!ox(t) && (Array.isArray(t) || !(t instanceof Map) && Symbol.iterator in t)
            }

            function ox(t) {
                return null !== t && ("function" == typeof t || "object" == typeof t)
            }

            function bo(t, n, e) {
                return t[n] = e
            }

            function jh(t, n) {
                return t[n]
            }

            function dr(t, n, e) {
                return !Object.is(t[n], e) && (t[n] = e, !0)
            }

            function kc(t, n, e, i) {
                const s = dr(t, n, e);
                return dr(t, n + 1, i) || s
            }

            function qg(t, n, e, i, s) {
                const r = kc(t, n, e, i);
                return dr(t, n + 2, s) || r
            }

            function Sa(t, n, e, i, s, r) {
                const l = kc(t, n, e, i);
                return kc(t, n + 2, s, r) || l
            }

            function mn(t, n, e, i) {
                const s = At();
                return dr(s, Su(), n) && (di(), yo(us(), s, t, n, e, i)), mn
            }

            function qu(t, n, e, i) {
                return dr(t, Su(), e) ? n + qe(e) + i : Bn
            }

            function rt(t, n, e, i, s, r, l, u) {
                const h = At(),
                    v = di(),
                    _ = t + Jn,
                    C = v.firstCreatePass ? function q8(t, n, e, i, s, r, l, u, h) {
                        const v = n.consts,
                            _ = Xu(n, t, 4, l || null, Ol(v, u));
                        tx(n, e, _, Ol(v, h)), og(n, _);
                        const C = _.tView = ex(2, _, i, s, r, n.directiveRegistry, n.pipeRegistry, null, n.schemas, v, null);
                        return null !== n.queries && (n.queries.template(n, _), C.queries = n.queries.embeddedTView(_)), _
                    }(_, v, h, n, e, i, s, r, l) : v.data[_];
                go(C, !1);
                const M = Nk(v, h, C, t);
                ag() && Ag(v, h, M, C), ur(M, h), Ug(h, h[_] = rk(M, h, M, C)), fo(C) && Qb(v, h, C), null != l && Jb(h, C, u)
            }
            let Nk = function Rk(t, n, e, i) {
                return Il(!0), n[An].createComment("")
            };

            function Ta(t) {
                return wu(function j6() {
                    return Dn.lFrame.contextLView
                }(), Jn + t)
            }

            function Fe(t, n, e) {
                const i = At();
                return dr(i, Su(), n) && ca(di(), us(), i, t, n, i[An], e, !1), Fe
            }

            function fx(t, n, e, i, s) {
                const l = s ? "class" : "style";
                rx(t, e, n.inputs[l], l, i)
            }

            function N(t, n, e, i) {
                const s = At(),
                    r = di(),
                    l = Jn + t,
                    u = s[An],
                    h = r.firstCreatePass ? function J8(t, n, e, i, s, r) {
                        const l = n.consts,
                            h = Xu(n, t, 2, i, Ol(l, s));
                        return tx(n, e, h, Ol(l, r)), null !== h.attrs && Wg(h, h.attrs, !1), null !== h.mergedAttrs && Wg(h, h.mergedAttrs, !0), null !== n.queries && n.queries.elementStart(n, h), h
                    }(l, r, s, n, e, i) : r.data[l],
                    v = Bk(r, s, h, u, n, t);
                s[l] = v;
                const _ = fo(h);
                return go(h, !0), ZA(u, v, h), 32 != (32 & h.flags) && ag() && Ag(r, s, v, h), 0 === function L6() {
                        return Dn.lFrame.elementDepthCount
                    }() && ur(v, s),
                    function F6() {
                        Dn.lFrame.elementDepthCount++
                    }(), _ && (Qb(r, s, h), Kb(r, h, s)), null !== i && Jb(s, h), N
            }

            function H() {
                let t = Js();
                V0() ? H0() : (t = t.parent, go(t, !1));
                const n = t;
                (function R6(t) {
                    return Dn.skipHydrationRootTNode === t
                })(n) && function z6() {
                    Dn.skipHydrationRootTNode = null
                }(),
                function N6() {
                    Dn.lFrame.elementDepthCount--
                }();
                const e = di();
                return e.firstCreatePass && (og(e, t), $n(t) && e.queries.elementEnd(t)), null != n.classesWithoutHost && function e4(t) {
                    return 0 != (8 & t.flags)
                }(n) && fx(e, n, At(), n.classesWithoutHost, !0), null != n.stylesWithoutHost && function t4(t) {
                    return 0 != (16 & t.flags)
                }(n) && fx(e, n, At(), n.stylesWithoutHost, !1), H
            }

            function ot(t, n, e, i) {
                return N(t, n, e, i), H(), ot
            }
            let Bk = (t, n, e, i, s, r) => (Il(!0), Sg(i, s, function QD() {
                return Dn.lFrame.currentNamespace
            }()));

            function xo(t, n, e) {
                const i = At(),
                    s = di(),
                    r = t + Jn,
                    l = s.firstCreatePass ? function nz(t, n, e, i, s) {
                        const r = n.consts,
                            l = Ol(r, i),
                            u = Xu(n, t, 8, "ng-container", l);
                        return null !== l && Wg(u, l, !0), tx(n, e, u, Ol(r, s)), null !== n.queries && n.queries.elementStart(n, u), u
                    }(r, s, i, n, e) : s.data[r];
                go(l, !0);
                const u = Vk(s, i, l, t);
                return i[r] = u, ag() && Ag(s, i, u, l), ur(u, i), fo(l) && (Qb(s, i, l), Kb(s, l, i)), null != e && Jb(i, l), xo
            }

            function _o() {
                let t = Js();
                const n = di();
                return V0() ? H0() : (t = t.parent, go(t, !1)), n.firstCreatePass && (og(n, t), $n(t) && n.queries.elementEnd(t)), _o
            }

            function Jg(t, n, e) {
                return xo(t, n, e), _o(), Jg
            }
            let Vk = (t, n, e, i) => (Il(!0), ub(n[An], ""));

            function sn() {
                return At()
            }

            function Gh(t) {
                return !!t && "function" == typeof t.then
            }

            function Hk(t) {
                return !!t && "function" == typeof t.subscribe
            }

            function bt(t, n, e, i) {
                const s = At(),
                    r = di(),
                    l = Js();
                return function jk(t, n, e, i, s, r, l) {
                    const u = fo(i),
                        v = t.firstCreatePass && lk(t),
                        _ = n[ls],
                        C = ok(n);
                    let M = !0;
                    if (3 & i.type || l) {
                        const Z = Hr(i, n),
                            Q = l ? l(Z) : Z,
                            Ae = C.length,
                            De = l ? it => l(Zi(it[i.index])) : i.index;
                        let Ue = null;
                        if (!l && u && (Ue = function rz(t, n, e, i) {
                                const s = t.cleanup;
                                if (null != s)
                                    for (let r = 0; r < s.length - 1; r += 2) {
                                        const l = s[r];
                                        if (l === e && s[r + 1] === i) {
                                            const u = n[Al],
                                                h = s[r + 2];
                                            return u.length > h ? u[h] : null
                                        }
                                        "string" == typeof l && (r += 2)
                                    }
                                return null
                            }(t, n, s, i.index)), null !== Ue)(Ue.__ngLastListenerFn__ || Ue).__ngNextListenerFn__ = r, Ue.__ngLastListenerFn__ = r, M = !1;
                        else {
                            r = Uk(i, n, _, r, !1);
                            const it = e.listen(Q, s, r);
                            C.push(r, it), v && v.push(s, De, Ae, Ae + 1)
                        }
                    } else r = Uk(i, n, _, r, !1);
                    const L = i.outputs;
                    let j;
                    if (M && null !== L && (j = L[s])) {
                        const Z = j.length;
                        if (Z)
                            for (let Q = 0; Q < Z; Q += 2) {
                                const lt = n[j[Q]][j[Q + 1]].subscribe(r),
                                    ht = C.length;
                                C.push(r, lt), v && v.push(s, i.index, ht, -(ht + 1))
                            }
                    }
                }(r, s, s[An], l, t, n, i), bt
            }

            function $k(t, n, e, i) {
                try {
                    return po(6, n, e), !1 !== e(i)
                } catch (s) {
                    return uk(t, s), !1
                } finally {
                    po(7, n, e)
                }
            }

            function Uk(t, n, e, i, s) {
                return function r(l) {
                    if (l === Function) return i;
                    Rh(t.componentOffset > -1 ? aa(t.index, n) : n);
                    let h = $k(n, e, i, l),
                        v = r.__ngNextListenerFn__;
                    for (; v;) h = $k(n, e, v, l) && h, v = v.__ngNextListenerFn__;
                    return s && !1 === h && l.preventDefault(), h
                }
            }

            function Qe(t = 1) {
                return function X6(t) {
                    return (Dn.lFrame.contextLView = function Y6(t, n) {
                        for (; t > 0;) n = n[Ml], t--;
                        return n
                    }(t, Dn.lFrame.contextLView))[ls]
                }(t)
            }

            function az(t, n) {
                let e = null;
                const i = function x0(t) {
                    const n = t.attrs;
                    if (null != n) {
                        const e = n.indexOf(5);
                        if (!(1 & e)) return n[e + 1]
                    }
                    return null
                }(t);
                for (let s = 0; s < n.length; s++) {
                    const r = n[s];
                    if ("*" !== r) {
                        if (null === i ? Yp(t, r, !0) : w0(i, r)) return s
                    } else e = s
                }
                return e
            }

            function Rl(t) {
                const n = At()[cs][Ps];
                if (!n.projection) {
                    const i = n.projection = wh(t ? t.length : 1, null),
                        s = i.slice();
                    let r = n.child;
                    for (; null !== r;) {
                        const l = t ? az(r, t) : 0;
                        null !== l && (s[l] ? s[l].projectionNext = r : i[l] = r, s[l] = r), r = r.next
                    }
                }
            }

            function Go(t, n = 0, e) {
                const i = At(),
                    s = di(),
                    r = Xu(s, Jn + t, 16, null, e || null);
                null === r.projection && (r.projection = n), H0(), (!i[Ua] || Cu()) && 32 != (32 & r.flags) && function uV(t, n, e) {
                    YA(n[An], 0, n, e, fb(t, e, n), jA(e.parent || n[Ps], e, n))
                }(s, i, r)
            }

            function id(t, n, e) {
                return Dr(t, "", n, "", e), id
            }

            function Dr(t, n, e, i, s) {
                const r = At(),
                    l = qu(r, n, e, i);
                return l !== Bn && ca(di(), us(), r, t, l, r[An], s, !1), Dr
            }

            function em(t, n) {
                return t << 17 | n << 2
            }

            function Bl(t) {
                return t >> 17 & 32767
            }

            function px(t) {
                return 2 | t
            }

            function Ec(t) {
                return (131068 & t) >> 2
            }

            function gx(t, n) {
                return -131069 & t | n << 2
            }

            function mx(t) {
                return 1 | t
            }

            function Jk(t, n, e, i, s) {
                const r = t[e + 1],
                    l = null === n;
                let u = i ? Bl(r) : Ec(r),
                    h = !1;
                for (; 0 !== u && (!1 === h || l);) {
                    const _ = t[u + 1];
                    hz(t[u], n) && (h = !0, t[u + 1] = i ? mx(_) : px(_)), u = i ? Bl(_) : Ec(_)
                }
                h && (t[e + 1] = i ? px(r) : mx(r))
            }

            function hz(t, n) {
                return null === t || null == n || (Array.isArray(t) ? t[1] : t) === n || !(!Array.isArray(t) || "string" != typeof n) && Ou(t, n) >= 0
            }
            const Is = {
                textEnd: 0,
                key: 0,
                keyEnd: 0,
                value: 0,
                valueEnd: 0
            };

            function eE(t) {
                return t.substring(Is.key, Is.keyEnd)
            }

            function tE(t, n) {
                const e = Is.textEnd;
                return e === n ? -1 : (n = Is.keyEnd = function mz(t, n, e) {
                    for (; n < e && t.charCodeAt(n) > 32;) n++;
                    return n
                }(t, Is.key = n, e), sd(t, n, e))
            }

            function sd(t, n, e) {
                for (; n < e && t.charCodeAt(n) <= 32;) n++;
                return n
            }

            function er(t, n, e) {
                return Ga(t, n, e, !1), er
            }

            function $r(t, n) {
                return Ga(t, n, null, !0), $r
            }

            function vx(t) {
                Xa(Tz, Co, t, !0)
            }

            function Co(t, n) {
                for (let e = function pz(t) {
                        return function iE(t) {
                            Is.key = 0, Is.keyEnd = 0, Is.value = 0, Is.valueEnd = 0, Is.textEnd = t.length
                        }(t), tE(t, sd(t, 0, Is.textEnd))
                    }(n); e >= 0; e = tE(n, e)) oa(t, eE(n), !0)
            }

            function Ga(t, n, e, i) {
                const s = At(),
                    r = di(),
                    l = jo(2);
                r.firstUpdatePass && oE(r, t, l, i), n !== Bn && dr(s, l, n) && cE(r, r.data[Sr()], s, s[An], t, s[l + 1] = function Az(t, n) {
                    return null == t || "" === t || ("string" == typeof n ? t += n : "object" == typeof t && (t = nt(Fl(t)))), t
                }(n, e), i, l)
            }

            function Xa(t, n, e, i) {
                const s = di(),
                    r = jo(2);
                s.firstUpdatePass && oE(s, null, r, i);
                const l = At();
                if (e !== Bn && dr(l, r, e)) {
                    const u = s.data[Sr()];
                    if (dE(u, i) && !aE(s, r)) {
                        let h = i ? u.classesWithoutHost : u.stylesWithoutHost;
                        null !== h && (e = yt(h, e || "")), fx(s, u, l, e, i)
                    } else ! function Dz(t, n, e, i, s, r, l, u) {
                        s === Bn && (s = li);
                        let h = 0,
                            v = 0,
                            _ = 0 < s.length ? s[0] : null,
                            C = 0 < r.length ? r[0] : null;
                        for (; null !== _ || null !== C;) {
                            const M = h < s.length ? s[h + 1] : void 0,
                                L = v < r.length ? r[v + 1] : void 0;
                            let Z, j = null;
                            _ === C ? (h += 2, v += 2, M !== L && (j = C, Z = L)) : null === C || null !== _ && _ < C ? (h += 2, j = _) : (v += 2, j = C, Z = L), null !== j && cE(t, n, e, i, j, Z, l, u), _ = h < s.length ? s[h] : null, C = v < r.length ? r[v] : null
                        }
                    }(s, u, l, l[An], l[r + 1], l[r + 1] = function Sz(t, n, e) {
                        if (null == e || "" === e) return li;
                        const i = [],
                            s = Fl(e);
                        if (Array.isArray(s))
                            for (let r = 0; r < s.length; r++) t(i, s[r], !0);
                        else if ("object" == typeof s)
                            for (const r in s) s.hasOwnProperty(r) && t(i, r, s[r]);
                        else "string" == typeof s && n(i, s);
                        return i
                    }(t, n, e), i, r)
                }
            }

            function aE(t, n) {
                return n >= t.expandoStartIndex
            }

            function oE(t, n, e, i) {
                const s = t.data;
                if (null === s[e + 1]) {
                    const r = s[Sr()],
                        l = aE(t, e);
                    dE(r, i) && null === n && !l && (n = !1), n = function xz(t, n, e, i) {
                            const s = function j0(t) {
                                const n = Dn.lFrame.currentDirectiveIndex;
                                return -1 === n ? null : t[n]
                            }(t);
                            let r = i ? n.residualClasses : n.residualStyles;
                            if (null === s) 0 === (i ? n.classBindings : n.styleBindings) && (e = Xh(e = yx(null, t, n, e, i), n.attrs, i), r = null);
                            else {
                                const l = n.directiveStylingLast;
                                if (-1 === l || t[l] !== s)
                                    if (e = yx(s, t, n, e, i), null === r) {
                                        let h = function _z(t, n, e) {
                                            const i = e ? n.classBindings : n.styleBindings;
                                            if (0 !== Ec(i)) return t[Bl(i)]
                                        }(t, n, i);
                                        void 0 !== h && Array.isArray(h) && (h = yx(null, t, n, h[1], i), h = Xh(h, n.attrs, i), function wz(t, n, e, i) {
                                            t[Bl(e ? n.classBindings : n.styleBindings)] = i
                                        }(t, n, i, h))
                                    } else r = function Cz(t, n, e) {
                                        let i;
                                        const s = n.directiveEnd;
                                        for (let r = 1 + n.directiveStylingLast; r < s; r++) i = Xh(i, t[r].hostAttrs, e);
                                        return Xh(i, n.attrs, e)
                                    }(t, n, i)
                            }
                            return void 0 !== r && (i ? n.residualClasses = r : n.residualStyles = r), e
                        }(s, r, n, i),
                        function uz(t, n, e, i, s, r) {
                            let l = r ? n.classBindings : n.styleBindings,
                                u = Bl(l),
                                h = Ec(l);
                            t[i] = e;
                            let _, v = !1;
                            if (Array.isArray(e) ? (_ = e[1], (null === _ || Ou(e, _) > 0) && (v = !0)) : _ = e, s)
                                if (0 !== h) {
                                    const M = Bl(t[u + 1]);
                                    t[i + 1] = em(M, u), 0 !== M && (t[M + 1] = gx(t[M + 1], i)), t[u + 1] = function lz(t, n) {
                                        return 131071 & t | n << 17
                                    }(t[u + 1], i)
                                } else t[i + 1] = em(u, 0), 0 !== u && (t[u + 1] = gx(t[u + 1], i)), u = i;
                            else t[i + 1] = em(h, 0), 0 === u ? u = i : t[h + 1] = gx(t[h + 1], i), h = i;
                            v && (t[i + 1] = px(t[i + 1])), Jk(t, _, i, !0), Jk(t, _, i, !1),
                                function dz(t, n, e, i, s) {
                                    const r = s ? t.residualClasses : t.residualStyles;
                                    null != r && "string" == typeof n && Ou(r, n) >= 0 && (e[i + 1] = mx(e[i + 1]))
                                }(n, _, t, i, r), l = em(u, h), r ? n.classBindings = l : n.styleBindings = l
                        }(s, r, n, e, l, i)
                }
            }

            function yx(t, n, e, i, s) {
                let r = null;
                const l = e.directiveEnd;
                let u = e.directiveStylingLast;
                for (-1 === u ? u = e.directiveStart : u++; u < l && (r = n[u], i = Xh(i, r.hostAttrs, s), r !== t);) u++;
                return null !== t && (e.directiveStylingLast = u), i
            }

            function Xh(t, n, e) {
                const i = e ? 1 : 2;
                let s = -1;
                if (null !== n)
                    for (let r = 0; r < n.length; r++) {
                        const l = n[r];
                        "number" == typeof l ? s = l : s === i && (Array.isArray(t) || (t = void 0 === t ? [] : ["", t]), oa(t, l, !!e || n[++r]))
                    }
                return void 0 === t ? null : t
            }

            function Tz(t, n, e) {
                const i = String(n);
                "" !== i && !i.includes(" ") && oa(t, i, e)
            }

            function cE(t, n, e, i, s, r, l, u) {
                if (!(3 & n.type)) return;
                const h = t.data,
                    v = h[u + 1],
                    _ = function cz(t) {
                        return 1 == (1 & t)
                    }(v) ? uE(h, n, e, s, Ec(v), l) : void 0;
                tm(_) || (tm(r) || function oz(t) {
                    return 2 == (2 & t)
                }(v) && (r = uE(h, null, e, s, u, l)), function hV(t, n, e, i, s) {
                    if (n) s ? t.addClass(e, i) : t.removeClass(e, i);
                    else {
                        let r = -1 === i.indexOf("-") ? void 0 : Ll.DashCase;
                        null == s ? t.removeStyle(e, i, r) : ("string" == typeof s && s.endsWith("!important") && (s = s.slice(0, -10), r |= Ll.Important), t.setStyle(e, i, s, r))
                    }
                }(i, l, sg(Sr(), e), s, r))
            }

            function uE(t, n, e, i, s, r) {
                const l = null === n;
                let u;
                for (; s > 0;) {
                    const h = t[s],
                        v = Array.isArray(h),
                        _ = v ? h[1] : h,
                        C = null === _;
                    let M = e[s + 1];
                    M === Bn && (M = C ? li : void 0);
                    let L = C ? eb(M, i) : _ === i ? M : void 0;
                    if (v && !tm(L) && (L = eb(h, i)), tm(L) && (u = L, l)) return u;
                    const j = t[s + 1];
                    s = l ? Bl(j) : Ec(j)
                }
                if (null !== n) {
                    let h = r ? n.residualClasses : n.residualStyles;
                    null != h && (u = eb(h, i))
                }
                return u
            }

            function tm(t) {
                return void 0 !== t
            }

            function dE(t, n) {
                return 0 != (t.flags & (n ? 8 : 16))
            }

            function ae(t, n = "") {
                const e = At(),
                    i = di(),
                    s = t + Jn,
                    r = i.firstCreatePass ? Xu(i, s, 1, n, null) : i.data[s],
                    l = hE(i, e, r, n, t);
                e[s] = l, ag() && Ag(i, e, l, r), go(r, !1)
            }
            let hE = (t, n, e, i, s) => (Il(!0), function Cg(t, n) {
                return t.createText(n)
            }(n[An], i));

            function qt(t) {
                return dn("", t, ""), qt
            }

            function dn(t, n, e) {
                const i = At(),
                    s = qu(i, t, n, e);
                return s !== Bn && Wo(i, Sr(), s), dn
            }

            function Mc(t, n, e, i, s) {
                const r = At(),
                    l = function Zu(t, n, e, i, s, r) {
                        const u = kc(t, zo(), e, s);
                        return jo(2), u ? n + qe(e) + i + qe(s) + r : Bn
                    }(r, t, n, e, i, s);
                return l !== Bn && Wo(r, Sr(), l), Mc
            }

            function nm(t, n, e, i, s, r, l) {
                const u = At(),
                    h = function Ku(t, n, e, i, s, r, l, u) {
                        const v = qg(t, zo(), e, s, l);
                        return jo(3), v ? n + qe(e) + i + qe(s) + r + qe(l) + u : Bn
                    }(u, t, n, e, i, s, r, l);
                return h !== Bn && Wo(u, Sr(), h), nm
            }
            const Pc = void 0;
            var Yz = ["en", [
                    ["a", "p"],
                    ["AM", "PM"], Pc
                ],
                [
                    ["AM", "PM"], Pc, Pc
                ],
                [
                    ["S", "M", "T", "W", "T", "F", "S"],
                    ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                    ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"]
                ], Pc, [
                    ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                    ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                ], Pc, [
                    ["B", "A"],
                    ["BC", "AD"],
                    ["Before Christ", "Anno Domini"]
                ], 0, [6, 0],
                ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
                ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
                ["{1}, {0}", Pc, "{1} 'at' {0}", Pc],
                [".", ",", ";", "%", "+", "-", "E", "\xd7", "\u2030", "\u221e", "NaN", ":"],
                ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"], "USD", "$", "US Dollar", {}, "ltr",
                function Xz(t) {
                    const e = Math.floor(Math.abs(t)),
                        i = t.toString().replace(/^[^.]*\.?/, "").length;
                    return 1 === e && 0 === i ? 1 : 5
                }
            ];
            let rd = {};

            function Ar(t) {
                const n = function qz(t) {
                    return t.toLowerCase().replace(/_/g, "-")
                }(t);
                let e = OE(n);
                if (e) return e;
                const i = n.split("-")[0];
                if (e = OE(i), e) return e;
                if ("en" === i) return Yz;
                throw new ke(701, !1)
            }

            function OE(t) {
                return t in rd || (rd[t] = $i.ng && $i.ng.common && $i.ng.common.locales && $i.ng.common.locales[t]), rd[t]
            }
            var Ki = function(t) {
                return t[t.LocaleId = 0] = "LocaleId", t[t.DayPeriodsFormat = 1] = "DayPeriodsFormat", t[t.DayPeriodsStandalone = 2] = "DayPeriodsStandalone", t[t.DaysFormat = 3] = "DaysFormat", t[t.DaysStandalone = 4] = "DaysStandalone", t[t.MonthsFormat = 5] = "MonthsFormat", t[t.MonthsStandalone = 6] = "MonthsStandalone", t[t.Eras = 7] = "Eras", t[t.FirstDayOfWeek = 8] = "FirstDayOfWeek", t[t.WeekendRange = 9] = "WeekendRange", t[t.DateFormat = 10] = "DateFormat", t[t.TimeFormat = 11] = "TimeFormat", t[t.DateTimeFormat = 12] = "DateTimeFormat", t[t.NumberSymbols = 13] = "NumberSymbols", t[t.NumberFormats = 14] = "NumberFormats", t[t.CurrencyCode = 15] = "CurrencyCode", t[t.CurrencySymbol = 16] = "CurrencySymbol", t[t.CurrencyName = 17] = "CurrencyName", t[t.Currencies = 18] = "Currencies", t[t.Directionality = 19] = "Directionality", t[t.PluralCase = 20] = "PluralCase", t[t.ExtraData = 21] = "ExtraData", t
            }(Ki || {});
            const ad = "en-US";
            let IE = ad;

            function _x(t, n, e, i, s) {
                if (t = wt(t), Array.isArray(t))
                    for (let r = 0; r < t.length; r++) _x(t[r], n, e, i, s);
                else {
                    const r = di(),
                        l = At(),
                        u = Js();
                    let h = Dc(t) ? t : wt(t.provide);
                    const v = m2(t),
                        _ = 1048575 & u.providerIndexes,
                        C = u.directiveStart,
                        M = u.providerIndexes >> 20;
                    if (Dc(t) || !t.multi) {
                        const L = new vh(v, s, $e),
                            j = Cx(h, n, s ? _ : _ + M, C); - 1 === j ? (K0(dg(u, l), r, h), wx(r, t, n.length), n.push(h), u.directiveStart++, u.directiveEnd++, s && (u.providerIndexes += 1048576), e.push(L), l.push(L)) : (e[j] = L, l[j] = L)
                    } else {
                        const L = Cx(h, n, _ + M, C),
                            j = Cx(h, n, _, _ + M),
                            Q = j >= 0 && e[j];
                        if (s && !Q || !s && !(L >= 0 && e[L])) {
                            K0(dg(u, l), r, h);
                            const Ae = function Xj(t, n, e, i, s) {
                                const r = new vh(t, e, $e);
                                return r.multi = [], r.index = n, r.componentProviders = 0, sM(r, s, i && !e), r
                            }(s ? Gj : Wj, e.length, s, i, v);
                            !s && Q && (e[j].providerFactory = Ae), wx(r, t, n.length, 0), n.push(h), u.directiveStart++, u.directiveEnd++, s && (u.providerIndexes += 1048576), e.push(Ae), l.push(Ae)
                        } else wx(r, t, L > -1 ? L : j, sM(e[s ? j : L], v, !s && i));
                        !s && i && Q && e[j].componentProviders++
                    }
                }
            }

            function wx(t, n, e, i) {
                const s = Dc(n),
                    r = function zV(t) {
                        return !!t.useClass
                    }(n);
                if (s || r) {
                    const h = (r ? wt(n.useClass) : n).prototype.ngOnDestroy;
                    if (h) {
                        const v = t.destroyHooks || (t.destroyHooks = []);
                        if (!s && n.multi) {
                            const _ = v.indexOf(e); - 1 === _ ? v.push(e, [i, h]) : v[_ + 1].push(i, h)
                        } else v.push(e, h)
                    }
                }
            }

            function sM(t, n, e) {
                return e && t.componentProviders++, t.multi.push(n) - 1
            }

            function Cx(t, n, e, i) {
                for (let s = e; s < i; s++)
                    if (n[s] === t) return s;
                return -1
            }

            function Wj(t, n, e, i) {
                return Sx(this.multi, [])
            }

            function Gj(t, n, e, i) {
                const s = this.multi;
                let r;
                if (this.providerFactory) {
                    const l = this.providerFactory.componentProviders,
                        u = Cc(e, e[Wt], this.providerFactory.index, i);
                    r = u.slice(0, l), Sx(s, r);
                    for (let h = l; h < u.length; h++) r.push(u[h])
                } else r = [], Sx(s, r);
                return r
            }

            function Sx(t, n) {
                for (let e = 0; e < t.length; e++) n.push((0, t[e])());
                return n
            }

            function Xi(t, n = []) {
                return e => {
                    e.providersResolver = (i, s) => function Uj(t, n, e) {
                        const i = di();
                        if (i.firstCreatePass) {
                            const s = Wa(t);
                            _x(e, i.data, i.blueprint, s, !0), _x(n, i.data, i.blueprint, s, !1)
                        }
                    }(i, s ? s(t) : t, n)
                }
            }
            class Oc {}
            class rM {}
            class Tx extends Oc {
                constructor(n, e, i) {
                    super(), this._parent = e, this._bootstrapComponents = [], this.destroyCbs = [], this.componentFactoryResolver = new vk(this);
                    const s = wr(n);
                    this._bootstrapComponents = Uo(s.bootstrap), this._r3Injector = E2(n, e, [{
                        provide: Oc,
                        useValue: this
                    }, {
                        provide: $u,
                        useValue: this.componentFactoryResolver
                    }, ...i], nt(n), new Set(["environment"])), this._r3Injector.resolveInjectorInitializers(), this.instance = this._r3Injector.get(n)
                }
                get injector() {
                    return this._r3Injector
                }
                destroy() {
                    const n = this._r3Injector;
                    !n.destroyed && n.destroy(), this.destroyCbs.forEach(e => e()), this.destroyCbs = null
                }
                onDestroy(n) {
                    this.destroyCbs.push(n)
                }
            }
            class Dx extends rM {
                constructor(n) {
                    super(), this.moduleType = n
                }
                create(n) {
                    return new Tx(this.moduleType, n, [])
                }
            }
            class aM extends Oc {
                constructor(n) {
                    super(), this.componentFactoryResolver = new vk(this), this.instance = null;
                    const e = new Vu([...n.providers, {
                        provide: Oc,
                        useValue: this
                    }, {
                        provide: $u,
                        useValue: this.componentFactoryResolver
                    }], n.parent || Lg(), n.debugName, new Set(["environment"]));
                    this.injector = e, n.runEnvironmentInitializers && e.resolveInjectorInitializers()
                }
                destroy() {
                    this.injector.destroy()
                }
                onDestroy(n) {
                    this.injector.onDestroy(n)
                }
            }

            function Ax(t, n, e = null) {
                return new aM({
                    providers: t,
                    parent: n,
                    debugName: e,
                    runEnvironmentInitializers: !0
                }).injector
            }
            let Zj = (() => {
                class t {
                    constructor(e) {
                        this._injector = e, this.cachedInjectors = new Map
                    }
                    getOrCreateStandaloneInjector(e) {
                        if (!e.standalone) return null;
                        if (!this.cachedInjectors.has(e)) {
                            const i = h2(0, e.type),
                                s = i.length > 0 ? Ax([i], this._injector, `Standalone[${e.type.name}]`) : null;
                            this.cachedInjectors.set(e, s)
                        }
                        return this.cachedInjectors.get(e)
                    }
                    ngOnDestroy() {
                        try {
                            for (const e of this.cachedInjectors.values()) null !== e && e.destroy()
                        } finally {
                            this.cachedInjectors.clear()
                        }
                    }
                    static# e = this.\u0275prov = Et({
                        token: t,
                        providedIn: "environment",
                        factory: () => new t(vt(la))
                    })
                }
                return t
            })();

            function oM(t) {
                t.getStandaloneInjector = n => n.get(Zj).getOrCreateStandaloneInjector(t)
            }

            function ds(t, n, e) {
                const i = Cr() + t,
                    s = At();
                return s[i] === Bn ? bo(s, i, e ? n.call(e) : n()) : jh(s, i)
            }

            function hn(t, n, e, i) {
                return mM(At(), Cr(), t, n, e, i)
            }

            function Da(t, n, e, i, s) {
                return vM(At(), Cr(), t, n, e, i, s)
            }

            function pM(t, n, e, i, s, r) {
                return function yM(t, n, e, i, s, r, l, u) {
                    const h = n + e;
                    return qg(t, h, s, r, l) ? bo(t, h + 3, u ? i.call(u, s, r, l) : i(s, r, l)) : Jh(t, h + 3)
                }(At(), Cr(), t, n, e, i, s, r)
            }

            function gM(t, n, e, i, s, r, l) {
                return function bM(t, n, e, i, s, r, l, u, h) {
                    const v = n + e;
                    return Sa(t, v, s, r, l, u) ? bo(t, v + 4, h ? i.call(h, s, r, l, u) : i(s, r, l, u)) : Jh(t, v + 4)
                }(At(), Cr(), t, n, e, i, s, r, l)
            }

            function Ex(t, n, e, i, s, r, l, u) {
                const h = Cr() + t,
                    v = At(),
                    _ = Sa(v, h, e, i, s, r);
                return dr(v, h + 4, l) || _ ? bo(v, h + 5, u ? n.call(u, e, i, s, r, l) : n(e, i, s, r, l)) : jh(v, h + 5)
            }

            function Jh(t, n) {
                const e = t[n];
                return e === Bn ? void 0 : e
            }

            function mM(t, n, e, i, s, r) {
                const l = n + e;
                return dr(t, l, s) ? bo(t, l + 1, r ? i.call(r, s) : i(s)) : Jh(t, l + 1)
            }

            function vM(t, n, e, i, s, r, l) {
                const u = n + e;
                return kc(t, u, s, r) ? bo(t, u + 2, l ? i.call(l, s, r) : i(s, r)) : Jh(t, u + 2)
            }

            function Yt(t, n) {
                const e = di();
                let i;
                const s = t + Jn;
                e.firstCreatePass ? (i = function c$(t, n) {
                    if (n)
                        for (let e = n.length - 1; e >= 0; e--) {
                            const i = n[e];
                            if (t === i.name) return i
                        }
                }(n, e.pipeRegistry), e.data[s] = i, i.onDestroy && (e.destroyHooks ? ? = []).push(s, i.onDestroy)) : i = e.data[s];
                const r = i.factory || (i.factory = _c(i.type)),
                    u = Zs($e);
                try {
                    const h = ug(!1),
                        v = r();
                    return ug(h),
                        function Q8(t, n, e, i) {
                            e >= t.data.length && (t.data[e] = null, t.blueprint[e] = null), n[e] = i
                        }(e, At(), s, v), v
                } finally {
                    Zs(u)
                }
            }

            function xn(t, n, e) {
                const i = t + Jn,
                    s = At(),
                    r = wu(s, i);
                return ef(s, i) ? mM(s, Cr(), n, r.transform, e, r) : r.transform(e)
            }

            function hs(t, n, e, i) {
                const s = t + Jn,
                    r = At(),
                    l = wu(r, s);
                return ef(r, s) ? vM(r, Cr(), n, l.transform, e, i, l) : l.transform(e, i)
            }

            function ef(t, n) {
                return t[Wt].data[n].pure
            }

            function f$() {
                return this._results[Symbol.iterator]()
            }
            class Mx {
                static# e = Symbol.iterator;
                get changes() {
                    return this._changes || (this._changes = new Pt)
                }
                constructor(n = !1) {
                    this._emitDistinctChangesOnly = n, this.dirty = !0, this._results = [], this._changesDetected = !1, this._changes = null, this.length = 0, this.first = void 0, this.last = void 0;
                    const e = Mx.prototype;
                    e[Symbol.iterator] || (e[Symbol.iterator] = f$)
                }
                get(n) {
                    return this._results[n]
                }
                map(n) {
                    return this._results.map(n)
                }
                filter(n) {
                    return this._results.filter(n)
                }
                find(n) {
                    return this._results.find(n)
                }
                reduce(n, e) {
                    return this._results.reduce(n, e)
                }
                forEach(n) {
                    this._results.forEach(n)
                }
                some(n) {
                    return this._results.some(n)
                }
                toArray() {
                    return this._results.slice()
                }
                toString() {
                    return this._results.toString()
                }
                reset(n, e) {
                    const i = this;
                    i.dirty = !1;
                    const s = function Ca(t) {
                        return t.flat(Number.POSITIVE_INFINITY)
                    }(n);
                    (this._changesDetected = ! function g4(t, n, e) {
                        if (t.length !== n.length) return !1;
                        for (let i = 0; i < t.length; i++) {
                            let s = t[i],
                                r = n[i];
                            if (e && (s = e(s), r = e(r)), r !== s) return !1
                        }
                        return !0
                    }(i._results, s, e)) && (i._results = s, i.length = s.length, i.last = s[this.length - 1], i.first = s[0])
                }
                notifyOnChanges() {
                    this._changes && (this._changesDetected || !this._emitDistinctChangesOnly) && this._changes.emit(this)
                }
                setDirty() {
                    this.dirty = !0
                }
                destroy() {
                    this.changes.complete(), this.changes.unsubscribe()
                }
            }

            function g$(t, n, e, i = !0) {
                const s = n[Wt];
                if (function sV(t, n, e, i) {
                        const s = Ne + i,
                            r = e.length;
                        i > 0 && (e[s - 1][sa] = n), i < r - Ne ? (n[sa] = e[s], fA(e, Ne + i, n)) : (e.push(n), n[sa] = null), n[qi] = e;
                        const l = n[cr];
                        null !== l && e !== l && function rV(t, n) {
                            const e = t[P];
                            n[cs] !== n[qi][qi][cs] && (t[xc] = !0), null === e ? t[P] = [n] : e.push(n)
                        }(l, n);
                        const u = n[_i];
                        null !== u && u.insertView(t), n[Pn] |= 128
                    }(s, n, t, e), i) {
                    const r = gb(e, t),
                        l = n[An],
                        u = Dg(l, t[Y]);
                    null !== u && function tV(t, n, e, i, s, r) {
                        i[ns] = s, i[Ps] = n, kh(t, i, e, 1, s, r)
                    }(s, t[Ps], l, n, u, r)
                }
            }
            let Aa = (() => {
                class t {
                    static# e = this.__NG_ELEMENT_ID__ = y$
                }
                return t
            })();
            const m$ = Aa,
                v$ = class extends m$ {
                    constructor(n, e, i) {
                        super(), this._declarationLView = n, this._declarationTContainer = e, this.elementRef = i
                    }
                    get ssrId() {
                        return this._declarationTContainer.tView ? .ssrId || null
                    }
                    createEmbeddedView(n, e) {
                        return this.createEmbeddedViewImpl(n, e)
                    }
                    createEmbeddedViewImpl(n, e, i) {
                        const s = function p$(t, n, e, i) {
                            const s = n.tView,
                                u = $g(t, s, e, 4096 & t[Pn] ? 4096 : 16, null, n, null, null, null, i ? .injector ? ? null, i ? .hydrationInfo ? ? null);
                            u[cr] = t[n.index];
                            const v = t[_i];
                            return null !== v && (u[_i] = v.createEmbeddedView(s)), ax(s, u, e), u
                        }(this._declarationLView, this._declarationTContainer, n, {
                            injector: e,
                            hydrationInfo: i
                        });
                        return new Hh(s)
                    }
                };

            function y$() {
                return om(Js(), At())
            }

            function om(t, n) {
                return 4 & t.type ? new v$(n, t, Uu(t, n)) : null
            }
            let Wr = (() => {
                class t {
                    static# e = this.__NG_ELEMENT_ID__ = S$
                }
                return t
            })();

            function S$() {
                return AM(Js(), At())
            }
            const T$ = Wr,
                TM = class extends T$ {
                    constructor(n, e, i) {
                        super(), this._lContainer = n, this._hostTNode = e, this._hostLView = i
                    }
                    get element() {
                        return Uu(this._hostTNode, this._hostLView)
                    }
                    get injector() {
                        return new Tr(this._hostTNode, this._hostLView)
                    }
                    get parentInjector() {
                        const n = hg(this._hostTNode, this._hostLView);
                        if (Y0(n)) {
                            const e = bh(n, this._hostLView),
                                i = yh(n);
                            return new Tr(e[Wt].data[i + 8], e)
                        }
                        return new Tr(null, this._hostLView)
                    }
                    clear() {
                        for (; this.length > 0;) this.remove(this.length - 1)
                    }
                    get(n) {
                        const e = DM(this._lContainer);
                        return null !== e && e[n] || null
                    }
                    get length() {
                        return this._lContainer.length - Ne
                    }
                    createEmbeddedView(n, e, i) {
                        let s, r;
                        "number" == typeof i ? s = i : null != i && (s = i.index, r = i.injector);
                        const u = n.createEmbeddedViewImpl(e || {}, r, null);
                        return this.insertImpl(u, s, false), u
                    }
                    createComponent(n, e, i, s, r) {
                        const l = n && ! function _h(t) {
                            return "function" == typeof t
                        }(n);
                        let u;
                        if (l) u = e;
                        else {
                            const Z = e || {};
                            u = Z.index, i = Z.injector, s = Z.projectableNodes, r = Z.environmentInjector || Z.ngModuleRef
                        }
                        const h = l ? n : new zh(ti(n)),
                            v = i || this.parentInjector;
                        if (!r && null == h.ngModule) {
                            const Q = (l ? v : this.parentInjector).get(la, null);
                            Q && (r = Q)
                        }
                        ti(h.componentType ? ? {});
                        const L = h.create(v, s, null, r);
                        return this.insertImpl(L.hostView, u, false), L
                    }
                    insert(n, e) {
                        return this.insertImpl(n, e, !1)
                    }
                    insertImpl(n, e, i) {
                        const s = n._lView;
                        if (function P6(t) {
                                return nn(t[qi])
                            }(s)) {
                            const h = this.indexOf(n);
                            if (-1 !== h) this.detach(h);
                            else {
                                const v = s[qi],
                                    _ = new TM(v, v[Ps], v[qi]);
                                _.detach(_.indexOf(n))
                            }
                        }
                        const l = this._adjustIndex(e),
                            u = this._lContainer;
                        return g$(u, s, l, !i), n.attachToViewContainerRef(), fA(Px(u), l, n), n
                    }
                    move(n, e) {
                        return this.insert(n, e)
                    }
                    indexOf(n) {
                        const e = DM(this._lContainer);
                        return null !== e ? e.indexOf(n) : -1
                    }
                    remove(n) {
                        const e = this._adjustIndex(n, -1),
                            i = Tg(this._lContainer, e);
                        i && (gg(Px(this._lContainer), e), db(i[Wt], i))
                    }
                    detach(n) {
                        const e = this._adjustIndex(n, -1),
                            i = Tg(this._lContainer, e);
                        return i && null != gg(Px(this._lContainer), e) ? new Hh(i) : null
                    }
                    _adjustIndex(n, e = 0) {
                        return n ? ? this.length + e
                    }
                };

            function DM(t) {
                return t[8]
            }

            function Px(t) {
                return t[8] || (t[8] = [])
            }

            function AM(t, n) {
                let e;
                const i = n[t.index];
                return nn(i) ? e = i : (e = rk(i, n, null, t), n[t.index] = e, Ug(n, e)), kM(e, n, t, i), new TM(e, t, n)
            }
            let kM = function EM(t, n, e, i) {
                if (t[Y]) return;
                let s;
                s = 8 & e.type ? Zi(i) : function D$(t, n) {
                    const e = t[An],
                        i = e.createComment(""),
                        s = Hr(n, t);
                    return Tc(e, Dg(e, s), i, function cV(t, n) {
                        return t.nextSibling(n)
                    }(e, s), !1), i
                }(n, e), t[Y] = s
            };
            class Ox {
                constructor(n) {
                    this.queryList = n, this.matches = null
                }
                clone() {
                    return new Ox(this.queryList)
                }
                setDirty() {
                    this.queryList.setDirty()
                }
            }
            class Ix {
                constructor(n = []) {
                    this.queries = n
                }
                createEmbeddedView(n) {
                    const e = n.queries;
                    if (null !== e) {
                        const i = null !== n.contentQueries ? n.contentQueries[0] : e.length,
                            s = [];
                        for (let r = 0; r < i; r++) {
                            const l = e.getByIndex(r);
                            s.push(this.queries[l.indexInDeclarationView].clone())
                        }
                        return new Ix(s)
                    }
                    return null
                }
                insertView(n) {
                    this.dirtyQueriesWithMatches(n)
                }
                detachView(n) {
                    this.dirtyQueriesWithMatches(n)
                }
                dirtyQueriesWithMatches(n) {
                    for (let e = 0; e < this.queries.length; e++) null !== LM(n, e).matches && this.queries[e].setDirty()
                }
            }
            class MM {
                constructor(n, e, i = null) {
                    this.predicate = n, this.flags = e, this.read = i
                }
            }
            class Lx {
                constructor(n = []) {
                    this.queries = n
                }
                elementStart(n, e) {
                    for (let i = 0; i < this.queries.length; i++) this.queries[i].elementStart(n, e)
                }
                elementEnd(n) {
                    for (let e = 0; e < this.queries.length; e++) this.queries[e].elementEnd(n)
                }
                embeddedTView(n) {
                    let e = null;
                    for (let i = 0; i < this.length; i++) {
                        const s = null !== e ? e.length : 0,
                            r = this.getByIndex(i).embeddedTView(n, s);
                        r && (r.indexInDeclarationView = i, null !== e ? e.push(r) : e = [r])
                    }
                    return null !== e ? new Lx(e) : null
                }
                template(n, e) {
                    for (let i = 0; i < this.queries.length; i++) this.queries[i].template(n, e)
                }
                getByIndex(n) {
                    return this.queries[n]
                }
                get length() {
                    return this.queries.length
                }
                track(n) {
                    this.queries.push(n)
                }
            }
            class Fx {
                constructor(n, e = -1) {
                    this.metadata = n, this.matches = null, this.indexInDeclarationView = -1, this.crossesNgTemplate = !1, this._appliesToNextNode = !0, this._declarationNodeIndex = e
                }
                elementStart(n, e) {
                    this.isApplyingToNode(e) && this.matchTNode(n, e)
                }
                elementEnd(n) {
                    this._declarationNodeIndex === n.index && (this._appliesToNextNode = !1)
                }
                template(n, e) {
                    this.elementStart(n, e)
                }
                embeddedTView(n, e) {
                    return this.isApplyingToNode(n) ? (this.crossesNgTemplate = !0, this.addMatch(-n.index, e), new Fx(this.metadata)) : null
                }
                isApplyingToNode(n) {
                    if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
                        const e = this._declarationNodeIndex;
                        let i = n.parent;
                        for (; null !== i && 8 & i.type && i.index !== e;) i = i.parent;
                        return e === (null !== i ? i.index : -1)
                    }
                    return this._appliesToNextNode
                }
                matchTNode(n, e) {
                    const i = this.metadata.predicate;
                    if (Array.isArray(i))
                        for (let s = 0; s < i.length; s++) {
                            const r = i[s];
                            this.matchTNodeWithReadOption(n, e, E$(e, r)), this.matchTNodeWithReadOption(n, e, fg(e, n, r, !1, !1))
                        } else i === Aa ? 4 & e.type && this.matchTNodeWithReadOption(n, e, -1) : this.matchTNodeWithReadOption(n, e, fg(e, n, i, !1, !1))
                }
                matchTNodeWithReadOption(n, e, i) {
                    if (null !== i) {
                        const s = this.metadata.read;
                        if (null !== s)
                            if (s === ii || s === Wr || s === Aa && 4 & e.type) this.addMatch(e.index, -2);
                            else {
                                const r = fg(e, n, s, !1, !1);
                                null !== r && this.addMatch(e.index, r)
                            }
                        else this.addMatch(e.index, i)
                    }
                }
                addMatch(n, e) {
                    null === this.matches ? this.matches = [n, e] : this.matches.push(n, e)
                }
            }

            function E$(t, n) {
                const e = t.localNames;
                if (null !== e)
                    for (let i = 0; i < e.length; i += 2)
                        if (e[i] === n) return e[i + 1];
                return null
            }

            function P$(t, n, e, i) {
                return -1 === e ? function M$(t, n) {
                    return 11 & t.type ? Uu(t, n) : 4 & t.type ? om(t, n) : null
                }(n, t) : -2 === e ? function O$(t, n, e) {
                    return e === ii ? Uu(n, t) : e === Aa ? om(n, t) : e === Wr ? AM(n, t) : void 0
                }(t, n, i) : Cc(t, t[Wt], e, n)
            }

            function PM(t, n, e, i) {
                const s = n[_i].queries[i];
                if (null === s.matches) {
                    const r = t.data,
                        l = e.matches,
                        u = [];
                    for (let h = 0; h < l.length; h += 2) {
                        const v = l[h];
                        u.push(v < 0 ? null : P$(n, r[v], l[h + 1], e.metadata.read))
                    }
                    s.matches = u
                }
                return s.matches
            }

            function Nx(t, n, e, i) {
                const s = t.queries.getByIndex(e),
                    r = s.matches;
                if (null !== r) {
                    const l = PM(t, n, s, e);
                    for (let u = 0; u < r.length; u += 2) {
                        const h = r[u];
                        if (h > 0) i.push(l[u / 2]);
                        else {
                            const v = r[u + 1],
                                _ = n[-h];
                            for (let C = Ne; C < _.length; C++) {
                                const M = _[C];
                                M[cr] === M[qi] && Nx(M[Wt], M, v, i)
                            }
                            if (null !== _[P]) {
                                const C = _[P];
                                for (let M = 0; M < C.length; M++) {
                                    const L = C[M];
                                    Nx(L[Wt], L, v, i)
                                }
                            }
                        }
                    }
                }
                return i
            }

            function kr(t) {
                const n = At(),
                    e = di(),
                    i = GD();
                $0(i + 1);
                const s = LM(e, i);
                if (t.dirty && function E6(t) {
                        return 4 == (4 & t[Pn])
                    }(n) === (2 == (2 & s.metadata.flags))) {
                    if (null === s.matches) t.reset([]);
                    else {
                        const r = s.crossesNgTemplate ? Nx(e, n, i, []) : PM(e, n, s, i);
                        t.reset(r, lH), t.notifyOnChanges()
                    }
                    return !0
                }
                return !1
            }

            function ka(t, n, e) {
                const i = di();
                i.firstCreatePass && (IM(i, new MM(t, n, e), -1), 2 == (2 & n) && (i.staticViewQueries = !0)), OM(i, At(), n)
            }

            function cm(t, n, e, i) {
                const s = di();
                if (s.firstCreatePass) {
                    const r = Js();
                    IM(s, new MM(n, e, i), r.index),
                        function L$(t, n) {
                            const e = t.contentQueries || (t.contentQueries = []);
                            n !== (e.length ? e[e.length - 1] : -1) && e.push(t.queries.length - 1, n)
                        }(s, t), 2 == (2 & e) && (s.staticContentQueries = !0)
                }
                OM(s, At(), e)
            }

            function Er() {
                return function I$(t, n) {
                    return t[_i].queries[n].queryList
                }(At(), GD())
            }

            function OM(t, n, e) {
                const i = new Mx(4 == (4 & e));
                (function VH(t, n, e, i) {
                    const s = ok(n);
                    s.push(e), t.firstCreatePass && lk(t).push(i, s.length - 1)
                })(t, n, i, i.destroy), null === n[_i] && (n[_i] = new Ix), n[_i].queries.push(new Ox(i))
            }

            function IM(t, n, e) {
                null === t.queries && (t.queries = new Lx), t.queries.track(new Fx(n, e))
            }

            function LM(t, n) {
                return t.queries.getByIndex(n)
            }

            function Ea(t, n) {
                return om(t, n)
            }
            const jx = new zt("Application Initializer");
            let $x = (() => {
                    class t {
                        constructor() {
                            this.initialized = !1, this.done = !1, this.donePromise = new Promise((e, i) => {
                                this.resolve = e, this.reject = i
                            }), this.appInits = Xt(jx, {
                                optional: !0
                            }) ? ? []
                        }
                        runInitializers() {
                            if (this.initialized) return;
                            const e = [];
                            for (const s of this.appInits) {
                                const r = s();
                                if (Gh(r)) e.push(r);
                                else if (Hk(r)) {
                                    const l = new Promise((u, h) => {
                                        r.subscribe({
                                            complete: u,
                                            error: h
                                        })
                                    });
                                    e.push(l)
                                }
                            }
                            const i = () => {
                                this.done = !0, this.resolve()
                            };
                            Promise.all(e).then(() => {
                                i()
                            }).catch(s => {
                                this.reject(s)
                            }), 0 === e.length && i(), this.initialized = !0
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        })
                    }
                    return t
                })(),
                KM = (() => {
                    class t {
                        log(e) {
                            console.log(e)
                        }
                        warn(e) {
                            console.warn(e)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "platform"
                        })
                    }
                    return t
                })();
            const Xo = new zt("LocaleId", {
                providedIn: "root",
                factory: () => Xt(Xo, Rn.Optional | Rn.SkipSelf) || function tU() {
                    return typeof $localize < "u" && $localize.locale || ad
                }()
            });
            let dm = (() => {
                class t {
                    constructor() {
                        this.taskId = 0, this.pendingTasks = new Set, this.hasPendingTasks = new re(!1)
                    }
                    add() {
                        this.hasPendingTasks.next(!0);
                        const e = this.taskId++;
                        return this.pendingTasks.add(e), e
                    }
                    remove(e) {
                        this.pendingTasks.delete(e), 0 === this.pendingTasks.size && this.hasPendingTasks.next(!1)
                    }
                    ngOnDestroy() {
                        this.pendingTasks.clear(), this.hasPendingTasks.next(!1)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            class sU {
                constructor(n, e) {
                    this.ngModuleFactory = n, this.componentFactories = e
                }
            }
            let QM = (() => {
                class t {
                    compileModuleSync(e) {
                        return new Dx(e)
                    }
                    compileModuleAsync(e) {
                        return Promise.resolve(this.compileModuleSync(e))
                    }
                    compileModuleAndAllComponentsSync(e) {
                        const i = this.compileModuleSync(e),
                            r = Uo(wr(e).declarations).reduce((l, u) => {
                                const h = ti(u);
                                return h && l.push(new zh(h)), l
                            }, []);
                        return new sU(i, r)
                    }
                    compileModuleAndAllComponentsAsync(e) {
                        return Promise.resolve(this.compileModuleAndAllComponentsSync(e))
                    }
                    clearCache() {}
                    clearCacheFor(e) {}
                    getModuleId(e) {}
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            const nP = new zt(""),
                fm = new zt("");
            let Yx, Gx = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._ngZone = e, this.registry = i, this._pendingCount = 0, this._isZoneStable = !0, this._didWork = !1, this._callbacks = [], this.taskTrackingZone = null, Yx || (function DU(t) {
                                Yx = t
                            }(s), s.addToWindow(i)), this._watchAngularEvents(), e.run(() => {
                                this.taskTrackingZone = typeof Zone > "u" ? null : Zone.current.get("TaskTrackingZone")
                            })
                        }
                        _watchAngularEvents() {
                            this._ngZone.onUnstable.subscribe({
                                next: () => {
                                    this._didWork = !0, this._isZoneStable = !1
                                }
                            }), this._ngZone.runOutsideAngular(() => {
                                this._ngZone.onStable.subscribe({
                                    next: () => {
                                        si.assertNotInAngularZone(), queueMicrotask(() => {
                                            this._isZoneStable = !0, this._runCallbacksIfReady()
                                        })
                                    }
                                })
                            })
                        }
                        increasePendingRequestCount() {
                            return this._pendingCount += 1, this._didWork = !0, this._pendingCount
                        }
                        decreasePendingRequestCount() {
                            if (this._pendingCount -= 1, this._pendingCount < 0) throw new Error("pending async requests below zero");
                            return this._runCallbacksIfReady(), this._pendingCount
                        }
                        isStable() {
                            return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks
                        }
                        _runCallbacksIfReady() {
                            if (this.isStable()) queueMicrotask(() => {
                                for (; 0 !== this._callbacks.length;) {
                                    let e = this._callbacks.pop();
                                    clearTimeout(e.timeoutId), e.doneCb(this._didWork)
                                }
                                this._didWork = !1
                            });
                            else {
                                let e = this.getPendingTasks();
                                this._callbacks = this._callbacks.filter(i => !i.updateCb || !i.updateCb(e) || (clearTimeout(i.timeoutId), !1)), this._didWork = !0
                            }
                        }
                        getPendingTasks() {
                            return this.taskTrackingZone ? this.taskTrackingZone.macroTasks.map(e => ({
                                source: e.source,
                                creationLocation: e.creationLocation,
                                data: e.data
                            })) : []
                        }
                        addCallback(e, i, s) {
                            let r = -1;
                            i && i > 0 && (r = setTimeout(() => {
                                this._callbacks = this._callbacks.filter(l => l.timeoutId !== r), e(this._didWork, this.getPendingTasks())
                            }, i)), this._callbacks.push({
                                doneCb: e,
                                timeoutId: r,
                                updateCb: s
                            })
                        }
                        whenStable(e, i, s) {
                            if (s && !this.taskTrackingZone) throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');
                            this.addCallback(e, i, s), this._runCallbacksIfReady()
                        }
                        getPendingRequestCount() {
                            return this._pendingCount
                        }
                        registerApplication(e) {
                            this.registry.registerApplication(e, this)
                        }
                        unregisterApplication(e) {
                            this.registry.unregisterApplication(e)
                        }
                        findProviders(e, i, s) {
                            return []
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)(vt(si), vt(Xx), vt(fm))
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                Xx = (() => {
                    class t {
                        constructor() {
                            this._applications = new Map
                        }
                        registerApplication(e, i) {
                            this._applications.set(e, i)
                        }
                        unregisterApplication(e) {
                            this._applications.delete(e)
                        }
                        unregisterAllApplications() {
                            this._applications.clear()
                        }
                        getTestability(e) {
                            return this._applications.get(e) || null
                        }
                        getAllTestabilities() {
                            return Array.from(this._applications.values())
                        }
                        getAllRootElements() {
                            return Array.from(this._applications.keys())
                        }
                        findTestabilityInTree(e, i = !0) {
                            return Yx ? .findTestabilityInTree(this, e, i) ? ? null
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "platform"
                        })
                    }
                    return t
                })(),
                Vl = null;
            const iP = new zt("AllowMultipleToken"),
                qx = new zt("PlatformDestroyListeners"),
                Zx = new zt("appBootstrapListener");
            class rP {
                constructor(n, e) {
                    this.name = n, this.token = e
                }
            }

            function oP(t, n, e = []) {
                const i = `Platform: ${n}`,
                    s = new zt(i);
                return (r = []) => {
                    let l = Kx();
                    if (!l || l.injector.get(iP, !1)) {
                        const u = [...e, ...r, {
                            provide: s,
                            useValue: !0
                        }];
                        t ? t(u) : function EU(t) {
                            if (Vl && !Vl.get(iP, !1)) throw new ke(400, !1);
                            (function sP() {
                                ! function m6(t) {
                                    TD = t
                                }(() => {
                                    throw new ke(600, !1)
                                })
                            })(), Vl = t;
                            const n = t.get(cP);
                            (function aP(t) {
                                t.get(v2, null) ? .forEach(e => e())
                            })(t)
                        }(function lP(t = [], n) {
                            return js.create({
                                name: n,
                                providers: [{
                                    provide: kb,
                                    useValue: "platform"
                                }, {
                                    provide: qx,
                                    useValue: new Set([() => Vl = null])
                                }, ...t]
                            })
                        }(u, i))
                    }
                    return function PU(t) {
                        const n = Kx();
                        if (!n) throw new ke(401, !1);
                        return n
                    }()
                }
            }

            function Kx() {
                return Vl ? .get(cP) ? ? null
            }
            let cP = (() => {
                class t {
                    constructor(e) {
                        this._injector = e, this._modules = [], this._destroyListeners = [], this._destroyed = !1
                    }
                    bootstrapModuleFactory(e, i) {
                        const s = function OU(t = "zone.js", n) {
                            return "noop" === t ? new CH : "zone.js" === t ? new si(n) : t
                        }(i ? .ngZone, function uP(t) {
                            return {
                                enableLongStackTrace: !1,
                                shouldCoalesceEventChangeDetection: t ? .eventCoalescing ? ? !1,
                                shouldCoalesceRunChangeDetection: t ? .runCoalescing ? ? !1
                            }
                        }({
                            eventCoalescing: i ? .ngZoneEventCoalescing,
                            runCoalescing: i ? .ngZoneRunCoalescing
                        }));
                        return s.run(() => {
                            const r = function qj(t, n, e) {
                                    return new Tx(t, n, e)
                                }(e.moduleType, this.injector, function gP(t) {
                                    return [{
                                        provide: si,
                                        useFactory: t
                                    }, {
                                        provide: Ih,
                                        multi: !0,
                                        useFactory: () => {
                                            const n = Xt(LU, {
                                                optional: !0
                                            });
                                            return () => n.initialize()
                                        }
                                    }, {
                                        provide: pP,
                                        useFactory: IU
                                    }, {
                                        provide: L2,
                                        useFactory: F2
                                    }]
                                }(() => s)),
                                l = r.injector.get(vo, null);
                            return s.runOutsideAngular(() => {
                                    const u = s.onError.subscribe({
                                        next: h => {
                                            l.handleError(h)
                                        }
                                    });
                                    r.onDestroy(() => {
                                        pm(this._modules, r), u.unsubscribe()
                                    })
                                }),
                                function dP(t, n, e) {
                                    try {
                                        const i = e();
                                        return Gh(i) ? i.catch(s => {
                                            throw n.runOutsideAngular(() => t.handleError(s)), s
                                        }) : i
                                    } catch (i) {
                                        throw n.runOutsideAngular(() => t.handleError(i)), i
                                    }
                                }(l, s, () => {
                                    const u = r.injector.get($x);
                                    return u.runInitializers(), u.donePromise.then(() => (function LE(t) {
                                        es(t, "Expected localeId to be defined"), "string" == typeof t && (IE = t.toLowerCase().replace(/_/g, "-"))
                                    }(r.injector.get(Xo, ad) || ad), this._moduleDoBootstrap(r), r))
                                })
                        })
                    }
                    bootstrapModule(e, i = []) {
                        const s = hP({}, i);
                        return function AU(t, n, e) {
                            const i = new Dx(e);
                            return Promise.resolve(i)
                        }(0, 0, e).then(r => this.bootstrapModuleFactory(r, s))
                    }
                    _moduleDoBootstrap(e) {
                        const i = e.injector.get(So);
                        if (e._bootstrapComponents.length > 0) e._bootstrapComponents.forEach(s => i.bootstrap(s));
                        else {
                            if (!e.instance.ngDoBootstrap) throw new ke(-403, !1);
                            e.instance.ngDoBootstrap(i)
                        }
                        this._modules.push(e)
                    }
                    onDestroy(e) {
                        this._destroyListeners.push(e)
                    }
                    get injector() {
                        return this._injector
                    }
                    destroy() {
                        if (this._destroyed) throw new ke(404, !1);
                        this._modules.slice().forEach(i => i.destroy()), this._destroyListeners.forEach(i => i());
                        const e = this._injector.get(qx, null);
                        e && (e.forEach(i => i()), e.clear()), this._destroyed = !0
                    }
                    get destroyed() {
                        return this._destroyed
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(js))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "platform"
                    })
                }
                return t
            })();

            function hP(t, n) {
                return Array.isArray(n) ? n.reduce(hP, t) : { ...t,
                    ...n
                }
            }
            let So = (() => {
                class t {
                    constructor() {
                        this._bootstrapListeners = [], this._runningTick = !1, this._destroyed = !1, this._destroyListeners = [], this._views = [], this.internalErrorHandler = Xt(pP), this.zoneIsStable = Xt(L2), this.componentTypes = [], this.components = [], this.isStable = Xt(dm).hasPendingTasks.pipe(X(e => e ? b(!1) : this.zoneIsStable), function be(t, n = Ge) {
                            return t = t ? ? Se, Dt((e, i) => {
                                let s, r = !0;
                                e.subscribe(Ct(i, l => {
                                    const u = n(l);
                                    (r || !t(s, u)) && (r = !1, s = u, i.next(l))
                                }))
                            })
                        }(), A()), this._injector = Xt(la)
                    }
                    get destroyed() {
                        return this._destroyed
                    }
                    get injector() {
                        return this._injector
                    }
                    bootstrap(e, i) {
                        const s = e instanceof C2;
                        if (!this._injector.get($x).done) throw !s && function Dl(t) {
                            const n = ti(t) || Ms(t) || Ks(t);
                            return null !== n && n.standalone
                        }(e), new ke(405, !1);
                        let l;
                        l = s ? e : this._injector.get($u).resolveComponentFactory(e), this.componentTypes.push(l.componentType);
                        const u = function kU(t) {
                                return t.isBoundToModule
                            }(l) ? void 0 : this._injector.get(Oc),
                            v = l.create(js.NULL, [], i || l.selector, u),
                            _ = v.location.nativeElement,
                            C = v.injector.get(nP, null);
                        return C ? .registerApplication(_), v.onDestroy(() => {
                            this.detachView(v.hostView), pm(this.components, v), C ? .unregisterApplication(_)
                        }), this._loadComponent(v), v
                    }
                    tick() {
                        if (this._runningTick) throw new ke(101, !1);
                        try {
                            this._runningTick = !0;
                            for (let e of this._views) e.detectChanges()
                        } catch (e) {
                            this.internalErrorHandler(e)
                        } finally {
                            this._runningTick = !1
                        }
                    }
                    attachView(e) {
                        const i = e;
                        this._views.push(i), i.attachToAppRef(this)
                    }
                    detachView(e) {
                        const i = e;
                        pm(this._views, i), i.detachFromAppRef()
                    }
                    _loadComponent(e) {
                        this.attachView(e.hostView), this.tick(), this.components.push(e);
                        const i = this._injector.get(Zx, []);
                        i.push(...this._bootstrapListeners), i.forEach(s => s(e))
                    }
                    ngOnDestroy() {
                        if (!this._destroyed) try {
                            this._destroyListeners.forEach(e => e()), this._views.slice().forEach(e => e.destroy())
                        } finally {
                            this._destroyed = !0, this._views = [], this._bootstrapListeners = [], this._destroyListeners = []
                        }
                    }
                    onDestroy(e) {
                        return this._destroyListeners.push(e), () => pm(this._destroyListeners, e)
                    }
                    destroy() {
                        if (this._destroyed) throw new ke(406, !1);
                        const e = this._injector;
                        e.destroy && !e.destroyed && e.destroy()
                    }
                    get viewCount() {
                        return this._views.length
                    }
                    warnIfDestroyed() {}
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();

            function pm(t, n) {
                const e = t.indexOf(n);
                e > -1 && t.splice(e, 1)
            }
            const pP = new zt("", {
                providedIn: "root",
                factory: () => Xt(vo).handleError.bind(void 0)
            });

            function IU() {
                const t = Xt(si),
                    n = Xt(vo);
                return e => t.runOutsideAngular(() => n.handleError(e))
            }
            let LU = (() => {
                class t {
                    constructor() {
                        this.zone = Xt(si), this.applicationRef = Xt(So)
                    }
                    initialize() {
                        this._onMicrotaskEmptySubscription || (this._onMicrotaskEmptySubscription = this.zone.onMicrotaskEmpty.subscribe({
                            next: () => {
                                this.zone.run(() => {
                                    this.applicationRef.tick()
                                })
                            }
                        }))
                    }
                    ngOnDestroy() {
                        this._onMicrotaskEmptySubscription ? .unsubscribe()
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            let Xr = (() => {
                class t {
                    static# e = this.__NG_ELEMENT_ID__ = RU
                }
                return t
            })();

            function RU(t) {
                return function BU(t, n, e) {
                    if (mi(t) && !e) {
                        const i = aa(t.index, n);
                        return new Hh(i, i)
                    }
                    return 47 & t.type ? new Hh(n[cs], n) : null
                }(Js(), At(), 16 == (16 & t))
            }
            class bP {
                constructor() {}
                supports(n) {
                    return Yg(n)
                }
                create(n) {
                    return new UU(n)
                }
            }
            const $U = (t, n) => n;
            class UU {
                constructor(n) {
                    this.length = 0, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null, this._identityChangesHead = null, this._identityChangesTail = null, this._trackByFn = n || $U
                }
                forEachItem(n) {
                    let e;
                    for (e = this._itHead; null !== e; e = e._next) n(e)
                }
                forEachOperation(n) {
                    let e = this._itHead,
                        i = this._removalsHead,
                        s = 0,
                        r = null;
                    for (; e || i;) {
                        const l = !i || e && e.currentIndex < _P(i, s, r) ? e : i,
                            u = _P(l, s, r),
                            h = l.currentIndex;
                        if (l === i) s--, i = i._nextRemoved;
                        else if (e = e._next, null == l.previousIndex) s++;
                        else {
                            r || (r = []);
                            const v = u - s,
                                _ = h - s;
                            if (v != _) {
                                for (let M = 0; M < v; M++) {
                                    const L = M < r.length ? r[M] : r[M] = 0,
                                        j = L + M;
                                    _ <= j && j < v && (r[M] = L + 1)
                                }
                                r[l.previousIndex] = _ - v
                            }
                        }
                        u !== h && n(l, u, h)
                    }
                }
                forEachPreviousItem(n) {
                    let e;
                    for (e = this._previousItHead; null !== e; e = e._nextPrevious) n(e)
                }
                forEachAddedItem(n) {
                    let e;
                    for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e)
                }
                forEachMovedItem(n) {
                    let e;
                    for (e = this._movesHead; null !== e; e = e._nextMoved) n(e)
                }
                forEachRemovedItem(n) {
                    let e;
                    for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e)
                }
                forEachIdentityChange(n) {
                    let e;
                    for (e = this._identityChangesHead; null !== e; e = e._nextIdentityChange) n(e)
                }
                diff(n) {
                    if (null == n && (n = []), !Yg(n)) throw new ke(900, !1);
                    return this.check(n) ? this : null
                }
                onDestroy() {}
                check(n) {
                    this._reset();
                    let s, r, l, e = this._itHead,
                        i = !1;
                    if (Array.isArray(n)) {
                        this.length = n.length;
                        for (let u = 0; u < this.length; u++) r = n[u], l = this._trackByFn(u, r), null !== e && Object.is(e.trackById, l) ? (i && (e = this._verifyReinsertion(e, r, l, u)), Object.is(e.item, r) || this._addIdentityChange(e, r)) : (e = this._mismatch(e, r, l, u), i = !0), e = e._next
                    } else s = 0,
                        function P8(t, n) {
                            if (Array.isArray(t))
                                for (let e = 0; e < t.length; e++) n(t[e]);
                            else {
                                const e = t[Symbol.iterator]();
                                let i;
                                for (; !(i = e.next()).done;) n(i.value)
                            }
                        }(n, u => {
                            l = this._trackByFn(s, u), null !== e && Object.is(e.trackById, l) ? (i && (e = this._verifyReinsertion(e, u, l, s)), Object.is(e.item, u) || this._addIdentityChange(e, u)) : (e = this._mismatch(e, u, l, s), i = !0), e = e._next, s++
                        }), this.length = s;
                    return this._truncate(e), this.collection = n, this.isDirty
                }
                get isDirty() {
                    return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead || null !== this._identityChangesHead
                }
                _reset() {
                    if (this.isDirty) {
                        let n;
                        for (n = this._previousItHead = this._itHead; null !== n; n = n._next) n._nextPrevious = n._next;
                        for (n = this._additionsHead; null !== n; n = n._nextAdded) n.previousIndex = n.currentIndex;
                        for (this._additionsHead = this._additionsTail = null, n = this._movesHead; null !== n; n = n._nextMoved) n.previousIndex = n.currentIndex;
                        this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null, this._identityChangesHead = this._identityChangesTail = null
                    }
                }
                _mismatch(n, e, i, s) {
                    let r;
                    return null === n ? r = this._itTail : (r = n._prev, this._remove(n)), null !== (n = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null)) ? (Object.is(n.item, e) || this._addIdentityChange(n, e), this._reinsertAfter(n, r, s)) : null !== (n = null === this._linkedRecords ? null : this._linkedRecords.get(i, s)) ? (Object.is(n.item, e) || this._addIdentityChange(n, e), this._moveAfter(n, r, s)) : n = this._addAfter(new WU(e, i), r, s), n
                }
                _verifyReinsertion(n, e, i, s) {
                    let r = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(i, null);
                    return null !== r ? n = this._reinsertAfter(r, n._prev, s) : n.currentIndex != s && (n.currentIndex = s, this._addToMoves(n, s)), n
                }
                _truncate(n) {
                    for (; null !== n;) {
                        const e = n._next;
                        this._addToRemovals(this._unlink(n)), n = e
                    }
                    null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null), null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null)
                }
                _reinsertAfter(n, e, i) {
                    null !== this._unlinkedRecords && this._unlinkedRecords.remove(n);
                    const s = n._prevRemoved,
                        r = n._nextRemoved;
                    return null === s ? this._removalsHead = r : s._nextRemoved = r, null === r ? this._removalsTail = s : r._prevRemoved = s, this._insertAfter(n, e, i), this._addToMoves(n, i), n
                }
                _moveAfter(n, e, i) {
                    return this._unlink(n), this._insertAfter(n, e, i), this._addToMoves(n, i), n
                }
                _addAfter(n, e, i) {
                    return this._insertAfter(n, e, i), this._additionsTail = null === this._additionsTail ? this._additionsHead = n : this._additionsTail._nextAdded = n, n
                }
                _insertAfter(n, e, i) {
                    const s = null === e ? this._itHead : e._next;
                    return n._next = s, n._prev = e, null === s ? this._itTail = n : s._prev = n, null === e ? this._itHead = n : e._next = n, null === this._linkedRecords && (this._linkedRecords = new xP), this._linkedRecords.put(n), n.currentIndex = i, n
                }
                _remove(n) {
                    return this._addToRemovals(this._unlink(n))
                }
                _unlink(n) {
                    null !== this._linkedRecords && this._linkedRecords.remove(n);
                    const e = n._prev,
                        i = n._next;
                    return null === e ? this._itHead = i : e._next = i, null === i ? this._itTail = e : i._prev = e, n
                }
                _addToMoves(n, e) {
                    return n.previousIndex === e || (this._movesTail = null === this._movesTail ? this._movesHead = n : this._movesTail._nextMoved = n), n
                }
                _addToRemovals(n) {
                    return null === this._unlinkedRecords && (this._unlinkedRecords = new xP), this._unlinkedRecords.put(n), n.currentIndex = null, n._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = n, n._prevRemoved = null) : (n._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = n), n
                }
                _addIdentityChange(n, e) {
                    return n.item = e, this._identityChangesTail = null === this._identityChangesTail ? this._identityChangesHead = n : this._identityChangesTail._nextIdentityChange = n, n
                }
            }
            class WU {
                constructor(n, e) {
                    this.item = n, this.trackById = e, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null, this._nextIdentityChange = null
                }
            }
            class GU {
                constructor() {
                    this._head = null, this._tail = null
                }
                add(n) {
                    null === this._head ? (this._head = this._tail = n, n._nextDup = null, n._prevDup = null) : (this._tail._nextDup = n, n._prevDup = this._tail, n._nextDup = null, this._tail = n)
                }
                get(n, e) {
                    let i;
                    for (i = this._head; null !== i; i = i._nextDup)
                        if ((null === e || e <= i.currentIndex) && Object.is(i.trackById, n)) return i;
                    return null
                }
                remove(n) {
                    const e = n._prevDup,
                        i = n._nextDup;
                    return null === e ? this._head = i : e._nextDup = i, null === i ? this._tail = e : i._prevDup = e, null === this._head
                }
            }
            class xP {
                constructor() {
                    this.map = new Map
                }
                put(n) {
                    const e = n.trackById;
                    let i = this.map.get(e);
                    i || (i = new GU, this.map.set(e, i)), i.add(n)
                }
                get(n, e) {
                    const s = this.map.get(n);
                    return s ? s.get(n, e) : null
                }
                remove(n) {
                    const e = n.trackById;
                    return this.map.get(e).remove(n) && this.map.delete(e), n
                }
                get isEmpty() {
                    return 0 === this.map.size
                }
                clear() {
                    this.map.clear()
                }
            }

            function _P(t, n, e) {
                const i = t.previousIndex;
                if (null === i) return i;
                let s = 0;
                return e && i < e.length && (s = e[i]), i + n + s
            }
            class wP {
                constructor() {}
                supports(n) {
                    return n instanceof Map || ox(n)
                }
                create() {
                    return new XU
                }
            }
            class XU {
                constructor() {
                    this._records = new Map, this._mapHead = null, this._appendAfter = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null
                }
                get isDirty() {
                    return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead
                }
                forEachItem(n) {
                    let e;
                    for (e = this._mapHead; null !== e; e = e._next) n(e)
                }
                forEachPreviousItem(n) {
                    let e;
                    for (e = this._previousMapHead; null !== e; e = e._nextPrevious) n(e)
                }
                forEachChangedItem(n) {
                    let e;
                    for (e = this._changesHead; null !== e; e = e._nextChanged) n(e)
                }
                forEachAddedItem(n) {
                    let e;
                    for (e = this._additionsHead; null !== e; e = e._nextAdded) n(e)
                }
                forEachRemovedItem(n) {
                    let e;
                    for (e = this._removalsHead; null !== e; e = e._nextRemoved) n(e)
                }
                diff(n) {
                    if (n) {
                        if (!(n instanceof Map || ox(n))) throw new ke(900, !1)
                    } else n = new Map;
                    return this.check(n) ? this : null
                }
                onDestroy() {}
                check(n) {
                    this._reset();
                    let e = this._mapHead;
                    if (this._appendAfter = null, this._forEach(n, (i, s) => {
                            if (e && e.key === s) this._maybeAddToChanges(e, i), this._appendAfter = e, e = e._next;
                            else {
                                const r = this._getOrCreateRecordForKey(s, i);
                                e = this._insertBeforeOrAppend(e, r)
                            }
                        }), e) {
                        e._prev && (e._prev._next = null), this._removalsHead = e;
                        for (let i = e; null !== i; i = i._nextRemoved) i === this._mapHead && (this._mapHead = null), this._records.delete(i.key), i._nextRemoved = i._next, i.previousValue = i.currentValue, i.currentValue = null, i._prev = null, i._next = null
                    }
                    return this._changesTail && (this._changesTail._nextChanged = null), this._additionsTail && (this._additionsTail._nextAdded = null), this.isDirty
                }
                _insertBeforeOrAppend(n, e) {
                    if (n) {
                        const i = n._prev;
                        return e._next = n, e._prev = i, n._prev = e, i && (i._next = e), n === this._mapHead && (this._mapHead = e), this._appendAfter = n, n
                    }
                    return this._appendAfter ? (this._appendAfter._next = e, e._prev = this._appendAfter) : this._mapHead = e, this._appendAfter = e, null
                }
                _getOrCreateRecordForKey(n, e) {
                    if (this._records.has(n)) {
                        const s = this._records.get(n);
                        this._maybeAddToChanges(s, e);
                        const r = s._prev,
                            l = s._next;
                        return r && (r._next = l), l && (l._prev = r), s._next = null, s._prev = null, s
                    }
                    const i = new YU(n);
                    return this._records.set(n, i), i.currentValue = e, this._addToAdditions(i), i
                }
                _reset() {
                    if (this.isDirty) {
                        let n;
                        for (this._previousMapHead = this._mapHead, n = this._previousMapHead; null !== n; n = n._next) n._nextPrevious = n._next;
                        for (n = this._changesHead; null !== n; n = n._nextChanged) n.previousValue = n.currentValue;
                        for (n = this._additionsHead; null != n; n = n._nextAdded) n.previousValue = n.currentValue;
                        this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = null
                    }
                }
                _maybeAddToChanges(n, e) {
                    Object.is(e, n.currentValue) || (n.previousValue = n.currentValue, n.currentValue = e, this._addToChanges(n))
                }
                _addToAdditions(n) {
                    null === this._additionsHead ? this._additionsHead = this._additionsTail = n : (this._additionsTail._nextAdded = n, this._additionsTail = n)
                }
                _addToChanges(n) {
                    null === this._changesHead ? this._changesHead = this._changesTail = n : (this._changesTail._nextChanged = n, this._changesTail = n)
                }
                _forEach(n, e) {
                    n instanceof Map ? n.forEach(e) : Object.keys(n).forEach(i => e(n[i], i))
                }
            }
            class YU {
                constructor(n) {
                    this.key = n, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._prev = null, this._nextAdded = null, this._nextRemoved = null, this._nextChanged = null
                }
            }

            function CP() {
                return new vm([new bP])
            }
            let vm = (() => {
                class t {
                    static# e = this.\u0275prov = Et({
                        token: t,
                        providedIn: "root",
                        factory: CP
                    });
                    constructor(e) {
                        this.factories = e
                    }
                    static create(e, i) {
                        if (null != i) {
                            const s = i.factories.slice();
                            e = e.concat(s)
                        }
                        return new t(e)
                    }
                    static extend(e) {
                        return {
                            provide: t,
                            useFactory: i => t.create(e, i || CP()),
                            deps: [
                                [t, new Ch, new Sc]
                            ]
                        }
                    }
                    find(e) {
                        const i = this.factories.find(s => s.supports(e));
                        if (null != i) return i;
                        throw new ke(901, !1)
                    }
                }
                return t
            })();

            function SP() {
                return new cd([new wP])
            }
            let cd = (() => {
                class t {
                    static# e = this.\u0275prov = Et({
                        token: t,
                        providedIn: "root",
                        factory: SP
                    });
                    constructor(e) {
                        this.factories = e
                    }
                    static create(e, i) {
                        if (i) {
                            const s = i.factories.slice();
                            e = e.concat(s)
                        }
                        return new t(e)
                    }
                    static extend(e) {
                        return {
                            provide: t,
                            useFactory: i => t.create(e, i || SP()),
                            deps: [
                                [t, new Ch, new Sc]
                            ]
                        }
                    }
                    find(e) {
                        const i = this.factories.find(s => s.supports(e));
                        if (i) return i;
                        throw new ke(901, !1)
                    }
                }
                return t
            })();
            const KU = oP(null, "core", []);
            let QU = (() => {
                class t {
                    constructor(e) {}
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(So))
                    };
                    static# t = this.\u0275mod = jn({
                        type: t
                    });
                    static# n = this.\u0275inj = zn({})
                }
                return t
            })();

            function ud(t) {
                return "boolean" == typeof t ? t : null != t && "false" !== t
            }
            let i_ = null;

            function Yo() {
                return i_
            }
            class h7 {}
            const fs = new zt("DocumentToken");
            let s_ = (() => {
                class t {
                    historyGo(e) {
                        throw new Error("Not implemented")
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: function() {
                            return Xt(p7)
                        },
                        providedIn: "platform"
                    })
                }
                return t
            })();
            const f7 = new zt("Location Initialized");
            let p7 = (() => {
                class t extends s_ {
                    constructor() {
                        super(), this._doc = Xt(fs), this._location = window.location, this._history = window.history
                    }
                    getBaseHrefFromDOM() {
                        return Yo().getBaseHref(this._doc)
                    }
                    onPopState(e) {
                        const i = Yo().getGlobalEventTarget(this._doc, "window");
                        return i.addEventListener("popstate", e, !1), () => i.removeEventListener("popstate", e)
                    }
                    onHashChange(e) {
                        const i = Yo().getGlobalEventTarget(this._doc, "window");
                        return i.addEventListener("hashchange", e, !1), () => i.removeEventListener("hashchange", e)
                    }
                    get href() {
                        return this._location.href
                    }
                    get protocol() {
                        return this._location.protocol
                    }
                    get hostname() {
                        return this._location.hostname
                    }
                    get port() {
                        return this._location.port
                    }
                    get pathname() {
                        return this._location.pathname
                    }
                    get search() {
                        return this._location.search
                    }
                    get hash() {
                        return this._location.hash
                    }
                    set pathname(e) {
                        this._location.pathname = e
                    }
                    pushState(e, i, s) {
                        this._history.pushState(e, i, s)
                    }
                    replaceState(e, i, s) {
                        this._history.replaceState(e, i, s)
                    }
                    forward() {
                        this._history.forward()
                    }
                    back() {
                        this._history.back()
                    }
                    historyGo(e = 0) {
                        this._history.go(e)
                    }
                    getState() {
                        return this._history.state
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: function() {
                            return new t
                        },
                        providedIn: "platform"
                    })
                }
                return t
            })();

            function r_(t, n) {
                if (0 == t.length) return n;
                if (0 == n.length) return t;
                let e = 0;
                return t.endsWith("/") && e++, n.startsWith("/") && e++, 2 == e ? t + n.substring(1) : 1 == e ? t + n : t + "/" + n
            }

            function IP(t) {
                const n = t.match(/#|\?|$/),
                    e = n && n.index || t.length;
                return t.slice(0, e - ("/" === t[e - 1] ? 1 : 0)) + t.slice(e)
            }

            function qo(t) {
                return t && "?" !== t[0] ? "?" + t : t
            }
            let Lc = (() => {
                class t {
                    historyGo(e) {
                        throw new Error("Not implemented")
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: function() {
                            return Xt(FP)
                        },
                        providedIn: "root"
                    })
                }
                return t
            })();
            const LP = new zt("appBaseHref");
            let FP = (() => {
                    class t extends Lc {
                        constructor(e, i) {
                            super(), this._platformLocation = e, this._removeListenerFns = [], this._baseHref = i ? ? this._platformLocation.getBaseHrefFromDOM() ? ? Xt(fs).location ? .origin ? ? ""
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length;) this._removeListenerFns.pop()()
                        }
                        onPopState(e) {
                            this._removeListenerFns.push(this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e))
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        prepareExternalUrl(e) {
                            return r_(this._baseHref, e)
                        }
                        path(e = !1) {
                            const i = this._platformLocation.pathname + qo(this._platformLocation.search),
                                s = this._platformLocation.hash;
                            return s && e ? `${i}${s}` : i
                        }
                        pushState(e, i, s, r) {
                            const l = this.prepareExternalUrl(s + qo(r));
                            this._platformLocation.pushState(e, i, l)
                        }
                        replaceState(e, i, s, r) {
                            const l = this.prepareExternalUrl(s + qo(r));
                            this._platformLocation.replaceState(e, i, l)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                        getState() {
                            return this._platformLocation.getState()
                        }
                        historyGo(e = 0) {
                            this._platformLocation.historyGo ? .(e)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)(vt(s_), vt(LP, 8))
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        })
                    }
                    return t
                })(),
                g7 = (() => {
                    class t extends Lc {
                        constructor(e, i) {
                            super(), this._platformLocation = e, this._baseHref = "", this._removeListenerFns = [], null != i && (this._baseHref = i)
                        }
                        ngOnDestroy() {
                            for (; this._removeListenerFns.length;) this._removeListenerFns.pop()()
                        }
                        onPopState(e) {
                            this._removeListenerFns.push(this._platformLocation.onPopState(e), this._platformLocation.onHashChange(e))
                        }
                        getBaseHref() {
                            return this._baseHref
                        }
                        path(e = !1) {
                            let i = this._platformLocation.hash;
                            return null == i && (i = "#"), i.length > 0 ? i.substring(1) : i
                        }
                        prepareExternalUrl(e) {
                            const i = r_(this._baseHref, e);
                            return i.length > 0 ? "#" + i : i
                        }
                        pushState(e, i, s, r) {
                            let l = this.prepareExternalUrl(s + qo(r));
                            0 == l.length && (l = this._platformLocation.pathname), this._platformLocation.pushState(e, i, l)
                        }
                        replaceState(e, i, s, r) {
                            let l = this.prepareExternalUrl(s + qo(r));
                            0 == l.length && (l = this._platformLocation.pathname), this._platformLocation.replaceState(e, i, l)
                        }
                        forward() {
                            this._platformLocation.forward()
                        }
                        back() {
                            this._platformLocation.back()
                        }
                        getState() {
                            return this._platformLocation.getState()
                        }
                        historyGo(e = 0) {
                            this._platformLocation.historyGo ? .(e)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)(vt(s_), vt(LP, 8))
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                bm = (() => {
                    class t {
                        constructor(e) {
                            this._subject = new Pt, this._urlChangeListeners = [], this._urlChangeSubscription = null, this._locationStrategy = e;
                            const i = this._locationStrategy.getBaseHref();
                            this._basePath = function y7(t) {
                                if (new RegExp("^(https?:)?//").test(t)) {
                                    const [, e] = t.split(/\/\/[^\/]+/);
                                    return e
                                }
                                return t
                            }(IP(NP(i))), this._locationStrategy.onPopState(s => {
                                this._subject.emit({
                                    url: this.path(!0),
                                    pop: !0,
                                    state: s.state,
                                    type: s.type
                                })
                            })
                        }
                        ngOnDestroy() {
                            this._urlChangeSubscription ? .unsubscribe(), this._urlChangeListeners = []
                        }
                        path(e = !1) {
                            return this.normalize(this._locationStrategy.path(e))
                        }
                        getState() {
                            return this._locationStrategy.getState()
                        }
                        isCurrentPathEqualTo(e, i = "") {
                            return this.path() == this.normalize(e + qo(i))
                        }
                        normalize(e) {
                            return t.stripTrailingSlash(function v7(t, n) {
                                if (!t || !n.startsWith(t)) return n;
                                const e = n.substring(t.length);
                                return "" === e || ["/", ";", "?", "#"].includes(e[0]) ? e : n
                            }(this._basePath, NP(e)))
                        }
                        prepareExternalUrl(e) {
                            return e && "/" !== e[0] && (e = "/" + e), this._locationStrategy.prepareExternalUrl(e)
                        }
                        go(e, i = "", s = null) {
                            this._locationStrategy.pushState(s, "", e, i), this._notifyUrlChangeListeners(this.prepareExternalUrl(e + qo(i)), s)
                        }
                        replaceState(e, i = "", s = null) {
                            this._locationStrategy.replaceState(s, "", e, i), this._notifyUrlChangeListeners(this.prepareExternalUrl(e + qo(i)), s)
                        }
                        forward() {
                            this._locationStrategy.forward()
                        }
                        back() {
                            this._locationStrategy.back()
                        }
                        historyGo(e = 0) {
                            this._locationStrategy.historyGo ? .(e)
                        }
                        onUrlChange(e) {
                            return this._urlChangeListeners.push(e), this._urlChangeSubscription || (this._urlChangeSubscription = this.subscribe(i => {
                                this._notifyUrlChangeListeners(i.url, i.state)
                            })), () => {
                                const i = this._urlChangeListeners.indexOf(e);
                                this._urlChangeListeners.splice(i, 1), 0 === this._urlChangeListeners.length && (this._urlChangeSubscription ? .unsubscribe(), this._urlChangeSubscription = null)
                            }
                        }
                        _notifyUrlChangeListeners(e = "", i) {
                            this._urlChangeListeners.forEach(s => s(e, i))
                        }
                        subscribe(e, i, s) {
                            return this._subject.subscribe({
                                next: e,
                                error: i,
                                complete: s
                            })
                        }
                        static# e = this.normalizeQueryParams = qo;
                        static# t = this.joinWithSlash = r_;
                        static# n = this.stripTrailingSlash = IP;
                        static# i = this.\u0275fac = function(i) {
                            return new(i || t)(vt(Lc))
                        };
                        static# s = this.\u0275prov = Et({
                            token: t,
                            factory: function() {
                                return function m7() {
                                    return new bm(vt(Lc))
                                }()
                            },
                            providedIn: "root"
                        })
                    }
                    return t
                })();

            function NP(t) {
                return t.replace(/\/index.html$/, "")
            }
            var Pr = function(t) {
                    return t[t.Format = 0] = "Format", t[t.Standalone = 1] = "Standalone", t
                }(Pr || {}),
                Yi = function(t) {
                    return t[t.Narrow = 0] = "Narrow", t[t.Abbreviated = 1] = "Abbreviated", t[t.Wide = 2] = "Wide", t[t.Short = 3] = "Short", t
                }(Yi || {}),
                ua = function(t) {
                    return t[t.Short = 0] = "Short", t[t.Medium = 1] = "Medium", t[t.Long = 2] = "Long", t[t.Full = 3] = "Full", t
                }(ua || {}),
                Cs = function(t) {
                    return t[t.Decimal = 0] = "Decimal", t[t.Group = 1] = "Group", t[t.List = 2] = "List", t[t.PercentSign = 3] = "PercentSign", t[t.PlusSign = 4] = "PlusSign", t[t.MinusSign = 5] = "MinusSign", t[t.Exponential = 6] = "Exponential", t[t.SuperscriptingExponent = 7] = "SuperscriptingExponent", t[t.PerMille = 8] = "PerMille", t[t.Infinity = 9] = "Infinity", t[t.NaN = 10] = "NaN", t[t.TimeSeparator = 11] = "TimeSeparator", t[t.CurrencyDecimal = 12] = "CurrencyDecimal", t[t.CurrencyGroup = 13] = "CurrencyGroup", t
                }(Cs || {});

            function _m(t, n) {
                return Pa(Ar(t)[Ki.DateFormat], n)
            }

            function wm(t, n) {
                return Pa(Ar(t)[Ki.TimeFormat], n)
            }

            function Cm(t, n) {
                return Pa(Ar(t)[Ki.DateTimeFormat], n)
            }

            function Ma(t, n) {
                const e = Ar(t),
                    i = e[Ki.NumberSymbols][n];
                if (typeof i > "u") {
                    if (n === Cs.CurrencyDecimal) return e[Ki.NumberSymbols][Cs.Decimal];
                    if (n === Cs.CurrencyGroup) return e[Ki.NumberSymbols][Cs.Group]
                }
                return i
            }

            function BP(t) {
                if (!t[Ki.ExtraData]) throw new Error(`Missing extra locale data for the locale "${t[Ki.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)
            }

            function Pa(t, n) {
                for (let e = n; e > -1; e--)
                    if (typeof t[e] < "u") return t[e];
                throw new Error("Locale data API: locale data undefined")
            }

            function o_(t) {
                const [n, e] = t.split(":");
                return {
                    hours: +n,
                    minutes: +e
                }
            }
            const O7 = /^(\d{4,})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
                sf = {},
                I7 = /((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
            var Zo = function(t) {
                    return t[t.Short = 0] = "Short", t[t.ShortGMT = 1] = "ShortGMT", t[t.Long = 2] = "Long", t[t.Extended = 3] = "Extended", t
                }(Zo || {}),
                Di = function(t) {
                    return t[t.FullYear = 0] = "FullYear", t[t.Month = 1] = "Month", t[t.Date = 2] = "Date", t[t.Hours = 3] = "Hours", t[t.Minutes = 4] = "Minutes", t[t.Seconds = 5] = "Seconds", t[t.FractionalSeconds = 6] = "FractionalSeconds", t[t.Day = 7] = "Day", t
                }(Di || {}),
                Ai = function(t) {
                    return t[t.DayPeriods = 0] = "DayPeriods", t[t.Days = 1] = "Days", t[t.Months = 2] = "Months", t[t.Eras = 3] = "Eras", t
                }(Ai || {});

            function L7(t, n, e, i) {
                let s = function $7(t) {
                    if (zP(t)) return t;
                    if ("number" == typeof t && !isNaN(t)) return new Date(t);
                    if ("string" == typeof t) {
                        if (t = t.trim(), /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t)) {
                            const [s, r = 1, l = 1] = t.split("-").map(u => +u);
                            return Sm(s, r - 1, l)
                        }
                        const e = parseFloat(t);
                        if (!isNaN(t - e)) return new Date(e);
                        let i;
                        if (i = t.match(O7)) return function U7(t) {
                            const n = new Date(0);
                            let e = 0,
                                i = 0;
                            const s = t[8] ? n.setUTCFullYear : n.setFullYear,
                                r = t[8] ? n.setUTCHours : n.setHours;
                            t[9] && (e = Number(t[9] + t[10]), i = Number(t[9] + t[11])), s.call(n, Number(t[1]), Number(t[2]) - 1, Number(t[3]));
                            const l = Number(t[4] || 0) - e,
                                u = Number(t[5] || 0) - i,
                                h = Number(t[6] || 0),
                                v = Math.floor(1e3 * parseFloat("0." + (t[7] || 0)));
                            return r.call(n, l, u, h, v), n
                        }(i)
                    }
                    const n = new Date(t);
                    if (!zP(n)) throw new Error(`Unable to convert "${t}" into a date`);
                    return n
                }(t);
                n = Ko(e, n) || n;
                let u, l = [];
                for (; n;) {
                    if (u = I7.exec(n), !u) {
                        l.push(n);
                        break
                    } {
                        l = l.concat(u.slice(1));
                        const _ = l.pop();
                        if (!_) break;
                        n = _
                    }
                }
                let h = s.getTimezoneOffset();
                i && (h = HP(i, h), s = function j7(t, n, e) {
                    const i = e ? -1 : 1,
                        s = t.getTimezoneOffset();
                    return function z7(t, n) {
                        return (t = new Date(t.getTime())).setMinutes(t.getMinutes() + n), t
                    }(t, i * (HP(n, s) - s))
                }(s, i, !0));
                let v = "";
                return l.forEach(_ => {
                    const C = function H7(t) {
                        if (c_[t]) return c_[t];
                        let n;
                        switch (t) {
                            case "G":
                            case "GG":
                            case "GGG":
                                n = Qi(Ai.Eras, Yi.Abbreviated);
                                break;
                            case "GGGG":
                                n = Qi(Ai.Eras, Yi.Wide);
                                break;
                            case "GGGGG":
                                n = Qi(Ai.Eras, Yi.Narrow);
                                break;
                            case "y":
                                n = Ds(Di.FullYear, 1, 0, !1, !0);
                                break;
                            case "yy":
                                n = Ds(Di.FullYear, 2, 0, !0, !0);
                                break;
                            case "yyy":
                                n = Ds(Di.FullYear, 3, 0, !1, !0);
                                break;
                            case "yyyy":
                                n = Ds(Di.FullYear, 4, 0, !1, !0);
                                break;
                            case "Y":
                                n = km(1);
                                break;
                            case "YY":
                                n = km(2, !0);
                                break;
                            case "YYY":
                                n = km(3);
                                break;
                            case "YYYY":
                                n = km(4);
                                break;
                            case "M":
                            case "L":
                                n = Ds(Di.Month, 1, 1);
                                break;
                            case "MM":
                            case "LL":
                                n = Ds(Di.Month, 2, 1);
                                break;
                            case "MMM":
                                n = Qi(Ai.Months, Yi.Abbreviated);
                                break;
                            case "MMMM":
                                n = Qi(Ai.Months, Yi.Wide);
                                break;
                            case "MMMMM":
                                n = Qi(Ai.Months, Yi.Narrow);
                                break;
                            case "LLL":
                                n = Qi(Ai.Months, Yi.Abbreviated, Pr.Standalone);
                                break;
                            case "LLLL":
                                n = Qi(Ai.Months, Yi.Wide, Pr.Standalone);
                                break;
                            case "LLLLL":
                                n = Qi(Ai.Months, Yi.Narrow, Pr.Standalone);
                                break;
                            case "w":
                                n = l_(1);
                                break;
                            case "ww":
                                n = l_(2);
                                break;
                            case "W":
                                n = l_(1, !0);
                                break;
                            case "d":
                                n = Ds(Di.Date, 1);
                                break;
                            case "dd":
                                n = Ds(Di.Date, 2);
                                break;
                            case "c":
                            case "cc":
                                n = Ds(Di.Day, 1);
                                break;
                            case "ccc":
                                n = Qi(Ai.Days, Yi.Abbreviated, Pr.Standalone);
                                break;
                            case "cccc":
                                n = Qi(Ai.Days, Yi.Wide, Pr.Standalone);
                                break;
                            case "ccccc":
                                n = Qi(Ai.Days, Yi.Narrow, Pr.Standalone);
                                break;
                            case "cccccc":
                                n = Qi(Ai.Days, Yi.Short, Pr.Standalone);
                                break;
                            case "E":
                            case "EE":
                            case "EEE":
                                n = Qi(Ai.Days, Yi.Abbreviated);
                                break;
                            case "EEEE":
                                n = Qi(Ai.Days, Yi.Wide);
                                break;
                            case "EEEEE":
                                n = Qi(Ai.Days, Yi.Narrow);
                                break;
                            case "EEEEEE":
                                n = Qi(Ai.Days, Yi.Short);
                                break;
                            case "a":
                            case "aa":
                            case "aaa":
                                n = Qi(Ai.DayPeriods, Yi.Abbreviated);
                                break;
                            case "aaaa":
                                n = Qi(Ai.DayPeriods, Yi.Wide);
                                break;
                            case "aaaaa":
                                n = Qi(Ai.DayPeriods, Yi.Narrow);
                                break;
                            case "b":
                            case "bb":
                            case "bbb":
                                n = Qi(Ai.DayPeriods, Yi.Abbreviated, Pr.Standalone, !0);
                                break;
                            case "bbbb":
                                n = Qi(Ai.DayPeriods, Yi.Wide, Pr.Standalone, !0);
                                break;
                            case "bbbbb":
                                n = Qi(Ai.DayPeriods, Yi.Narrow, Pr.Standalone, !0);
                                break;
                            case "B":
                            case "BB":
                            case "BBB":
                                n = Qi(Ai.DayPeriods, Yi.Abbreviated, Pr.Format, !0);
                                break;
                            case "BBBB":
                                n = Qi(Ai.DayPeriods, Yi.Wide, Pr.Format, !0);
                                break;
                            case "BBBBB":
                                n = Qi(Ai.DayPeriods, Yi.Narrow, Pr.Format, !0);
                                break;
                            case "h":
                                n = Ds(Di.Hours, 1, -12);
                                break;
                            case "hh":
                                n = Ds(Di.Hours, 2, -12);
                                break;
                            case "H":
                                n = Ds(Di.Hours, 1);
                                break;
                            case "HH":
                                n = Ds(Di.Hours, 2);
                                break;
                            case "m":
                                n = Ds(Di.Minutes, 1);
                                break;
                            case "mm":
                                n = Ds(Di.Minutes, 2);
                                break;
                            case "s":
                                n = Ds(Di.Seconds, 1);
                                break;
                            case "ss":
                                n = Ds(Di.Seconds, 2);
                                break;
                            case "S":
                                n = Ds(Di.FractionalSeconds, 1);
                                break;
                            case "SS":
                                n = Ds(Di.FractionalSeconds, 2);
                                break;
                            case "SSS":
                                n = Ds(Di.FractionalSeconds, 3);
                                break;
                            case "Z":
                            case "ZZ":
                            case "ZZZ":
                                n = Dm(Zo.Short);
                                break;
                            case "ZZZZZ":
                                n = Dm(Zo.Extended);
                                break;
                            case "O":
                            case "OO":
                            case "OOO":
                            case "z":
                            case "zz":
                            case "zzz":
                                n = Dm(Zo.ShortGMT);
                                break;
                            case "OOOO":
                            case "ZZZZ":
                            case "zzzz":
                                n = Dm(Zo.Long);
                                break;
                            default:
                                return null
                        }
                        return c_[t] = n, n
                    }(_);
                    v += C ? C(s, e, h) : "''" === _ ? "'" : _.replace(/(^'|'$)/g, "").replace(/''/g, "'")
                }), v
            }

            function Sm(t, n, e) {
                const i = new Date(0);
                return i.setFullYear(t, n, e), i.setHours(0, 0, 0), i
            }

            function Ko(t, n) {
                const e = function x7(t) {
                    return Ar(t)[Ki.LocaleId]
                }(t);
                if (sf[e] = sf[e] || {}, sf[e][n]) return sf[e][n];
                let i = "";
                switch (n) {
                    case "shortDate":
                        i = _m(t, ua.Short);
                        break;
                    case "mediumDate":
                        i = _m(t, ua.Medium);
                        break;
                    case "longDate":
                        i = _m(t, ua.Long);
                        break;
                    case "fullDate":
                        i = _m(t, ua.Full);
                        break;
                    case "shortTime":
                        i = wm(t, ua.Short);
                        break;
                    case "mediumTime":
                        i = wm(t, ua.Medium);
                        break;
                    case "longTime":
                        i = wm(t, ua.Long);
                        break;
                    case "fullTime":
                        i = wm(t, ua.Full);
                        break;
                    case "short":
                        const s = Ko(t, "shortTime"),
                            r = Ko(t, "shortDate");
                        i = Tm(Cm(t, ua.Short), [s, r]);
                        break;
                    case "medium":
                        const l = Ko(t, "mediumTime"),
                            u = Ko(t, "mediumDate");
                        i = Tm(Cm(t, ua.Medium), [l, u]);
                        break;
                    case "long":
                        const h = Ko(t, "longTime"),
                            v = Ko(t, "longDate");
                        i = Tm(Cm(t, ua.Long), [h, v]);
                        break;
                    case "full":
                        const _ = Ko(t, "fullTime"),
                            C = Ko(t, "fullDate");
                        i = Tm(Cm(t, ua.Full), [_, C])
                }
                return i && (sf[e][n] = i), i
            }

            function Tm(t, n) {
                return n && (t = t.replace(/\{([^}]+)}/g, function(e, i) {
                    return null != n && i in n ? n[i] : e
                })), t
            }

            function Ya(t, n, e = "-", i, s) {
                let r = "";
                (t < 0 || s && t <= 0) && (s ? t = 1 - t : (t = -t, r = e));
                let l = String(t);
                for (; l.length < n;) l = "0" + l;
                return i && (l = l.slice(l.length - n)), r + l
            }

            function Ds(t, n, e = 0, i = !1, s = !1) {
                return function(r, l) {
                    let u = function N7(t, n) {
                        switch (t) {
                            case Di.FullYear:
                                return n.getFullYear();
                            case Di.Month:
                                return n.getMonth();
                            case Di.Date:
                                return n.getDate();
                            case Di.Hours:
                                return n.getHours();
                            case Di.Minutes:
                                return n.getMinutes();
                            case Di.Seconds:
                                return n.getSeconds();
                            case Di.FractionalSeconds:
                                return n.getMilliseconds();
                            case Di.Day:
                                return n.getDay();
                            default:
                                throw new Error(`Unknown DateType value "${t}".`)
                        }
                    }(t, r);
                    if ((e > 0 || u > -e) && (u += e), t === Di.Hours) 0 === u && -12 === e && (u = 12);
                    else if (t === Di.FractionalSeconds) return function F7(t, n) {
                        return Ya(t, 3).substring(0, n)
                    }(u, n);
                    const h = Ma(l, Cs.MinusSign);
                    return Ya(u, n, h, i, s)
                }
            }

            function Qi(t, n, e = Pr.Format, i = !1) {
                return function(s, r) {
                    return function R7(t, n, e, i, s, r) {
                        switch (e) {
                            case Ai.Months:
                                return function C7(t, n, e) {
                                    const i = Ar(t),
                                        r = Pa([i[Ki.MonthsFormat], i[Ki.MonthsStandalone]], n);
                                    return Pa(r, e)
                                }(n, s, i)[t.getMonth()];
                            case Ai.Days:
                                return function w7(t, n, e) {
                                    const i = Ar(t),
                                        r = Pa([i[Ki.DaysFormat], i[Ki.DaysStandalone]], n);
                                    return Pa(r, e)
                                }(n, s, i)[t.getDay()];
                            case Ai.DayPeriods:
                                const l = t.getHours(),
                                    u = t.getMinutes();
                                if (r) {
                                    const v = function A7(t) {
                                            const n = Ar(t);
                                            return BP(n), (n[Ki.ExtraData][2] || []).map(i => "string" == typeof i ? o_(i) : [o_(i[0]), o_(i[1])])
                                        }(n),
                                        _ = function k7(t, n, e) {
                                            const i = Ar(t);
                                            BP(i);
                                            const r = Pa([i[Ki.ExtraData][0], i[Ki.ExtraData][1]], n) || [];
                                            return Pa(r, e) || []
                                        }(n, s, i),
                                        C = v.findIndex(M => {
                                            if (Array.isArray(M)) {
                                                const [L, j] = M, Z = l >= L.hours && u >= L.minutes, Q = l < j.hours || l === j.hours && u < j.minutes;
                                                if (L.hours < j.hours) {
                                                    if (Z && Q) return !0
                                                } else if (Z || Q) return !0
                                            } else if (M.hours === l && M.minutes === u) return !0;
                                            return !1
                                        });
                                    if (-1 !== C) return _[C]
                                }
                                return function _7(t, n, e) {
                                    const i = Ar(t),
                                        r = Pa([i[Ki.DayPeriodsFormat], i[Ki.DayPeriodsStandalone]], n);
                                    return Pa(r, e)
                                }(n, s, i)[l < 12 ? 0 : 1];
                            case Ai.Eras:
                                return function S7(t, n) {
                                    return Pa(Ar(t)[Ki.Eras], n)
                                }(n, i)[t.getFullYear() <= 0 ? 0 : 1];
                            default:
                                throw new Error(`unexpected translation type ${e}`)
                        }
                    }(s, r, t, n, e, i)
                }
            }

            function Dm(t) {
                return function(n, e, i) {
                    const s = -1 * i,
                        r = Ma(e, Cs.MinusSign),
                        l = s > 0 ? Math.floor(s / 60) : Math.ceil(s / 60);
                    switch (t) {
                        case Zo.Short:
                            return (s >= 0 ? "+" : "") + Ya(l, 2, r) + Ya(Math.abs(s % 60), 2, r);
                        case Zo.ShortGMT:
                            return "GMT" + (s >= 0 ? "+" : "") + Ya(l, 1, r);
                        case Zo.Long:
                            return "GMT" + (s >= 0 ? "+" : "") + Ya(l, 2, r) + ":" + Ya(Math.abs(s % 60), 2, r);
                        case Zo.Extended:
                            return 0 === i ? "Z" : (s >= 0 ? "+" : "") + Ya(l, 2, r) + ":" + Ya(Math.abs(s % 60), 2, r);
                        default:
                            throw new Error(`Unknown zone width "${t}"`)
                    }
                }
            }
            const B7 = 0,
                Am = 4;

            function VP(t) {
                return Sm(t.getFullYear(), t.getMonth(), t.getDate() + (Am - t.getDay()))
            }

            function l_(t, n = !1) {
                return function(e, i) {
                    let s;
                    if (n) {
                        const r = new Date(e.getFullYear(), e.getMonth(), 1).getDay() - 1,
                            l = e.getDate();
                        s = 1 + Math.floor((l + r) / 7)
                    } else {
                        const r = VP(e),
                            l = function V7(t) {
                                const n = Sm(t, B7, 1).getDay();
                                return Sm(t, 0, 1 + (n <= Am ? Am : Am + 7) - n)
                            }(r.getFullYear()),
                            u = r.getTime() - l.getTime();
                        s = 1 + Math.round(u / 6048e5)
                    }
                    return Ya(s, t, Ma(i, Cs.MinusSign))
                }
            }

            function km(t, n = !1) {
                return function(e, i) {
                    return Ya(VP(e).getFullYear(), t, Ma(i, Cs.MinusSign), n)
                }
            }
            const c_ = {};

            function HP(t, n) {
                t = t.replace(/:/g, "");
                const e = Date.parse("Jan 01, 1970 00:00:00 " + t) / 6e4;
                return isNaN(e) ? n : e
            }

            function zP(t) {
                return t instanceof Date && !isNaN(t.valueOf())
            }

            function WP(t, n) {
                n = encodeURIComponent(n);
                for (const e of t.split(";")) {
                    const i = e.indexOf("="),
                        [s, r] = -1 == i ? [e, ""] : [e.slice(0, i), e.slice(i + 1)];
                    if (s.trim() === n) return decodeURIComponent(r)
                }
                return null
            }
            const g_ = /\s+/,
                GP = [];
            let Qo = (() => {
                class t {
                    constructor(e, i, s, r) {
                        this._iterableDiffers = e, this._keyValueDiffers = i, this._ngEl = s, this._renderer = r, this.initialClasses = GP, this.stateMap = new Map
                    }
                    set klass(e) {
                        this.initialClasses = null != e ? e.trim().split(g_) : GP
                    }
                    set ngClass(e) {
                        this.rawClass = "string" == typeof e ? e.trim().split(g_) : e
                    }
                    ngDoCheck() {
                        for (const i of this.initialClasses) this._updateState(i, !0);
                        const e = this.rawClass;
                        if (Array.isArray(e) || e instanceof Set)
                            for (const i of e) this._updateState(i, !0);
                        else if (null != e)
                            for (const i of Object.keys(e)) this._updateState(i, !!e[i]);
                        this._applyStateDiff()
                    }
                    _updateState(e, i) {
                        const s = this.stateMap.get(e);
                        void 0 !== s ? (s.enabled !== i && (s.changed = !0, s.enabled = i), s.touched = !0) : this.stateMap.set(e, {
                            enabled: i,
                            changed: !0,
                            touched: !0
                        })
                    }
                    _applyStateDiff() {
                        for (const e of this.stateMap) {
                            const i = e[0],
                                s = e[1];
                            s.changed ? (this._toggleClass(i, s.enabled), s.changed = !1) : s.touched || (s.enabled && this._toggleClass(i, !1), this.stateMap.delete(i)), s.touched = !1
                        }
                    }
                    _toggleClass(e, i) {
                        (e = e.trim()).length > 0 && e.split(g_).forEach(s => {
                            i ? this._renderer.addClass(this._ngEl.nativeElement, s) : this._renderer.removeClass(this._ngEl.nativeElement, s)
                        })
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)($e(vm), $e(cd), $e(ii), $e(Ts))
                    };
                    static# t = this.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "ngClass", ""]
                        ],
                        inputs: {
                            klass: ["class", "klass"],
                            ngClass: "ngClass"
                        },
                        standalone: !0
                    })
                }
                return t
            })();
            class iW {
                constructor(n, e, i, s) {
                    this.$implicit = n, this.ngForOf = e, this.index = i, this.count = s
                }
                get first() {
                    return 0 === this.index
                }
                get last() {
                    return this.index === this.count - 1
                }
                get even() {
                    return this.index % 2 == 0
                }
                get odd() {
                    return !this.even
                }
            }
            let $s = (() => {
                class t {
                    set ngForOf(e) {
                        this._ngForOf = e, this._ngForOfDirty = !0
                    }
                    set ngForTrackBy(e) {
                        this._trackByFn = e
                    }
                    get ngForTrackBy() {
                        return this._trackByFn
                    }
                    constructor(e, i, s) {
                        this._viewContainer = e, this._template = i, this._differs = s, this._ngForOf = null, this._ngForOfDirty = !0, this._differ = null
                    }
                    set ngForTemplate(e) {
                        e && (this._template = e)
                    }
                    ngDoCheck() {
                        if (this._ngForOfDirty) {
                            this._ngForOfDirty = !1;
                            const e = this._ngForOf;
                            !this._differ && e && (this._differ = this._differs.find(e).create(this.ngForTrackBy))
                        }
                        if (this._differ) {
                            const e = this._differ.diff(this._ngForOf);
                            e && this._applyChanges(e)
                        }
                    }
                    _applyChanges(e) {
                        const i = this._viewContainer;
                        e.forEachOperation((s, r, l) => {
                            if (null == s.previousIndex) i.createEmbeddedView(this._template, new iW(s.item, this._ngForOf, -1, -1), null === l ? void 0 : l);
                            else if (null == l) i.remove(null === r ? void 0 : r);
                            else if (null !== r) {
                                const u = i.get(r);
                                i.move(u, l), YP(u, s)
                            }
                        });
                        for (let s = 0, r = i.length; s < r; s++) {
                            const u = i.get(s).context;
                            u.index = s, u.count = r, u.ngForOf = this._ngForOf
                        }
                        e.forEachIdentityChange(s => {
                            YP(i.get(s.currentIndex), s)
                        })
                    }
                    static ngTemplateContextGuard(e, i) {
                        return !0
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)($e(Wr), $e(Aa), $e(vm))
                    };
                    static# t = this.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "ngFor", "", "ngForOf", ""]
                        ],
                        inputs: {
                            ngForOf: "ngForOf",
                            ngForTrackBy: "ngForTrackBy",
                            ngForTemplate: "ngForTemplate"
                        },
                        standalone: !0
                    })
                }
                return t
            })();

            function YP(t, n) {
                t.context.$implicit = n.item
            }
            let Ji = (() => {
                class t {
                    constructor(e, i) {
                        this._viewContainer = e, this._context = new sW, this._thenTemplateRef = null, this._elseTemplateRef = null, this._thenViewRef = null, this._elseViewRef = null, this._thenTemplateRef = i
                    }
                    set ngIf(e) {
                        this._context.$implicit = this._context.ngIf = e, this._updateView()
                    }
                    set ngIfThen(e) {
                        qP("ngIfThen", e), this._thenTemplateRef = e, this._thenViewRef = null, this._updateView()
                    }
                    set ngIfElse(e) {
                        qP("ngIfElse", e), this._elseTemplateRef = e, this._elseViewRef = null, this._updateView()
                    }
                    _updateView() {
                        this._context.$implicit ? this._thenViewRef || (this._viewContainer.clear(), this._elseViewRef = null, this._thenTemplateRef && (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context))) : this._elseViewRef || (this._viewContainer.clear(), this._thenViewRef = null, this._elseTemplateRef && (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)))
                    }
                    static ngTemplateContextGuard(e, i) {
                        return !0
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)($e(Wr), $e(Aa))
                    };
                    static# t = this.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "ngIf", ""]
                        ],
                        inputs: {
                            ngIf: "ngIf",
                            ngIfThen: "ngIfThen",
                            ngIfElse: "ngIfElse"
                        },
                        standalone: !0
                    })
                }
                return t
            })();
            class sW {
                constructor() {
                    this.$implicit = null, this.ngIf = null
                }
            }

            function qP(t, n) {
                if (n && !n.createEmbeddedView) throw new Error(`${t} must be a TemplateRef, but received '${nt(n)}'.`)
            }
            let KP = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._ngEl = e, this._differs = i, this._renderer = s, this._ngStyle = null, this._differ = null
                        }
                        set ngStyle(e) {
                            this._ngStyle = e, !this._differ && e && (this._differ = this._differs.find(e).create())
                        }
                        ngDoCheck() {
                            if (this._differ) {
                                const e = this._differ.diff(this._ngStyle);
                                e && this._applyChanges(e)
                            }
                        }
                        _setStyle(e, i) {
                            const [s, r] = e.split("."), l = -1 === s.indexOf("-") ? void 0 : Ll.DashCase;
                            null != i ? this._renderer.setStyle(this._ngEl.nativeElement, s, r ? `${i}${r}` : i, l) : this._renderer.removeStyle(this._ngEl.nativeElement, s, l)
                        }
                        _applyChanges(e) {
                            e.forEachRemovedItem(i => this._setStyle(i.key, null)), e.forEachAddedItem(i => this._setStyle(i.key, i.currentValue)), e.forEachChangedItem(i => this._setStyle(i.key, i.currentValue))
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(ii), $e(cd), $e(Ts))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["", "ngStyle", ""]
                            ],
                            inputs: {
                                ngStyle: "ngStyle"
                            },
                            standalone: !0
                        })
                    }
                    return t
                })(),
                y_ = (() => {
                    class t {
                        constructor(e) {
                            this._viewContainerRef = e, this._viewRef = null, this.ngTemplateOutletContext = null, this.ngTemplateOutlet = null, this.ngTemplateOutletInjector = null
                        }
                        ngOnChanges(e) {
                            if (e.ngTemplateOutlet || e.ngTemplateOutletInjector) {
                                const i = this._viewContainerRef;
                                if (this._viewRef && i.remove(i.indexOf(this._viewRef)), this.ngTemplateOutlet) {
                                    const {
                                        ngTemplateOutlet: s,
                                        ngTemplateOutletContext: r,
                                        ngTemplateOutletInjector: l
                                    } = this;
                                    this._viewRef = i.createEmbeddedView(s, r, l ? {
                                        injector: l
                                    } : void 0)
                                } else this._viewRef = null
                            } else this._viewRef && e.ngTemplateOutletContext && this.ngTemplateOutletContext && (this._viewRef.context = this.ngTemplateOutletContext)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(Wr))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["", "ngTemplateOutlet", ""]
                            ],
                            inputs: {
                                ngTemplateOutletContext: "ngTemplateOutletContext",
                                ngTemplateOutlet: "ngTemplateOutlet",
                                ngTemplateOutletInjector: "ngTemplateOutletInjector"
                            },
                            standalone: !0,
                            features: [ni]
                        })
                    }
                    return t
                })();
            const yW = new zt("DATE_PIPE_DEFAULT_TIMEZONE"),
                bW = new zt("DATE_PIPE_DEFAULT_OPTIONS");
            let QP = (() => {
                    class t {
                        constructor(e, i, s) {
                            this.locale = e, this.defaultTimezone = i, this.defaultOptions = s
                        }
                        transform(e, i, s, r) {
                            if (null == e || "" === e || e != e) return null;
                            try {
                                return L7(e, i ? ? this.defaultOptions ? .dateFormat ? ? "mediumDate", r || this.locale, s ? ? this.defaultOptions ? .timezone ? ? this.defaultTimezone ? ? void 0)
                            } catch (l) {
                                throw function qa(t, n) {
                                    return new ke(2100, !1)
                                }()
                            }
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(Xo, 16), $e(yW, 24), $e(bW, 24))
                        };
                        static# t = this.\u0275pipe = Es({
                            name: "date",
                            type: t,
                            pure: !0,
                            standalone: !0
                        })
                    }
                    return t
                })(),
                Oa = (() => {
                    class t {
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275mod = jn({
                            type: t
                        });
                        static# n = this.\u0275inj = zn({})
                    }
                    return t
                })();
            const eO = "browser";

            function Ia(t) {
                return t === eO
            }

            function af(t) {
                return "server" === t
            }
            let OW = (() => {
                class t {
                    static# e = this.\u0275prov = Et({
                        token: t,
                        providedIn: "root",
                        factory: () => new IW(vt(fs), window)
                    })
                }
                return t
            })();
            class IW {
                constructor(n, e) {
                    this.document = n, this.window = e, this.offset = () => [0, 0]
                }
                setOffset(n) {
                    this.offset = Array.isArray(n) ? () => n : n
                }
                getScrollPosition() {
                    return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0]
                }
                scrollToPosition(n) {
                    this.supportsScrolling() && this.window.scrollTo(n[0], n[1])
                }
                scrollToAnchor(n) {
                    if (!this.supportsScrolling()) return;
                    const e = function LW(t, n) {
                        const e = t.getElementById(n) || t.getElementsByName(n)[0];
                        if (e) return e;
                        if ("function" == typeof t.createTreeWalker && t.body && "function" == typeof t.body.attachShadow) {
                            const i = t.createTreeWalker(t.body, NodeFilter.SHOW_ELEMENT);
                            let s = i.currentNode;
                            for (; s;) {
                                const r = s.shadowRoot;
                                if (r) {
                                    const l = r.getElementById(n) || r.querySelector(`[name="${n}"]`);
                                    if (l) return l
                                }
                                s = i.nextNode()
                            }
                        }
                        return null
                    }(this.document, n);
                    e && (this.scrollToElement(e), e.focus())
                }
                setHistoryScrollRestoration(n) {
                    this.supportsScrolling() && (this.window.history.scrollRestoration = n)
                }
                scrollToElement(n) {
                    const e = n.getBoundingClientRect(),
                        i = e.left + this.window.pageXOffset,
                        s = e.top + this.window.pageYOffset,
                        r = this.offset();
                    this.window.scrollTo(i - r[0], s - r[1])
                }
                supportsScrolling() {
                    try {
                        return !!this.window && !!this.window.scrollTo && "pageXOffset" in this.window
                    } catch {
                        return !1
                    }
                }
            }
            class tO {}
            class iG extends h7 {
                constructor() {
                    super(...arguments), this.supportsDOMEvents = !0
                }
            }
            class C_ extends iG {
                static makeCurrent() {
                    ! function d7(t) {
                        i_ || (i_ = t)
                    }(new C_)
                }
                onAndCancel(n, e, i) {
                    return n.addEventListener(e, i), () => {
                        n.removeEventListener(e, i)
                    }
                }
                dispatchEvent(n, e) {
                    n.dispatchEvent(e)
                }
                remove(n) {
                    n.parentNode && n.parentNode.removeChild(n)
                }
                createElement(n, e) {
                    return (e = e || this.getDefaultDocument()).createElement(n)
                }
                createHtmlDocument() {
                    return document.implementation.createHTMLDocument("fakeTitle")
                }
                getDefaultDocument() {
                    return document
                }
                isElementNode(n) {
                    return n.nodeType === Node.ELEMENT_NODE
                }
                isShadowRoot(n) {
                    return n instanceof DocumentFragment
                }
                getGlobalEventTarget(n, e) {
                    return "window" === e ? window : "document" === e ? n : "body" === e ? n.body : null
                }
                getBaseHref(n) {
                    const e = function sG() {
                        return cf = cf || document.querySelector("base"), cf ? cf.getAttribute("href") : null
                    }();
                    return null == e ? null : function rG(t) {
                        Om = Om || document.createElement("a"), Om.setAttribute("href", t);
                        const n = Om.pathname;
                        return "/" === n.charAt(0) ? n : `/${n}`
                    }(e)
                }
                resetBaseElement() {
                    cf = null
                }
                getUserAgent() {
                    return window.navigator.userAgent
                }
                getCookie(n) {
                    return WP(document.cookie, n)
                }
            }
            let Om, cf = null,
                oG = (() => {
                    class t {
                        build() {
                            return new XMLHttpRequest
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })();
            const S_ = new zt("EventManagerPlugins");
            let aO = (() => {
                class t {
                    constructor(e, i) {
                        this._zone = i, this._eventNameToPlugin = new Map, e.forEach(s => {
                            s.manager = this
                        }), this._plugins = e.slice().reverse()
                    }
                    addEventListener(e, i, s) {
                        return this._findPluginFor(i).addEventListener(e, i, s)
                    }
                    getZone() {
                        return this._zone
                    }
                    _findPluginFor(e) {
                        let i = this._eventNameToPlugin.get(e);
                        if (i) return i;
                        if (i = this._plugins.find(r => r.supports(e)), !i) throw new ke(5101, !1);
                        return this._eventNameToPlugin.set(e, i), i
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(S_), vt(si))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            class oO {
                constructor(n) {
                    this._doc = n
                }
            }
            const T_ = "ng-app-id";
            let lO = (() => {
                class t {
                    constructor(e, i, s, r = {}) {
                        this.doc = e, this.appId = i, this.nonce = s, this.platformId = r, this.styleRef = new Map, this.hostNodes = new Set, this.styleNodesInDOM = this.collectServerRenderedStyles(), this.platformIsServer = af(r), this.resetHostNodes()
                    }
                    addStyles(e) {
                        for (const i of e) 1 === this.changeUsageCount(i, 1) && this.onStyleAdded(i)
                    }
                    removeStyles(e) {
                        for (const i of e) this.changeUsageCount(i, -1) <= 0 && this.onStyleRemoved(i)
                    }
                    ngOnDestroy() {
                        const e = this.styleNodesInDOM;
                        e && (e.forEach(i => i.remove()), e.clear());
                        for (const i of this.getAllStyles()) this.onStyleRemoved(i);
                        this.resetHostNodes()
                    }
                    addHost(e) {
                        this.hostNodes.add(e);
                        for (const i of this.getAllStyles()) this.addStyleToHost(e, i)
                    }
                    removeHost(e) {
                        this.hostNodes.delete(e)
                    }
                    getAllStyles() {
                        return this.styleRef.keys()
                    }
                    onStyleAdded(e) {
                        for (const i of this.hostNodes) this.addStyleToHost(i, e)
                    }
                    onStyleRemoved(e) {
                        const i = this.styleRef;
                        i.get(e) ? .elements ? .forEach(s => s.remove()), i.delete(e)
                    }
                    collectServerRenderedStyles() {
                        const e = this.doc.head ? .querySelectorAll(`style[${T_}="${this.appId}"]`);
                        if (e ? .length) {
                            const i = new Map;
                            return e.forEach(s => {
                                null != s.textContent && i.set(s.textContent, s)
                            }), i
                        }
                        return null
                    }
                    changeUsageCount(e, i) {
                        const s = this.styleRef;
                        if (s.has(e)) {
                            const r = s.get(e);
                            return r.usage += i, r.usage
                        }
                        return s.set(e, {
                            usage: i,
                            elements: []
                        }), i
                    }
                    getStyleElement(e, i) {
                        const s = this.styleNodesInDOM,
                            r = s ? .get(i);
                        if (r ? .parentNode === e) return s.delete(i), r.removeAttribute(T_), r; {
                            const l = this.doc.createElement("style");
                            return this.nonce && l.setAttribute("nonce", this.nonce), l.textContent = i, this.platformIsServer && l.setAttribute(T_, this.appId), l
                        }
                    }
                    addStyleToHost(e, i) {
                        const s = this.getStyleElement(e, i);
                        e.appendChild(s);
                        const r = this.styleRef,
                            l = r.get(i) ? .elements;
                        l ? l.push(s) : r.set(i, {
                            elements: [s],
                            usage: 1
                        })
                    }
                    resetHostNodes() {
                        const e = this.hostNodes;
                        e.clear(), e.add(this.doc.head)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(fs), vt(Fg), vt(b2, 8), vt(ws))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            const D_ = {
                    svg: "http://www.w3.org/2000/svg",
                    xhtml: "http://www.w3.org/1999/xhtml",
                    xlink: "http://www.w3.org/1999/xlink",
                    xml: "http://www.w3.org/XML/1998/namespace",
                    xmlns: "http://www.w3.org/2000/xmlns/",
                    math: "http://www.w3.org/1998/MathML/"
                },
                A_ = /%COMP%/g,
                dG = new zt("RemoveStylesOnCompDestroy", {
                    providedIn: "root",
                    factory: () => !1
                });

            function uO(t, n) {
                return n.map(e => e.replace(A_, t))
            }
            let k_ = (() => {
                class t {
                    constructor(e, i, s, r, l, u, h, v = null) {
                        this.eventManager = e, this.sharedStylesHost = i, this.appId = s, this.removeStylesOnCompDestroy = r, this.doc = l, this.platformId = u, this.ngZone = h, this.nonce = v, this.rendererByCompId = new Map, this.platformIsServer = af(u), this.defaultRenderer = new E_(e, l, h, this.platformIsServer)
                    }
                    createRenderer(e, i) {
                        if (!e || !i) return this.defaultRenderer;
                        this.platformIsServer && i.encapsulation === _r.ShadowDom && (i = { ...i,
                            encapsulation: _r.Emulated
                        });
                        const s = this.getOrCreateRenderer(e, i);
                        return s instanceof hO ? s.applyToHost(e) : s instanceof M_ && s.applyStyles(), s
                    }
                    getOrCreateRenderer(e, i) {
                        const s = this.rendererByCompId;
                        let r = s.get(i.id);
                        if (!r) {
                            const l = this.doc,
                                u = this.ngZone,
                                h = this.eventManager,
                                v = this.sharedStylesHost,
                                _ = this.removeStylesOnCompDestroy,
                                C = this.platformIsServer;
                            switch (i.encapsulation) {
                                case _r.Emulated:
                                    r = new hO(h, v, i, this.appId, _, l, u, C);
                                    break;
                                case _r.ShadowDom:
                                    return new gG(h, v, e, i, l, u, this.nonce, C);
                                default:
                                    r = new M_(h, v, i, _, l, u, C)
                            }
                            s.set(i.id, r)
                        }
                        return r
                    }
                    ngOnDestroy() {
                        this.rendererByCompId.clear()
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(aO), vt(lO), vt(Fg), vt(dG), vt(fs), vt(ws), vt(si), vt(b2))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            class E_ {
                constructor(n, e, i, s) {
                    this.eventManager = n, this.doc = e, this.ngZone = i, this.platformIsServer = s, this.data = Object.create(null), this.destroyNode = null
                }
                destroy() {}
                createElement(n, e) {
                    return e ? this.doc.createElementNS(D_[e] || e, n) : this.doc.createElement(n)
                }
                createComment(n) {
                    return this.doc.createComment(n)
                }
                createText(n) {
                    return this.doc.createTextNode(n)
                }
                appendChild(n, e) {
                    (dO(n) ? n.content : n).appendChild(e)
                }
                insertBefore(n, e, i) {
                    n && (dO(n) ? n.content : n).insertBefore(e, i)
                }
                removeChild(n, e) {
                    n && n.removeChild(e)
                }
                selectRootElement(n, e) {
                    let i = "string" == typeof n ? this.doc.querySelector(n) : n;
                    if (!i) throw new ke(-5104, !1);
                    return e || (i.textContent = ""), i
                }
                parentNode(n) {
                    return n.parentNode
                }
                nextSibling(n) {
                    return n.nextSibling
                }
                setAttribute(n, e, i, s) {
                    if (s) {
                        e = s + ":" + e;
                        const r = D_[s];
                        r ? n.setAttributeNS(r, e, i) : n.setAttribute(e, i)
                    } else n.setAttribute(e, i)
                }
                removeAttribute(n, e, i) {
                    if (i) {
                        const s = D_[i];
                        s ? n.removeAttributeNS(s, e) : n.removeAttribute(`${i}:${e}`)
                    } else n.removeAttribute(e)
                }
                addClass(n, e) {
                    n.classList.add(e)
                }
                removeClass(n, e) {
                    n.classList.remove(e)
                }
                setStyle(n, e, i, s) {
                    s & (Ll.DashCase | Ll.Important) ? n.style.setProperty(e, i, s & Ll.Important ? "important" : "") : n.style[e] = i
                }
                removeStyle(n, e, i) {
                    i & Ll.DashCase ? n.style.removeProperty(e) : n.style[e] = ""
                }
                setProperty(n, e, i) {
                    n[e] = i
                }
                setValue(n, e) {
                    n.nodeValue = e
                }
                listen(n, e, i) {
                    if ("string" == typeof n && !(n = Yo().getGlobalEventTarget(this.doc, n))) throw new Error(`Unsupported event target ${n} for event ${e}`);
                    return this.eventManager.addEventListener(n, e, this.decoratePreventDefault(i))
                }
                decoratePreventDefault(n) {
                    return e => {
                        if ("__ngUnwrap__" === e) return n;
                        !1 === (this.platformIsServer ? this.ngZone.runGuarded(() => n(e)) : n(e)) && e.preventDefault()
                    }
                }
            }

            function dO(t) {
                return "TEMPLATE" === t.tagName && void 0 !== t.content
            }
            class gG extends E_ {
                constructor(n, e, i, s, r, l, u, h) {
                    super(n, r, l, h), this.sharedStylesHost = e, this.hostEl = i, this.shadowRoot = i.attachShadow({
                        mode: "open"
                    }), this.sharedStylesHost.addHost(this.shadowRoot);
                    const v = uO(s.id, s.styles);
                    for (const _ of v) {
                        const C = document.createElement("style");
                        u && C.setAttribute("nonce", u), C.textContent = _, this.shadowRoot.appendChild(C)
                    }
                }
                nodeOrShadowRoot(n) {
                    return n === this.hostEl ? this.shadowRoot : n
                }
                appendChild(n, e) {
                    return super.appendChild(this.nodeOrShadowRoot(n), e)
                }
                insertBefore(n, e, i) {
                    return super.insertBefore(this.nodeOrShadowRoot(n), e, i)
                }
                removeChild(n, e) {
                    return super.removeChild(this.nodeOrShadowRoot(n), e)
                }
                parentNode(n) {
                    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(n)))
                }
                destroy() {
                    this.sharedStylesHost.removeHost(this.shadowRoot)
                }
            }
            class M_ extends E_ {
                constructor(n, e, i, s, r, l, u, h) {
                    super(n, r, l, u), this.sharedStylesHost = e, this.removeStylesOnCompDestroy = s, this.styles = h ? uO(h, i.styles) : i.styles
                }
                applyStyles() {
                    this.sharedStylesHost.addStyles(this.styles)
                }
                destroy() {
                    this.removeStylesOnCompDestroy && this.sharedStylesHost.removeStyles(this.styles)
                }
            }
            class hO extends M_ {
                constructor(n, e, i, s, r, l, u, h) {
                    const v = s + "-" + i.id;
                    super(n, e, i, r, l, u, h, v), this.contentAttr = function hG(t) {
                        return "_ngcontent-%COMP%".replace(A_, t)
                    }(v), this.hostAttr = function fG(t) {
                        return "_nghost-%COMP%".replace(A_, t)
                    }(v)
                }
                applyToHost(n) {
                    this.applyStyles(), this.setAttribute(n, this.hostAttr, "")
                }
                createElement(n, e) {
                    const i = super.createElement(n, e);
                    return super.setAttribute(i, this.contentAttr, ""), i
                }
            }
            let mG = (() => {
                class t extends oO {
                    constructor(e) {
                        super(e)
                    }
                    supports(e) {
                        return !0
                    }
                    addEventListener(e, i, s) {
                        return e.addEventListener(i, s, !1), () => this.removeEventListener(e, i, s)
                    }
                    removeEventListener(e, i, s) {
                        return e.removeEventListener(i, s)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(fs))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            const fO = ["alt", "control", "meta", "shift"],
                vG = {
                    "\b": "Backspace",
                    "\t": "Tab",
                    "\x7f": "Delete",
                    "\x1b": "Escape",
                    Del: "Delete",
                    Esc: "Escape",
                    Left: "ArrowLeft",
                    Right: "ArrowRight",
                    Up: "ArrowUp",
                    Down: "ArrowDown",
                    Menu: "ContextMenu",
                    Scroll: "ScrollLock",
                    Win: "OS"
                },
                yG = {
                    alt: t => t.altKey,
                    control: t => t.ctrlKey,
                    meta: t => t.metaKey,
                    shift: t => t.shiftKey
                };
            let bG = (() => {
                class t extends oO {
                    constructor(e) {
                        super(e)
                    }
                    supports(e) {
                        return null != t.parseEventName(e)
                    }
                    addEventListener(e, i, s) {
                        const r = t.parseEventName(i),
                            l = t.eventCallback(r.fullKey, s, this.manager.getZone());
                        return this.manager.getZone().runOutsideAngular(() => Yo().onAndCancel(e, r.domEventName, l))
                    }
                    static parseEventName(e) {
                        const i = e.toLowerCase().split("."),
                            s = i.shift();
                        if (0 === i.length || "keydown" !== s && "keyup" !== s) return null;
                        const r = t._normalizeKey(i.pop());
                        let l = "",
                            u = i.indexOf("code");
                        if (u > -1 && (i.splice(u, 1), l = "code."), fO.forEach(v => {
                                const _ = i.indexOf(v);
                                _ > -1 && (i.splice(_, 1), l += v + ".")
                            }), l += r, 0 != i.length || 0 === r.length) return null;
                        const h = {};
                        return h.domEventName = s, h.fullKey = l, h
                    }
                    static matchEventFullKeyCode(e, i) {
                        let s = vG[e.key] || e.key,
                            r = "";
                        return i.indexOf("code.") > -1 && (s = e.code, r = "code."), !(null == s || !s) && (s = s.toLowerCase(), " " === s ? s = "space" : "." === s && (s = "dot"), fO.forEach(l => {
                            l !== s && (0, yG[l])(e) && (r += l + ".")
                        }), r += s, r === i)
                    }
                    static eventCallback(e, i, s) {
                        return r => {
                            t.matchEventFullKeyCode(r, e) && s.runGuarded(() => i(r))
                        }
                    }
                    static _normalizeKey(e) {
                        return "esc" === e ? "escape" : e
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(fs))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            const CG = oP(KU, "browser", [{
                    provide: ws,
                    useValue: eO
                }, {
                    provide: v2,
                    useValue: function xG() {
                        C_.makeCurrent()
                    },
                    multi: !0
                }, {
                    provide: fs,
                    useFactory: function wG() {
                        return function vV(t) {
                            yb = t
                        }(document), document
                    },
                    deps: []
                }]),
                SG = new zt(""),
                mO = [{
                    provide: fm,
                    useClass: class aG {
                        addToWindow(n) {
                            $i.getAngularTestability = (i, s = !0) => {
                                const r = n.findTestabilityInTree(i, s);
                                if (null == r) throw new ke(5103, !1);
                                return r
                            }, $i.getAllAngularTestabilities = () => n.getAllTestabilities(), $i.getAllAngularRootElements = () => n.getAllRootElements(), $i.frameworkStabilizers || ($i.frameworkStabilizers = []), $i.frameworkStabilizers.push(i => {
                                const s = $i.getAllAngularTestabilities();
                                let r = s.length,
                                    l = !1;
                                const u = function(h) {
                                    l = l || h, r--, 0 == r && i(l)
                                };
                                s.forEach(h => {
                                    h.whenStable(u)
                                })
                            })
                        }
                        findTestabilityInTree(n, e, i) {
                            return null == e ? null : n.getTestability(e) ? ? (i ? Yo().isShadowRoot(e) ? this.findTestabilityInTree(n, e.host, !0) : this.findTestabilityInTree(n, e.parentElement, !0) : null)
                        }
                    },
                    deps: []
                }, {
                    provide: nP,
                    useClass: Gx,
                    deps: [si, Xx, fm]
                }, {
                    provide: Gx,
                    useClass: Gx,
                    deps: [si, Xx, fm]
                }],
                vO = [{
                        provide: kb,
                        useValue: "root"
                    }, {
                        provide: vo,
                        useFactory: function _G() {
                            return new vo
                        },
                        deps: []
                    }, {
                        provide: S_,
                        useClass: mG,
                        multi: !0,
                        deps: [fs, si, ws]
                    }, {
                        provide: S_,
                        useClass: bG,
                        multi: !0,
                        deps: [fs]
                    }, k_, lO, aO, {
                        provide: Ac,
                        useExisting: k_
                    }, {
                        provide: tO,
                        useClass: oG,
                        deps: []
                    },
                    []
                ];
            let TG = (() => {
                    class t {
                        constructor(e) {}
                        static withServerTransition(e) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: Fg,
                                    useValue: e.appId
                                }]
                            }
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)(vt(SG, 12))
                        };
                        static# t = this.\u0275mod = jn({
                            type: t
                        });
                        static# n = this.\u0275inj = zn({
                            providers: [...vO, ...mO],
                            imports: [Oa, QU]
                        })
                    }
                    return t
                })(),
                yO = (() => {
                    class t {
                        constructor(e) {
                            this._doc = e, this._dom = Yo()
                        }
                        addTag(e, i = !1) {
                            return e ? this._getOrCreateElement(e, i) : null
                        }
                        addTags(e, i = !1) {
                            return e ? e.reduce((s, r) => (r && s.push(this._getOrCreateElement(r, i)), s), []) : []
                        }
                        getTag(e) {
                            return e && this._doc.querySelector(`meta[${e}]`) || null
                        }
                        getTags(e) {
                            if (!e) return [];
                            const i = this._doc.querySelectorAll(`meta[${e}]`);
                            return i ? [].slice.call(i) : []
                        }
                        updateTag(e, i) {
                            if (!e) return null;
                            i = i || this._parseSelector(e);
                            const s = this.getTag(i);
                            return s ? this._setMetaElementAttributes(e, s) : this._getOrCreateElement(e, !0)
                        }
                        removeTag(e) {
                            this.removeTagElement(this.getTag(e))
                        }
                        removeTagElement(e) {
                            e && this._dom.remove(e)
                        }
                        _getOrCreateElement(e, i = !1) {
                            if (!i) {
                                const l = this._parseSelector(e),
                                    u = this.getTags(l).filter(h => this._containsAttributes(e, h))[0];
                                if (void 0 !== u) return u
                            }
                            const s = this._dom.createElement("meta");
                            return this._setMetaElementAttributes(e, s), this._doc.getElementsByTagName("head")[0].appendChild(s), s
                        }
                        _setMetaElementAttributes(e, i) {
                            return Object.keys(e).forEach(s => i.setAttribute(this._getMetaKeyMap(s), e[s])), i
                        }
                        _parseSelector(e) {
                            const i = e.name ? "name" : "property";
                            return `${i}="${e[i]}"`
                        }
                        _containsAttributes(e, i) {
                            return Object.keys(e).every(s => i.getAttribute(this._getMetaKeyMap(s)) === e[s])
                        }
                        _getMetaKeyMap(e) {
                            return AG[e] || e
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)(vt(fs))
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: function(i) {
                                let s = null;
                                return s = i ? new i : function DG() {
                                    return new yO(vt(fs))
                                }(), s
                            },
                            providedIn: "root"
                        })
                    }
                    return t
                })();
            const AG = {
                httpEquiv: "http-equiv"
            };
            let P_ = (() => {
                class t {
                    constructor(e) {
                        this._doc = e
                    }
                    getTitle() {
                        return this._doc.title
                    }
                    setTitle(e) {
                        this._doc.title = e || ""
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(fs))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: function(i) {
                            let s = null;
                            return s = i ? new i : function kG() {
                                return new P_(vt(fs))
                            }(), s
                        },
                        providedIn: "root"
                    })
                }
                return t
            })();
            typeof window < "u" && window;
            class uf {}
            class IG {}
            const Jo = "*";

            function Im(t, n) {
                return {
                    type: 7,
                    name: t,
                    definitions: n,
                    options: {}
                }
            }

            function el(t, n = null) {
                return {
                    type: 4,
                    styles: n,
                    timings: t
                }
            }

            function wO(t, n = null) {
                return {
                    type: 2,
                    steps: t,
                    options: n
                }
            }

            function Us(t) {
                return {
                    type: 6,
                    styles: t,
                    offset: null
                }
            }

            function CO(t, n, e) {
                return {
                    type: 0,
                    name: t,
                    styles: n,
                    options: e
                }
            }

            function hd(t, n, e = null) {
                return {
                    type: 1,
                    expr: t,
                    animation: n,
                    options: e
                }
            }
            class df {
                constructor(n = 0, e = 0) {
                    this._onDoneFns = [], this._onStartFns = [], this._onDestroyFns = [], this._originalOnDoneFns = [], this._originalOnStartFns = [], this._started = !1, this._destroyed = !1, this._finished = !1, this._position = 0, this.parentPlayer = null, this.totalTime = n + e
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(n => n()), this._onDoneFns = [])
                }
                onStart(n) {
                    this._originalOnStartFns.push(n), this._onStartFns.push(n)
                }
                onDone(n) {
                    this._originalOnDoneFns.push(n), this._onDoneFns.push(n)
                }
                onDestroy(n) {
                    this._onDestroyFns.push(n)
                }
                hasStarted() {
                    return this._started
                }
                init() {}
                play() {
                    this.hasStarted() || (this._onStart(), this.triggerMicrotask()), this._started = !0
                }
                triggerMicrotask() {
                    queueMicrotask(() => this._onFinish())
                }
                _onStart() {
                    this._onStartFns.forEach(n => n()), this._onStartFns = []
                }
                pause() {}
                restart() {}
                finish() {
                    this._onFinish()
                }
                destroy() {
                    this._destroyed || (this._destroyed = !0, this.hasStarted() || this._onStart(), this.finish(), this._onDestroyFns.forEach(n => n()), this._onDestroyFns = [])
                }
                reset() {
                    this._started = !1, this._finished = !1, this._onStartFns = this._originalOnStartFns, this._onDoneFns = this._originalOnDoneFns
                }
                setPosition(n) {
                    this._position = this.totalTime ? n * this.totalTime : 1
                }
                getPosition() {
                    return this.totalTime ? this._position / this.totalTime : 1
                }
                triggerCallback(n) {
                    const e = "start" == n ? this._onStartFns : this._onDoneFns;
                    e.forEach(i => i()), e.length = 0
                }
            }
            class SO {
                constructor(n) {
                    this._onDoneFns = [], this._onStartFns = [], this._finished = !1, this._started = !1, this._destroyed = !1, this._onDestroyFns = [], this.parentPlayer = null, this.totalTime = 0, this.players = n;
                    let e = 0,
                        i = 0,
                        s = 0;
                    const r = this.players.length;
                    0 == r ? queueMicrotask(() => this._onFinish()) : this.players.forEach(l => {
                        l.onDone(() => {
                            ++e == r && this._onFinish()
                        }), l.onDestroy(() => {
                            ++i == r && this._onDestroy()
                        }), l.onStart(() => {
                            ++s == r && this._onStart()
                        })
                    }), this.totalTime = this.players.reduce((l, u) => Math.max(l, u.totalTime), 0)
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(n => n()), this._onDoneFns = [])
                }
                init() {
                    this.players.forEach(n => n.init())
                }
                onStart(n) {
                    this._onStartFns.push(n)
                }
                _onStart() {
                    this.hasStarted() || (this._started = !0, this._onStartFns.forEach(n => n()), this._onStartFns = [])
                }
                onDone(n) {
                    this._onDoneFns.push(n)
                }
                onDestroy(n) {
                    this._onDestroyFns.push(n)
                }
                hasStarted() {
                    return this._started
                }
                play() {
                    this.parentPlayer || this.init(), this._onStart(), this.players.forEach(n => n.play())
                }
                pause() {
                    this.players.forEach(n => n.pause())
                }
                restart() {
                    this.players.forEach(n => n.restart())
                }
                finish() {
                    this._onFinish(), this.players.forEach(n => n.finish())
                }
                destroy() {
                    this._onDestroy()
                }
                _onDestroy() {
                    this._destroyed || (this._destroyed = !0, this._onFinish(), this.players.forEach(n => n.destroy()), this._onDestroyFns.forEach(n => n()), this._onDestroyFns = [])
                }
                reset() {
                    this.players.forEach(n => n.reset()), this._destroyed = !1, this._finished = !1, this._started = !1
                }
                setPosition(n) {
                    const e = n * this.totalTime;
                    this.players.forEach(i => {
                        const s = i.totalTime ? Math.min(1, e / i.totalTime) : 1;
                        i.setPosition(s)
                    })
                }
                getPosition() {
                    const n = this.players.reduce((e, i) => null === e || i.totalTime > e.totalTime ? i : e, null);
                    return null != n ? n.getPosition() : 0
                }
                beforeDestroy() {
                    this.players.forEach(n => {
                        n.beforeDestroy && n.beforeDestroy()
                    })
                }
                triggerCallback(n) {
                    const e = "start" == n ? this._onStartFns : this._onDoneFns;
                    e.forEach(i => i()), e.length = 0
                }
            }

            function TO(t) {
                return new ke(3e3, !1)
            }

            function zl(t) {
                switch (t.length) {
                    case 0:
                        return new df;
                    case 1:
                        return t[0];
                    default:
                        return new SO(t)
                }
            }

            function DO(t, n, e = new Map, i = new Map) {
                const s = [],
                    r = [];
                let l = -1,
                    u = null;
                if (n.forEach(h => {
                        const v = h.get("offset"),
                            _ = v == l,
                            C = _ && u || new Map;
                        h.forEach((M, L) => {
                            let j = L,
                                Z = M;
                            if ("offset" !== L) switch (j = t.normalizePropertyName(j, s), Z) {
                                case "!":
                                    Z = e.get(L);
                                    break;
                                case Jo:
                                    Z = i.get(L);
                                    break;
                                default:
                                    Z = t.normalizeStyleValue(L, j, Z, s)
                            }
                            C.set(j, Z)
                        }), _ || r.push(C), u = C, l = v
                    }), s.length) throw function n9(t) {
                    return new ke(3502, !1)
                }();
                return r
            }

            function L_(t, n, e, i) {
                switch (n) {
                    case "start":
                        t.onStart(() => i(e && F_(e, "start", t)));
                        break;
                    case "done":
                        t.onDone(() => i(e && F_(e, "done", t)));
                        break;
                    case "destroy":
                        t.onDestroy(() => i(e && F_(e, "destroy", t)))
                }
            }

            function F_(t, n, e) {
                const r = N_(t.element, t.triggerName, t.fromState, t.toState, n || t.phaseName, e.totalTime ? ? t.totalTime, !!e.disabled),
                    l = t._data;
                return null != l && (r._data = l), r
            }

            function N_(t, n, e, i, s = "", r = 0, l) {
                return {
                    element: t,
                    triggerName: n,
                    fromState: e,
                    toState: i,
                    phaseName: s,
                    totalTime: r,
                    disabled: !!l
                }
            }

            function da(t, n, e) {
                let i = t.get(n);
                return i || t.set(n, i = e), i
            }

            function AO(t) {
                const n = t.indexOf(":");
                return [t.substring(1, n), t.slice(n + 1)]
            }
            const p9 = (() => typeof document > "u" ? null : document.documentElement)();

            function R_(t) {
                const n = t.parentNode || t.host || null;
                return n === p9 ? null : n
            }
            let Fc = null,
                kO = !1;

            function EO(t, n) {
                for (; n;) {
                    if (n === t) return !0;
                    n = R_(n)
                }
                return !1
            }

            function MO(t, n, e) {
                if (e) return Array.from(t.querySelectorAll(n));
                const i = t.querySelector(n);
                return i ? [i] : []
            }
            let PO = (() => {
                    class t {
                        validateStyleProperty(e) {
                            return function m9(t) {
                                Fc || (Fc = function v9() {
                                    return typeof document < "u" ? document.body : null
                                }() || {}, kO = !!Fc.style && "WebkitAppearance" in Fc.style);
                                let n = !0;
                                return Fc.style && ! function g9(t) {
                                    return "ebkit" == t.substring(1, 6)
                                }(t) && (n = t in Fc.style, !n && kO && (n = "Webkit" + t.charAt(0).toUpperCase() + t.slice(1) in Fc.style)), n
                            }(e)
                        }
                        matchesElement(e, i) {
                            return !1
                        }
                        containsElement(e, i) {
                            return EO(e, i)
                        }
                        getParentElement(e) {
                            return R_(e)
                        }
                        query(e, i, s) {
                            return MO(e, i, s)
                        }
                        computeStyle(e, i, s) {
                            return s || ""
                        }
                        animate(e, i, s, r, l, u = [], h) {
                            return new df(s, r)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                B_ = (() => {
                    class t {
                        static# e = this.NOOP = new PO
                    }
                    return t
                })();
            const y9 = 1e3,
                V_ = "ng-enter",
                Lm = "ng-leave",
                Fm = "ng-trigger",
                Nm = ".ng-trigger",
                IO = "ng-animating",
                H_ = ".ng-animating";

            function tl(t) {
                if ("number" == typeof t) return t;
                const n = t.match(/^(-?[\.\d]+)(m?s)/);
                return !n || n.length < 2 ? 0 : z_(parseFloat(n[1]), n[2])
            }

            function z_(t, n) {
                return "s" === n ? t * y9 : t
            }

            function Rm(t, n, e) {
                return t.hasOwnProperty("duration") ? t : function x9(t, n, e) {
                    let s, r = 0,
                        l = "";
                    if ("string" == typeof t) {
                        const u = t.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                        if (null === u) return n.push(TO()), {
                            duration: 0,
                            delay: 0,
                            easing: ""
                        };
                        s = z_(parseFloat(u[1]), u[2]);
                        const h = u[3];
                        null != h && (r = z_(parseFloat(h), u[4]));
                        const v = u[5];
                        v && (l = v)
                    } else s = t;
                    if (!e) {
                        let u = !1,
                            h = n.length;
                        s < 0 && (n.push(function LG() {
                            return new ke(3100, !1)
                        }()), u = !0), r < 0 && (n.push(function FG() {
                            return new ke(3101, !1)
                        }()), u = !0), u && n.splice(h, 0, TO())
                    }
                    return {
                        duration: s,
                        delay: r,
                        easing: l
                    }
                }(t, n, e)
            }

            function hf(t, n = {}) {
                return Object.keys(t).forEach(e => {
                    n[e] = t[e]
                }), n
            }

            function LO(t) {
                const n = new Map;
                return Object.keys(t).forEach(e => {
                    n.set(e, t[e])
                }), n
            }

            function jl(t, n = new Map, e) {
                if (e)
                    for (let [i, s] of e) n.set(i, s);
                for (let [i, s] of t) n.set(i, s);
                return n
            }

            function To(t, n, e) {
                n.forEach((i, s) => {
                    const r = $_(s);
                    e && !e.has(s) && e.set(s, t.style[r]), t.style[r] = i
                })
            }

            function Nc(t, n) {
                n.forEach((e, i) => {
                    const s = $_(i);
                    t.style[s] = ""
                })
            }

            function ff(t) {
                return Array.isArray(t) ? 1 == t.length ? t[0] : wO(t) : t
            }
            const j_ = new RegExp("{{\\s*(.+?)\\s*}}", "g");

            function NO(t) {
                let n = [];
                if ("string" == typeof t) {
                    let e;
                    for (; e = j_.exec(t);) n.push(e[1]);
                    j_.lastIndex = 0
                }
                return n
            }

            function pf(t, n, e) {
                const i = t.toString(),
                    s = i.replace(j_, (r, l) => {
                        let u = n[l];
                        return null == u && (e.push(function RG(t) {
                            return new ke(3003, !1)
                        }()), u = ""), u.toString()
                    });
                return s == i ? t : s
            }

            function Bm(t) {
                const n = [];
                let e = t.next();
                for (; !e.done;) n.push(e.value), e = t.next();
                return n
            }
            const C9 = /-+([a-z0-9])/g;

            function $_(t) {
                return t.replace(C9, (...n) => n[1].toUpperCase())
            }

            function ha(t, n, e) {
                switch (n.type) {
                    case 7:
                        return t.visitTrigger(n, e);
                    case 0:
                        return t.visitState(n, e);
                    case 1:
                        return t.visitTransition(n, e);
                    case 2:
                        return t.visitSequence(n, e);
                    case 3:
                        return t.visitGroup(n, e);
                    case 4:
                        return t.visitAnimate(n, e);
                    case 5:
                        return t.visitKeyframes(n, e);
                    case 6:
                        return t.visitStyle(n, e);
                    case 8:
                        return t.visitReference(n, e);
                    case 9:
                        return t.visitAnimateChild(n, e);
                    case 10:
                        return t.visitAnimateRef(n, e);
                    case 11:
                        return t.visitQuery(n, e);
                    case 12:
                        return t.visitStagger(n, e);
                    default:
                        throw function BG(t) {
                            return new ke(3004, !1)
                        }()
                }
            }

            function RO(t, n) {
                return window.getComputedStyle(t)[n]
            }
            const Vm = "*";

            function D9(t, n) {
                const e = [];
                return "string" == typeof t ? t.split(/\s*,\s*/).forEach(i => function A9(t, n, e) {
                    if (":" == t[0]) {
                        const h = function k9(t, n) {
                            switch (t) {
                                case ":enter":
                                    return "void => *";
                                case ":leave":
                                    return "* => void";
                                case ":increment":
                                    return (e, i) => parseFloat(i) > parseFloat(e);
                                case ":decrement":
                                    return (e, i) => parseFloat(i) < parseFloat(e);
                                default:
                                    return n.push(function QG(t) {
                                        return new ke(3016, !1)
                                    }()), "* => *"
                            }
                        }(t, e);
                        if ("function" == typeof h) return void n.push(h);
                        t = h
                    }
                    const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                    if (null == i || i.length < 4) return e.push(function KG(t) {
                        return new ke(3015, !1)
                    }()), n;
                    const s = i[1],
                        r = i[2],
                        l = i[3];
                    n.push(BO(s, l));
                    "<" == r[0] && !(s == Vm && l == Vm) && n.push(BO(l, s))
                }(i, e, n)) : e.push(t), e
            }
            const Hm = new Set(["true", "1"]),
                zm = new Set(["false", "0"]);

            function BO(t, n) {
                const e = Hm.has(t) || zm.has(t),
                    i = Hm.has(n) || zm.has(n);
                return (s, r) => {
                    let l = t == Vm || t == s,
                        u = n == Vm || n == r;
                    return !l && e && "boolean" == typeof s && (l = s ? Hm.has(t) : zm.has(t)), !u && i && "boolean" == typeof r && (u = r ? Hm.has(n) : zm.has(n)), l && u
                }
            }
            const E9 = new RegExp("s*:selfs*,?", "g");

            function U_(t, n, e, i) {
                return new M9(t).build(n, e, i)
            }
            class M9 {
                constructor(n) {
                    this._driver = n
                }
                build(n, e, i) {
                    const s = new I9(e);
                    return this._resetContextStyleTimingState(s), ha(this, ff(n), s)
                }
                _resetContextStyleTimingState(n) {
                    n.currentQuerySelector = "", n.collectedStyles = new Map, n.collectedStyles.set("", new Map), n.currentTime = 0
                }
                visitTrigger(n, e) {
                    let i = e.queryCount = 0,
                        s = e.depCount = 0;
                    const r = [],
                        l = [];
                    return "@" == n.name.charAt(0) && e.errors.push(function HG() {
                        return new ke(3006, !1)
                    }()), n.definitions.forEach(u => {
                        if (this._resetContextStyleTimingState(e), 0 == u.type) {
                            const h = u,
                                v = h.name;
                            v.toString().split(/\s*,\s*/).forEach(_ => {
                                h.name = _, r.push(this.visitState(h, e))
                            }), h.name = v
                        } else if (1 == u.type) {
                            const h = this.visitTransition(u, e);
                            i += h.queryCount, s += h.depCount, l.push(h)
                        } else e.errors.push(function zG() {
                            return new ke(3007, !1)
                        }())
                    }), {
                        type: 7,
                        name: n.name,
                        states: r,
                        transitions: l,
                        queryCount: i,
                        depCount: s,
                        options: null
                    }
                }
                visitState(n, e) {
                    const i = this.visitStyle(n.styles, e),
                        s = n.options && n.options.params || null;
                    if (i.containsDynamicStyles) {
                        const r = new Set,
                            l = s || {};
                        i.styles.forEach(u => {
                            u instanceof Map && u.forEach(h => {
                                NO(h).forEach(v => {
                                    l.hasOwnProperty(v) || r.add(v)
                                })
                            })
                        }), r.size && (Bm(r.values()), e.errors.push(function jG(t, n) {
                            return new ke(3008, !1)
                        }()))
                    }
                    return {
                        type: 0,
                        name: n.name,
                        style: i,
                        options: s ? {
                            params: s
                        } : null
                    }
                }
                visitTransition(n, e) {
                    e.queryCount = 0, e.depCount = 0;
                    const i = ha(this, ff(n.animation), e);
                    return {
                        type: 1,
                        matchers: D9(n.expr, e.errors),
                        animation: i,
                        queryCount: e.queryCount,
                        depCount: e.depCount,
                        options: Rc(n.options)
                    }
                }
                visitSequence(n, e) {
                    return {
                        type: 2,
                        steps: n.steps.map(i => ha(this, i, e)),
                        options: Rc(n.options)
                    }
                }
                visitGroup(n, e) {
                    const i = e.currentTime;
                    let s = 0;
                    const r = n.steps.map(l => {
                        e.currentTime = i;
                        const u = ha(this, l, e);
                        return s = Math.max(s, e.currentTime), u
                    });
                    return e.currentTime = s, {
                        type: 3,
                        steps: r,
                        options: Rc(n.options)
                    }
                }
                visitAnimate(n, e) {
                    const i = function F9(t, n) {
                        if (t.hasOwnProperty("duration")) return t;
                        if ("number" == typeof t) return W_(Rm(t, n).duration, 0, "");
                        const e = t;
                        if (e.split(/\s+/).some(r => "{" == r.charAt(0) && "{" == r.charAt(1))) {
                            const r = W_(0, 0, "");
                            return r.dynamic = !0, r.strValue = e, r
                        }
                        const s = Rm(e, n);
                        return W_(s.duration, s.delay, s.easing)
                    }(n.timings, e.errors);
                    e.currentAnimateTimings = i;
                    let s, r = n.styles ? n.styles : Us({});
                    if (5 == r.type) s = this.visitKeyframes(r, e);
                    else {
                        let l = n.styles,
                            u = !1;
                        if (!l) {
                            u = !0;
                            const v = {};
                            i.easing && (v.easing = i.easing), l = Us(v)
                        }
                        e.currentTime += i.duration + i.delay;
                        const h = this.visitStyle(l, e);
                        h.isEmptyStep = u, s = h
                    }
                    return e.currentAnimateTimings = null, {
                        type: 4,
                        timings: i,
                        style: s,
                        options: null
                    }
                }
                visitStyle(n, e) {
                    const i = this._makeStyleAst(n, e);
                    return this._validateStyleAst(i, e), i
                }
                _makeStyleAst(n, e) {
                    const i = [],
                        s = Array.isArray(n.styles) ? n.styles : [n.styles];
                    for (let u of s) "string" == typeof u ? u === Jo ? i.push(u) : e.errors.push(new ke(3002, !1)) : i.push(LO(u));
                    let r = !1,
                        l = null;
                    return i.forEach(u => {
                        if (u instanceof Map && (u.has("easing") && (l = u.get("easing"), u.delete("easing")), !r))
                            for (let h of u.values())
                                if (h.toString().indexOf("{{") >= 0) {
                                    r = !0;
                                    break
                                }
                    }), {
                        type: 6,
                        styles: i,
                        easing: l,
                        offset: n.offset,
                        containsDynamicStyles: r,
                        options: null
                    }
                }
                _validateStyleAst(n, e) {
                    const i = e.currentAnimateTimings;
                    let s = e.currentTime,
                        r = e.currentTime;
                    i && r > 0 && (r -= i.duration + i.delay), n.styles.forEach(l => {
                        "string" != typeof l && l.forEach((u, h) => {
                            const v = e.collectedStyles.get(e.currentQuerySelector),
                                _ = v.get(h);
                            let C = !0;
                            _ && (r != s && r >= _.startTime && s <= _.endTime && (e.errors.push(function UG(t, n, e, i, s) {
                                return new ke(3010, !1)
                            }()), C = !1), r = _.startTime), C && v.set(h, {
                                startTime: r,
                                endTime: s
                            }), e.options && function w9(t, n, e) {
                                const i = n.params || {},
                                    s = NO(t);
                                s.length && s.forEach(r => {
                                    i.hasOwnProperty(r) || e.push(function NG(t) {
                                        return new ke(3001, !1)
                                    }())
                                })
                            }(u, e.options, e.errors)
                        })
                    })
                }
                visitKeyframes(n, e) {
                    const i = {
                        type: 5,
                        styles: [],
                        options: null
                    };
                    if (!e.currentAnimateTimings) return e.errors.push(function WG() {
                        return new ke(3011, !1)
                    }()), i;
                    let r = 0;
                    const l = [];
                    let u = !1,
                        h = !1,
                        v = 0;
                    const _ = n.steps.map(Ae => {
                        const De = this._makeStyleAst(Ae, e);
                        let Ue = null != De.offset ? De.offset : function L9(t) {
                                if ("string" == typeof t) return null;
                                let n = null;
                                if (Array.isArray(t)) t.forEach(e => {
                                    if (e instanceof Map && e.has("offset")) {
                                        const i = e;
                                        n = parseFloat(i.get("offset")), i.delete("offset")
                                    }
                                });
                                else if (t instanceof Map && t.has("offset")) {
                                    const e = t;
                                    n = parseFloat(e.get("offset")), e.delete("offset")
                                }
                                return n
                            }(De.styles),
                            it = 0;
                        return null != Ue && (r++, it = De.offset = Ue), h = h || it < 0 || it > 1, u = u || it < v, v = it, l.push(it), De
                    });
                    h && e.errors.push(function GG() {
                        return new ke(3012, !1)
                    }()), u && e.errors.push(function XG() {
                        return new ke(3200, !1)
                    }());
                    const C = n.steps.length;
                    let M = 0;
                    r > 0 && r < C ? e.errors.push(function YG() {
                        return new ke(3202, !1)
                    }()) : 0 == r && (M = 1 / (C - 1));
                    const L = C - 1,
                        j = e.currentTime,
                        Z = e.currentAnimateTimings,
                        Q = Z.duration;
                    return _.forEach((Ae, De) => {
                        const Ue = M > 0 ? De == L ? 1 : M * De : l[De],
                            it = Ue * Q;
                        e.currentTime = j + Z.delay + it, Z.duration = it, this._validateStyleAst(Ae, e), Ae.offset = Ue, i.styles.push(Ae)
                    }), i
                }
                visitReference(n, e) {
                    return {
                        type: 8,
                        animation: ha(this, ff(n.animation), e),
                        options: Rc(n.options)
                    }
                }
                visitAnimateChild(n, e) {
                    return e.depCount++, {
                        type: 9,
                        options: Rc(n.options)
                    }
                }
                visitAnimateRef(n, e) {
                    return {
                        type: 10,
                        animation: this.visitReference(n.animation, e),
                        options: Rc(n.options)
                    }
                }
                visitQuery(n, e) {
                    const i = e.currentQuerySelector,
                        s = n.options || {};
                    e.queryCount++, e.currentQuery = n;
                    const [r, l] = function P9(t) {
                        const n = !!t.split(/\s*,\s*/).find(e => ":self" == e);
                        return n && (t = t.replace(E9, "")), t = t.replace(/@\*/g, Nm).replace(/@\w+/g, e => Nm + "-" + e.slice(1)).replace(/:animating/g, H_), [t, n]
                    }(n.selector);
                    e.currentQuerySelector = i.length ? i + " " + r : r, da(e.collectedStyles, e.currentQuerySelector, new Map);
                    const u = ha(this, ff(n.animation), e);
                    return e.currentQuery = null, e.currentQuerySelector = i, {
                        type: 11,
                        selector: r,
                        limit: s.limit || 0,
                        optional: !!s.optional,
                        includeSelf: l,
                        animation: u,
                        originalSelector: n.selector,
                        options: Rc(n.options)
                    }
                }
                visitStagger(n, e) {
                    e.currentQuery || e.errors.push(function qG() {
                        return new ke(3013, !1)
                    }());
                    const i = "full" === n.timings ? {
                        duration: 0,
                        delay: 0,
                        easing: "full"
                    } : Rm(n.timings, e.errors, !0);
                    return {
                        type: 12,
                        animation: ha(this, ff(n.animation), e),
                        timings: i,
                        options: null
                    }
                }
            }
            class I9 {
                constructor(n) {
                    this.errors = n, this.queryCount = 0, this.depCount = 0, this.currentTransition = null, this.currentQuery = null, this.currentQuerySelector = null, this.currentAnimateTimings = null, this.currentTime = 0, this.collectedStyles = new Map, this.options = null, this.unsupportedCSSPropertiesFound = new Set
                }
            }

            function Rc(t) {
                return t ? (t = hf(t)).params && (t.params = function O9(t) {
                    return t ? hf(t) : null
                }(t.params)) : t = {}, t
            }

            function W_(t, n, e) {
                return {
                    duration: t,
                    delay: n,
                    easing: e
                }
            }

            function G_(t, n, e, i, s, r, l = null, u = !1) {
                return {
                    type: 1,
                    element: t,
                    keyframes: n,
                    preStyleProps: e,
                    postStyleProps: i,
                    duration: s,
                    delay: r,
                    totalTime: s + r,
                    easing: l,
                    subTimeline: u
                }
            }
            class jm {
                constructor() {
                    this._map = new Map
                }
                get(n) {
                    return this._map.get(n) || []
                }
                append(n, e) {
                    let i = this._map.get(n);
                    i || this._map.set(n, i = []), i.push(...e)
                }
                has(n) {
                    return this._map.has(n)
                }
                clear() {
                    this._map.clear()
                }
            }
            const B9 = new RegExp(":enter", "g"),
                H9 = new RegExp(":leave", "g");

            function X_(t, n, e, i, s, r = new Map, l = new Map, u, h, v = []) {
                return (new z9).buildKeyframes(t, n, e, i, s, r, l, u, h, v)
            }
            class z9 {
                buildKeyframes(n, e, i, s, r, l, u, h, v, _ = []) {
                    v = v || new jm;
                    const C = new Y_(n, e, v, s, r, _, []);
                    C.options = h;
                    const M = h.delay ? tl(h.delay) : 0;
                    C.currentTimeline.delayNextStep(M), C.currentTimeline.setStyles([l], null, C.errors, h), ha(this, i, C);
                    const L = C.timelines.filter(j => j.containsAnimation());
                    if (L.length && u.size) {
                        let j;
                        for (let Z = L.length - 1; Z >= 0; Z--) {
                            const Q = L[Z];
                            if (Q.element === e) {
                                j = Q;
                                break
                            }
                        }
                        j && !j.allowOnlyTimelineStyles() && j.setStyles([u], null, C.errors, h)
                    }
                    return L.length ? L.map(j => j.buildKeyframes()) : [G_(e, [], [], [], 0, M, "", !1)]
                }
                visitTrigger(n, e) {}
                visitState(n, e) {}
                visitTransition(n, e) {}
                visitAnimateChild(n, e) {
                    const i = e.subInstructions.get(e.element);
                    if (i) {
                        const s = e.createSubContext(n.options),
                            r = e.currentTimeline.currentTime,
                            l = this._visitSubInstructions(i, s, s.options);
                        r != l && e.transformIntoNewTimeline(l)
                    }
                    e.previousNode = n
                }
                visitAnimateRef(n, e) {
                    const i = e.createSubContext(n.options);
                    i.transformIntoNewTimeline(), this._applyAnimationRefDelays([n.options, n.animation.options], e, i), this.visitReference(n.animation, i), e.transformIntoNewTimeline(i.currentTimeline.currentTime), e.previousNode = n
                }
                _applyAnimationRefDelays(n, e, i) {
                    for (const s of n) {
                        const r = s ? .delay;
                        if (r) {
                            const l = "number" == typeof r ? r : tl(pf(r, s ? .params ? ? {}, e.errors));
                            i.delayNextStep(l)
                        }
                    }
                }
                _visitSubInstructions(n, e, i) {
                    let r = e.currentTimeline.currentTime;
                    const l = null != i.duration ? tl(i.duration) : null,
                        u = null != i.delay ? tl(i.delay) : null;
                    return 0 !== l && n.forEach(h => {
                        const v = e.appendInstructionToTimeline(h, l, u);
                        r = Math.max(r, v.duration + v.delay)
                    }), r
                }
                visitReference(n, e) {
                    e.updateOptions(n.options, !0), ha(this, n.animation, e), e.previousNode = n
                }
                visitSequence(n, e) {
                    const i = e.subContextCount;
                    let s = e;
                    const r = n.options;
                    if (r && (r.params || r.delay) && (s = e.createSubContext(r), s.transformIntoNewTimeline(), null != r.delay)) {
                        6 == s.previousNode.type && (s.currentTimeline.snapshotCurrentStyles(), s.previousNode = $m);
                        const l = tl(r.delay);
                        s.delayNextStep(l)
                    }
                    n.steps.length && (n.steps.forEach(l => ha(this, l, s)), s.currentTimeline.applyStylesToKeyframe(), s.subContextCount > i && s.transformIntoNewTimeline()), e.previousNode = n
                }
                visitGroup(n, e) {
                    const i = [];
                    let s = e.currentTimeline.currentTime;
                    const r = n.options && n.options.delay ? tl(n.options.delay) : 0;
                    n.steps.forEach(l => {
                        const u = e.createSubContext(n.options);
                        r && u.delayNextStep(r), ha(this, l, u), s = Math.max(s, u.currentTimeline.currentTime), i.push(u.currentTimeline)
                    }), i.forEach(l => e.currentTimeline.mergeTimelineCollectedStyles(l)), e.transformIntoNewTimeline(s), e.previousNode = n
                }
                _visitTiming(n, e) {
                    if (n.dynamic) {
                        const i = n.strValue;
                        return Rm(e.params ? pf(i, e.params, e.errors) : i, e.errors)
                    }
                    return {
                        duration: n.duration,
                        delay: n.delay,
                        easing: n.easing
                    }
                }
                visitAnimate(n, e) {
                    const i = e.currentAnimateTimings = this._visitTiming(n.timings, e),
                        s = e.currentTimeline;
                    i.delay && (e.incrementTime(i.delay), s.snapshotCurrentStyles());
                    const r = n.style;
                    5 == r.type ? this.visitKeyframes(r, e) : (e.incrementTime(i.duration), this.visitStyle(r, e), s.applyStylesToKeyframe()), e.currentAnimateTimings = null, e.previousNode = n
                }
                visitStyle(n, e) {
                    const i = e.currentTimeline,
                        s = e.currentAnimateTimings;
                    !s && i.hasCurrentStyleProperties() && i.forwardFrame();
                    const r = s && s.easing || n.easing;
                    n.isEmptyStep ? i.applyEmptyStep(r) : i.setStyles(n.styles, r, e.errors, e.options), e.previousNode = n
                }
                visitKeyframes(n, e) {
                    const i = e.currentAnimateTimings,
                        s = e.currentTimeline.duration,
                        r = i.duration,
                        u = e.createSubContext().currentTimeline;
                    u.easing = i.easing, n.styles.forEach(h => {
                        u.forwardTime((h.offset || 0) * r), u.setStyles(h.styles, h.easing, e.errors, e.options), u.applyStylesToKeyframe()
                    }), e.currentTimeline.mergeTimelineCollectedStyles(u), e.transformIntoNewTimeline(s + r), e.previousNode = n
                }
                visitQuery(n, e) {
                    const i = e.currentTimeline.currentTime,
                        s = n.options || {},
                        r = s.delay ? tl(s.delay) : 0;
                    r && (6 === e.previousNode.type || 0 == i && e.currentTimeline.hasCurrentStyleProperties()) && (e.currentTimeline.snapshotCurrentStyles(), e.previousNode = $m);
                    let l = i;
                    const u = e.invokeQuery(n.selector, n.originalSelector, n.limit, n.includeSelf, !!s.optional, e.errors);
                    e.currentQueryTotal = u.length;
                    let h = null;
                    u.forEach((v, _) => {
                        e.currentQueryIndex = _;
                        const C = e.createSubContext(n.options, v);
                        r && C.delayNextStep(r), v === e.element && (h = C.currentTimeline), ha(this, n.animation, C), C.currentTimeline.applyStylesToKeyframe(), l = Math.max(l, C.currentTimeline.currentTime)
                    }), e.currentQueryIndex = 0, e.currentQueryTotal = 0, e.transformIntoNewTimeline(l), h && (e.currentTimeline.mergeTimelineCollectedStyles(h), e.currentTimeline.snapshotCurrentStyles()), e.previousNode = n
                }
                visitStagger(n, e) {
                    const i = e.parentContext,
                        s = e.currentTimeline,
                        r = n.timings,
                        l = Math.abs(r.duration),
                        u = l * (e.currentQueryTotal - 1);
                    let h = l * e.currentQueryIndex;
                    switch (r.duration < 0 ? "reverse" : r.easing) {
                        case "reverse":
                            h = u - h;
                            break;
                        case "full":
                            h = i.currentStaggerTime
                    }
                    const _ = e.currentTimeline;
                    h && _.delayNextStep(h);
                    const C = _.currentTime;
                    ha(this, n.animation, e), e.previousNode = n, i.currentStaggerTime = s.currentTime - C + (s.startTime - i.currentTimeline.startTime)
                }
            }
            const $m = {};
            class Y_ {
                constructor(n, e, i, s, r, l, u, h) {
                    this._driver = n, this.element = e, this.subInstructions = i, this._enterClassName = s, this._leaveClassName = r, this.errors = l, this.timelines = u, this.parentContext = null, this.currentAnimateTimings = null, this.previousNode = $m, this.subContextCount = 0, this.options = {}, this.currentQueryIndex = 0, this.currentQueryTotal = 0, this.currentStaggerTime = 0, this.currentTimeline = h || new Um(this._driver, e, 0), u.push(this.currentTimeline)
                }
                get params() {
                    return this.options.params
                }
                updateOptions(n, e) {
                    if (!n) return;
                    const i = n;
                    let s = this.options;
                    null != i.duration && (s.duration = tl(i.duration)), null != i.delay && (s.delay = tl(i.delay));
                    const r = i.params;
                    if (r) {
                        let l = s.params;
                        l || (l = this.options.params = {}), Object.keys(r).forEach(u => {
                            (!e || !l.hasOwnProperty(u)) && (l[u] = pf(r[u], l, this.errors))
                        })
                    }
                }
                _copyOptions() {
                    const n = {};
                    if (this.options) {
                        const e = this.options.params;
                        if (e) {
                            const i = n.params = {};
                            Object.keys(e).forEach(s => {
                                i[s] = e[s]
                            })
                        }
                    }
                    return n
                }
                createSubContext(n = null, e, i) {
                    const s = e || this.element,
                        r = new Y_(this._driver, s, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(s, i || 0));
                    return r.previousNode = this.previousNode, r.currentAnimateTimings = this.currentAnimateTimings, r.options = this._copyOptions(), r.updateOptions(n), r.currentQueryIndex = this.currentQueryIndex, r.currentQueryTotal = this.currentQueryTotal, r.parentContext = this, this.subContextCount++, r
                }
                transformIntoNewTimeline(n) {
                    return this.previousNode = $m, this.currentTimeline = this.currentTimeline.fork(this.element, n), this.timelines.push(this.currentTimeline), this.currentTimeline
                }
                appendInstructionToTimeline(n, e, i) {
                    const s = {
                            duration: e ? ? n.duration,
                            delay: this.currentTimeline.currentTime + (i ? ? 0) + n.delay,
                            easing: ""
                        },
                        r = new j9(this._driver, n.element, n.keyframes, n.preStyleProps, n.postStyleProps, s, n.stretchStartingKeyframe);
                    return this.timelines.push(r), s
                }
                incrementTime(n) {
                    this.currentTimeline.forwardTime(this.currentTimeline.duration + n)
                }
                delayNextStep(n) {
                    n > 0 && this.currentTimeline.delayNextStep(n)
                }
                invokeQuery(n, e, i, s, r, l) {
                    let u = [];
                    if (s && u.push(this.element), n.length > 0) {
                        n = (n = n.replace(B9, "." + this._enterClassName)).replace(H9, "." + this._leaveClassName);
                        let v = this._driver.query(this.element, n, 1 != i);
                        0 !== i && (v = i < 0 ? v.slice(v.length + i, v.length) : v.slice(0, i)), u.push(...v)
                    }
                    return !r && 0 == u.length && l.push(function ZG(t) {
                        return new ke(3014, !1)
                    }()), u
                }
            }
            class Um {
                constructor(n, e, i, s) {
                    this._driver = n, this.element = e, this.startTime = i, this._elementTimelineStylesLookup = s, this.duration = 0, this.easing = null, this._previousKeyframe = new Map, this._currentKeyframe = new Map, this._keyframes = new Map, this._styleSummary = new Map, this._localTimelineStyles = new Map, this._pendingStyles = new Map, this._backFill = new Map, this._currentEmptyStepKeyframe = null, this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map), this._globalTimelineStyles = this._elementTimelineStylesLookup.get(e), this._globalTimelineStyles || (this._globalTimelineStyles = this._localTimelineStyles, this._elementTimelineStylesLookup.set(e, this._localTimelineStyles)), this._loadKeyframe()
                }
                containsAnimation() {
                    switch (this._keyframes.size) {
                        case 0:
                            return !1;
                        case 1:
                            return this.hasCurrentStyleProperties();
                        default:
                            return !0
                    }
                }
                hasCurrentStyleProperties() {
                    return this._currentKeyframe.size > 0
                }
                get currentTime() {
                    return this.startTime + this.duration
                }
                delayNextStep(n) {
                    const e = 1 === this._keyframes.size && this._pendingStyles.size;
                    this.duration || e ? (this.forwardTime(this.currentTime + n), e && this.snapshotCurrentStyles()) : this.startTime += n
                }
                fork(n, e) {
                    return this.applyStylesToKeyframe(), new Um(this._driver, n, e || this.currentTime, this._elementTimelineStylesLookup)
                }
                _loadKeyframe() {
                    this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe), this._currentKeyframe = this._keyframes.get(this.duration), this._currentKeyframe || (this._currentKeyframe = new Map, this._keyframes.set(this.duration, this._currentKeyframe))
                }
                forwardFrame() {
                    this.duration += 1, this._loadKeyframe()
                }
                forwardTime(n) {
                    this.applyStylesToKeyframe(), this.duration = n, this._loadKeyframe()
                }
                _updateStyle(n, e) {
                    this._localTimelineStyles.set(n, e), this._globalTimelineStyles.set(n, e), this._styleSummary.set(n, {
                        time: this.currentTime,
                        value: e
                    })
                }
                allowOnlyTimelineStyles() {
                    return this._currentEmptyStepKeyframe !== this._currentKeyframe
                }
                applyEmptyStep(n) {
                    n && this._previousKeyframe.set("easing", n);
                    for (let [e, i] of this._globalTimelineStyles) this._backFill.set(e, i || Jo), this._currentKeyframe.set(e, Jo);
                    this._currentEmptyStepKeyframe = this._currentKeyframe
                }
                setStyles(n, e, i, s) {
                    e && this._previousKeyframe.set("easing", e);
                    const r = s && s.params || {},
                        l = function $9(t, n) {
                            const e = new Map;
                            let i;
                            return t.forEach(s => {
                                if ("*" === s) {
                                    i = i || n.keys();
                                    for (let r of i) e.set(r, Jo)
                                } else jl(s, e)
                            }), e
                        }(n, this._globalTimelineStyles);
                    for (let [u, h] of l) {
                        const v = pf(h, r, i);
                        this._pendingStyles.set(u, v), this._localTimelineStyles.has(u) || this._backFill.set(u, this._globalTimelineStyles.get(u) ? ? Jo), this._updateStyle(u, v)
                    }
                }
                applyStylesToKeyframe() {
                    0 != this._pendingStyles.size && (this._pendingStyles.forEach((n, e) => {
                        this._currentKeyframe.set(e, n)
                    }), this._pendingStyles.clear(), this._localTimelineStyles.forEach((n, e) => {
                        this._currentKeyframe.has(e) || this._currentKeyframe.set(e, n)
                    }))
                }
                snapshotCurrentStyles() {
                    for (let [n, e] of this._localTimelineStyles) this._pendingStyles.set(n, e), this._updateStyle(n, e)
                }
                getFinalKeyframe() {
                    return this._keyframes.get(this.duration)
                }
                get properties() {
                    const n = [];
                    for (let e in this._currentKeyframe) n.push(e);
                    return n
                }
                mergeTimelineCollectedStyles(n) {
                    n._styleSummary.forEach((e, i) => {
                        const s = this._styleSummary.get(i);
                        (!s || e.time > s.time) && this._updateStyle(i, e.value)
                    })
                }
                buildKeyframes() {
                    this.applyStylesToKeyframe();
                    const n = new Set,
                        e = new Set,
                        i = 1 === this._keyframes.size && 0 === this.duration;
                    let s = [];
                    this._keyframes.forEach((u, h) => {
                        const v = jl(u, new Map, this._backFill);
                        v.forEach((_, C) => {
                            "!" === _ ? n.add(C) : _ === Jo && e.add(C)
                        }), i || v.set("offset", h / this.duration), s.push(v)
                    });
                    const r = n.size ? Bm(n.values()) : [],
                        l = e.size ? Bm(e.values()) : [];
                    if (i) {
                        const u = s[0],
                            h = new Map(u);
                        u.set("offset", 0), h.set("offset", 1), s = [u, h]
                    }
                    return G_(this.element, s, r, l, this.duration, this.startTime, this.easing, !1)
                }
            }
            class j9 extends Um {
                constructor(n, e, i, s, r, l, u = !1) {
                    super(n, e, l.delay), this.keyframes = i, this.preStyleProps = s, this.postStyleProps = r, this._stretchStartingKeyframe = u, this.timings = {
                        duration: l.duration,
                        delay: l.delay,
                        easing: l.easing
                    }
                }
                containsAnimation() {
                    return this.keyframes.length > 1
                }
                buildKeyframes() {
                    let n = this.keyframes,
                        {
                            delay: e,
                            duration: i,
                            easing: s
                        } = this.timings;
                    if (this._stretchStartingKeyframe && e) {
                        const r = [],
                            l = i + e,
                            u = e / l,
                            h = jl(n[0]);
                        h.set("offset", 0), r.push(h);
                        const v = jl(n[0]);
                        v.set("offset", zO(u)), r.push(v);
                        const _ = n.length - 1;
                        for (let C = 1; C <= _; C++) {
                            let M = jl(n[C]);
                            const L = M.get("offset");
                            M.set("offset", zO((e + L * i) / l)), r.push(M)
                        }
                        i = l, e = 0, s = "", n = r
                    }
                    return G_(this.element, n, this.preStyleProps, this.postStyleProps, i, e, s, !0)
                }
            }

            function zO(t, n = 3) {
                const e = Math.pow(10, n - 1);
                return Math.round(t * e) / e
            }
            class q_ {}
            const U9 = new Set(["width", "height", "minWidth", "minHeight", "maxWidth", "maxHeight", "left", "top", "bottom", "right", "fontSize", "outlineWidth", "outlineOffset", "paddingTop", "paddingLeft", "paddingBottom", "paddingRight", "marginTop", "marginLeft", "marginBottom", "marginRight", "borderRadius", "borderWidth", "borderTopWidth", "borderLeftWidth", "borderRightWidth", "borderBottomWidth", "textIndent", "perspective"]);
            class W9 extends q_ {
                normalizePropertyName(n, e) {
                    return $_(n)
                }
                normalizeStyleValue(n, e, i, s) {
                    let r = "";
                    const l = i.toString().trim();
                    if (U9.has(e) && 0 !== i && "0" !== i)
                        if ("number" == typeof i) r = "px";
                        else {
                            const u = i.match(/^[+-]?[\d\.]+([a-z]*)$/);
                            u && 0 == u[1].length && s.push(function VG(t, n) {
                                return new ke(3005, !1)
                            }())
                        }
                    return l + r
                }
            }

            function jO(t, n, e, i, s, r, l, u, h, v, _, C, M) {
                return {
                    type: 0,
                    element: t,
                    triggerName: n,
                    isRemovalTransition: s,
                    fromState: e,
                    fromStyles: r,
                    toState: i,
                    toStyles: l,
                    timelines: u,
                    queriedElements: h,
                    preStyleProps: v,
                    postStyleProps: _,
                    totalTime: C,
                    errors: M
                }
            }
            const Z_ = {};
            class $O {
                constructor(n, e, i) {
                    this._triggerName = n, this.ast = e, this._stateStyles = i
                }
                match(n, e, i, s) {
                    return function G9(t, n, e, i, s) {
                        return t.some(r => r(n, e, i, s))
                    }(this.ast.matchers, n, e, i, s)
                }
                buildStyles(n, e, i) {
                    let s = this._stateStyles.get("*");
                    return void 0 !== n && (s = this._stateStyles.get(n ? .toString()) || s), s ? s.buildStyles(e, i) : new Map
                }
                build(n, e, i, s, r, l, u, h, v, _) {
                    const C = [],
                        M = this.ast.options && this.ast.options.params || Z_,
                        j = this.buildStyles(i, u && u.params || Z_, C),
                        Z = h && h.params || Z_,
                        Q = this.buildStyles(s, Z, C),
                        Ae = new Set,
                        De = new Map,
                        Ue = new Map,
                        it = "void" === s,
                        lt = {
                            params: X9(Z, M),
                            delay: this.ast.options ? .delay
                        },
                        ht = _ ? [] : X_(n, e, this.ast.animation, r, l, j, Q, lt, v, C);
                    let Ht = 0;
                    if (ht.forEach(hi => {
                            Ht = Math.max(hi.duration + hi.delay, Ht)
                        }), C.length) return jO(e, this._triggerName, i, s, it, j, Q, [], [], De, Ue, Ht, C);
                    ht.forEach(hi => {
                        const Ln = hi.element,
                            rn = da(De, Ln, new Set);
                        hi.preStyleProps.forEach(Zn => rn.add(Zn));
                        const rs = da(Ue, Ln, new Set);
                        hi.postStyleProps.forEach(Zn => rs.add(Zn)), Ln !== e && Ae.add(Ln)
                    });
                    const on = Bm(Ae.values());
                    return jO(e, this._triggerName, i, s, it, j, Q, ht, on, De, Ue, Ht)
                }
            }

            function X9(t, n) {
                const e = hf(n);
                for (const i in t) t.hasOwnProperty(i) && null != t[i] && (e[i] = t[i]);
                return e
            }
            class Y9 {
                constructor(n, e, i) {
                    this.styles = n, this.defaultParams = e, this.normalizer = i
                }
                buildStyles(n, e) {
                    const i = new Map,
                        s = hf(this.defaultParams);
                    return Object.keys(n).forEach(r => {
                        const l = n[r];
                        null !== l && (s[r] = l)
                    }), this.styles.styles.forEach(r => {
                        "string" != typeof r && r.forEach((l, u) => {
                            l && (l = pf(l, s, e));
                            const h = this.normalizer.normalizePropertyName(u, e);
                            l = this.normalizer.normalizeStyleValue(u, h, l, e), i.set(u, l)
                        })
                    }), i
                }
            }
            class Z9 {
                constructor(n, e, i) {
                    this.name = n, this.ast = e, this._normalizer = i, this.transitionFactories = [], this.states = new Map, e.states.forEach(s => {
                        this.states.set(s.name, new Y9(s.style, s.options && s.options.params || {}, i))
                    }), UO(this.states, "true", "1"), UO(this.states, "false", "0"), e.transitions.forEach(s => {
                        this.transitionFactories.push(new $O(n, s, this.states))
                    }), this.fallbackTransition = function K9(t, n, e) {
                        return new $O(t, {
                            type: 1,
                            animation: {
                                type: 2,
                                steps: [],
                                options: null
                            },
                            matchers: [(l, u) => !0],
                            options: null,
                            queryCount: 0,
                            depCount: 0
                        }, n)
                    }(n, this.states)
                }
                get containsQueries() {
                    return this.ast.queryCount > 0
                }
                matchTransition(n, e, i, s) {
                    return this.transitionFactories.find(l => l.match(n, e, i, s)) || null
                }
                matchStyles(n, e, i) {
                    return this.fallbackTransition.buildStyles(n, e, i)
                }
            }

            function UO(t, n, e) {
                t.has(n) ? t.has(e) || t.set(e, t.get(n)) : t.has(e) && t.set(n, t.get(e))
            }
            const Q9 = new jm;
            class J9 {
                constructor(n, e, i) {
                    this.bodyNode = n, this._driver = e, this._normalizer = i, this._animations = new Map, this._playersById = new Map, this.players = []
                }
                register(n, e) {
                    const i = [],
                        r = U_(this._driver, e, i, []);
                    if (i.length) throw function i9(t) {
                        return new ke(3503, !1)
                    }();
                    this._animations.set(n, r)
                }
                _buildPlayer(n, e, i) {
                    const s = n.element,
                        r = DO(this._normalizer, n.keyframes, e, i);
                    return this._driver.animate(s, r, n.duration, n.delay, n.easing, [], !0)
                }
                create(n, e, i = {}) {
                    const s = [],
                        r = this._animations.get(n);
                    let l;
                    const u = new Map;
                    if (r ? (l = X_(this._driver, e, r, V_, Lm, new Map, new Map, i, Q9, s), l.forEach(_ => {
                            const C = da(u, _.element, new Map);
                            _.postStyleProps.forEach(M => C.set(M, null))
                        })) : (s.push(function s9() {
                            return new ke(3300, !1)
                        }()), l = []), s.length) throw function r9(t) {
                        return new ke(3504, !1)
                    }();
                    u.forEach((_, C) => {
                        _.forEach((M, L) => {
                            _.set(L, this._driver.computeStyle(C, L, Jo))
                        })
                    });
                    const v = zl(l.map(_ => {
                        const C = u.get(_.element);
                        return this._buildPlayer(_, new Map, C)
                    }));
                    return this._playersById.set(n, v), v.onDestroy(() => this.destroy(n)), this.players.push(v), v
                }
                destroy(n) {
                    const e = this._getPlayer(n);
                    e.destroy(), this._playersById.delete(n);
                    const i = this.players.indexOf(e);
                    i >= 0 && this.players.splice(i, 1)
                }
                _getPlayer(n) {
                    const e = this._playersById.get(n);
                    if (!e) throw function a9(t) {
                        return new ke(3301, !1)
                    }();
                    return e
                }
                listen(n, e, i, s) {
                    const r = N_(e, "", "", "");
                    return L_(this._getPlayer(n), i, r, s), () => {}
                }
                command(n, e, i, s) {
                    if ("register" == i) return void this.register(n, s[0]);
                    if ("create" == i) return void this.create(n, e, s[0] || {});
                    const r = this._getPlayer(n);
                    switch (i) {
                        case "play":
                            r.play();
                            break;
                        case "pause":
                            r.pause();
                            break;
                        case "reset":
                            r.reset();
                            break;
                        case "restart":
                            r.restart();
                            break;
                        case "finish":
                            r.finish();
                            break;
                        case "init":
                            r.init();
                            break;
                        case "setPosition":
                            r.setPosition(parseFloat(s[0]));
                            break;
                        case "destroy":
                            this.destroy(n)
                    }
                }
            }
            const WO = "ng-animate-queued",
                K_ = "ng-animate-disabled",
                sX = [],
                GO = {
                    namespaceId: "",
                    setForRemoval: !1,
                    setForMove: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !1
                },
                rX = {
                    namespaceId: "",
                    setForMove: !1,
                    setForRemoval: !1,
                    hasAnimation: !1,
                    removedBeforeQueried: !0
                },
                Za = "__ng_removed";
            class Q_ {
                get params() {
                    return this.options.params
                }
                constructor(n, e = "") {
                    this.namespaceId = e;
                    const i = n && n.hasOwnProperty("value");
                    if (this.value = function cX(t) {
                            return t ? ? null
                        }(i ? n.value : n), i) {
                        const r = hf(n);
                        delete r.value, this.options = r
                    } else this.options = {};
                    this.options.params || (this.options.params = {})
                }
                absorbOptions(n) {
                    const e = n.params;
                    if (e) {
                        const i = this.options.params;
                        Object.keys(e).forEach(s => {
                            null == i[s] && (i[s] = e[s])
                        })
                    }
                }
            }
            const gf = "void",
                J_ = new Q_(gf);
            class aX {
                constructor(n, e, i) {
                    this.id = n, this.hostElement = e, this._engine = i, this.players = [], this._triggers = new Map, this._queue = [], this._elementListeners = new Map, this._hostClassName = "ng-tns-" + n, La(e, this._hostClassName)
                }
                listen(n, e, i, s) {
                    if (!this._triggers.has(e)) throw function o9(t, n) {
                        return new ke(3302, !1)
                    }();
                    if (null == i || 0 == i.length) throw function l9(t) {
                        return new ke(3303, !1)
                    }();
                    if (! function uX(t) {
                            return "start" == t || "done" == t
                        }(i)) throw function c9(t, n) {
                        return new ke(3400, !1)
                    }();
                    const r = da(this._elementListeners, n, []),
                        l = {
                            name: e,
                            phase: i,
                            callback: s
                        };
                    r.push(l);
                    const u = da(this._engine.statesByElement, n, new Map);
                    return u.has(e) || (La(n, Fm), La(n, Fm + "-" + e), u.set(e, J_)), () => {
                        this._engine.afterFlush(() => {
                            const h = r.indexOf(l);
                            h >= 0 && r.splice(h, 1), this._triggers.has(e) || u.delete(e)
                        })
                    }
                }
                register(n, e) {
                    return !this._triggers.has(n) && (this._triggers.set(n, e), !0)
                }
                _getTrigger(n) {
                    const e = this._triggers.get(n);
                    if (!e) throw function u9(t) {
                        return new ke(3401, !1)
                    }();
                    return e
                }
                trigger(n, e, i, s = !0) {
                    const r = this._getTrigger(e),
                        l = new ew(this.id, e, n);
                    let u = this._engine.statesByElement.get(n);
                    u || (La(n, Fm), La(n, Fm + "-" + e), this._engine.statesByElement.set(n, u = new Map));
                    let h = u.get(e);
                    const v = new Q_(i, this.id);
                    if (!(i && i.hasOwnProperty("value")) && h && v.absorbOptions(h.options), u.set(e, v), h || (h = J_), v.value !== gf && h.value === v.value) {
                        if (! function fX(t, n) {
                                const e = Object.keys(t),
                                    i = Object.keys(n);
                                if (e.length != i.length) return !1;
                                for (let s = 0; s < e.length; s++) {
                                    const r = e[s];
                                    if (!n.hasOwnProperty(r) || t[r] !== n[r]) return !1
                                }
                                return !0
                            }(h.params, v.params)) {
                            const Z = [],
                                Q = r.matchStyles(h.value, h.params, Z),
                                Ae = r.matchStyles(v.value, v.params, Z);
                            Z.length ? this._engine.reportError(Z) : this._engine.afterFlush(() => {
                                Nc(n, Q), To(n, Ae)
                            })
                        }
                        return
                    }
                    const M = da(this._engine.playersByElement, n, []);
                    M.forEach(Z => {
                        Z.namespaceId == this.id && Z.triggerName == e && Z.queued && Z.destroy()
                    });
                    let L = r.matchTransition(h.value, v.value, n, v.params),
                        j = !1;
                    if (!L) {
                        if (!s) return;
                        L = r.fallbackTransition, j = !0
                    }
                    return this._engine.totalQueuedPlayers++, this._queue.push({
                        element: n,
                        triggerName: e,
                        transition: L,
                        fromState: h,
                        toState: v,
                        player: l,
                        isFallbackTransition: j
                    }), j || (La(n, WO), l.onStart(() => {
                        fd(n, WO)
                    })), l.onDone(() => {
                        let Z = this.players.indexOf(l);
                        Z >= 0 && this.players.splice(Z, 1);
                        const Q = this._engine.playersByElement.get(n);
                        if (Q) {
                            let Ae = Q.indexOf(l);
                            Ae >= 0 && Q.splice(Ae, 1)
                        }
                    }), this.players.push(l), M.push(l), l
                }
                deregister(n) {
                    this._triggers.delete(n), this._engine.statesByElement.forEach(e => e.delete(n)), this._elementListeners.forEach((e, i) => {
                        this._elementListeners.set(i, e.filter(s => s.name != n))
                    })
                }
                clearElementCache(n) {
                    this._engine.statesByElement.delete(n), this._elementListeners.delete(n);
                    const e = this._engine.playersByElement.get(n);
                    e && (e.forEach(i => i.destroy()), this._engine.playersByElement.delete(n))
                }
                _signalRemovalForInnerTriggers(n, e) {
                    const i = this._engine.driver.query(n, Nm, !0);
                    i.forEach(s => {
                        if (s[Za]) return;
                        const r = this._engine.fetchNamespacesByElement(s);
                        r.size ? r.forEach(l => l.triggerLeaveAnimation(s, e, !1, !0)) : this.clearElementCache(s)
                    }), this._engine.afterFlushAnimationsDone(() => i.forEach(s => this.clearElementCache(s)))
                }
                triggerLeaveAnimation(n, e, i, s) {
                    const r = this._engine.statesByElement.get(n),
                        l = new Map;
                    if (r) {
                        const u = [];
                        if (r.forEach((h, v) => {
                                if (l.set(v, h.value), this._triggers.has(v)) {
                                    const _ = this.trigger(n, v, gf, s);
                                    _ && u.push(_)
                                }
                            }), u.length) return this._engine.markElementAsRemoved(this.id, n, !0, e, l), i && zl(u).onDone(() => this._engine.processLeaveNode(n)), !0
                    }
                    return !1
                }
                prepareLeaveAnimationListeners(n) {
                    const e = this._elementListeners.get(n),
                        i = this._engine.statesByElement.get(n);
                    if (e && i) {
                        const s = new Set;
                        e.forEach(r => {
                            const l = r.name;
                            if (s.has(l)) return;
                            s.add(l);
                            const h = this._triggers.get(l).fallbackTransition,
                                v = i.get(l) || J_,
                                _ = new Q_(gf),
                                C = new ew(this.id, l, n);
                            this._engine.totalQueuedPlayers++, this._queue.push({
                                element: n,
                                triggerName: l,
                                transition: h,
                                fromState: v,
                                toState: _,
                                player: C,
                                isFallbackTransition: !0
                            })
                        })
                    }
                }
                removeNode(n, e) {
                    const i = this._engine;
                    if (n.childElementCount && this._signalRemovalForInnerTriggers(n, e), this.triggerLeaveAnimation(n, e, !0)) return;
                    let s = !1;
                    if (i.totalAnimations) {
                        const r = i.players.length ? i.playersByQueriedElement.get(n) : [];
                        if (r && r.length) s = !0;
                        else {
                            let l = n;
                            for (; l = l.parentNode;)
                                if (i.statesByElement.get(l)) {
                                    s = !0;
                                    break
                                }
                        }
                    }
                    if (this.prepareLeaveAnimationListeners(n), s) i.markElementAsRemoved(this.id, n, !1, e);
                    else {
                        const r = n[Za];
                        (!r || r === GO) && (i.afterFlush(() => this.clearElementCache(n)), i.destroyInnerAnimations(n), i._onRemovalComplete(n, e))
                    }
                }
                insertNode(n, e) {
                    La(n, this._hostClassName)
                }
                drainQueuedTransitions(n) {
                    const e = [];
                    return this._queue.forEach(i => {
                        const s = i.player;
                        if (s.destroyed) return;
                        const r = i.element,
                            l = this._elementListeners.get(r);
                        l && l.forEach(u => {
                            if (u.name == i.triggerName) {
                                const h = N_(r, i.triggerName, i.fromState.value, i.toState.value);
                                h._data = n, L_(i.player, u.phase, h, u.callback)
                            }
                        }), s.markedForDestroy ? this._engine.afterFlush(() => {
                            s.destroy()
                        }) : e.push(i)
                    }), this._queue = [], e.sort((i, s) => {
                        const r = i.transition.ast.depCount,
                            l = s.transition.ast.depCount;
                        return 0 == r || 0 == l ? r - l : this._engine.driver.containsElement(i.element, s.element) ? 1 : -1
                    })
                }
                destroy(n) {
                    this.players.forEach(e => e.destroy()), this._signalRemovalForInnerTriggers(this.hostElement, n)
                }
            }
            class oX {
                _onRemovalComplete(n, e) {
                    this.onRemovalComplete(n, e)
                }
                constructor(n, e, i) {
                    this.bodyNode = n, this.driver = e, this._normalizer = i, this.players = [], this.newHostElements = new Map, this.playersByElement = new Map, this.playersByQueriedElement = new Map, this.statesByElement = new Map, this.disabledNodes = new Set, this.totalAnimations = 0, this.totalQueuedPlayers = 0, this._namespaceLookup = {}, this._namespaceList = [], this._flushFns = [], this._whenQuietFns = [], this.namespacesByHostElement = new Map, this.collectedEnterElements = [], this.collectedLeaveElements = [], this.onRemovalComplete = (s, r) => {}
                }
                get queuedPlayers() {
                    const n = [];
                    return this._namespaceList.forEach(e => {
                        e.players.forEach(i => {
                            i.queued && n.push(i)
                        })
                    }), n
                }
                createNamespace(n, e) {
                    const i = new aX(n, e, this);
                    return this.bodyNode && this.driver.containsElement(this.bodyNode, e) ? this._balanceNamespaceList(i, e) : (this.newHostElements.set(e, i), this.collectEnterElement(e)), this._namespaceLookup[n] = i
                }
                _balanceNamespaceList(n, e) {
                    const i = this._namespaceList,
                        s = this.namespacesByHostElement;
                    if (i.length - 1 >= 0) {
                        let l = !1,
                            u = this.driver.getParentElement(e);
                        for (; u;) {
                            const h = s.get(u);
                            if (h) {
                                const v = i.indexOf(h);
                                i.splice(v + 1, 0, n), l = !0;
                                break
                            }
                            u = this.driver.getParentElement(u)
                        }
                        l || i.unshift(n)
                    } else i.push(n);
                    return s.set(e, n), n
                }
                register(n, e) {
                    let i = this._namespaceLookup[n];
                    return i || (i = this.createNamespace(n, e)), i
                }
                registerTrigger(n, e, i) {
                    let s = this._namespaceLookup[n];
                    s && s.register(e, i) && this.totalAnimations++
                }
                destroy(n, e) {
                    n && (this.afterFlush(() => {}), this.afterFlushAnimationsDone(() => {
                        const i = this._fetchNamespace(n);
                        this.namespacesByHostElement.delete(i.hostElement);
                        const s = this._namespaceList.indexOf(i);
                        s >= 0 && this._namespaceList.splice(s, 1), i.destroy(e), delete this._namespaceLookup[n]
                    }))
                }
                _fetchNamespace(n) {
                    return this._namespaceLookup[n]
                }
                fetchNamespacesByElement(n) {
                    const e = new Set,
                        i = this.statesByElement.get(n);
                    if (i)
                        for (let s of i.values())
                            if (s.namespaceId) {
                                const r = this._fetchNamespace(s.namespaceId);
                                r && e.add(r)
                            }
                    return e
                }
                trigger(n, e, i, s) {
                    if (Wm(e)) {
                        const r = this._fetchNamespace(n);
                        if (r) return r.trigger(e, i, s), !0
                    }
                    return !1
                }
                insertNode(n, e, i, s) {
                    if (!Wm(e)) return;
                    const r = e[Za];
                    if (r && r.setForRemoval) {
                        r.setForRemoval = !1, r.setForMove = !0;
                        const l = this.collectedLeaveElements.indexOf(e);
                        l >= 0 && this.collectedLeaveElements.splice(l, 1)
                    }
                    if (n) {
                        const l = this._fetchNamespace(n);
                        l && l.insertNode(e, i)
                    }
                    s && this.collectEnterElement(e)
                }
                collectEnterElement(n) {
                    this.collectedEnterElements.push(n)
                }
                markElementAsDisabled(n, e) {
                    e ? this.disabledNodes.has(n) || (this.disabledNodes.add(n), La(n, K_)) : this.disabledNodes.has(n) && (this.disabledNodes.delete(n), fd(n, K_))
                }
                removeNode(n, e, i) {
                    if (Wm(e)) {
                        const s = n ? this._fetchNamespace(n) : null;
                        s ? s.removeNode(e, i) : this.markElementAsRemoved(n, e, !1, i);
                        const r = this.namespacesByHostElement.get(e);
                        r && r.id !== n && r.removeNode(e, i)
                    } else this._onRemovalComplete(e, i)
                }
                markElementAsRemoved(n, e, i, s, r) {
                    this.collectedLeaveElements.push(e), e[Za] = {
                        namespaceId: n,
                        setForRemoval: s,
                        hasAnimation: i,
                        removedBeforeQueried: !1,
                        previousTriggersValues: r
                    }
                }
                listen(n, e, i, s, r) {
                    return Wm(e) ? this._fetchNamespace(n).listen(e, i, s, r) : () => {}
                }
                _buildInstruction(n, e, i, s, r) {
                    return n.transition.build(this.driver, n.element, n.fromState.value, n.toState.value, i, s, n.fromState.options, n.toState.options, e, r)
                }
                destroyInnerAnimations(n) {
                    let e = this.driver.query(n, Nm, !0);
                    e.forEach(i => this.destroyActiveAnimationsForElement(i)), 0 != this.playersByQueriedElement.size && (e = this.driver.query(n, H_, !0), e.forEach(i => this.finishActiveQueriedAnimationOnElement(i)))
                }
                destroyActiveAnimationsForElement(n) {
                    const e = this.playersByElement.get(n);
                    e && e.forEach(i => {
                        i.queued ? i.markedForDestroy = !0 : i.destroy()
                    })
                }
                finishActiveQueriedAnimationOnElement(n) {
                    const e = this.playersByQueriedElement.get(n);
                    e && e.forEach(i => i.finish())
                }
                whenRenderingDone() {
                    return new Promise(n => {
                        if (this.players.length) return zl(this.players).onDone(() => n());
                        n()
                    })
                }
                processLeaveNode(n) {
                    const e = n[Za];
                    if (e && e.setForRemoval) {
                        if (n[Za] = GO, e.namespaceId) {
                            this.destroyInnerAnimations(n);
                            const i = this._fetchNamespace(e.namespaceId);
                            i && i.clearElementCache(n)
                        }
                        this._onRemovalComplete(n, e.setForRemoval)
                    }
                    n.classList ? .contains(K_) && this.markElementAsDisabled(n, !1), this.driver.query(n, ".ng-animate-disabled", !0).forEach(i => {
                        this.markElementAsDisabled(i, !1)
                    })
                }
                flush(n = -1) {
                    let e = [];
                    if (this.newHostElements.size && (this.newHostElements.forEach((i, s) => this._balanceNamespaceList(i, s)), this.newHostElements.clear()), this.totalAnimations && this.collectedEnterElements.length)
                        for (let i = 0; i < this.collectedEnterElements.length; i++) La(this.collectedEnterElements[i], "ng-star-inserted");
                    if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
                        const i = [];
                        try {
                            e = this._flushAnimations(i, n)
                        } finally {
                            for (let s = 0; s < i.length; s++) i[s]()
                        }
                    } else
                        for (let i = 0; i < this.collectedLeaveElements.length; i++) this.processLeaveNode(this.collectedLeaveElements[i]);
                    if (this.totalQueuedPlayers = 0, this.collectedEnterElements.length = 0, this.collectedLeaveElements.length = 0, this._flushFns.forEach(i => i()), this._flushFns = [], this._whenQuietFns.length) {
                        const i = this._whenQuietFns;
                        this._whenQuietFns = [], e.length ? zl(e).onDone(() => {
                            i.forEach(s => s())
                        }) : i.forEach(s => s())
                    }
                }
                reportError(n) {
                    throw function d9(t) {
                        return new ke(3402, !1)
                    }()
                }
                _flushAnimations(n, e) {
                    const i = new jm,
                        s = [],
                        r = new Map,
                        l = [],
                        u = new Map,
                        h = new Map,
                        v = new Map,
                        _ = new Set;
                    this.disabledNodes.forEach(Bt => {
                        _.add(Bt);
                        const $t = this.driver.query(Bt, ".ng-animate-queued", !0);
                        for (let Qt = 0; Qt < $t.length; Qt++) _.add($t[Qt])
                    });
                    const C = this.bodyNode,
                        M = Array.from(this.statesByElement.keys()),
                        L = qO(M, this.collectedEnterElements),
                        j = new Map;
                    let Z = 0;
                    L.forEach((Bt, $t) => {
                        const Qt = V_ + Z++;
                        j.set($t, Qt), Bt.forEach(en => La(en, Qt))
                    });
                    const Q = [],
                        Ae = new Set,
                        De = new Set;
                    for (let Bt = 0; Bt < this.collectedLeaveElements.length; Bt++) {
                        const $t = this.collectedLeaveElements[Bt],
                            Qt = $t[Za];
                        Qt && Qt.setForRemoval && (Q.push($t), Ae.add($t), Qt.hasAnimation ? this.driver.query($t, ".ng-star-inserted", !0).forEach(en => Ae.add(en)) : De.add($t))
                    }
                    const Ue = new Map,
                        it = qO(M, Array.from(Ae));
                    it.forEach((Bt, $t) => {
                        const Qt = Lm + Z++;
                        Ue.set($t, Qt), Bt.forEach(en => La(en, Qt))
                    }), n.push(() => {
                        L.forEach((Bt, $t) => {
                            const Qt = j.get($t);
                            Bt.forEach(en => fd(en, Qt))
                        }), it.forEach((Bt, $t) => {
                            const Qt = Ue.get($t);
                            Bt.forEach(en => fd(en, Qt))
                        }), Q.forEach(Bt => {
                            this.processLeaveNode(Bt)
                        })
                    });
                    const lt = [],
                        ht = [];
                    for (let Bt = this._namespaceList.length - 1; Bt >= 0; Bt--) this._namespaceList[Bt].drainQueuedTransitions(e).forEach(Qt => {
                        const en = Qt.player,
                            ai = Qt.element;
                        if (lt.push(en), this.collectedEnterElements.length) {
                            const vi = ai[Za];
                            if (vi && vi.setForMove) {
                                if (vi.previousTriggersValues && vi.previousTriggersValues.has(Qt.triggerName)) {
                                    const Fr = vi.previousTriggersValues.get(Qt.triggerName),
                                        Ut = this.statesByElement.get(Qt.element);
                                    if (Ut && Ut.has(Qt.triggerName)) {
                                        const kn = Ut.get(Qt.triggerName);
                                        kn.value = Fr, Ut.set(Qt.triggerName, kn)
                                    }
                                }
                                return void en.destroy()
                            }
                        }
                        const Ci = !C || !this.driver.containsElement(C, ai),
                            ci = Ue.get(ai),
                            Jr = j.get(ai),
                            Oi = this._buildInstruction(Qt, i, Jr, ci, Ci);
                        if (Oi.errors && Oi.errors.length) return void ht.push(Oi);
                        if (Ci) return en.onStart(() => Nc(ai, Oi.fromStyles)), en.onDestroy(() => To(ai, Oi.toStyles)), void s.push(en);
                        if (Qt.isFallbackTransition) return en.onStart(() => Nc(ai, Oi.fromStyles)), en.onDestroy(() => To(ai, Oi.toStyles)), void s.push(en);
                        const xl = [];
                        Oi.timelines.forEach(vi => {
                            vi.stretchStartingKeyframe = !0, this.disabledNodes.has(vi.element) || xl.push(vi)
                        }), Oi.timelines = xl, i.append(ai, Oi.timelines), l.push({
                            instruction: Oi,
                            player: en,
                            element: ai
                        }), Oi.queriedElements.forEach(vi => da(u, vi, []).push(en)), Oi.preStyleProps.forEach((vi, Fr) => {
                            if (vi.size) {
                                let Ut = h.get(Fr);
                                Ut || h.set(Fr, Ut = new Set), vi.forEach((kn, ei) => Ut.add(ei))
                            }
                        }), Oi.postStyleProps.forEach((vi, Fr) => {
                            let Ut = v.get(Fr);
                            Ut || v.set(Fr, Ut = new Set), vi.forEach((kn, ei) => Ut.add(ei))
                        })
                    });
                    if (ht.length) {
                        const Bt = [];
                        ht.forEach($t => {
                            Bt.push(function h9(t, n) {
                                return new ke(3505, !1)
                            }())
                        }), lt.forEach($t => $t.destroy()), this.reportError(Bt)
                    }
                    const Ht = new Map,
                        on = new Map;
                    l.forEach(Bt => {
                        const $t = Bt.element;
                        i.has($t) && (on.set($t, $t), this._beforeAnimationBuild(Bt.player.namespaceId, Bt.instruction, Ht))
                    }), s.forEach(Bt => {
                        const $t = Bt.element;
                        this._getPreviousPlayers($t, !1, Bt.namespaceId, Bt.triggerName, null).forEach(en => {
                            da(Ht, $t, []).push(en), en.destroy()
                        })
                    });
                    const hi = Q.filter(Bt => KO(Bt, h, v)),
                        Ln = new Map;
                    YO(Ln, this.driver, De, v, Jo).forEach(Bt => {
                        KO(Bt, h, v) && hi.push(Bt)
                    });
                    const rs = new Map;
                    L.forEach((Bt, $t) => {
                        YO(rs, this.driver, new Set(Bt), h, "!")
                    }), hi.forEach(Bt => {
                        const $t = Ln.get(Bt),
                            Qt = rs.get(Bt);
                        Ln.set(Bt, new Map([...$t ? .entries() ? ? [], ...Qt ? .entries() ? ? []]))
                    });
                    const Zn = [],
                        Bi = [],
                        mr = {};
                    l.forEach(Bt => {
                        const {
                            element: $t,
                            player: Qt,
                            instruction: en
                        } = Bt;
                        if (i.has($t)) {
                            if (_.has($t)) return Qt.onDestroy(() => To($t, en.toStyles)), Qt.disabled = !0, Qt.overrideTotalTime(en.totalTime), void s.push(Qt);
                            let ai = mr;
                            if (on.size > 1) {
                                let ci = $t;
                                const Jr = [];
                                for (; ci = ci.parentNode;) {
                                    const Oi = on.get(ci);
                                    if (Oi) {
                                        ai = Oi;
                                        break
                                    }
                                    Jr.push(ci)
                                }
                                Jr.forEach(Oi => on.set(Oi, ai))
                            }
                            const Ci = this._buildAnimation(Qt.namespaceId, en, Ht, r, rs, Ln);
                            if (Qt.setRealPlayer(Ci), ai === mr) Zn.push(Qt);
                            else {
                                const ci = this.playersByElement.get(ai);
                                ci && ci.length && (Qt.parentPlayer = zl(ci)), s.push(Qt)
                            }
                        } else Nc($t, en.fromStyles), Qt.onDestroy(() => To($t, en.toStyles)), Bi.push(Qt), _.has($t) && s.push(Qt)
                    }), Bi.forEach(Bt => {
                        const $t = r.get(Bt.element);
                        if ($t && $t.length) {
                            const Qt = zl($t);
                            Bt.setRealPlayer(Qt)
                        }
                    }), s.forEach(Bt => {
                        Bt.parentPlayer ? Bt.syncPlayerEvents(Bt.parentPlayer) : Bt.destroy()
                    });
                    for (let Bt = 0; Bt < Q.length; Bt++) {
                        const $t = Q[Bt],
                            Qt = $t[Za];
                        if (fd($t, Lm), Qt && Qt.hasAnimation) continue;
                        let en = [];
                        if (u.size) {
                            let Ci = u.get($t);
                            Ci && Ci.length && en.push(...Ci);
                            let ci = this.driver.query($t, H_, !0);
                            for (let Jr = 0; Jr < ci.length; Jr++) {
                                let Oi = u.get(ci[Jr]);
                                Oi && Oi.length && en.push(...Oi)
                            }
                        }
                        const ai = en.filter(Ci => !Ci.destroyed);
                        ai.length ? dX(this, $t, ai) : this.processLeaveNode($t)
                    }
                    return Q.length = 0, Zn.forEach(Bt => {
                        this.players.push(Bt), Bt.onDone(() => {
                            Bt.destroy();
                            const $t = this.players.indexOf(Bt);
                            this.players.splice($t, 1)
                        }), Bt.play()
                    }), Zn
                }
                afterFlush(n) {
                    this._flushFns.push(n)
                }
                afterFlushAnimationsDone(n) {
                    this._whenQuietFns.push(n)
                }
                _getPreviousPlayers(n, e, i, s, r) {
                    let l = [];
                    if (e) {
                        const u = this.playersByQueriedElement.get(n);
                        u && (l = u)
                    } else {
                        const u = this.playersByElement.get(n);
                        if (u) {
                            const h = !r || r == gf;
                            u.forEach(v => {
                                v.queued || !h && v.triggerName != s || l.push(v)
                            })
                        }
                    }
                    return (i || s) && (l = l.filter(u => !(i && i != u.namespaceId || s && s != u.triggerName))), l
                }
                _beforeAnimationBuild(n, e, i) {
                    const r = e.element,
                        l = e.isRemovalTransition ? void 0 : n,
                        u = e.isRemovalTransition ? void 0 : e.triggerName;
                    for (const h of e.timelines) {
                        const v = h.element,
                            _ = v !== r,
                            C = da(i, v, []);
                        this._getPreviousPlayers(v, _, l, u, e.toState).forEach(L => {
                            const j = L.getRealPlayer();
                            j.beforeDestroy && j.beforeDestroy(), L.destroy(), C.push(L)
                        })
                    }
                    Nc(r, e.fromStyles)
                }
                _buildAnimation(n, e, i, s, r, l) {
                    const u = e.triggerName,
                        h = e.element,
                        v = [],
                        _ = new Set,
                        C = new Set,
                        M = e.timelines.map(j => {
                            const Z = j.element;
                            _.add(Z);
                            const Q = Z[Za];
                            if (Q && Q.removedBeforeQueried) return new df(j.duration, j.delay);
                            const Ae = Z !== h,
                                De = function hX(t) {
                                    const n = [];
                                    return ZO(t, n), n
                                }((i.get(Z) || sX).map(Ht => Ht.getRealPlayer())).filter(Ht => !!Ht.element && Ht.element === Z),
                                Ue = r.get(Z),
                                it = l.get(Z),
                                lt = DO(this._normalizer, j.keyframes, Ue, it),
                                ht = this._buildPlayer(j, lt, De);
                            if (j.subTimeline && s && C.add(Z), Ae) {
                                const Ht = new ew(n, u, Z);
                                Ht.setRealPlayer(ht), v.push(Ht)
                            }
                            return ht
                        });
                    v.forEach(j => {
                        da(this.playersByQueriedElement, j.element, []).push(j), j.onDone(() => function lX(t, n, e) {
                            let i = t.get(n);
                            if (i) {
                                if (i.length) {
                                    const s = i.indexOf(e);
                                    i.splice(s, 1)
                                }
                                0 == i.length && t.delete(n)
                            }
                            return i
                        }(this.playersByQueriedElement, j.element, j))
                    }), _.forEach(j => La(j, IO));
                    const L = zl(M);
                    return L.onDestroy(() => {
                        _.forEach(j => fd(j, IO)), To(h, e.toStyles)
                    }), C.forEach(j => {
                        da(s, j, []).push(L)
                    }), L
                }
                _buildPlayer(n, e, i) {
                    return e.length > 0 ? this.driver.animate(n.element, e, n.duration, n.delay, n.easing, i) : new df(n.duration, n.delay)
                }
            }
            class ew {
                constructor(n, e, i) {
                    this.namespaceId = n, this.triggerName = e, this.element = i, this._player = new df, this._containsRealPlayer = !1, this._queuedCallbacks = new Map, this.destroyed = !1, this.parentPlayer = null, this.markedForDestroy = !1, this.disabled = !1, this.queued = !0, this.totalTime = 0
                }
                setRealPlayer(n) {
                    this._containsRealPlayer || (this._player = n, this._queuedCallbacks.forEach((e, i) => {
                        e.forEach(s => L_(n, i, void 0, s))
                    }), this._queuedCallbacks.clear(), this._containsRealPlayer = !0, this.overrideTotalTime(n.totalTime), this.queued = !1)
                }
                getRealPlayer() {
                    return this._player
                }
                overrideTotalTime(n) {
                    this.totalTime = n
                }
                syncPlayerEvents(n) {
                    const e = this._player;
                    e.triggerCallback && n.onStart(() => e.triggerCallback("start")), n.onDone(() => this.finish()), n.onDestroy(() => this.destroy())
                }
                _queueEvent(n, e) {
                    da(this._queuedCallbacks, n, []).push(e)
                }
                onDone(n) {
                    this.queued && this._queueEvent("done", n), this._player.onDone(n)
                }
                onStart(n) {
                    this.queued && this._queueEvent("start", n), this._player.onStart(n)
                }
                onDestroy(n) {
                    this.queued && this._queueEvent("destroy", n), this._player.onDestroy(n)
                }
                init() {
                    this._player.init()
                }
                hasStarted() {
                    return !this.queued && this._player.hasStarted()
                }
                play() {
                    !this.queued && this._player.play()
                }
                pause() {
                    !this.queued && this._player.pause()
                }
                restart() {
                    !this.queued && this._player.restart()
                }
                finish() {
                    this._player.finish()
                }
                destroy() {
                    this.destroyed = !0, this._player.destroy()
                }
                reset() {
                    !this.queued && this._player.reset()
                }
                setPosition(n) {
                    this.queued || this._player.setPosition(n)
                }
                getPosition() {
                    return this.queued ? 0 : this._player.getPosition()
                }
                triggerCallback(n) {
                    const e = this._player;
                    e.triggerCallback && e.triggerCallback(n)
                }
            }

            function Wm(t) {
                return t && 1 === t.nodeType
            }

            function XO(t, n) {
                const e = t.style.display;
                return t.style.display = n ? ? "none", e
            }

            function YO(t, n, e, i, s) {
                const r = [];
                e.forEach(h => r.push(XO(h)));
                const l = [];
                i.forEach((h, v) => {
                    const _ = new Map;
                    h.forEach(C => {
                        const M = n.computeStyle(v, C, s);
                        _.set(C, M), (!M || 0 == M.length) && (v[Za] = rX, l.push(v))
                    }), t.set(v, _)
                });
                let u = 0;
                return e.forEach(h => XO(h, r[u++])), l
            }

            function qO(t, n) {
                const e = new Map;
                if (t.forEach(u => e.set(u, [])), 0 == n.length) return e;
                const s = new Set(n),
                    r = new Map;

                function l(u) {
                    if (!u) return 1;
                    let h = r.get(u);
                    if (h) return h;
                    const v = u.parentNode;
                    return h = e.has(v) ? v : s.has(v) ? 1 : l(v), r.set(u, h), h
                }
                return n.forEach(u => {
                    const h = l(u);
                    1 !== h && e.get(h).push(u)
                }), e
            }

            function La(t, n) {
                t.classList ? .add(n)
            }

            function fd(t, n) {
                t.classList ? .remove(n)
            }

            function dX(t, n, e) {
                zl(e).onDone(() => t.processLeaveNode(n))
            }

            function ZO(t, n) {
                for (let e = 0; e < t.length; e++) {
                    const i = t[e];
                    i instanceof SO ? ZO(i.players, n) : n.push(i)
                }
            }

            function KO(t, n, e) {
                const i = e.get(t);
                if (!i) return !1;
                let s = n.get(t);
                return s ? i.forEach(r => s.add(r)) : n.set(t, i), e.delete(t), !0
            }
            class Gm {
                constructor(n, e, i) {
                    this.bodyNode = n, this._driver = e, this._normalizer = i, this._triggerCache = {}, this.onRemovalComplete = (s, r) => {}, this._transitionEngine = new oX(n, e, i), this._timelineEngine = new J9(n, e, i), this._transitionEngine.onRemovalComplete = (s, r) => this.onRemovalComplete(s, r)
                }
                registerTrigger(n, e, i, s, r) {
                    const l = n + "-" + s;
                    let u = this._triggerCache[l];
                    if (!u) {
                        const h = [],
                            _ = U_(this._driver, r, h, []);
                        if (h.length) throw function t9(t, n) {
                            return new ke(3404, !1)
                        }();
                        u = function q9(t, n, e) {
                            return new Z9(t, n, e)
                        }(s, _, this._normalizer), this._triggerCache[l] = u
                    }
                    this._transitionEngine.registerTrigger(e, s, u)
                }
                register(n, e) {
                    this._transitionEngine.register(n, e)
                }
                destroy(n, e) {
                    this._transitionEngine.destroy(n, e)
                }
                onInsert(n, e, i, s) {
                    this._transitionEngine.insertNode(n, e, i, s)
                }
                onRemove(n, e, i) {
                    this._transitionEngine.removeNode(n, e, i)
                }
                disableAnimations(n, e) {
                    this._transitionEngine.markElementAsDisabled(n, e)
                }
                process(n, e, i, s) {
                    if ("@" == i.charAt(0)) {
                        const [r, l] = AO(i);
                        this._timelineEngine.command(r, e, l, s)
                    } else this._transitionEngine.trigger(n, e, i, s)
                }
                listen(n, e, i, s, r) {
                    if ("@" == i.charAt(0)) {
                        const [l, u] = AO(i);
                        return this._timelineEngine.listen(l, e, u, r)
                    }
                    return this._transitionEngine.listen(n, e, i, s, r)
                }
                flush(n = -1) {
                    this._transitionEngine.flush(n)
                }
                get players() {
                    return [...this._transitionEngine.players, ...this._timelineEngine.players]
                }
                whenRenderingDone() {
                    return this._transitionEngine.whenRenderingDone()
                }
                afterFlushAnimationsDone(n) {
                    this._transitionEngine.afterFlushAnimationsDone(n)
                }
            }
            let gX = (() => {
                class t {
                    static# e = this.initialStylesByElement = new WeakMap;
                    constructor(e, i, s) {
                        this._element = e, this._startStyles = i, this._endStyles = s, this._state = 0;
                        let r = t.initialStylesByElement.get(e);
                        r || t.initialStylesByElement.set(e, r = new Map), this._initialStyles = r
                    }
                    start() {
                        this._state < 1 && (this._startStyles && To(this._element, this._startStyles, this._initialStyles), this._state = 1)
                    }
                    finish() {
                        this.start(), this._state < 2 && (To(this._element, this._initialStyles), this._endStyles && (To(this._element, this._endStyles), this._endStyles = null), this._state = 1)
                    }
                    destroy() {
                        this.finish(), this._state < 3 && (t.initialStylesByElement.delete(this._element), this._startStyles && (Nc(this._element, this._startStyles), this._endStyles = null), this._endStyles && (Nc(this._element, this._endStyles), this._endStyles = null), To(this._element, this._initialStyles), this._state = 3)
                    }
                }
                return t
            })();

            function tw(t) {
                let n = null;
                return t.forEach((e, i) => {
                    (function mX(t) {
                        return "display" === t || "position" === t
                    })(i) && (n = n || new Map, n.set(i, e))
                }), n
            }
            class QO {
                constructor(n, e, i, s) {
                    this.element = n, this.keyframes = e, this.options = i, this._specialStyles = s, this._onDoneFns = [], this._onStartFns = [], this._onDestroyFns = [], this._initialized = !1, this._finished = !1, this._started = !1, this._destroyed = !1, this._originalOnDoneFns = [], this._originalOnStartFns = [], this.time = 0, this.parentPlayer = null, this.currentSnapshot = new Map, this._duration = i.duration, this._delay = i.delay || 0, this.time = this._duration + this._delay
                }
                _onFinish() {
                    this._finished || (this._finished = !0, this._onDoneFns.forEach(n => n()), this._onDoneFns = [])
                }
                init() {
                    this._buildPlayer(), this._preparePlayerBeforeStart()
                }
                _buildPlayer() {
                    if (this._initialized) return;
                    this._initialized = !0;
                    const n = this.keyframes;
                    this.domPlayer = this._triggerWebAnimation(this.element, n, this.options), this._finalKeyframe = n.length ? n[n.length - 1] : new Map;
                    const e = () => this._onFinish();
                    this.domPlayer.addEventListener("finish", e), this.onDestroy(() => {
                        this.domPlayer.removeEventListener("finish", e)
                    })
                }
                _preparePlayerBeforeStart() {
                    this._delay ? this._resetDomPlayerState() : this.domPlayer.pause()
                }
                _convertKeyframesToObject(n) {
                    const e = [];
                    return n.forEach(i => {
                        e.push(Object.fromEntries(i))
                    }), e
                }
                _triggerWebAnimation(n, e, i) {
                    return n.animate(this._convertKeyframesToObject(e), i)
                }
                onStart(n) {
                    this._originalOnStartFns.push(n), this._onStartFns.push(n)
                }
                onDone(n) {
                    this._originalOnDoneFns.push(n), this._onDoneFns.push(n)
                }
                onDestroy(n) {
                    this._onDestroyFns.push(n)
                }
                play() {
                    this._buildPlayer(), this.hasStarted() || (this._onStartFns.forEach(n => n()), this._onStartFns = [], this._started = !0, this._specialStyles && this._specialStyles.start()), this.domPlayer.play()
                }
                pause() {
                    this.init(), this.domPlayer.pause()
                }
                finish() {
                    this.init(), this._specialStyles && this._specialStyles.finish(), this._onFinish(), this.domPlayer.finish()
                }
                reset() {
                    this._resetDomPlayerState(), this._destroyed = !1, this._finished = !1, this._started = !1, this._onStartFns = this._originalOnStartFns, this._onDoneFns = this._originalOnDoneFns
                }
                _resetDomPlayerState() {
                    this.domPlayer && this.domPlayer.cancel()
                }
                restart() {
                    this.reset(), this.play()
                }
                hasStarted() {
                    return this._started
                }
                destroy() {
                    this._destroyed || (this._destroyed = !0, this._resetDomPlayerState(), this._onFinish(), this._specialStyles && this._specialStyles.destroy(), this._onDestroyFns.forEach(n => n()), this._onDestroyFns = [])
                }
                setPosition(n) {
                    void 0 === this.domPlayer && this.init(), this.domPlayer.currentTime = n * this.time
                }
                getPosition() {
                    return +(this.domPlayer.currentTime ? ? 0) / this.time
                }
                get totalTime() {
                    return this._delay + this._duration
                }
                beforeDestroy() {
                    const n = new Map;
                    this.hasStarted() && this._finalKeyframe.forEach((i, s) => {
                        "offset" !== s && n.set(s, this._finished ? i : RO(this.element, s))
                    }), this.currentSnapshot = n
                }
                triggerCallback(n) {
                    const e = "start" === n ? this._onStartFns : this._onDoneFns;
                    e.forEach(i => i()), e.length = 0
                }
            }
            class vX {
                validateStyleProperty(n) {
                    return !0
                }
                validateAnimatableStyleProperty(n) {
                    return !0
                }
                matchesElement(n, e) {
                    return !1
                }
                containsElement(n, e) {
                    return EO(n, e)
                }
                getParentElement(n) {
                    return R_(n)
                }
                query(n, e, i) {
                    return MO(n, e, i)
                }
                computeStyle(n, e, i) {
                    return window.getComputedStyle(n)[e]
                }
                animate(n, e, i, s, r, l = []) {
                    const h = {
                        duration: i,
                        delay: s,
                        fill: 0 == s ? "both" : "forwards"
                    };
                    r && (h.easing = r);
                    const v = new Map,
                        _ = l.filter(L => L instanceof QO);
                    (function S9(t, n) {
                        return 0 === t || 0 === n
                    })(i, s) && _.forEach(L => {
                        L.currentSnapshot.forEach((j, Z) => v.set(Z, j))
                    });
                    let C = function _9(t) {
                        return t.length ? t[0] instanceof Map ? t : t.map(n => LO(n)) : []
                    }(e).map(L => jl(L));
                    C = function T9(t, n, e) {
                        if (e.size && n.length) {
                            let i = n[0],
                                s = [];
                            if (e.forEach((r, l) => {
                                    i.has(l) || s.push(l), i.set(l, r)
                                }), s.length)
                                for (let r = 1; r < n.length; r++) {
                                    let l = n[r];
                                    s.forEach(u => l.set(u, RO(t, u)))
                                }
                        }
                        return n
                    }(n, C, v);
                    const M = function pX(t, n) {
                        let e = null,
                            i = null;
                        return Array.isArray(n) && n.length ? (e = tw(n[0]), n.length > 1 && (i = tw(n[n.length - 1]))) : n instanceof Map && (e = tw(n)), e || i ? new gX(t, e, i) : null
                    }(n, C);
                    return new QO(n, C, h, M)
                }
            }
            let yX = (() => {
                class t extends uf {
                    constructor(e, i) {
                        super(), this._nextAnimationId = 0, this._renderer = e.createRenderer(i.body, {
                            id: "0",
                            encapsulation: _r.None,
                            styles: [],
                            data: {
                                animation: []
                            }
                        })
                    }
                    build(e) {
                        const i = this._nextAnimationId.toString();
                        this._nextAnimationId++;
                        const s = Array.isArray(e) ? wO(e) : e;
                        return JO(this._renderer, null, i, "register", [s]), new bX(i, this._renderer)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(Ac), vt(fs))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            class bX extends IG {
                constructor(n, e) {
                    super(), this._id = n, this._renderer = e
                }
                create(n, e) {
                    return new xX(this._id, n, e || {}, this._renderer)
                }
            }
            class xX {
                constructor(n, e, i, s) {
                    this.id = n, this.element = e, this._renderer = s, this.parentPlayer = null, this._started = !1, this.totalTime = 0, this._command("create", i)
                }
                _listen(n, e) {
                    return this._renderer.listen(this.element, `@@${this.id}:${n}`, e)
                }
                _command(n, ...e) {
                    return JO(this._renderer, this.element, this.id, n, e)
                }
                onDone(n) {
                    this._listen("done", n)
                }
                onStart(n) {
                    this._listen("start", n)
                }
                onDestroy(n) {
                    this._listen("destroy", n)
                }
                init() {
                    this._command("init")
                }
                hasStarted() {
                    return this._started
                }
                play() {
                    this._command("play"), this._started = !0
                }
                pause() {
                    this._command("pause")
                }
                restart() {
                    this._command("restart")
                }
                finish() {
                    this._command("finish")
                }
                destroy() {
                    this._command("destroy")
                }
                reset() {
                    this._command("reset"), this._started = !1
                }
                setPosition(n) {
                    this._command("setPosition", n)
                }
                getPosition() {
                    return this._renderer.engine.players[+this.id] ? .getPosition() ? ? 0
                }
            }

            function JO(t, n, e, i, s) {
                return t.setProperty(n, `@@${e}:${i}`, s)
            }
            const eI = "@.disabled";
            let _X = (() => {
                class t {
                    constructor(e, i, s) {
                        this.delegate = e, this.engine = i, this._zone = s, this._currentId = 0, this._microtaskId = 1, this._animationCallbacksBuffer = [], this._rendererCache = new Map, this._cdRecurDepth = 0, i.onRemovalComplete = (r, l) => {
                            const u = l ? .parentNode(r);
                            u && l.removeChild(u, r)
                        }
                    }
                    createRenderer(e, i) {
                        const r = this.delegate.createRenderer(e, i);
                        if (!(e && i && i.data && i.data.animation)) {
                            let _ = this._rendererCache.get(r);
                            return _ || (_ = new tI("", r, this.engine, () => this._rendererCache.delete(r)), this._rendererCache.set(r, _)), _
                        }
                        const l = i.id,
                            u = i.id + "-" + this._currentId;
                        this._currentId++, this.engine.register(u, e);
                        const h = _ => {
                            Array.isArray(_) ? _.forEach(h) : this.engine.registerTrigger(l, u, e, _.name, _)
                        };
                        return i.data.animation.forEach(h), new wX(this, u, r, this.engine)
                    }
                    begin() {
                        this._cdRecurDepth++, this.delegate.begin && this.delegate.begin()
                    }
                    _scheduleCountTask() {
                        queueMicrotask(() => {
                            this._microtaskId++
                        })
                    }
                    scheduleListenerCallback(e, i, s) {
                        e >= 0 && e < this._microtaskId ? this._zone.run(() => i(s)) : (0 == this._animationCallbacksBuffer.length && queueMicrotask(() => {
                            this._zone.run(() => {
                                this._animationCallbacksBuffer.forEach(r => {
                                    const [l, u] = r;
                                    l(u)
                                }), this._animationCallbacksBuffer = []
                            })
                        }), this._animationCallbacksBuffer.push([i, s]))
                    }
                    end() {
                        this._cdRecurDepth--, 0 == this._cdRecurDepth && this._zone.runOutsideAngular(() => {
                            this._scheduleCountTask(), this.engine.flush(this._microtaskId)
                        }), this.delegate.end && this.delegate.end()
                    }
                    whenRenderingDone() {
                        return this.engine.whenRenderingDone()
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(Ac), vt(Gm), vt(si))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            class tI {
                constructor(n, e, i, s) {
                    this.namespaceId = n, this.delegate = e, this.engine = i, this._onDestroy = s
                }
                get data() {
                    return this.delegate.data
                }
                destroyNode(n) {
                    this.delegate.destroyNode ? .(n)
                }
                destroy() {
                    this.engine.destroy(this.namespaceId, this.delegate), this.engine.afterFlushAnimationsDone(() => {
                        queueMicrotask(() => {
                            this.delegate.destroy()
                        })
                    }), this._onDestroy ? .()
                }
                createElement(n, e) {
                    return this.delegate.createElement(n, e)
                }
                createComment(n) {
                    return this.delegate.createComment(n)
                }
                createText(n) {
                    return this.delegate.createText(n)
                }
                appendChild(n, e) {
                    this.delegate.appendChild(n, e), this.engine.onInsert(this.namespaceId, e, n, !1)
                }
                insertBefore(n, e, i, s = !0) {
                    this.delegate.insertBefore(n, e, i), this.engine.onInsert(this.namespaceId, e, n, s)
                }
                removeChild(n, e, i) {
                    this.engine.onRemove(this.namespaceId, e, this.delegate)
                }
                selectRootElement(n, e) {
                    return this.delegate.selectRootElement(n, e)
                }
                parentNode(n) {
                    return this.delegate.parentNode(n)
                }
                nextSibling(n) {
                    return this.delegate.nextSibling(n)
                }
                setAttribute(n, e, i, s) {
                    this.delegate.setAttribute(n, e, i, s)
                }
                removeAttribute(n, e, i) {
                    this.delegate.removeAttribute(n, e, i)
                }
                addClass(n, e) {
                    this.delegate.addClass(n, e)
                }
                removeClass(n, e) {
                    this.delegate.removeClass(n, e)
                }
                setStyle(n, e, i, s) {
                    this.delegate.setStyle(n, e, i, s)
                }
                removeStyle(n, e, i) {
                    this.delegate.removeStyle(n, e, i)
                }
                setProperty(n, e, i) {
                    "@" == e.charAt(0) && e == eI ? this.disableAnimations(n, !!i) : this.delegate.setProperty(n, e, i)
                }
                setValue(n, e) {
                    this.delegate.setValue(n, e)
                }
                listen(n, e, i) {
                    return this.delegate.listen(n, e, i)
                }
                disableAnimations(n, e) {
                    this.engine.disableAnimations(n, e)
                }
            }
            class wX extends tI {
                constructor(n, e, i, s, r) {
                    super(e, i, s, r), this.factory = n, this.namespaceId = e
                }
                setProperty(n, e, i) {
                    "@" == e.charAt(0) ? "." == e.charAt(1) && e == eI ? this.disableAnimations(n, i = void 0 === i || !!i) : this.engine.process(this.namespaceId, n, e.slice(1), i) : this.delegate.setProperty(n, e, i)
                }
                listen(n, e, i) {
                    if ("@" == e.charAt(0)) {
                        const s = function CX(t) {
                            switch (t) {
                                case "body":
                                    return document.body;
                                case "document":
                                    return document;
                                case "window":
                                    return window;
                                default:
                                    return t
                            }
                        }(n);
                        let r = e.slice(1),
                            l = "";
                        return "@" != r.charAt(0) && ([r, l] = function SX(t) {
                            const n = t.indexOf(".");
                            return [t.substring(0, n), t.slice(n + 1)]
                        }(r)), this.engine.listen(this.namespaceId, s, r, l, u => {
                            this.factory.scheduleListenerCallback(u._data || -1, i, u)
                        })
                    }
                    return this.delegate.listen(n, e, i)
                }
            }
            const nI = [{
                    provide: uf,
                    useClass: yX
                }, {
                    provide: q_,
                    useFactory: function DX() {
                        return new W9
                    }
                }, {
                    provide: Gm,
                    useClass: (() => {
                        class t extends Gm {
                            constructor(e, i, s, r) {
                                super(e.body, i, s)
                            }
                            ngOnDestroy() {
                                this.flush()
                            }
                            static# e = this.\u0275fac = function(i) {
                                return new(i || t)(vt(fs), vt(B_), vt(q_), vt(So))
                            };
                            static# t = this.\u0275prov = Et({
                                token: t,
                                factory: t.\u0275fac
                            })
                        }
                        return t
                    })()
                }, {
                    provide: Ac,
                    useFactory: function AX(t, n, e) {
                        return new _X(t, n, e)
                    },
                    deps: [k_, Gm, si]
                }],
                nw = [{
                    provide: B_,
                    useFactory: () => new vX
                }, {
                    provide: y2,
                    useValue: "BrowserAnimations"
                }, ...nI],
                iI = [{
                    provide: B_,
                    useClass: PO
                }, {
                    provide: y2,
                    useValue: "NoopAnimations"
                }, ...nI];
            let kX = (() => {
                class t {
                    static withConfig(e) {
                        return {
                            ngModule: t,
                            providers: e.disableAnimations ? iI : nw
                        }
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275mod = jn({
                        type: t
                    });
                    static# n = this.\u0275inj = zn({
                        providers: nw,
                        imports: [TG]
                    })
                }
                return t
            })();

            function nl(t) {
                return !!t && (t instanceof we || _e(t.lift) && _e(t.subscribe))
            }
            const {
                isArray: EX
            } = Array, {
                getPrototypeOf: MX,
                prototype: PX,
                keys: OX
            } = Object;

            function sI(t) {
                if (1 === t.length) {
                    const n = t[0];
                    if (EX(n)) return {
                        args: n,
                        keys: null
                    };
                    if (function IX(t) {
                            return t && "object" == typeof t && MX(t) === PX
                        }(n)) {
                        const e = OX(n);
                        return {
                            args: e.map(i => n[i]),
                            keys: e
                        }
                    }
                }
                return {
                    args: t,
                    keys: null
                }
            }
            const {
                isArray: LX
            } = Array;

            function iw(t) {
                return kt(n => function FX(t, n) {
                    return LX(n) ? t(...n) : t(n)
                }(t, n))
            }

            function rI(t, n) {
                return t.reduce((e, i, s) => (e[i] = n[s], e), {})
            }

            function aI(...t) {
                const n = d(t),
                    {
                        args: e,
                        keys: i
                    } = sI(t),
                    s = new we(r => {
                        const {
                            length: l
                        } = e;
                        if (!l) return void r.complete();
                        const u = new Array(l);
                        let h = l,
                            v = l;
                        for (let _ = 0; _ < l; _++) {
                            let C = !1;
                            pt(e[_]).subscribe(Ct(r, M => {
                                C || (C = !0, v--), u[_] = M
                            }, () => h--, void 0, () => {
                                (!h || !C) && (v || r.next(i ? rI(i, u) : u), r.complete())
                            }))
                        }
                    });
                return n ? s.pipe(iw(n)) : s
            }

            function pd(...t) {
                return function NX() {
                    return ks(1)
                }()($(t, f(t)))
            }

            function Ym(t) {
                return new we(n => {
                    pt(t()).subscribe(n)
                })
            }

            function Or(t) {
                return t <= 0 ? () => os : Dt((n, e) => {
                    let i = 0;
                    n.subscribe(Ct(e, s => {
                        ++i <= t && (e.next(s), t <= i && e.complete())
                    }))
                })
            }
            const sw = {
                now: () => (sw.delegate || Date).now(),
                delegate: void 0
            };
            class RX extends He {
                constructor(n = 1 / 0, e = 1 / 0, i = sw) {
                    super(), this._bufferSize = n, this._windowTime = e, this._timestampProvider = i, this._buffer = [], this._infiniteTimeWindow = !0, this._infiniteTimeWindow = e === 1 / 0, this._bufferSize = Math.max(1, n), this._windowTime = Math.max(1, e)
                }
                next(n) {
                    const {
                        isStopped: e,
                        _buffer: i,
                        _infiniteTimeWindow: s,
                        _timestampProvider: r,
                        _windowTime: l
                    } = this;
                    e || (i.push(n), !s && i.push(r.now() + l)), this._trimBuffer(), super.next(n)
                }
                _subscribe(n) {
                    this._throwIfClosed(), this._trimBuffer();
                    const e = this._innerSubscribe(n),
                        {
                            _infiniteTimeWindow: i,
                            _buffer: s
                        } = this,
                        r = s.slice();
                    for (let l = 0; l < r.length && !n.closed; l += i ? 1 : 2) n.next(r[l]);
                    return this._checkFinalizedStatuses(n), e
                }
                _trimBuffer() {
                    const {
                        _bufferSize: n,
                        _timestampProvider: e,
                        _buffer: i,
                        _infiniteTimeWindow: s
                    } = this, r = (s ? 1 : 2) * n;
                    if (n < 1 / 0 && r < i.length && i.splice(0, i.length - r), !s) {
                        const l = e.now();
                        let u = 0;
                        for (let h = 1; h < i.length && i[h] <= l; h += 2) u = h;
                        u && i.splice(0, u + 1)
                    }
                }
            }

            function oI(t, n, e) {
                let i, s = !1;
                return t && "object" == typeof t ? ({
                    bufferSize: i = 1 / 0,
                    windowTime: n = 1 / 0,
                    refCount: s = !1,
                    scheduler: e
                } = t) : i = t ? ? 1 / 0, A({
                    connector: () => new RX(i, n, e),
                    resetOnError: !0,
                    resetOnComplete: !1,
                    resetOnRefCountZero: s
                })
            }

            function Bc(t, n) {
                return _e(n) ? zi(t, n, 1) : zi(t, 1)
            }
            class mf {}
            let lI = (() => {
                class t extends mf {
                    getTranslation(e) {
                        return b({})
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = _s(t)))(i || t)
                    }
                }(), t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class rw {}
            let cI = (() => {
                class t {
                    handle(e) {
                        return e.key
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();

            function vf(t, n) {
                if (t === n) return !0;
                if (null === t || null === n) return !1;
                if (t != t && n != n) return !0;
                let s, r, l, e = typeof t;
                if (e == typeof n && "object" == e) {
                    if (!Array.isArray(t)) {
                        if (Array.isArray(n)) return !1;
                        for (r in l = Object.create(null), t) {
                            if (!vf(t[r], n[r])) return !1;
                            l[r] = !0
                        }
                        for (r in n)
                            if (!(r in l) && typeof n[r] < "u") return !1;
                        return !0
                    }
                    if (!Array.isArray(n)) return !1;
                    if ((s = t.length) == n.length) {
                        for (r = 0; r < s; r++)
                            if (!vf(t[r], n[r])) return !1;
                        return !0
                    }
                }
                return !1
            }

            function fa(t) {
                return typeof t < "u" && null !== t
            }

            function aw(t) {
                return t && "object" == typeof t && !Array.isArray(t)
            }

            function uI(t, n) {
                let e = Object.assign({}, t);
                return aw(t) && aw(n) && Object.keys(n).forEach(i => {
                    aw(n[i]) ? i in t ? e[i] = uI(t[i], n[i]) : Object.assign(e, {
                        [i]: n[i]
                    }) : Object.assign(e, {
                        [i]: n[i]
                    })
                }), e
            }
            class qm {}
            let dI = (() => {
                class t extends qm {
                    constructor() {
                        super(...arguments), this.templateMatcher = /{{\s?([^{}\s]*)\s?}}/g
                    }
                    interpolate(e, i) {
                        let s;
                        return s = "string" == typeof e ? this.interpolateString(e, i) : "function" == typeof e ? this.interpolateFunction(e, i) : e, s
                    }
                    getValue(e, i) {
                        let s = "string" == typeof i ? i.split(".") : [i];
                        i = "";
                        do {
                            i += s.shift(), !fa(e) || !fa(e[i]) || "object" != typeof e[i] && s.length ? s.length ? i += "." : e = void 0 : (e = e[i], i = "")
                        } while (s.length);
                        return e
                    }
                    interpolateFunction(e, i) {
                        return e(i)
                    }
                    interpolateString(e, i) {
                        return i ? e.replace(this.templateMatcher, (s, r) => {
                            let l = this.getValue(i, r);
                            return fa(l) ? l : s
                        }) : e
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = _s(t)))(i || t)
                    }
                }(), t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class Zm {}
            let hI = (() => {
                class t extends Zm {
                    compile(e, i) {
                        return e
                    }
                    compileTranslations(e, i) {
                        return e
                    }
                }
                return t.\u0275fac = function() {
                    let n;
                    return function(i) {
                        return (n || (n = _s(t)))(i || t)
                    }
                }(), t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            class fI {
                constructor() {
                    this.currentLang = this.defaultLang, this.translations = {}, this.langs = [], this.onTranslationChange = new Pt, this.onLangChange = new Pt, this.onDefaultLangChange = new Pt
                }
            }
            const ow = new zt("USE_STORE"),
                lw = new zt("USE_DEFAULT_LANG"),
                cw = new zt("DEFAULT_LANGUAGE"),
                uw = new zt("USE_EXTEND");
            let Fa = (() => {
                    class t {
                        constructor(e, i, s, r, l, u = !0, h = !1, v = !1, _) {
                            this.store = e, this.currentLoader = i, this.compiler = s, this.parser = r, this.missingTranslationHandler = l, this.useDefaultLang = u, this.isolate = h, this.extend = v, this.pending = !1, this._onTranslationChange = new Pt, this._onLangChange = new Pt, this._onDefaultLangChange = new Pt, this._langs = [], this._translations = {}, this._translationRequests = {}, _ && this.setDefaultLang(_)
                        }
                        get onTranslationChange() {
                            return this.isolate ? this._onTranslationChange : this.store.onTranslationChange
                        }
                        get onLangChange() {
                            return this.isolate ? this._onLangChange : this.store.onLangChange
                        }
                        get onDefaultLangChange() {
                            return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange
                        }
                        get defaultLang() {
                            return this.isolate ? this._defaultLang : this.store.defaultLang
                        }
                        set defaultLang(e) {
                            this.isolate ? this._defaultLang = e : this.store.defaultLang = e
                        }
                        get currentLang() {
                            return this.isolate ? this._currentLang : this.store.currentLang
                        }
                        set currentLang(e) {
                            this.isolate ? this._currentLang = e : this.store.currentLang = e
                        }
                        get langs() {
                            return this.isolate ? this._langs : this.store.langs
                        }
                        set langs(e) {
                            this.isolate ? this._langs = e : this.store.langs = e
                        }
                        get translations() {
                            return this.isolate ? this._translations : this.store.translations
                        }
                        set translations(e) {
                            this.isolate ? this._translations = e : this.store.translations = e
                        }
                        setDefaultLang(e) {
                            if (e === this.defaultLang) return;
                            let i = this.retrieveTranslations(e);
                            typeof i < "u" ? (null == this.defaultLang && (this.defaultLang = e), i.pipe(Or(1)).subscribe(s => {
                                this.changeDefaultLang(e)
                            })) : this.changeDefaultLang(e)
                        }
                        getDefaultLang() {
                            return this.defaultLang
                        }
                        use(e) {
                            if (e === this.currentLang) return b(this.translations[e]);
                            let i = this.retrieveTranslations(e);
                            return typeof i < "u" ? (this.currentLang || (this.currentLang = e), i.pipe(Or(1)).subscribe(s => {
                                this.changeLang(e)
                            }), i) : (this.changeLang(e), b(this.translations[e]))
                        }
                        retrieveTranslations(e) {
                            let i;
                            return (typeof this.translations[e] > "u" || this.extend) && (this._translationRequests[e] = this._translationRequests[e] || this.getTranslation(e), i = this._translationRequests[e]), i
                        }
                        getTranslation(e) {
                            this.pending = !0;
                            const i = this.currentLoader.getTranslation(e).pipe(oI(1), Or(1));
                            return this.loadingTranslations = i.pipe(kt(s => this.compiler.compileTranslations(s, e)), oI(1), Or(1)), this.loadingTranslations.subscribe({
                                next: s => {
                                    this.translations[e] = this.extend && this.translations[e] ? { ...s,
                                        ...this.translations[e]
                                    } : s, this.updateLangs(), this.pending = !1
                                },
                                error: s => {
                                    this.pending = !1
                                }
                            }), i
                        }
                        setTranslation(e, i, s = !1) {
                            i = this.compiler.compileTranslations(i, e), this.translations[e] = (s || this.extend) && this.translations[e] ? uI(this.translations[e], i) : i, this.updateLangs(), this.onTranslationChange.emit({
                                lang: e,
                                translations: this.translations[e]
                            })
                        }
                        getLangs() {
                            return this.langs
                        }
                        addLangs(e) {
                            e.forEach(i => {
                                -1 === this.langs.indexOf(i) && this.langs.push(i)
                            })
                        }
                        updateLangs() {
                            this.addLangs(Object.keys(this.translations))
                        }
                        getParsedResult(e, i, s) {
                            let r;
                            if (i instanceof Array) {
                                let l = {},
                                    u = !1;
                                for (let h of i) l[h] = this.getParsedResult(e, h, s), nl(l[h]) && (u = !0);
                                return u ? aI(i.map(v => nl(l[v]) ? l[v] : b(l[v]))).pipe(kt(v => {
                                    let _ = {};
                                    return v.forEach((C, M) => {
                                        _[i[M]] = C
                                    }), _
                                })) : l
                            }
                            if (e && (r = this.parser.interpolate(this.parser.getValue(e, i), s)), typeof r > "u" && null != this.defaultLang && this.defaultLang !== this.currentLang && this.useDefaultLang && (r = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], i), s)), typeof r > "u") {
                                let l = {
                                    key: i,
                                    translateService: this
                                };
                                typeof s < "u" && (l.interpolateParams = s), r = this.missingTranslationHandler.handle(l)
                            }
                            return typeof r < "u" ? r : i
                        }
                        get(e, i) {
                            if (!fa(e) || !e.length) throw new Error('Parameter "key" required');
                            if (this.pending) return this.loadingTranslations.pipe(Bc(s => nl(s = this.getParsedResult(s, e, i)) ? s : b(s))); {
                                let s = this.getParsedResult(this.translations[this.currentLang], e, i);
                                return nl(s) ? s : b(s)
                            }
                        }
                        getStreamOnTranslationChange(e, i) {
                            if (!fa(e) || !e.length) throw new Error('Parameter "key" required');
                            return pd(Ym(() => this.get(e, i)), this.onTranslationChange.pipe(X(s => {
                                const r = this.getParsedResult(s.translations, e, i);
                                return "function" == typeof r.subscribe ? r : b(r)
                            })))
                        }
                        stream(e, i) {
                            if (!fa(e) || !e.length) throw new Error('Parameter "key" required');
                            return pd(Ym(() => this.get(e, i)), this.onLangChange.pipe(X(s => {
                                const r = this.getParsedResult(s.translations, e, i);
                                return nl(r) ? r : b(r)
                            })))
                        }
                        instant(e, i) {
                            if (!fa(e) || !e.length) throw new Error('Parameter "key" required');
                            let s = this.getParsedResult(this.translations[this.currentLang], e, i);
                            if (nl(s)) {
                                if (e instanceof Array) {
                                    let r = {};
                                    return e.forEach((l, u) => {
                                        r[e[u]] = e[u]
                                    }), r
                                }
                                return e
                            }
                            return s
                        }
                        set(e, i, s = this.currentLang) {
                            this.translations[s][e] = this.compiler.compile(i, s), this.updateLangs(), this.onTranslationChange.emit({
                                lang: s,
                                translations: this.translations[s]
                            })
                        }
                        changeLang(e) {
                            this.currentLang = e, this.onLangChange.emit({
                                lang: e,
                                translations: this.translations[e]
                            }), null == this.defaultLang && this.changeDefaultLang(e)
                        }
                        changeDefaultLang(e) {
                            this.defaultLang = e, this.onDefaultLangChange.emit({
                                lang: e,
                                translations: this.translations[e]
                            })
                        }
                        reloadLang(e) {
                            return this.resetLang(e), this.getTranslation(e)
                        }
                        resetLang(e) {
                            this._translationRequests[e] = void 0, this.translations[e] = void 0
                        }
                        getBrowserLang() {
                            if (typeof window > "u" || typeof window.navigator > "u") return;
                            let e = window.navigator.languages ? window.navigator.languages[0] : null;
                            return e = e || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage, typeof e > "u" ? void 0 : (-1 !== e.indexOf("-") && (e = e.split("-")[0]), -1 !== e.indexOf("_") && (e = e.split("_")[0]), e)
                        }
                        getBrowserCultureLang() {
                            if (typeof window > "u" || typeof window.navigator > "u") return;
                            let e = window.navigator.languages ? window.navigator.languages[0] : null;
                            return e = e || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage, e
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(vt(fI), vt(mf), vt(Zm), vt(qm), vt(rw), vt(lw), vt(ow), vt(uw), vt(cw))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                Ir = (() => {
                    class t {
                        constructor(e, i, s) {
                            this.translateService = e, this.element = i, this._ref = s, this.onTranslationChangeSub || (this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe(r => {
                                r.lang === this.translateService.currentLang && this.checkNodes(!0, r.translations)
                            })), this.onLangChangeSub || (this.onLangChangeSub = this.translateService.onLangChange.subscribe(r => {
                                this.checkNodes(!0, r.translations)
                            })), this.onDefaultLangChangeSub || (this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe(r => {
                                this.checkNodes(!0)
                            }))
                        }
                        set translate(e) {
                            e && (this.key = e, this.checkNodes())
                        }
                        set translateParams(e) {
                            vf(this.currentParams, e) || (this.currentParams = e, this.checkNodes(!0))
                        }
                        ngAfterViewChecked() {
                            this.checkNodes()
                        }
                        checkNodes(e = !1, i) {
                            let s = this.element.nativeElement.childNodes;
                            s.length || (this.setContent(this.element.nativeElement, this.key), s = this.element.nativeElement.childNodes);
                            for (let r = 0; r < s.length; ++r) {
                                let l = s[r];
                                if (3 === l.nodeType) {
                                    let u;
                                    if (e && (l.lastKey = null), fa(l.lookupKey)) u = l.lookupKey;
                                    else if (this.key) u = this.key;
                                    else {
                                        let h = this.getContent(l),
                                            v = h.trim();
                                        v.length && (l.lookupKey = v, h !== l.currentValue ? (u = v, l.originalContent = h || l.originalContent) : l.originalContent ? u = l.originalContent.trim() : h !== l.currentValue && (u = v, l.originalContent = h || l.originalContent))
                                    }
                                    this.updateValue(u, l, i)
                                }
                            }
                        }
                        updateValue(e, i, s) {
                            if (e) {
                                if (i.lastKey === e && this.lastParams === this.currentParams) return;
                                this.lastParams = this.currentParams;
                                let r = l => {
                                    l !== e && (i.lastKey = e), i.originalContent || (i.originalContent = this.getContent(i)), i.currentValue = fa(l) ? l : i.originalContent || e, this.setContent(i, this.key ? i.currentValue : i.originalContent.replace(e, i.currentValue)), this._ref.markForCheck()
                                };
                                if (fa(s)) {
                                    let l = this.translateService.getParsedResult(s, e, this.currentParams);
                                    nl(l) ? l.subscribe({
                                        next: r
                                    }) : r(l)
                                } else this.translateService.get(e, this.currentParams).subscribe(r)
                            }
                        }
                        getContent(e) {
                            return fa(e.textContent) ? e.textContent : e.data
                        }
                        setContent(e, i) {
                            fa(e.textContent) ? e.textContent = i : e.data = i
                        }
                        ngOnDestroy() {
                            this.onLangChangeSub && this.onLangChangeSub.unsubscribe(), this.onDefaultLangChangeSub && this.onDefaultLangChangeSub.unsubscribe(), this.onTranslationChangeSub && this.onTranslationChangeSub.unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(Fa), $e(ii), $e(Xr))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "translate", ""],
                            ["", "ngx-translate", ""]
                        ],
                        inputs: {
                            translate: "translate",
                            translateParams: "translateParams"
                        }
                    }), t
                })(),
                Vc = (() => {
                    class t {
                        constructor(e, i) {
                            this.translate = e, this._ref = i, this.value = "", this.lastKey = null, this.lastParams = []
                        }
                        updateValue(e, i, s) {
                            let r = l => {
                                this.value = void 0 !== l ? l : e, this.lastKey = e, this._ref.markForCheck()
                            };
                            if (s) {
                                let l = this.translate.getParsedResult(s, e, i);
                                nl(l.subscribe) ? l.subscribe(r) : r(l)
                            }
                            this.translate.get(e, i).subscribe(r)
                        }
                        transform(e, ...i) {
                            if (!e || !e.length) return e;
                            if (vf(e, this.lastKey) && vf(i, this.lastParams)) return this.value;
                            let s;
                            if (fa(i[0]) && i.length)
                                if ("string" == typeof i[0] && i[0].length) {
                                    let r = i[0].replace(/(\')?([a-zA-Z0-9_]+)(\')?(\s)?:/g, '"$2":').replace(/:(\s)?(\')(.*?)(\')/g, ':"$3"');
                                    try {
                                        s = JSON.parse(r)
                                    } catch {
                                        throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${i[0]}`)
                                    }
                                } else "object" == typeof i[0] && !Array.isArray(i[0]) && (s = i[0]);
                            return this.lastKey = e, this.lastParams = i, this.updateValue(e, s), this._dispose(), this.onTranslationChange || (this.onTranslationChange = this.translate.onTranslationChange.subscribe(r => {
                                this.lastKey && r.lang === this.translate.currentLang && (this.lastKey = null, this.updateValue(e, s, r.translations))
                            })), this.onLangChange || (this.onLangChange = this.translate.onLangChange.subscribe(r => {
                                this.lastKey && (this.lastKey = null, this.updateValue(e, s, r.translations))
                            })), this.onDefaultLangChange || (this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {
                                this.lastKey && (this.lastKey = null, this.updateValue(e, s))
                            })), this.value
                        }
                        _dispose() {
                            typeof this.onTranslationChange < "u" && (this.onTranslationChange.unsubscribe(), this.onTranslationChange = void 0), typeof this.onLangChange < "u" && (this.onLangChange.unsubscribe(), this.onLangChange = void 0), typeof this.onDefaultLangChange < "u" && (this.onDefaultLangChange.unsubscribe(), this.onDefaultLangChange = void 0)
                        }
                        ngOnDestroy() {
                            this._dispose()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(Fa, 16), $e(Xr, 16))
                    }, t.\u0275pipe = Es({
                        name: "translate",
                        type: t,
                        pure: !1
                    }), t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                BX = (() => {
                    class t {
                        static forRoot(e = {}) {
                            return {
                                ngModule: t,
                                providers: [e.loader || {
                                    provide: mf,
                                    useClass: lI
                                }, e.compiler || {
                                    provide: Zm,
                                    useClass: hI
                                }, e.parser || {
                                    provide: qm,
                                    useClass: dI
                                }, e.missingTranslationHandler || {
                                    provide: rw,
                                    useClass: cI
                                }, fI, {
                                    provide: ow,
                                    useValue: e.isolate
                                }, {
                                    provide: lw,
                                    useValue: e.useDefaultLang
                                }, {
                                    provide: uw,
                                    useValue: e.extend
                                }, {
                                    provide: cw,
                                    useValue: e.defaultLanguage
                                }, Fa]
                            }
                        }
                        static forChild(e = {}) {
                            return {
                                ngModule: t,
                                providers: [e.loader || {
                                    provide: mf,
                                    useClass: lI
                                }, e.compiler || {
                                    provide: Zm,
                                    useClass: hI
                                }, e.parser || {
                                    provide: qm,
                                    useClass: dI
                                }, e.missingTranslationHandler || {
                                    provide: rw,
                                    useClass: cI
                                }, {
                                    provide: ow,
                                    useValue: e.isolate
                                }, {
                                    provide: lw,
                                    useValue: e.useDefaultLang
                                }, {
                                    provide: uw,
                                    useValue: e.extend
                                }, {
                                    provide: cw,
                                    useValue: e.defaultLanguage
                                }, Fa]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({}), t
                })();

            function hr(t, n) {
                return Dt((e, i) => {
                    let s = 0;
                    e.subscribe(Ct(i, r => t.call(n, r, s++) && i.next(r)))
                })
            }

            function gd(t) {
                return Dt((n, e) => {
                    try {
                        n.subscribe(e)
                    } finally {
                        e.add(t)
                    }
                })
            }
            class Km {}
            class Qm {}
            class Do {
                constructor(n) {
                    this.normalizedNames = new Map, this.lazyUpdate = null, n ? "string" == typeof n ? this.lazyInit = () => {
                        this.headers = new Map, n.split("\n").forEach(e => {
                            const i = e.indexOf(":");
                            if (i > 0) {
                                const s = e.slice(0, i),
                                    r = s.toLowerCase(),
                                    l = e.slice(i + 1).trim();
                                this.maybeSetNormalizedName(s, r), this.headers.has(r) ? this.headers.get(r).push(l) : this.headers.set(r, [l])
                            }
                        })
                    } : typeof Headers < "u" && n instanceof Headers ? (this.headers = new Map, n.forEach((e, i) => {
                        this.setHeaderEntries(i, e)
                    })) : this.lazyInit = () => {
                        this.headers = new Map, Object.entries(n).forEach(([e, i]) => {
                            this.setHeaderEntries(e, i)
                        })
                    } : this.headers = new Map
                }
                has(n) {
                    return this.init(), this.headers.has(n.toLowerCase())
                }
                get(n) {
                    this.init();
                    const e = this.headers.get(n.toLowerCase());
                    return e && e.length > 0 ? e[0] : null
                }
                keys() {
                    return this.init(), Array.from(this.normalizedNames.values())
                }
                getAll(n) {
                    return this.init(), this.headers.get(n.toLowerCase()) || null
                }
                append(n, e) {
                    return this.clone({
                        name: n,
                        value: e,
                        op: "a"
                    })
                }
                set(n, e) {
                    return this.clone({
                        name: n,
                        value: e,
                        op: "s"
                    })
                }
                delete(n, e) {
                    return this.clone({
                        name: n,
                        value: e,
                        op: "d"
                    })
                }
                maybeSetNormalizedName(n, e) {
                    this.normalizedNames.has(e) || this.normalizedNames.set(e, n)
                }
                init() {
                    this.lazyInit && (this.lazyInit instanceof Do ? this.copyFrom(this.lazyInit) : this.lazyInit(), this.lazyInit = null, this.lazyUpdate && (this.lazyUpdate.forEach(n => this.applyUpdate(n)), this.lazyUpdate = null))
                }
                copyFrom(n) {
                    n.init(), Array.from(n.headers.keys()).forEach(e => {
                        this.headers.set(e, n.headers.get(e)), this.normalizedNames.set(e, n.normalizedNames.get(e))
                    })
                }
                clone(n) {
                    const e = new Do;
                    return e.lazyInit = this.lazyInit && this.lazyInit instanceof Do ? this.lazyInit : this, e.lazyUpdate = (this.lazyUpdate || []).concat([n]), e
                }
                applyUpdate(n) {
                    const e = n.name.toLowerCase();
                    switch (n.op) {
                        case "a":
                        case "s":
                            let i = n.value;
                            if ("string" == typeof i && (i = [i]), 0 === i.length) return;
                            this.maybeSetNormalizedName(n.name, e);
                            const s = ("a" === n.op ? this.headers.get(e) : void 0) || [];
                            s.push(...i), this.headers.set(e, s);
                            break;
                        case "d":
                            const r = n.value;
                            if (r) {
                                let l = this.headers.get(e);
                                if (!l) return;
                                l = l.filter(u => -1 === r.indexOf(u)), 0 === l.length ? (this.headers.delete(e), this.normalizedNames.delete(e)) : this.headers.set(e, l)
                            } else this.headers.delete(e), this.normalizedNames.delete(e)
                    }
                }
                setHeaderEntries(n, e) {
                    const i = (Array.isArray(e) ? e : [e]).map(r => r.toString()),
                        s = n.toLowerCase();
                    this.headers.set(s, i), this.maybeSetNormalizedName(n, s)
                }
                forEach(n) {
                    this.init(), Array.from(this.normalizedNames.keys()).forEach(e => n(this.normalizedNames.get(e), this.headers.get(e)))
                }
            }
            class VX {
                encodeKey(n) {
                    return pI(n)
                }
                encodeValue(n) {
                    return pI(n)
                }
                decodeKey(n) {
                    return decodeURIComponent(n)
                }
                decodeValue(n) {
                    return decodeURIComponent(n)
                }
            }
            const zX = /%(\d[a-f0-9])/gi,
                jX = {
                    40: "@",
                    "3A": ":",
                    24: "$",
                    "2C": ",",
                    "3B": ";",
                    "3D": "=",
                    "3F": "?",
                    "2F": "/"
                };

            function pI(t) {
                return encodeURIComponent(t).replace(zX, (n, e) => jX[e] ? ? n)
            }

            function Jm(t) {
                return `${t}`
            }
            class $l {
                constructor(n = {}) {
                    if (this.updates = null, this.cloneFrom = null, this.encoder = n.encoder || new VX, n.fromString) {
                        if (n.fromObject) throw new Error("Cannot specify both fromString and fromObject.");
                        this.map = function HX(t, n) {
                            const e = new Map;
                            return t.length > 0 && t.replace(/^\?/, "").split("&").forEach(s => {
                                const r = s.indexOf("="),
                                    [l, u] = -1 == r ? [n.decodeKey(s), ""] : [n.decodeKey(s.slice(0, r)), n.decodeValue(s.slice(r + 1))],
                                    h = e.get(l) || [];
                                h.push(u), e.set(l, h)
                            }), e
                        }(n.fromString, this.encoder)
                    } else n.fromObject ? (this.map = new Map, Object.keys(n.fromObject).forEach(e => {
                        const i = n.fromObject[e],
                            s = Array.isArray(i) ? i.map(Jm) : [Jm(i)];
                        this.map.set(e, s)
                    })) : this.map = null
                }
                has(n) {
                    return this.init(), this.map.has(n)
                }
                get(n) {
                    this.init();
                    const e = this.map.get(n);
                    return e ? e[0] : null
                }
                getAll(n) {
                    return this.init(), this.map.get(n) || null
                }
                keys() {
                    return this.init(), Array.from(this.map.keys())
                }
                append(n, e) {
                    return this.clone({
                        param: n,
                        value: e,
                        op: "a"
                    })
                }
                appendAll(n) {
                    const e = [];
                    return Object.keys(n).forEach(i => {
                        const s = n[i];
                        Array.isArray(s) ? s.forEach(r => {
                            e.push({
                                param: i,
                                value: r,
                                op: "a"
                            })
                        }) : e.push({
                            param: i,
                            value: s,
                            op: "a"
                        })
                    }), this.clone(e)
                }
                set(n, e) {
                    return this.clone({
                        param: n,
                        value: e,
                        op: "s"
                    })
                }
                delete(n, e) {
                    return this.clone({
                        param: n,
                        value: e,
                        op: "d"
                    })
                }
                toString() {
                    return this.init(), this.keys().map(n => {
                        const e = this.encoder.encodeKey(n);
                        return this.map.get(n).map(i => e + "=" + this.encoder.encodeValue(i)).join("&")
                    }).filter(n => "" !== n).join("&")
                }
                clone(n) {
                    const e = new $l({
                        encoder: this.encoder
                    });
                    return e.cloneFrom = this.cloneFrom || this, e.updates = (this.updates || []).concat(n), e
                }
                init() {
                    null === this.map && (this.map = new Map), null !== this.cloneFrom && (this.cloneFrom.init(), this.cloneFrom.keys().forEach(n => this.map.set(n, this.cloneFrom.map.get(n))), this.updates.forEach(n => {
                        switch (n.op) {
                            case "a":
                            case "s":
                                const e = ("a" === n.op ? this.map.get(n.param) : void 0) || [];
                                e.push(Jm(n.value)), this.map.set(n.param, e);
                                break;
                            case "d":
                                if (void 0 === n.value) {
                                    this.map.delete(n.param);
                                    break
                                } {
                                    let i = this.map.get(n.param) || [];
                                    const s = i.indexOf(Jm(n.value)); - 1 !== s && i.splice(s, 1), i.length > 0 ? this.map.set(n.param, i) : this.map.delete(n.param)
                                }
                        }
                    }), this.cloneFrom = this.updates = null)
                }
            }
            class $X {
                constructor() {
                    this.map = new Map
                }
                set(n, e) {
                    return this.map.set(n, e), this
                }
                get(n) {
                    return this.map.has(n) || this.map.set(n, n.defaultValue()), this.map.get(n)
                }
                delete(n) {
                    return this.map.delete(n), this
                }
                has(n) {
                    return this.map.has(n)
                }
                keys() {
                    return this.map.keys()
                }
            }

            function gI(t) {
                return typeof ArrayBuffer < "u" && t instanceof ArrayBuffer
            }

            function mI(t) {
                return typeof Blob < "u" && t instanceof Blob
            }

            function vI(t) {
                return typeof FormData < "u" && t instanceof FormData
            }
            class yf {
                constructor(n, e, i, s) {
                    let r;
                    if (this.url = e, this.body = null, this.reportProgress = !1, this.withCredentials = !1, this.responseType = "json", this.method = n.toUpperCase(), function UX(t) {
                            switch (t) {
                                case "DELETE":
                                case "GET":
                                case "HEAD":
                                case "OPTIONS":
                                case "JSONP":
                                    return !1;
                                default:
                                    return !0
                            }
                        }(this.method) || s ? (this.body = void 0 !== i ? i : null, r = s) : r = i, r && (this.reportProgress = !!r.reportProgress, this.withCredentials = !!r.withCredentials, r.responseType && (this.responseType = r.responseType), r.headers && (this.headers = r.headers), r.context && (this.context = r.context), r.params && (this.params = r.params)), this.headers || (this.headers = new Do), this.context || (this.context = new $X), this.params) {
                        const l = this.params.toString();
                        if (0 === l.length) this.urlWithParams = e;
                        else {
                            const u = e.indexOf("?");
                            this.urlWithParams = e + (-1 === u ? "?" : u < e.length - 1 ? "&" : "") + l
                        }
                    } else this.params = new $l, this.urlWithParams = e
                }
                serializeBody() {
                    return null === this.body ? null : gI(this.body) || mI(this.body) || vI(this.body) || function WX(t) {
                        return typeof URLSearchParams < "u" && t instanceof URLSearchParams
                    }(this.body) || "string" == typeof this.body ? this.body : this.body instanceof $l ? this.body.toString() : "object" == typeof this.body || "boolean" == typeof this.body || Array.isArray(this.body) ? JSON.stringify(this.body) : this.body.toString()
                }
                detectContentTypeHeader() {
                    return null === this.body || vI(this.body) ? null : mI(this.body) ? this.body.type || null : gI(this.body) ? null : "string" == typeof this.body ? "text/plain" : this.body instanceof $l ? "application/x-www-form-urlencoded;charset=UTF-8" : "object" == typeof this.body || "number" == typeof this.body || "boolean" == typeof this.body ? "application/json" : null
                }
                clone(n = {}) {
                    const e = n.method || this.method,
                        i = n.url || this.url,
                        s = n.responseType || this.responseType,
                        r = void 0 !== n.body ? n.body : this.body,
                        l = void 0 !== n.withCredentials ? n.withCredentials : this.withCredentials,
                        u = void 0 !== n.reportProgress ? n.reportProgress : this.reportProgress;
                    let h = n.headers || this.headers,
                        v = n.params || this.params;
                    const _ = n.context ? ? this.context;
                    return void 0 !== n.setHeaders && (h = Object.keys(n.setHeaders).reduce((C, M) => C.set(M, n.setHeaders[M]), h)), n.setParams && (v = Object.keys(n.setParams).reduce((C, M) => C.set(M, n.setParams[M]), v)), new yf(e, i, r, {
                        params: v,
                        headers: h,
                        context: _,
                        reportProgress: u,
                        responseType: s,
                        withCredentials: l
                    })
                }
            }
            var md = function(t) {
                return t[t.Sent = 0] = "Sent", t[t.UploadProgress = 1] = "UploadProgress", t[t.ResponseHeader = 2] = "ResponseHeader", t[t.DownloadProgress = 3] = "DownloadProgress", t[t.Response = 4] = "Response", t[t.User = 5] = "User", t
            }(md || {});
            class dw {
                constructor(n, e = 200, i = "OK") {
                    this.headers = n.headers || new Do, this.status = void 0 !== n.status ? n.status : e, this.statusText = n.statusText || i, this.url = n.url || null, this.ok = this.status >= 200 && this.status < 300
                }
            }
            class hw extends dw {
                constructor(n = {}) {
                    super(n), this.type = md.ResponseHeader
                }
                clone(n = {}) {
                    return new hw({
                        headers: n.headers || this.headers,
                        status: void 0 !== n.status ? n.status : this.status,
                        statusText: n.statusText || this.statusText,
                        url: n.url || this.url || void 0
                    })
                }
            }
            class vd extends dw {
                constructor(n = {}) {
                    super(n), this.type = md.Response, this.body = void 0 !== n.body ? n.body : null
                }
                clone(n = {}) {
                    return new vd({
                        body: void 0 !== n.body ? n.body : this.body,
                        headers: n.headers || this.headers,
                        status: void 0 !== n.status ? n.status : this.status,
                        statusText: n.statusText || this.statusText,
                        url: n.url || this.url || void 0
                    })
                }
            }
            class yI extends dw {
                constructor(n) {
                    super(n, 0, "Unknown Error"), this.name = "HttpErrorResponse", this.ok = !1, this.message = this.status >= 200 && this.status < 300 ? `Http failure during parsing for ${n.url||"(unknown url)"}` : `Http failure response for ${n.url||"(unknown url)"}: ${n.status} ${n.statusText}`, this.error = n.error || null
                }
            }

            function fw(t, n) {
                return {
                    body: n,
                    headers: t.headers,
                    context: t.context,
                    observe: t.observe,
                    params: t.params,
                    reportProgress: t.reportProgress,
                    responseType: t.responseType,
                    withCredentials: t.withCredentials
                }
            }
            let Ul = (() => {
                class t {
                    constructor(e) {
                        this.handler = e
                    }
                    request(e, i, s = {}) {
                        let r;
                        if (e instanceof yf) r = e;
                        else {
                            let h, v;
                            h = s.headers instanceof Do ? s.headers : new Do(s.headers), s.params && (v = s.params instanceof $l ? s.params : new $l({
                                fromObject: s.params
                            })), r = new yf(e, i, void 0 !== s.body ? s.body : null, {
                                headers: h,
                                context: s.context,
                                params: v,
                                reportProgress: s.reportProgress,
                                responseType: s.responseType || "json",
                                withCredentials: s.withCredentials
                            })
                        }
                        const l = b(r).pipe(Bc(h => this.handler.handle(h)));
                        if (e instanceof yf || "events" === s.observe) return l;
                        const u = l.pipe(hr(h => h instanceof vd));
                        switch (s.observe || "body") {
                            case "body":
                                switch (r.responseType) {
                                    case "arraybuffer":
                                        return u.pipe(kt(h => {
                                            if (null !== h.body && !(h.body instanceof ArrayBuffer)) throw new Error("Response is not an ArrayBuffer.");
                                            return h.body
                                        }));
                                    case "blob":
                                        return u.pipe(kt(h => {
                                            if (null !== h.body && !(h.body instanceof Blob)) throw new Error("Response is not a Blob.");
                                            return h.body
                                        }));
                                    case "text":
                                        return u.pipe(kt(h => {
                                            if (null !== h.body && "string" != typeof h.body) throw new Error("Response is not a string.");
                                            return h.body
                                        }));
                                    default:
                                        return u.pipe(kt(h => h.body))
                                }
                            case "response":
                                return u;
                            default:
                                throw new Error(`Unreachable: unhandled observe type ${s.observe}}`)
                        }
                    }
                    delete(e, i = {}) {
                        return this.request("DELETE", e, i)
                    }
                    get(e, i = {}) {
                        return this.request("GET", e, i)
                    }
                    head(e, i = {}) {
                        return this.request("HEAD", e, i)
                    }
                    jsonp(e, i) {
                        return this.request("JSONP", e, {
                            params: (new $l).append(i, "JSONP_CALLBACK"),
                            observe: "body",
                            responseType: "json"
                        })
                    }
                    options(e, i = {}) {
                        return this.request("OPTIONS", e, i)
                    }
                    patch(e, i, s = {}) {
                        return this.request("PATCH", e, fw(s, i))
                    }
                    post(e, i, s = {}) {
                        return this.request("POST", e, fw(s, i))
                    }
                    put(e, i, s = {}) {
                        return this.request("PUT", e, fw(s, i))
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(Km))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();

            function _I(t, n) {
                return n(t)
            }

            function XX(t, n) {
                return (e, i) => n.intercept(e, {
                    handle: s => t(s, i)
                })
            }
            const qX = new zt(""),
                bf = new zt(""),
                wI = new zt("");

            function ZX() {
                let t = null;
                return (n, e) => {
                    null === t && (t = (Xt(qX, {
                        optional: !0
                    }) ? ? []).reduceRight(XX, _I));
                    const i = Xt(dm),
                        s = i.add();
                    return t(n, e).pipe(gd(() => i.remove(s)))
                }
            }
            let CI = (() => {
                class t extends Km {
                    constructor(e, i) {
                        super(), this.backend = e, this.injector = i, this.chain = null, this.pendingTasks = Xt(dm)
                    }
                    handle(e) {
                        if (null === this.chain) {
                            const s = Array.from(new Set([...this.injector.get(bf), ...this.injector.get(wI, [])]));
                            this.chain = s.reduceRight((r, l) => function YX(t, n, e) {
                                return (i, s) => e.runInContext(() => n(i, r => t(r, s)))
                            }(r, l, this.injector), _I)
                        }
                        const i = this.pendingTasks.add();
                        return this.chain(e, s => this.backend.handle(s)).pipe(gd(() => this.pendingTasks.remove(i)))
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(Qm), vt(la))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            const eY = /^\)\]\}',?\n/;
            let TI = (() => {
                class t {
                    constructor(e) {
                        this.xhrFactory = e
                    }
                    handle(e) {
                        if ("JSONP" === e.method) throw new ke(-2800, !1);
                        const i = this.xhrFactory;
                        return (i.\u0275loadImpl ? $(i.\u0275loadImpl()) : b(null)).pipe(X(() => new we(r => {
                            const l = i.build();
                            if (l.open(e.method, e.urlWithParams), e.withCredentials && (l.withCredentials = !0), e.headers.forEach((Z, Q) => l.setRequestHeader(Z, Q.join(","))), e.headers.has("Accept") || l.setRequestHeader("Accept", "application/json, text/plain, */*"), !e.headers.has("Content-Type")) {
                                const Z = e.detectContentTypeHeader();
                                null !== Z && l.setRequestHeader("Content-Type", Z)
                            }
                            if (e.responseType) {
                                const Z = e.responseType.toLowerCase();
                                l.responseType = "json" !== Z ? Z : "text"
                            }
                            const u = e.serializeBody();
                            let h = null;
                            const v = () => {
                                    if (null !== h) return h;
                                    const Z = l.statusText || "OK",
                                        Q = new Do(l.getAllResponseHeaders()),
                                        Ae = function tY(t) {
                                            return "responseURL" in t && t.responseURL ? t.responseURL : /^X-Request-URL:/m.test(t.getAllResponseHeaders()) ? t.getResponseHeader("X-Request-URL") : null
                                        }(l) || e.url;
                                    return h = new hw({
                                        headers: Q,
                                        status: l.status,
                                        statusText: Z,
                                        url: Ae
                                    }), h
                                },
                                _ = () => {
                                    let {
                                        headers: Z,
                                        status: Q,
                                        statusText: Ae,
                                        url: De
                                    } = v(), Ue = null;
                                    204 !== Q && (Ue = typeof l.response > "u" ? l.responseText : l.response), 0 === Q && (Q = Ue ? 200 : 0);
                                    let it = Q >= 200 && Q < 300;
                                    if ("json" === e.responseType && "string" == typeof Ue) {
                                        const lt = Ue;
                                        Ue = Ue.replace(eY, "");
                                        try {
                                            Ue = "" !== Ue ? JSON.parse(Ue) : null
                                        } catch (ht) {
                                            Ue = lt, it && (it = !1, Ue = {
                                                error: ht,
                                                text: Ue
                                            })
                                        }
                                    }
                                    it ? (r.next(new vd({
                                        body: Ue,
                                        headers: Z,
                                        status: Q,
                                        statusText: Ae,
                                        url: De || void 0
                                    })), r.complete()) : r.error(new yI({
                                        error: Ue,
                                        headers: Z,
                                        status: Q,
                                        statusText: Ae,
                                        url: De || void 0
                                    }))
                                },
                                C = Z => {
                                    const {
                                        url: Q
                                    } = v(), Ae = new yI({
                                        error: Z,
                                        status: l.status || 0,
                                        statusText: l.statusText || "Unknown Error",
                                        url: Q || void 0
                                    });
                                    r.error(Ae)
                                };
                            let M = !1;
                            const L = Z => {
                                    M || (r.next(v()), M = !0);
                                    let Q = {
                                        type: md.DownloadProgress,
                                        loaded: Z.loaded
                                    };
                                    Z.lengthComputable && (Q.total = Z.total), "text" === e.responseType && l.responseText && (Q.partialText = l.responseText), r.next(Q)
                                },
                                j = Z => {
                                    let Q = {
                                        type: md.UploadProgress,
                                        loaded: Z.loaded
                                    };
                                    Z.lengthComputable && (Q.total = Z.total), r.next(Q)
                                };
                            return l.addEventListener("load", _), l.addEventListener("error", C), l.addEventListener("timeout", C), l.addEventListener("abort", C), e.reportProgress && (l.addEventListener("progress", L), null !== u && l.upload && l.upload.addEventListener("progress", j)), l.send(u), r.next({
                                type: md.Sent
                            }), () => {
                                l.removeEventListener("error", C), l.removeEventListener("abort", C), l.removeEventListener("load", _), l.removeEventListener("timeout", C), e.reportProgress && (l.removeEventListener("progress", L), null !== u && l.upload && l.upload.removeEventListener("progress", j)), l.readyState !== l.DONE && l.abort()
                            }
                        })))
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(tO))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            const pw = new zt("XSRF_ENABLED"),
                DI = new zt("XSRF_COOKIE_NAME", {
                    providedIn: "root",
                    factory: () => "XSRF-TOKEN"
                }),
                AI = new zt("XSRF_HEADER_NAME", {
                    providedIn: "root",
                    factory: () => "X-XSRF-TOKEN"
                });
            class kI {}
            let sY = (() => {
                class t {
                    constructor(e, i, s) {
                        this.doc = e, this.platform = i, this.cookieName = s, this.lastCookieString = "", this.lastToken = null, this.parseCount = 0
                    }
                    getToken() {
                        if ("server" === this.platform) return null;
                        const e = this.doc.cookie || "";
                        return e !== this.lastCookieString && (this.parseCount++, this.lastToken = WP(e, this.cookieName), this.lastCookieString = e), this.lastToken
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(fs), vt(ws), vt(DI))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();

            function rY(t, n) {
                const e = t.url.toLowerCase();
                if (!Xt(pw) || "GET" === t.method || "HEAD" === t.method || e.startsWith("http://") || e.startsWith("https://")) return n(t);
                const i = Xt(kI).getToken(),
                    s = Xt(AI);
                return null != i && !t.headers.has(s) && (t = t.clone({
                    headers: t.headers.set(s, i)
                })), n(t)
            }
            var Wl = function(t) {
                return t[t.Interceptors = 0] = "Interceptors", t[t.LegacyInterceptors = 1] = "LegacyInterceptors", t[t.CustomXsrfConfiguration = 2] = "CustomXsrfConfiguration", t[t.NoXsrfProtection = 3] = "NoXsrfProtection", t[t.JsonpSupport = 4] = "JsonpSupport", t[t.RequestsMadeViaParent = 5] = "RequestsMadeViaParent", t[t.Fetch = 6] = "Fetch", t
            }(Wl || {});

            function aY(...t) {
                const n = [Ul, TI, CI, {
                    provide: Km,
                    useExisting: CI
                }, {
                    provide: Qm,
                    useExisting: TI
                }, {
                    provide: bf,
                    useValue: rY,
                    multi: !0
                }, {
                    provide: pw,
                    useValue: !0
                }, {
                    provide: kI,
                    useClass: sY
                }];
                for (const e of t) n.push(...e.\u0275providers);
                return function Tb(t) {
                    return {\
                        u0275providers: t
                    }
                }(n)
            }
            const EI = new zt("LEGACY_INTERCEPTOR_FN");

            function oY() {
                return function Hc(t, n) {
                    return {\
                        u0275kind: t,
                        \u0275providers: n
                    }
                }(Wl.LegacyInterceptors, [{
                    provide: EI,
                    useFactory: ZX
                }, {
                    provide: bf,
                    useExisting: EI,
                    multi: !0
                }])
            }
            let lY = (() => {
                class t {
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275mod = jn({
                        type: t
                    });
                    static# n = this.\u0275inj = zn({
                        providers: [aY(oY())]
                    })
                }
                return t
            })();
            class pY {
                constructor(n, e = "/assets/i18n/", i = ".json") {
                    this.http = n, this.prefix = e, this.suffix = i
                }
                getTranslation(n) {
                    return this.http.get(`${this.prefix}${n}${this.suffix}`)
                }
            }

            function zc(t, n) {
                const e = _e(t) ? t : () => t,
                    i = s => s.error(e());
                return new we(n ? s => n.schedule(i, 0, s) : i)
            }

            function Wn(t, n, e) {
                const i = _e(t) || n || e ? {
                    next: t,
                    error: n,
                    complete: e
                } : t;
                return i ? Dt((s, r) => {
                    var l;
                    null === (l = i.subscribe) || void 0 === l || l.call(i);
                    let u = !0;
                    s.subscribe(Ct(r, h => {
                        var v;
                        null === (v = i.next) || void 0 === v || v.call(i, h), r.next(h)
                    }, () => {
                        var h;
                        u = !1, null === (h = i.complete) || void 0 === h || h.call(i), r.complete()
                    }, h => {
                        var v;
                        u = !1, null === (v = i.error) || void 0 === v || v.call(i, h), r.error(h)
                    }, () => {
                        var h, v;
                        u && (null === (h = i.unsubscribe) || void 0 === h || h.call(i)), null === (v = i.finalize) || void 0 === v || v.call(i)
                    }))
                }) : Ge
            }

            function Gl(t) {
                return Dt((n, e) => {
                    let r, i = null,
                        s = !1;
                    i = n.subscribe(Ct(e, void 0, void 0, l => {
                        r = pt(t(l, Gl(t)(n))), i ? (i.unsubscribe(), i = null, r.subscribe(e)) : s = !0
                    })), s && (i.unsubscribe(), i = null, r.subscribe(e))
                })
            }
            const gY = ["*"];
            class tv {}
            let mY = (() => {
                class t extends tv {
                    constructor(e) {
                        super(), this.http = e
                    }
                    getSvg(e) {
                        return this.http.get(e, {
                            responseType: "text"
                        })
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(vt(Ul))
                }, t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const MI = new zt("SERVER_URL");
            let nv = (() => {
                class t {
                    constructor(e, i, s, r) {
                        this.loader = e, this.platformId = i, this.serverUrl = s, this._document = r, this.iconsByUrl = new Map, this.iconsLoadingByUrl = new Map, this.document = this._document
                    }
                    addSvg(e, i) {
                        if (!this.iconsByUrl.has(e)) {
                            const s = this.document.createElement("DIV");
                            s.innerHTML = i;
                            const r = s.querySelector("svg");
                            this.iconsByUrl.set(e, r)
                        }
                    }
                    loadSvg(e, i = e) {
                        if (this.serverUrl && null === e.match(/^(http(s)?):/) && (i = e = this.serverUrl + e), this.iconsByUrl.has(i)) return b(this.iconsByUrl.get(i));
                        if (this.iconsLoadingByUrl.has(i)) return this.iconsLoadingByUrl.get(i);
                        const s = this.loader.getSvg(e).pipe(kt(r => {
                            const l = this.document.createElement("DIV");
                            return l.innerHTML = r, l.querySelector("svg")
                        }), Wn(r => this.iconsByUrl.set(i, r)), Gl(r => (console.error(r), zc(r))), gd(() => this.iconsLoadingByUrl.delete(i)), A());
                        return this.iconsLoadingByUrl.set(i, s), s
                    }
                    getSvgByName(e) {
                        return this.iconsByUrl.has(e) ? b(this.iconsByUrl.get(e)) : this.iconsLoadingByUrl.has(e) ? this.iconsLoadingByUrl.get(e) : zc(`No svg with name '${e}' has been loaded`)
                    }
                    unloadSvg(e) {
                        this.iconsByUrl.has(e) && this.iconsByUrl.delete(e)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(vt(tv), vt(ws), vt(MI, 8), vt(fs, 8))
                }, t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac
                }), t
            })();
            const yY = {
                provide: nv,
                deps: [
                    [new Sc, new Ch, nv], tv, [ws],
                    [new Sc, MI],
                    [new Sc, fs]
                ],
                useFactory: function vY(t, n, e, i, s) {
                    return t || new nv(n, e, i, s)
                }
            };
            class PI {
                constructor() {
                    this.loaded = !1
                }
            }
            let Xl = (() => {
                    class t {
                        constructor(e, i, s, r, l) {
                            this.element = e, this.differs = i, this.renderer = s, this.iconReg = r, this.cdr = l, this.stretch = !1, this.applyClass = !1, this.applyCss = !1, this.helper = new PI, this._svgStyle = null
                        }
                        set svgStyle(e) {
                            this._svgStyle = e, !this.helper.differ && e && (this.helper.differ = this.differs.find(e).create())
                        }
                        ngOnInit() {
                            this.init()
                        }
                        ngOnDestroy() {
                            this.destroy()
                        }
                        ngOnChanges(e) {
                            const i = this.element.nativeElement.firstChild;
                            (e.src || e.name) && (this.helper.loaded && this.destroy(), this.init()), e.stretch && this.stylize(), e.applyClass && (this.applyClass ? this.setClass(i, null, this.klass) : this.setClass(i, this.klass, null)), e.svgClass && this.setClass(i, e.svgClass.previousValue, e.svgClass.currentValue), e.klass && (this.setClass(this.element.nativeElement, e.klass.previousValue, e.klass.currentValue), this.setClass(i, e.klass.previousValue, this.applyClass ? e.klass.currentValue : null)), e.viewBox && (this.helper.loaded && this.destroy(), this.init()), e.applyCss && (console.warn("applyCss deprecated since 9.1.0, will be removed in 10.0.0"), console.warn("use applyClass instead")), e.svgAriaLabel && this.doAria(e.svgAriaLabel.currentValue)
                        }
                        ngDoCheck() {
                            if (this.helper.svg && this.helper.differ) {
                                const e = this.helper.differ.diff(this._svgStyle);
                                e && this.applyChanges(e)
                            }
                        }
                        init() {
                            if (this.name) {
                                const e = this.iconReg.getSvgByName(this.name);
                                e && (this.helper.icnSub = e.subscribe(i => this.initSvg(i)))
                            } else if (this.src) {
                                const e = this.iconReg.loadSvg(this.src);
                                e && (this.helper.icnSub = e.subscribe(i => this.initSvg(i)))
                            } else this.element.nativeElement.innerHTML = "", this.cdr.markForCheck()
                        }
                        initSvg(e) {
                            !this.helper.loaded && e && (this.setSvg(e), this.resetDiffer())
                        }
                        destroy() {
                            this.helper.icnSub && this.helper.icnSub.unsubscribe(), this.helper = new PI
                        }
                        resetDiffer() {
                            this._svgStyle && !this.helper.differ && (this.helper.differ = this.differs.find(this._svgStyle).create())
                        }
                        setSvg(e) {
                            if (!this.helper.loaded && e) {
                                this.helper.svg = e;
                                const i = e.cloneNode(!0),
                                    s = this.element.nativeElement;
                                if (s.innerHTML = "", this.renderer.appendChild(s, i), this.helper.loaded = !0, this.copyNgContentAttribute(s, i), this.klass && this.applyClass && this.setClass(s.firstChild, null, this.klass), this.svgClass && this.setClass(s.firstChild, null, this.svgClass), this.viewBox)
                                    if ("auto" === this.viewBox) {
                                        const r = i.getAttribute("width"),
                                            l = i.getAttribute("height");
                                        l && r && (this.renderer.setAttribute(i, "viewBox", `0 0 ${r} ${l}`), this.renderer.removeAttribute(i, "width"), this.renderer.removeAttribute(i, "height"))
                                    } else "" !== this.viewBox && (this.renderer.setAttribute(i, "viewBox", this.viewBox), this.renderer.removeAttribute(i, "width"), this.renderer.removeAttribute(i, "height"));
                                this.stylize(), void 0 === this.svgAriaLabel && s.firstChild.hasAttribute("aria-label") || this.doAria(this.svgAriaLabel || ""), this.cdr.markForCheck()
                            }
                        }
                        copyNgContentAttribute(e, i) {
                            const s = e.attributes,
                                r = s.length;
                            for (let l = 0; l < r; l += 1) {
                                const u = s.item(l);
                                if (u && u.name.startsWith("_ngcontent")) {
                                    this.setNgContentAttribute(i, u.name);
                                    break
                                }
                            }
                        }
                        setNgContentAttribute(e, i) {
                            this.renderer.setAttribute(e, i, "");
                            const s = e.childNodes.length;
                            for (let r = 0; r < s; r += 1) {
                                const l = e.childNodes[r];
                                l instanceof Element && this.setNgContentAttribute(l, i)
                            }
                        }
                        stylize() {
                            if (this.helper.svg) {
                                const e = this.element.nativeElement.firstChild;
                                !0 === this.stretch ? this.renderer.setAttribute(e, "preserveAspectRatio", "none") : !1 === this.stretch && this.renderer.removeAttribute(e, "preserveAspectRatio")
                            }
                        }
                        applyChanges(e) {
                            e.forEachRemovedItem(i => this.setStyle(i.key, null)), e.forEachAddedItem(i => this.setStyle(i.key, i.currentValue)), e.forEachChangedItem(i => this.setStyle(i.key, i.currentValue))
                        }
                        setStyle(e, i) {
                            const [s, r] = e.split("."), l = this.element.nativeElement.firstChild;
                            null !== (i = null !== i && r ? `${i}${r}` : i) ? this.renderer.setStyle(l, s, i) : this.renderer.removeStyle(l, s)
                        }
                        setClass(e, i, s) {
                            if (e) {
                                if (i) {
                                    const r = (Array.isArray(i) ? i : i.split(" ")).filter(l => l);
                                    for (const l of r) this.renderer.removeClass(e, l)
                                }
                                if (s) {
                                    const r = (Array.isArray(s) ? s : s.split(" ")).filter(l => l);
                                    for (const l of r) this.renderer.addClass(e, l)
                                }
                            }
                        }
                        doAria(e) {
                            const i = this.element.nativeElement.firstChild;
                            i && ("" === e ? (this.renderer.setAttribute(i, "aria-hidden", "true"), this.renderer.removeAttribute(i, "aria-label")) : (this.renderer.removeAttribute(i, "aria-hidden"), this.renderer.setAttribute(i, "aria-label", e)))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii), $e(cd), $e(Ts), $e(nv), $e(Xr))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["svg-icon"]
                        ],
                        inputs: {
                            src: "src",
                            name: "name",
                            stretch: "stretch",
                            applyClass: "applyClass",
                            applyCss: "applyCss",
                            svgClass: "svgClass",
                            klass: ["class", "klass"],
                            viewBox: "viewBox",
                            svgAriaLabel: "svgAriaLabel",
                            svgStyle: "svgStyle"
                        },
                        features: [ni],
                        ngContentSelectors: gY,
                        decls: 1,
                        vars: 0,
                        template: function(e, i) {
                            1 & e && (Rl(), Go(0))
                        },
                        encapsulation: 2
                    }), t
                })(),
                bY = (() => {
                    class t {
                        static forRoot(e = {}) {
                            return {
                                ngModule: t,
                                providers: [yY, e.loader || {
                                    provide: tv,
                                    useClass: mY
                                }]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [Oa]
                        ]
                    }), t
                })();
            class xY {
                constructor(n, e) {
                    this.open = n, this.close = e || n
                }
                isManual() {
                    return "manual" === this.open || "manual" === this.close
                }
            }
            const _Y = {
                hover: ["mouseover", "mouseout"],
                focus: ["focusin", "focusout"]
            };
            const Ls = typeof window < "u" && window || {},
                Fs = Ls.document;
            var II = function(t) {
                return t.isBs4 = "bs4", t.isBs5 = "bs5", t
            }(II || {});
            let il;

            function LI() {
                const t = Ls.document.createElement("span");
                t.innerText = "testing bs version", t.classList.add("d-none"), t.classList.add("pl-1"), Ls.document.head.appendChild(t);
                const n = Ls.getComputedStyle(t).paddingLeft;
                return n && parseFloat(n) ? (Ls.document.head.removeChild(t), "bs4") : (Ls.document.head.removeChild(t), "bs5")
            }

            function xf() {
                return {
                    isBs4: (il || (il = LI()), "bs4" === il),
                    isBs5: (il || (il = LI()), "bs5" === il)
                }
            }
            class kY {
                static reflow(n) {}
                static getStyles(n) {
                    let e = n.ownerDocument.defaultView;
                    return (!e || !e.opener) && (e = Ls), e.getComputedStyle(n)
                }
                static stackOverflowConfig() {
                    const n = function AY() {
                        const t = xf(),
                            n = Object.keys(t).find(e => t[e]);
                        return II[n]
                    }();
                    return {
                        crossorigin: "anonymous",
                        integrity: "bs5" === n ? "sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" : "sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2",
                        cdnLink: "bs5" === n ? "https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" : "https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
                    }
                }
            }
            typeof console > "u" || console;
            const MY = ["addListener", "removeListener"],
                PY = ["addEventListener", "removeEventListener"],
                OY = ["on", "off"];

            function yd(t, n, e, i) {
                if (_e(e) && (i = e, e = void 0), i) return yd(t, n, e).pipe(iw(i));
                const [s, r] = function FY(t) {
                    return _e(t.addEventListener) && _e(t.removeEventListener)
                }(t) ? PY.map(l => u => t[l](n, u, e)): function IY(t) {
                    return _e(t.addListener) && _e(t.removeListener)
                }(t) ? MY.map(NI(t, n)) : function LY(t) {
                    return _e(t.on) && _e(t.off)
                }(t) ? OY.map(NI(t, n)) : [];
                if (!s && xs(t)) return zi(l => yd(l, n, e))(pt(t));
                if (!s) throw new TypeError("Invalid event target");
                return new we(l => {
                    const u = (...h) => l.next(1 < h.length ? h : h[0]);
                    return s(u), () => r(u)
                })
            }

            function NI(t, n) {
                return e => i => t[e](n, i)
            }
            class NY extends U {
                constructor(n, e) {
                    super()
                }
                schedule(n, e = 0) {
                    return this
                }
            }
            const iv = {
                setInterval(t, n, ...e) {
                    const {
                        delegate: i
                    } = iv;
                    return i ? .setInterval ? i.setInterval(t, n, ...e) : setInterval(t, n, ...e)
                },
                clearInterval(t) {
                    const {
                        delegate: n
                    } = iv;
                    return (n ? .clearInterval || clearInterval)(t)
                },
                delegate: void 0
            };
            class gw extends NY {
                constructor(n, e) {
                    super(n, e), this.scheduler = n, this.work = e, this.pending = !1
                }
                schedule(n, e = 0) {
                    var i;
                    if (this.closed) return this;
                    this.state = n;
                    const s = this.id,
                        r = this.scheduler;
                    return null != s && (this.id = this.recycleAsyncId(r, s, e)), this.pending = !0, this.delay = e, this.id = null !== (i = this.id) && void 0 !== i ? i : this.requestAsyncId(r, this.id, e), this
                }
                requestAsyncId(n, e, i = 0) {
                    return iv.setInterval(n.flush.bind(n, this), i)
                }
                recycleAsyncId(n, e, i = 0) {
                    if (null != i && this.delay === i && !1 === this.pending) return e;
                    null != e && iv.clearInterval(e)
                }
                execute(n, e) {
                    if (this.closed) return new Error("executing a cancelled action");
                    this.pending = !1;
                    const i = this._execute(n, e);
                    if (i) return i;
                    !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null))
                }
                _execute(n, e) {
                    let s, i = !1;
                    try {
                        this.work(n)
                    } catch (r) {
                        i = !0, s = r || new Error("Scheduled action threw falsy error")
                    }
                    if (i) return this.unsubscribe(), s
                }
                unsubscribe() {
                    if (!this.closed) {
                        const {
                            id: n,
                            scheduler: e
                        } = this, {
                            actions: i
                        } = e;
                        this.work = this.state = this.scheduler = null, this.pending = !1, Ce(i, this), null != n && (this.id = this.recycleAsyncId(e, n, null)), this.delay = null, super.unsubscribe()
                    }
                }
            }
            const _f = {
                schedule(t) {
                    let n = requestAnimationFrame,
                        e = cancelAnimationFrame;
                    const {
                        delegate: i
                    } = _f;
                    i && (n = i.requestAnimationFrame, e = i.cancelAnimationFrame);
                    const s = n(r => {
                        e = void 0, t(r)
                    });
                    return new U(() => e ? .(s))
                },
                requestAnimationFrame(...t) {
                    const {
                        delegate: n
                    } = _f;
                    return (n ? .requestAnimationFrame || requestAnimationFrame)(...t)
                },
                cancelAnimationFrame(...t) {
                    const {
                        delegate: n
                    } = _f;
                    return (n ? .cancelAnimationFrame || cancelAnimationFrame)(...t)
                },
                delegate: void 0
            };
            class wf {
                constructor(n, e = wf.now) {
                    this.schedulerActionCtor = n, this.now = e
                }
                schedule(n, e = 0, i) {
                    return new this.schedulerActionCtor(this, n).schedule(i, e)
                }
            }
            wf.now = sw.now;
            class mw extends wf {
                constructor(n, e = wf.now) {
                    super(n, e), this.actions = [], this._active = !1
                }
                flush(n) {
                    const {
                        actions: e
                    } = this;
                    if (this._active) return void e.push(n);
                    let i;
                    this._active = !0;
                    do {
                        if (i = n.execute(n.state, n.delay)) break
                    } while (n = e.shift());
                    if (this._active = !1, i) {
                        for (; n = e.shift();) n.unsubscribe();
                        throw i
                    }
                }
            }
            const VY = new class BY extends mw {
                flush(n) {
                    this._active = !0;
                    const e = this._scheduled;
                    this._scheduled = void 0;
                    const {
                        actions: i
                    } = this;
                    let s;
                    n = n || i.shift();
                    do {
                        if (s = n.execute(n.state, n.delay)) break
                    } while ((n = i[0]) && n.id === e && i.shift());
                    if (this._active = !1, s) {
                        for (;
                            (n = i[0]) && n.id === e && i.shift();) n.unsubscribe();
                        throw s
                    }
                }
            }(class RY extends gw {
                constructor(n, e) {
                    super(n, e), this.scheduler = n, this.work = e
                }
                requestAsyncId(n, e, i = 0) {
                    return null !== i && i > 0 ? super.requestAsyncId(n, e, i) : (n.actions.push(this), n._scheduled || (n._scheduled = _f.requestAnimationFrame(() => n.flush(void 0))))
                }
                recycleAsyncId(n, e, i = 0) {
                    var s;
                    if (null != i ? i > 0 : this.delay > 0) return super.recycleAsyncId(n, e, i);
                    const {
                        actions: r
                    } = n;
                    null != e && (null === (s = r[r.length - 1]) || void 0 === s ? void 0 : s.id) !== e && (_f.cancelAnimationFrame(e), n._scheduled = void 0)
                }
            });
            var RI = function(t) {
                    return t.top = "top", t.bottom = "bottom", t.left = "left", t.right = "right", t.auto = "auto", t.end = "right", t.start = "left", t["top left"] = "top left", t["top right"] = "top right", t["right top"] = "right top", t["right bottom"] = "right bottom", t["bottom right"] = "bottom right", t["bottom left"] = "bottom left", t["left bottom"] = "left bottom", t["left top"] = "left top", t["top start"] = "top left", t["top end"] = "top right", t["end top"] = "right top", t["end bottom"] = "right bottom", t["bottom end"] = "bottom right", t["bottom start"] = "bottom left", t["start bottom"] = "start bottom", t["start top"] = "left top", t
                }(RI || {}),
                vw = function(t) {
                    return t.top = "top", t.bottom = "bottom", t.left = "start", t.right = "end", t.auto = "auto", t.end = "end", t.start = "start", t["top left"] = "top start", t["top right"] = "top end", t["right top"] = "end top", t["right bottom"] = "end bottom", t["bottom right"] = "bottom end", t["bottom left"] = "bottom start", t["left bottom"] = "start bottom", t["left top"] = "start top", t["top start"] = "top start", t["top end"] = "top end", t["end top"] = "end top", t["end bottom"] = "end bottom", t["bottom end"] = "bottom end", t["bottom start"] = "bottom start", t["start bottom"] = "start bottom", t["start top"] = "start top", t
                }(vw || {});

            function jc(t, n) {
                if (1 !== t.nodeType) return [];
                const i = t.ownerDocument.defaultView ? .getComputedStyle(t, null);
                return n ? i && i[n] : i
            }

            function yw(t) {
                if (!t) return document.documentElement;
                let i, e = t ? .offsetParent;
                for (; null === e && t.nextElementSibling && i !== t.nextElementSibling;) i = t.nextElementSibling, e = i.offsetParent;
                const s = e && e.nodeName;
                return s && "BODY" !== s && "HTML" !== s ? e && -1 !== ["TH", "TD", "TABLE"].indexOf(e.nodeName) && "static" === jc(e, "position") ? yw(e) : e : i ? i.ownerDocument.documentElement : document.documentElement
            }

            function bw(t) {
                return null !== t.parentNode ? bw(t.parentNode) : t
            }

            function sv(t, n) {
                if (!(t && t.nodeType && n && n.nodeType)) return document.documentElement;
                const e = t.compareDocumentPosition(n) & Node.DOCUMENT_POSITION_FOLLOWING,
                    i = e ? t : n,
                    s = e ? n : t,
                    r = document.createRange();
                r.setStart(i, 0), r.setEnd(s, 0);
                const l = r.commonAncestorContainer;
                if (t !== l && n !== l || i.contains(s)) return function HY(t) {
                    const {
                        nodeName: n
                    } = t;
                    return "BODY" !== n && ("HTML" === n || yw(t.firstElementChild) === t)
                }(l) ? l : yw(l);
                const u = bw(t);
                return u.host ? sv(u.host, n) : sv(t, bw(n).host)
            }

            function BI(t) {
                if (!t || !t.parentElement) return document.documentElement;
                let n = t.parentElement;
                for (; n ? .parentElement && "none" === jc(n, "transform");) n = n.parentElement;
                return n || document.documentElement
            }

            function VI(t, n) {
                const e = "x" === n ? "Left" : "Top",
                    i = "Left" === e ? "Right" : "Bottom";
                return parseFloat(t[`border${e}Width`]) + parseFloat(t[`border${i}Width`])
            }

            function HI(t, n, e, i) {
                return Math.max(n[`offset${t}`], n[`scroll${t}`], e[`client${t}`], e[`offset${t}`], e[`scroll${t}`], 0)
            }

            function zI(t) {
                const n = t.body,
                    e = t.documentElement;
                return {
                    height: HI("Height", n, e),
                    width: HI("Width", n, e)
                }
            }

            function Cf(t) {
                return { ...t,
                    right: (t.left || 0) + t.width,
                    bottom: (t.top || 0) + t.height
                }
            }

            function is(t) {
                return "number" == typeof t || "[object Number]" === Object.prototype.toString.call(t)
            }

            function jI(t) {
                const n = t.getBoundingClientRect();
                if (!(n && is(n.top) && is(n.left) && is(n.bottom) && is(n.right))) return n;
                const e = {
                        left: n.left,
                        top: n.top,
                        width: n.right - n.left,
                        height: n.bottom - n.top
                    },
                    i = "HTML" === t.nodeName ? zI(t.ownerDocument) : void 0,
                    s = i ? .width || t.clientWidth || is(n.right) && is(e.left) && n.right - e.left || 0,
                    r = i ? .height || t.clientHeight || is(n.bottom) && is(e.top) && n.bottom - e.top || 0;
                let l = t.offsetWidth - s,
                    u = t.offsetHeight - r;
                if (l || u) {
                    const h = jc(t);
                    l -= VI(h, "x"), u -= VI(h, "y"), e.width -= l, e.height -= u
                }
                return Cf(e)
            }

            function xw(t) {
                return "HTML" === t.nodeName ? t : t.parentNode || t.host
            }

            function _w(t) {
                if (!t) return document.body;
                switch (t.nodeName) {
                    case "HTML":
                    case "BODY":
                        return t.ownerDocument.body;
                    case "#document":
                        return t.body
                }
                const {
                    overflow: n,
                    overflowX: e,
                    overflowY: i
                } = jc(t);
                return /(auto|scroll|overlay)/.test(String(n) + String(i) + String(e)) ? t : _w(xw(t))
            }

            function ww(t, n, e = !1) {
                const i = "HTML" === n.nodeName,
                    s = jI(t),
                    r = jI(n),
                    u = (_w(t), jc(n)),
                    h = parseFloat(u.borderTopWidth),
                    v = parseFloat(u.borderLeftWidth);
                e && i && (r.top = Math.max(r.top ? ? 0, 0), r.left = Math.max(r.left ? ? 0, 0));
                const _ = Cf({
                    top: (s.top ? ? 0) - (r.top ? ? 0) - h,
                    left: (s.left ? ? 0) - (r.left ? ? 0) - v,
                    width: s.width,
                    height: s.height
                });
                if (_.marginTop = 0, _.marginLeft = 0, i) {
                    const C = parseFloat(u.marginTop),
                        M = parseFloat(u.marginLeft);
                    is(_.top) && (_.top -= h - C), is(_.bottom) && (_.bottom -= h - C), is(_.left) && (_.left -= v - M), is(_.right) && (_.right -= v - M), _.marginTop = C, _.marginLeft = M
                }
                return _
            }

            function $I(t, n = "top") {
                const e = "top" === n ? "scrollTop" : "scrollLeft",
                    i = t.nodeName;
                return "BODY" === i || "HTML" === i ? (t.ownerDocument.scrollingElement || t.ownerDocument.documentElement)[e] : t[e]
            }

            function UI(t) {
                const n = t.nodeName;
                return "BODY" !== n && "HTML" !== n && ("fixed" === jc(t, "position") || UI(xw(t)))
            }

            function Cw(t, n, e = 0, i, s = !1) {
                let r = {
                    top: 0,
                    left: 0
                };
                const l = s ? BI(t) : sv(t, n);
                if ("viewport" === i) r = function jY(t, n = !1) {
                    const e = t.ownerDocument.documentElement,
                        i = ww(t, e),
                        s = Math.max(e.clientWidth, window.innerWidth || 0),
                        r = Math.max(e.clientHeight, window.innerHeight || 0),
                        l = n ? 0 : $I(e),
                        u = n ? 0 : $I(e, "left");
                    return Cf({
                        top: l - Number(i ? .top) + Number(i ? .marginTop),
                        left: u - Number(i ? .left) + Number(i ? .marginLeft),
                        width: s,
                        height: r
                    })
                }(l, s);
                else {
                    let u;
                    "scrollParent" === i ? (u = _w(xw(n)), "BODY" === u.nodeName && (u = t.ownerDocument.documentElement)) : u = "window" === i ? t.ownerDocument.documentElement : i;
                    const h = ww(u, l, s);
                    if (h && "HTML" === u.nodeName && !UI(l)) {
                        const {
                            height: v,
                            width: _
                        } = zI(t.ownerDocument);
                        is(r.top) && is(h.top) && is(h.marginTop) && (r.top += h.top - h.marginTop), is(r.top) && (r.bottom = Number(v) + Number(h.top)), is(r.left) && is(h.left) && is(h.marginLeft) && (r.left += h.left - h.marginLeft), is(r.top) && (r.right = Number(_) + Number(h.left))
                    } else h && (r = h)
                }
                return is(r.left) && (r.left += e), is(r.top) && (r.top += e), is(r.right) && (r.right -= e), is(r.bottom) && (r.bottom -= e), r
            }

            function $Y({
                width: t,
                height: n
            }) {
                return t * n
            }

            function WI(t, n, e, i, s = ["top", "bottom", "right", "left"], r = "viewport", l = 0) {
                if (-1 === t.indexOf("auto")) return t;
                const u = Cw(e, i, l, r),
                    h = {
                        top: {
                            width: u ? .width ? ? 0,
                            height: (n ? .top ? ? 0) - (u ? .top ? ? 0)
                        },
                        right: {
                            width: (u ? .right ? ? 0) - (n ? .right ? ? 0),
                            height: u ? .height ? ? 0
                        },
                        bottom: {
                            width: u ? .width ? ? 0,
                            height: (u ? .bottom ? ? 0) - (n ? .bottom ? ? 0)
                        },
                        left: {
                            width: (n.left ? ? 0) - (u ? .left ? ? 0),
                            height: u ? .height ? ? 0
                        }
                    },
                    v = Object.keys(h).map(L => ({
                        position: L,
                        ...h[L],
                        area: $Y(h[L])
                    })).sort((L, j) => j.area - L.area);
                let _ = v.filter(({
                    width: L,
                    height: j
                }) => L >= e.clientWidth && j >= e.clientHeight);
                _ = _.filter(({
                    position: L
                }) => s.some(j => j === L));
                const C = _.length > 0 ? _[0].position : v[0].position,
                    M = t.split(" ")[1];
                return e.className = e.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${xf().isBs5?vw[C]:C}`), C + (M ? `-${M}` : "")
            }
            const rv = (t, n = 0) => t ? parseFloat(t) : n;

            function GI(t) {
                const e = t.ownerDocument.defaultView ? .getComputedStyle(t),
                    i = rv(e ? .marginTop) + rv(e ? .marginBottom),
                    s = rv(e ? .marginLeft) + rv(e ? .marginRight);
                return {
                    width: Number(t.offsetWidth) + s,
                    height: Number(t.offsetHeight) + i
                }
            }

            function XI(t, n, e) {
                return ww(n, e ? BI(t) : sv(t, n), e)
            }

            function Sw(t, n, e) {
                const i = e.split(" ")[0],
                    s = GI(t),
                    r = {
                        width: s.width,
                        height: s.height
                    },
                    l = -1 !== ["right", "left"].indexOf(i),
                    u = l ? "top" : "left",
                    h = l ? "left" : "top",
                    v = l ? "height" : "width",
                    _ = l ? "width" : "height";
                return r[u] = (n[u] ? ? 0) + n[v] / 2 - s[v] / 2, r[h] = i === h ? (n[h] ? ? 0) - s[_] : n[function WY(t) {
                    const n = {
                        left: "right",
                        right: "left",
                        bottom: "top",
                        top: "bottom"
                    };
                    return t.replace(/left|right|bottom|top/g, e => n[e])
                }(h)] ? ? 0, r
            }

            function YI(t, n) {
                return !!t.modifiers[n] ? .enabled
            }
            const XY = {
                top: ["top", "top start", "top end"],
                bottom: ["bottom", "bottom start", "bottom end"],
                start: ["start", "start top", "start bottom"],
                end: ["end", "end top", "end bottom"]
            };

            function av(t, n) {
                return !!xf().isBs5 && XY[n].includes(t)
            }

            function qI(t, n, e) {
                !t || !n || Object.keys(n).forEach(i => {
                    let s = ""; - 1 !== ["width", "height", "top", "right", "bottom", "left"].indexOf(i) && function zY(t) {
                        return "" !== t && !isNaN(parseFloat(t)) && isFinite(Number(t))
                    }(n[i]) && (s = "px"), e ? e.setStyle(t, i, `${String(n[i])}${s}`) : t.style[i] = String(n[i]) + s
                })
            }

            function ZY(t) {
                let n = t.offsets.target;
                const e = t.instance.target.querySelector(".arrow");
                if (!e) return t;
                const i = -1 !== ["left", "right"].indexOf(t.placement.split(" ")[0]),
                    s = i ? "height" : "width",
                    r = i ? "Top" : "Left",
                    l = r.toLowerCase(),
                    u = i ? "left" : "top",
                    h = i ? "bottom" : "right",
                    v = GI(e)[s],
                    _ = t.placement.split(" ")[1];
                (t.offsets.host[h] ? ? 0) - v < (n[l] ? ? 0) && (n[l] -= (n[l] ? ? 0) - ((t.offsets.host[h] ? ? 0) - v)), Number(t.offsets.host[l]) + Number(v) > (n[h] ? ? 0) && (n[l] += Number(t.offsets.host[l]) + Number(v) - Number(n[h])), n = Cf(n);
                const C = jc(t.instance.target),
                    M = parseFloat(C[`margin${r}`]) || 0,
                    L = parseFloat(C[`border${r}Width`]) || 0;
                let j;
                if (_) {
                    const Q = parseFloat(C.borderRadius) || 0,
                        Ae = Number(M + L + Q);
                    j = l === _ ? Number(t.offsets.host[l]) + Ae : Number(t.offsets.host[l]) + Number(t.offsets.host[s] - Ae)
                } else j = Number(t.offsets.host[l]) + Number(t.offsets.host[s] / 2 - v / 2);
                let Z = j - (n[l] ? ? 0) - M - L;
                return Z = Math.max(Math.min(n[s] - (v + 5), Z), 0), t.offsets.arrow = {
                    [l]: Math.round(Z),
                    [u]: ""
                }, t.instance.arrow = e, t
            }

            function KY(t) {
                if (t.offsets.target = Cf(t.offsets.target), !YI(t.options, "flip")) return t.offsets.target = { ...t.offsets.target,
                    ...Sw(t.instance.target, t.offsets.host, t.placement)
                }, t;
                const n = Cw(t.instance.target, t.instance.host, 0, "viewport", !1);
                let e = t.placement.split(" ")[0],
                    i = t.placement.split(" ")[1] || "";
                const u = WI("auto", t.offsets.host, t.instance.target, t.instance.host, t.options.allowedPositions),
                    h = [e, u];
                return h.forEach((v, _) => {
                    if (e !== v || h.length === _ + 1) return;
                    e = t.placement.split(" ")[0];
                    const C = "left" === e && Math.floor(t.offsets.target.right ? ? 0) > Math.floor(t.offsets.host.left ? ? 0) || "right" === e && Math.floor(t.offsets.target.left ? ? 0) < Math.floor(t.offsets.host.right ? ? 0) || "top" === e && Math.floor(t.offsets.target.bottom ? ? 0) > Math.floor(t.offsets.host.top ? ? 0) || "bottom" === e && Math.floor(t.offsets.target.top ? ? 0) < Math.floor(t.offsets.host.bottom ? ? 0),
                        M = Math.floor(t.offsets.target.left ? ? 0) < Math.floor(n.left ? ? 0),
                        L = Math.floor(t.offsets.target.right ? ? 0) > Math.floor(n.right ? ? 0),
                        j = Math.floor(t.offsets.target.top ? ? 0) < Math.floor(n.top ? ? 0),
                        Z = Math.floor(t.offsets.target.bottom ? ? 0) > Math.floor(n.bottom ? ? 0),
                        Q = "left" === e && M || "right" === e && L || "top" === e && j || "bottom" === e && Z,
                        Ae = -1 !== ["top", "bottom"].indexOf(e),
                        De = Ae && "left" === i && M || Ae && "right" === i && L || !Ae && "left" === i && j || !Ae && "right" === i && Z;
                    (C || Q || De) && ((C || Q) && (e = h[_ + 1]), De && (i = function GY(t) {
                        return "right" === t ? "left" : "left" === t ? "right" : t
                    }(i)), t.placement = e + (i ? ` ${i}` : ""), t.offsets.target = { ...t.offsets.target,
                        ...Sw(t.instance.target, t.offsets.host, t.placement)
                    })
                }), t
            }

            function JY(t) {
                if (!YI(t.options, "preventOverflow")) return t;
                const n = "transform",
                    e = t.instance.target.style,
                    {
                        top: i,
                        left: s,
                        [n]: r
                    } = e;
                e.top = "", e.left = "", e[n] = "";
                const l = Cw(t.instance.target, t.instance.host, 0, t.options.modifiers.preventOverflow ? .boundariesElement || "scrollParent", !1);
                e.top = i, e.left = s, e[n] = r;
                const h = {
                    primary(v) {
                        let _ = t.offsets.target[v];
                        return (t.offsets.target[v] ? ? 0) < (l[v] ? ? 0) && (_ = Math.max(t.offsets.target[v] ? ? 0, l[v] ? ? 0)), {
                            [v]: _
                        }
                    },
                    secondary(v) {
                        const _ = "right" === v,
                            C = _ ? "left" : "top";
                        let L = t.offsets.target[C];
                        return (t.offsets.target[v] ? ? 0) > (l[v] ? ? 0) && (L = Math.min(t.offsets.target[C] ? ? 0, (l[v] ? ? 0) - t.offsets.target[_ ? "width" : "height"])), {
                            [C]: L
                        }
                    }
                };
                return ["left", "right", "top", "bottom"].forEach(v => {
                    const _ = -1 !== ["left", "top", "start"].indexOf(v) ? h.primary : h.secondary;
                    t.offsets.target = { ...t.offsets.target,
                        ..._(v)
                    }
                }), t
            }

            function eq(t) {
                const n = t.placement,
                    e = n.split(" ")[0],
                    i = n.split(" ")[1];
                if (i) {
                    const {
                        host: s,
                        target: r
                    } = t.offsets, l = -1 !== ["bottom", "top"].indexOf(e), u = l ? "left" : "top", h = l ? "width" : "height", v = {
                        start: {
                            [u]: s[u]
                        },
                        end: {
                            [u]: (s[u] ? ? 0) + s[h] - r[h]
                        }
                    };
                    t.offsets.target = { ...r,
                        [u]: u === i ? v.start[u] : v.end[u]
                    }
                }
                return t
            }
            const nq = new class tq {
                position(n, e) {
                    return this.offset(n, e)
                }
                offset(n, e) {
                    return XI(e, n)
                }
                positionElements(n, e, i, s, r) {
                    const l = [KY, eq, JY, ZY],
                        h = function QY(t, n, e, i) {
                            if (!t || !n) return;
                            const s = XI(t, n);
                            !e.match(/^(auto)*\s*(left|right|top|bottom|start|end)*$/) && !e.match(/^(left|right|top|bottom|start|end)*(?: (left|right|top|bottom|start|end))*$/) && (e = "auto");
                            const r = !!e.match(/auto/g);
                            let l = e.match(/auto\s(left|right|top|bottom|start|end)/) ? e.split(" ")[1] || "auto" : e;
                            const u = l.match(/^(left|right|top|bottom|start|end)* ?(?!\1)(left|right|top|bottom|start|end)?/);
                            return u && (l = u[1] + (u[2] ? ` ${u[2]}` : "")), -1 !== ["left right", "right left", "top bottom", "bottom top"].indexOf(l) && (l = "auto"), l = WI(l, s, t, n, i ? i.allowedPositions : void 0), {
                                options: i || {
                                    modifiers: {}
                                },
                                instance: {
                                    target: t,
                                    host: n,
                                    arrow: void 0
                                },
                                offsets: {
                                    target: Sw(t, s, l),
                                    host: s,
                                    arrow: void 0
                                },
                                positionFixed: !1,
                                placement: l,
                                placementAuto: r
                            }
                        }(e, n, RI[i], r);
                    if (h) return l.reduce((v, _) => _(v), h)
                }
            };

            function iq(t, n, e, i, s, r) {
                const l = nq.positionElements(t, n, e, i, s);
                if (!l) return;
                const u = function UY(t) {
                    return {
                        width: t.offsets.target.width,
                        height: t.offsets.target.height,
                        left: Math.floor(t.offsets.target.left ? ? 0),
                        top: Math.round(t.offsets.target.top ? ? 0),
                        bottom: Math.round(t.offsets.target.bottom ? ? 0),
                        right: Math.floor(t.offsets.target.right ? ? 0)
                    }
                }(l);
                qI(n, {
                        "will-change": "transform",
                        top: "0px",
                        left: "0px",
                        transform: `translate3d(${u.left}px, ${u.top}px, 0px)`
                    }, r), l.instance.arrow && qI(l.instance.arrow, l.offsets.arrow, r),
                    function qY(t, n) {
                        const e = t.instance.target;
                        let i = e.className;
                        const s = xf().isBs5 ? vw[t.placement] : t.placement;
                        t.placementAuto && (i = i.replace(/bs-popover-auto/g, `bs-popover-${s}`), i = i.replace(/ms-2|me-2|mb-2|mt-2/g, ""), i = i.replace(/bs-tooltip-auto/g, `bs-tooltip-${s}`), i = i.replace(/\sauto/g, ` ${s}`), -1 !== i.indexOf("popover") && (i = i + " " + function YY(t) {
                            return xf().isBs5 ? av(t, "end") ? "ms-2" : av(t, "start") ? "me-2" : av(t, "top") ? "mb-2" : av(t, "bottom") ? "mt-2" : "" : ""
                        }(s)), -1 !== i.indexOf("popover") && -1 === i.indexOf("popover-auto") && (i += " popover-auto"), -1 !== i.indexOf("tooltip") && -1 === i.indexOf("tooltip-auto") && (i += " tooltip-auto")), i = i.replace(/left|right|top|bottom|end|start/g, `${s.split(" ")[0]}`), n ? n.setAttribute(e, "class", i) : e.className = i
                    }(l, r)
            }
            let ov = (() => {
                class t {
                    constructor(e, i, s) {
                        this.update$$ = new He, this.positionElements = new Map, this.isDisabled = !1, Ia(s) && e.runOutsideAngular(() => {
                            this.triggerEvent$ = ne(yd(window, "scroll", {
                                passive: !0
                            }), yd(window, "resize", {
                                passive: !0
                            }), b(0, VY), this.update$$), this.triggerEvent$.subscribe(() => {
                                this.isDisabled || this.positionElements.forEach(r => {
                                    iq(lv(r.target), lv(r.element), r.attachment, r.appendToBody, this.options, i.createRenderer(null, null))
                                })
                            })
                        })
                    }
                    position(e) {
                        this.addPositionElement(e)
                    }
                    get event$() {
                        return this.triggerEvent$
                    }
                    disable() {
                        this.isDisabled = !0
                    }
                    enable() {
                        this.isDisabled = !1
                    }
                    addPositionElement(e) {
                        this.positionElements.set(lv(e.element), e)
                    }
                    calcPosition() {
                        this.update$$.next(null)
                    }
                    deletePositionElement(e) {
                        this.positionElements.delete(lv(e))
                    }
                    setOptions(e) {
                        this.options = e
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(vt(si), vt(Ac), vt(ws))
                }, t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();

            function lv(t) {
                return "string" == typeof t ? document.querySelector(t) : t instanceof ii ? t.nativeElement : t ? ? null
            }
            class Sf {
                constructor(n, e, i) {
                    this.nodes = n, this.viewRef = e, this.componentRef = i
                }
            }
            class sq {
                constructor(n, e, i, s, r, l, u, h, v) {
                    this._viewContainerRef = n, this._renderer = e, this._elementRef = i, this._injector = s, this._componentFactoryResolver = r, this._ngZone = l, this._applicationRef = u, this._posService = h, this._document = v, this.onBeforeShow = new Pt, this.onShown = new Pt, this.onBeforeHide = new Pt, this.onHidden = new Pt, this._providers = [], this._isHiding = !1, this.containerDefaultSelector = "body", this._listenOpts = {}, this._globalListener = Function.prototype
                }
                get isShown() {
                    return !this._isHiding && !!this._componentRef
                }
                attach(n) {
                    return this._componentFactory = this._componentFactoryResolver.resolveComponentFactory(n), this
                }
                to(n) {
                    return this.container = n || this.container, this
                }
                position(n) {
                    return n ? (this.attachment = n.attachment || this.attachment, this._elementRef = n.target || this._elementRef, this) : this
                }
                provide(n) {
                    return this._providers.push(n), this
                }
                show(n = {}) {
                    if (this._subscribePositioning(), this._innerComponent = void 0, !this._componentRef) {
                        this.onBeforeShow.emit(), this._contentRef = this._getContentRef(n.content, n.context, n.initialState);
                        const e = js.create({
                            providers: this._providers,
                            parent: this._injector
                        });
                        if (!this._componentFactory) return;
                        if (this._componentRef = this._componentFactory.create(e, this._contentRef.nodes), this._applicationRef.attachView(this._componentRef.hostView), this.instance = this._componentRef.instance, Object.assign(this._componentRef.instance, n), this.container instanceof ii && this.container.nativeElement.appendChild(this._componentRef.location.nativeElement), "string" == typeof this.container && typeof this._document < "u") {
                            const i = this._document.querySelector(this.container) || this._document.querySelector(this.containerDefaultSelector);
                            if (!i) return;
                            i.appendChild(this._componentRef.location.nativeElement)
                        }!this.container && this._elementRef && this._elementRef.nativeElement.parentElement && this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement), this._contentRef.componentRef && (this._innerComponent = this._contentRef.componentRef.instance, this._contentRef.componentRef.changeDetectorRef.markForCheck(), this._contentRef.componentRef.changeDetectorRef.detectChanges()), this._componentRef.changeDetectorRef.markForCheck(), this._componentRef.changeDetectorRef.detectChanges(), this.onShown.emit(n.id ? {
                            id: n.id
                        } : this._componentRef.instance)
                    }
                    return this._registerOutsideClick(), this._componentRef
                }
                hide(n) {
                    if (!this._componentRef) return this;
                    this._posService.deletePositionElement(this._componentRef.location), this.onBeforeHide.emit(this._componentRef.instance);
                    const e = this._componentRef.location.nativeElement;
                    return e.parentNode ? .removeChild(e), this._contentRef ? .componentRef ? .destroy(), this._viewContainerRef && this._contentRef ? .viewRef && this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef)), this._contentRef ? .viewRef ? .destroy(), this._contentRef = void 0, this._componentRef = void 0, this._removeGlobalListener(), this.onHidden.emit(n ? {
                        id: n
                    } : null), this
                }
                toggle() {
                    this.isShown ? this.hide() : this.show()
                }
                dispose() {
                    this.isShown && this.hide(), this._unsubscribePositioning(), this._unregisterListenersFn && this._unregisterListenersFn()
                }
                listen(n) {
                    this.triggers = n.triggers || this.triggers, this._listenOpts.outsideClick = n.outsideClick, this._listenOpts.outsideEsc = n.outsideEsc, n.target = n.target || this._elementRef ? .nativeElement;
                    const e = this._listenOpts.hide = () => n.hide ? n.hide() : void this.hide(),
                        i = this._listenOpts.show = r => {
                            n.show ? n.show(r) : this.show(r), r()
                        };
                    return this._renderer && (this._unregisterListenersFn = function wY(t, n) {
                        const e = function OI(t, n = _Y) {
                                const e = (t || "").trim();
                                if (0 === e.length) return [];
                                const i = e.split(/\s+/).map(r => r.split(":")).map(r => {
                                        const l = n[r[0]] || r;
                                        return new xY(l[0], l[1])
                                    }),
                                    s = i.filter(r => r.isManual());
                                if (s.length > 1) throw new Error("Triggers parse error: only one manual trigger is allowed");
                                if (1 === s.length && i.length > 1) throw new Error("Triggers parse error: manual trigger can't be mixed with other triggers");
                                return i
                            }(n.triggers),
                            i = n.target;
                        if (1 === e.length && e[0].isManual()) return Function.prototype;
                        const s = [],
                            r = [],
                            l = () => {
                                r.forEach(u => s.push(u())), r.length = 0
                            };
                        return e.forEach(u => {
                            const h = u.open === u.close,
                                v = h ? n.toggle : n.show;
                            if (!h && u.close && n.hide) {
                                const _ = u.close,
                                    C = n.hide;
                                r.push(() => t.listen(i, _, C))
                            }
                            v && s.push(t.listen(i, u.open, () => v(l)))
                        }), () => {
                            s.forEach(u => u())
                        }
                    }(this._renderer, {
                        target: n.target,
                        triggers: n.triggers,
                        show: i,
                        hide: e,
                        toggle: r => {
                            this.isShown ? e() : i(r)
                        }
                    })), this
                }
                _removeGlobalListener() {
                    this._globalListener && (this._globalListener(), this._globalListener = Function.prototype)
                }
                attachInline(n, e) {
                    return n && e && (this._inlineViewRef = n.createEmbeddedView(e)), this
                }
                _registerOutsideClick() {
                    if (this._componentRef && this._componentRef.location) {
                        if (this._listenOpts.outsideClick) {
                            const n = this._componentRef.location.nativeElement;
                            setTimeout(() => {
                                this._renderer && this._elementRef && (this._globalListener = function CY(t, n) {
                                    return n.outsideClick ? t.listen("document", "click", e => {
                                        n.target && n.target.contains(e.target) || n.targets && n.targets.some(i => i.contains(e.target)) || n.hide && n.hide()
                                    }) : Function.prototype
                                }(this._renderer, {
                                    targets: [n, this._elementRef.nativeElement],
                                    outsideClick: this._listenOpts.outsideClick,
                                    hide: () => this._listenOpts.hide && this._listenOpts.hide()
                                }))
                            })
                        }
                        this._listenOpts.outsideEsc && this._renderer && this._elementRef && (this._globalListener = function SY(t, n) {
                            return n.outsideEsc ? t.listen("document", "keyup.esc", e => {
                                n.target && n.target.contains(e.target) || n.targets && n.targets.some(i => i.contains(e.target)) || n.hide && n.hide()
                            }) : Function.prototype
                        }(this._renderer, {
                            targets: [this._componentRef.location.nativeElement, this._elementRef.nativeElement],
                            outsideEsc: this._listenOpts.outsideEsc,
                            hide: () => this._listenOpts.hide && this._listenOpts.hide()
                        }))
                    }
                }
                getInnerComponent() {
                    return this._innerComponent
                }
                _subscribePositioning() {
                    this._zoneSubscription || !this.attachment || (this.onShown.subscribe(() => {
                        this._posService.position({
                            element: this._componentRef ? .location,
                            target: this._elementRef,
                            attachment: this.attachment,
                            appendToBody: "body" === this.container
                        })
                    }), this._zoneSubscription = this._ngZone.onStable.subscribe(() => {
                        this._componentRef && this._posService.calcPosition()
                    }))
                }
                _unsubscribePositioning() {
                    this._zoneSubscription && (this._zoneSubscription.unsubscribe(), this._zoneSubscription = void 0)
                }
                _getContentRef(n, e, i) {
                    if (!n) return new Sf([]);
                    if (n instanceof Aa) {
                        if (this._viewContainerRef) {
                            const l = this._viewContainerRef.createEmbeddedView(n, e);
                            return l.markForCheck(), new Sf([l.rootNodes], l)
                        }
                        const r = n.createEmbeddedView({});
                        return this._applicationRef.attachView(r), new Sf([r.rootNodes], r)
                    }
                    if ("function" == typeof n) {
                        const r = this._componentFactoryResolver.resolveComponentFactory(n),
                            l = js.create({
                                providers: this._providers,
                                parent: this._injector
                            }),
                            u = r.create(l);
                        return Object.assign(u.instance, i), this._applicationRef.attachView(u.hostView), new Sf([
                            [u.location.nativeElement]
                        ], u.hostView, u)
                    }
                    const s = this._renderer ? [this._renderer.createText(`${n}`)] : [];
                    return new Sf([s])
                }
            }
            let Tf = (() => {
                class t {
                    constructor(e, i, s, r, l, u) {
                        this._componentFactoryResolver = e, this._ngZone = i, this._injector = s, this._posService = r, this._applicationRef = l, this._document = u
                    }
                    createLoader(e, i, s) {
                        return new sq(i, s, e, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService, this._document)
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)(vt($u), vt(si), vt(js), vt(ov), vt(So), vt(fs))
                }, t.\u0275prov = Et({
                    token: t,
                    factory: t.\u0275fac,
                    providedIn: "root"
                }), t
            })();
            const rq = function(t) {
                    return {
                        dropdown: t
                    }
                },
                aq = ["*"];
            let oq = (() => {
                    class t {
                        constructor() {
                            this.autoClose = !0, this.insideClick = !1, this.isAnimated = !1, this.stopOnClickPropagation = !1
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                $c = (() => {
                    class t {
                        constructor() {
                            this.direction = "down", this.autoClose = !0, this.insideClick = !1, this.isAnimated = !1, this.stopOnClickPropagation = !1, this.isOpenChange = new Pt, this.isDisabledChange = new Pt, this.toggleClick = new Pt, this.counts = 0, this.dropdownMenu = new Promise(e => {
                                this.resolveDropdownMenu = e
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "platform"
                    }), t
                })();
            const ZI = [Us({
                height: 0,
                overflow: "hidden"
            }), el("220ms cubic-bezier(0, 0, 0.2, 1)", Us({
                height: "*",
                overflow: "hidden"
            }))];
            let Aw, cq = (() => {
                    class t {
                        constructor(e, i, s, r, l) {
                            this._state = e, this.cd = i, this._renderer = s, this._element = r, this.isOpen = !1, this._factoryDropDownAnimation = l.build(ZI), this._subscription = e.isOpenChange.subscribe(u => {
                                this.isOpen = u;
                                const h = this._element.nativeElement.querySelector(".dropdown-menu");
                                this._renderer.addClass(this._element.nativeElement.querySelector("div"), "open"), h && (this._renderer.addClass(h, "show"), (h.classList.contains("dropdown-menu-right") || h.classList.contains("dropdown-menu-end")) && (this._renderer.setStyle(h, "left", "auto"), this._renderer.setStyle(h, "right", "0")), "up" === this.direction && (this._renderer.setStyle(h, "top", "auto"), this._renderer.setStyle(h, "transform", "translateY(-101%)"))), h && this._state.isAnimated && this._factoryDropDownAnimation.create(h).play(), this.cd.markForCheck(), this.cd.detectChanges()
                            })
                        }
                        get direction() {
                            return this._state.direction
                        }
                        _contains(e) {
                            return this._element.nativeElement.contains(e)
                        }
                        ngOnDestroy() {
                            this._subscription.unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e($c), $e(Xr), $e(Ts), $e(ii), $e(uf))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["bs-dropdown-container"]
                        ],
                        hostAttrs: [2, "display", "block", "position", "absolute", "z-index", "1040"],
                        ngContentSelectors: aq,
                        decls: 2,
                        vars: 9,
                        consts: [
                            [3, "ngClass"]
                        ],
                        template: function(e, i) {
                            1 & e && (Rl(), N(0, "div", 0), Go(1), H()), 2 & e && ($r("dropup", "up" === i.direction)("show", i.isOpen)("open", i.isOpen), Fe("ngClass", hn(7, rq, "down" === i.direction)))
                        },
                        dependencies: [Qo],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                cv = (() => {
                    class t {
                        constructor(e, i, s, r, l, u, h) {
                            this._elementRef = e, this._renderer = i, this._viewContainerRef = s, this._cis = r, this._state = l, this._config = u, this.dropup = !1, this._isInlineOpen = !1, this._isDisabled = !1, this._subscriptions = [], this._isInited = !1, this._state.autoClose = this._config.autoClose, this._state.insideClick = this._config.insideClick, this._state.isAnimated = this._config.isAnimated, this._state.stopOnClickPropagation = this._config.stopOnClickPropagation, this._factoryDropDownAnimation = h.build(ZI), this._dropdown = this._cis.createLoader(this._elementRef, this._viewContainerRef, this._renderer).provide({
                                provide: $c,
                                useValue: this._state
                            }), this.onShown = this._dropdown.onShown, this.onHidden = this._dropdown.onHidden, this.isOpenChange = this._state.isOpenChange
                        }
                        set autoClose(e) {
                            this._state.autoClose = e
                        }
                        get autoClose() {
                            return this._state.autoClose
                        }
                        set isAnimated(e) {
                            this._state.isAnimated = e
                        }
                        get isAnimated() {
                            return this._state.isAnimated
                        }
                        set insideClick(e) {
                            this._state.insideClick = e
                        }
                        get insideClick() {
                            return this._state.insideClick
                        }
                        set isDisabled(e) {
                            this._isDisabled = e, this._state.isDisabledChange.emit(e), e && this.hide()
                        }
                        get isDisabled() {
                            return this._isDisabled
                        }
                        get isOpen() {
                            return this._showInline ? this._isInlineOpen : this._dropdown.isShown
                        }
                        set isOpen(e) {
                            e ? this.show() : this.hide()
                        }
                        get _showInline() {
                            return !this.container
                        }
                        ngOnInit() {
                            this._isInited || (this._isInited = !0, this._dropdown.listen({
                                outsideClick: !1,
                                triggers: this.triggers,
                                show: () => this.show()
                            }), this._subscriptions.push(this._state.toggleClick.subscribe(e => this.toggle(e))), this._subscriptions.push(this._state.isDisabledChange.pipe(hr(e => e)).subscribe(() => this.hide())))
                        }
                        show() {
                            if (!this.isOpen && !this.isDisabled) {
                                if (this._showInline) return this._inlinedMenu || this._state.dropdownMenu.then(e => {
                                    this._dropdown.attachInline(e.viewContainer, e.templateRef), this._inlinedMenu = this._dropdown._inlineViewRef, this.addBs4Polyfills(), this._inlinedMenu && this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, "open"), this.playAnimation()
                                }).catch(), this.addBs4Polyfills(), this._isInlineOpen = !0, this.onShown.emit(!0), this._state.isOpenChange.emit(!0), void this.playAnimation();
                                this._state.dropdownMenu.then(e => {
                                    const i = this.dropup || typeof this.dropup < "u" && this.dropup;
                                    this._state.direction = i ? "up" : "down";
                                    const s = this.placement || (i ? "top start" : "bottom start");
                                    this._dropdown.attach(cq).to(this.container).position({
                                        attachment: s
                                    }).show({
                                        content: e.templateRef,
                                        placement: s
                                    }), this._state.isOpenChange.emit(!0)
                                }).catch()
                            }
                        }
                        hide() {
                            this.isOpen && (this._showInline ? (this.removeShowClass(), this.removeDropupStyles(), this._isInlineOpen = !1, this.onHidden.emit(!0)) : this._dropdown.hide(), this._state.isOpenChange.emit(!1))
                        }
                        toggle(e) {
                            return this.isOpen || !e ? this.hide() : this.show()
                        }
                        _contains(e) {
                            return this._elementRef.nativeElement.contains(e.target) || this._dropdown.instance && this._dropdown.instance._contains(e.target)
                        }
                        navigationClick(e) {
                            const i = this._elementRef.nativeElement.querySelector(".dropdown-menu");
                            if (!i) return;
                            const s = this._elementRef.nativeElement.ownerDocument.activeElement,
                                r = i.querySelectorAll(".dropdown-item");
                            switch (e.keyCode) {
                                case 38:
                                    this._state.counts > 0 && r[--this._state.counts].focus();
                                    break;
                                case 40:
                                    this._state.counts + 1 < r.length && (s.classList !== r[this._state.counts].classList ? r[this._state.counts].focus() : r[++this._state.counts].focus())
                            }
                            e.preventDefault()
                        }
                        ngOnDestroy() {
                            for (const e of this._subscriptions) e.unsubscribe();
                            this._dropdown.dispose()
                        }
                        addBs4Polyfills() {
                            this.addShowClass(), this.checkRightAlignment(), this.addDropupStyles()
                        }
                        playAnimation() {
                            this._state.isAnimated && this._inlinedMenu && setTimeout(() => {
                                this._inlinedMenu && this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play()
                            })
                        }
                        addShowClass() {
                            this._inlinedMenu && this._inlinedMenu.rootNodes[0] && this._renderer.addClass(this._inlinedMenu.rootNodes[0], "show")
                        }
                        removeShowClass() {
                            this._inlinedMenu && this._inlinedMenu.rootNodes[0] && this._renderer.removeClass(this._inlinedMenu.rootNodes[0], "show")
                        }
                        checkRightAlignment() {
                            if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {
                                const e = this._inlinedMenu.rootNodes[0].classList.contains("dropdown-menu-right") || this._inlinedMenu.rootNodes[0].classList.contains("dropdown-menu-end");
                                this._renderer.setStyle(this._inlinedMenu.rootNodes[0], "left", e ? "auto" : "0"), this._renderer.setStyle(this._inlinedMenu.rootNodes[0], "right", e ? "0" : "auto")
                            }
                        }
                        addDropupStyles() {
                            this._inlinedMenu && this._inlinedMenu.rootNodes[0] && (this._renderer.setStyle(this._inlinedMenu.rootNodes[0], "top", this.dropup ? "auto" : "100%"), this._renderer.setStyle(this._inlinedMenu.rootNodes[0], "transform", this.dropup ? "translateY(-101%)" : "translateY(0)"), this._renderer.setStyle(this._inlinedMenu.rootNodes[0], "bottom", "auto"))
                        }
                        removeDropupStyles() {
                            this._inlinedMenu && this._inlinedMenu.rootNodes[0] && (this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], "top"), this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], "transform"), this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], "bottom"))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii), $e(Ts), $e(Wr), $e(Tf), $e($c), $e(oq), $e(uf))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "bsDropdown", ""],
                            ["", "dropdown", ""]
                        ],
                        hostVars: 6,
                        hostBindings: function(e, i) {
                            1 & e && bt("keydown.arrowDown", function(r) {
                                return i.navigationClick(r)
                            })("keydown.arrowUp", function(r) {
                                return i.navigationClick(r)
                            }), 2 & e && $r("dropup", i.dropup)("open", i.isOpen)("show", i.isOpen)
                        },
                        inputs: {
                            placement: "placement",
                            triggers: "triggers",
                            container: "container",
                            dropup: "dropup",
                            autoClose: "autoClose",
                            isAnimated: "isAnimated",
                            insideClick: "insideClick",
                            isDisabled: "isDisabled",
                            isOpen: "isOpen"
                        },
                        outputs: {
                            isOpenChange: "isOpenChange",
                            onShown: "onShown",
                            onHidden: "onHidden"
                        },
                        exportAs: ["bs-dropdown"],
                        features: [Xi([$c])]
                    }), t
                })(),
                Tw = (() => {
                    class t {
                        constructor(e, i, s) {
                            e.resolveDropdownMenu({
                                templateRef: s,
                                viewContainer: i
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e($c), $e(Wr), $e(Aa))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "bsDropdownMenu", ""],
                            ["", "dropdownMenu", ""]
                        ],
                        exportAs: ["bs-dropdown-menu"]
                    }), t
                })(),
                Dw = (() => {
                    class t {
                        constructor(e, i, s, r, l) {
                            this._changeDetectorRef = e, this._dropdown = i, this._element = s, this._renderer = r, this._state = l, this.isOpen = !1, this._subscriptions = [], this._subscriptions.push(this._state.isOpenChange.subscribe(u => {
                                this.isOpen = u, u ? (this._documentClickListener = this._renderer.listen("document", "click", h => {
                                    this._state.autoClose && 2 !== h.button && !this._element.nativeElement.contains(h.target) && (!this._state.insideClick || !this._dropdown._contains(h)) && (this._state.toggleClick.emit(!1), this._changeDetectorRef.detectChanges())
                                }), this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, "keyup.esc", () => {
                                    this._state.autoClose && (this._state.toggleClick.emit(!1), this._changeDetectorRef.detectChanges())
                                })) : (this._documentClickListener && this._documentClickListener(), this._escKeyUpListener && this._escKeyUpListener())
                            })), this._subscriptions.push(this._state.isDisabledChange.subscribe(u => this.isDisabled = u || void 0))
                        }
                        onClick(e) {
                            this._state.stopOnClickPropagation && e.stopPropagation(), !this.isDisabled && this._state.toggleClick.emit(!0)
                        }
                        ngOnDestroy() {
                            this._documentClickListener && this._documentClickListener(), this._escKeyUpListener && this._escKeyUpListener();
                            for (const e of this._subscriptions) e.unsubscribe()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(Xr), $e(cv), $e(ii), $e(Ts), $e($c))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "bsDropdownToggle", ""],
                            ["", "dropdownToggle", ""]
                        ],
                        hostVars: 3,
                        hostBindings: function(e, i) {
                            1 & e && bt("click", function(r) {
                                return i.onClick(r)
                            }), 2 & e && mn("aria-haspopup", !0)("disabled", i.isDisabled)("aria-expanded", i.isOpen)
                        },
                        exportAs: ["bs-dropdown-toggle"]
                    }), t
                })(),
                uq = (() => {
                    class t {
                        static forRoot() {
                            return {
                                ngModule: t,
                                providers: [Tf, ov, $c]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [Oa]
                    }), t
                })(),
                dq = (() => {
                    class t {
                        constructor() {
                            this._focusTrapStack = []
                        }
                        register(e) {
                            this._focusTrapStack = this._focusTrapStack.filter(s => s !== e);
                            let i = this._focusTrapStack;
                            i.length && i[i.length - 1]._disable(), i.push(e), e._enable()
                        }
                        deregister(e) {
                            e._disable();
                            const i = this._focusTrapStack,
                                s = i.indexOf(e); - 1 !== s && (i.splice(s, 1), i.length && i[i.length - 1]._enable())
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();
            try {
                Aw = typeof Intl < "u" && Intl.v8BreakIterator
            } catch {
                Aw = !1
            }
            let KI = (() => {
                    class t {
                        constructor(e) {
                            this._platformId = e, this.isBrowser = this._platformId ? Ia(this._platformId) : "object" == typeof document && !!document, this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent), this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent), this.BLINK = this.isBrowser && !(!window.chrome && !Aw) && typeof CSS < "u" && !this.EDGE && !this.TRIDENT, this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT, this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !("MSStream" in window), this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent), this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT, this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(vt(ws))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                QI = (() => {
                    class t {
                        constructor(e) {
                            this._platform = e
                        }
                        isDisabled(e) {
                            return e.hasAttribute("disabled")
                        }
                        isVisible(e) {
                            return function fq(t) {
                                return !!(t.offsetWidth || t.offsetHeight || "function" == typeof t.getClientRects && t.getClientRects().length)
                            }(e) && "visible" === getComputedStyle(e).visibility
                        }
                        isTabbable(e) {
                            if (!this._platform.isBrowser) return !1;
                            const i = function hq(t) {
                                try {
                                    return t.frameElement
                                } catch {
                                    return null
                                }
                            }(function _q(t) {
                                return t.ownerDocument && t.ownerDocument.defaultView || window
                            }(e));
                            if (i && (-1 === eL(i) || !this.isVisible(i))) return !1;
                            let s = e.nodeName.toLowerCase(),
                                r = eL(e);
                            return e.hasAttribute("contenteditable") ? -1 !== r : !("iframe" === s || "object" === s || this._platform.WEBKIT && this._platform.IOS && ! function bq(t) {
                                let n = t.nodeName.toLowerCase(),
                                    e = "input" === n && t.type;
                                return "text" === e || "password" === e || "select" === n || "textarea" === n
                            }(e)) && ("audio" === s ? !!e.hasAttribute("controls") && -1 !== r : "video" === s ? -1 !== r && (null !== r || this._platform.FIREFOX || e.hasAttribute("controls")) : e.tabIndex >= 0)
                        }
                        isFocusable(e, i) {
                            return function xq(t) {
                                return ! function gq(t) {
                                    return function vq(t) {
                                        return "input" == t.nodeName.toLowerCase()
                                    }(t) && "hidden" == t.type
                                }(t) && (function pq(t) {
                                    let n = t.nodeName.toLowerCase();
                                    return "input" === n || "select" === n || "button" === n || "textarea" === n
                                }(t) || function mq(t) {
                                    return function yq(t) {
                                        return "a" == t.nodeName.toLowerCase()
                                    }(t) && t.hasAttribute("href")
                                }(t) || t.hasAttribute("contenteditable") || JI(t))
                            }(e) && !this.isDisabled(e) && (i ? .ignoreVisibility || this.isVisible(e))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(vt(KI))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })();

            function JI(t) {
                if (!t.hasAttribute("tabindex") || void 0 === t.tabIndex) return !1;
                let n = t.getAttribute("tabindex");
                return "-32768" != n && !(!n || isNaN(parseInt(n, 10)))
            }

            function eL(t) {
                if (!JI(t)) return null;
                const n = parseInt(t.getAttribute("tabindex") || "", 10);
                return isNaN(n) ? -1 : n
            }

            function tL(t) {
                return null != t && "false" != `${t}`
            }
            class wq {
                constructor(n, e, i, s, r = !1) {
                    this._element = n, this._checker = e, this._ngZone = i, this._document = s, this._hasAttached = !1, this.startAnchorListener = () => this.focusLastTabbableElement(), this.endAnchorListener = () => this.focusFirstTabbableElement(), this._enabled = !0, r || this.attachAnchors()
                }
                get enabled() {
                    return this._enabled
                }
                set enabled(n) {
                    this._enabled = n, this._startAnchor && this._endAnchor && (this._toggleAnchorTabIndex(n, this._startAnchor), this._toggleAnchorTabIndex(n, this._endAnchor))
                }
                destroy() {
                    const n = this._startAnchor,
                        e = this._endAnchor;
                    n && (n.removeEventListener("focus", this.startAnchorListener), n.parentNode && n.parentNode.removeChild(n)), e && (e.removeEventListener("focus", this.endAnchorListener), e.parentNode && e.parentNode.removeChild(e)), this._startAnchor = this._endAnchor = null, this._hasAttached = !1
                }
                attachAnchors() {
                    return !!this._hasAttached || (this._ngZone.runOutsideAngular(() => {
                        this._startAnchor || (this._startAnchor = this._createAnchor(), this._startAnchor.addEventListener("focus", this.startAnchorListener)), this._endAnchor || (this._endAnchor = this._createAnchor(), this._endAnchor.addEventListener("focus", this.endAnchorListener))
                    }), this._element.parentNode && (this._element.parentNode.insertBefore(this._startAnchor, this._element), this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling), this._hasAttached = !0), this._hasAttached)
                }
                focusInitialElementWhenReady() {
                    return new Promise(n => {
                        this._executeOnStable(() => n(this.focusInitialElement()))
                    })
                }
                focusFirstTabbableElementWhenReady() {
                    return new Promise(n => {
                        this._executeOnStable(() => n(this.focusFirstTabbableElement()))
                    })
                }
                focusLastTabbableElementWhenReady() {
                    return new Promise(n => {
                        this._executeOnStable(() => n(this.focusLastTabbableElement()))
                    })
                }
                _getRegionBoundary(n) {
                    let e = this._element.querySelectorAll(`[cdk-focus-region-${n}], [cdkFocusRegion${n}], [cdk-focus-${n}]`);
                    for (let i = 0; i < e.length; i++) e[i].hasAttribute(`cdk-focus-${n}`) ? console.warn(`Found use of deprecated attribute 'cdk-focus-${n}', use 'cdkFocusRegion${n}' instead. The deprecated attribute will be removed in 8.0.0.`, e[i]) : e[i].hasAttribute(`cdk-focus-region-${n}`) && console.warn(`Found use of deprecated attribute 'cdk-focus-region-${n}', use 'cdkFocusRegion${n}' instead. The deprecated attribute will be removed in 8.0.0.`, e[i]);
                    return "start" == n ? e.length ? e[0] : this._getFirstTabbableElement(this._element) : e.length ? e[e.length - 1] : this._getLastTabbableElement(this._element)
                }
                focusInitialElement() {
                    const n = this._element.querySelector("[cdk-focus-initial], [cdkFocusInitial]");
                    if (n) {
                        if (n.hasAttribute("cdk-focus-initial") && console.warn("Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0", n), !this._checker.isFocusable(n)) {
                            const e = this._getFirstTabbableElement(n);
                            return e ? .focus(), !!e
                        }
                        return n.focus(), !0
                    }
                    return this.focusFirstTabbableElement()
                }
                focusFirstTabbableElement() {
                    const n = this._getRegionBoundary("start");
                    return n && n.focus(), !!n
                }
                focusLastTabbableElement() {
                    const n = this._getRegionBoundary("end");
                    return n && n.focus(), !!n
                }
                hasAttached() {
                    return this._hasAttached
                }
                _getFirstTabbableElement(n) {
                    if (this._checker.isFocusable(n) && this._checker.isTabbable(n)) return n;
                    let e = n.children || n.childNodes;
                    for (let i = 0; i < e.length; i++) {
                        let s = e[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(e[i]) : null;
                        if (s) return s
                    }
                    return null
                }
                _getLastTabbableElement(n) {
                    if (this._checker.isFocusable(n) && this._checker.isTabbable(n)) return n;
                    let e = n.children || n.childNodes;
                    for (let i = e.length - 1; i >= 0; i--) {
                        let s = e[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(e[i]) : null;
                        if (s) return s
                    }
                    return null
                }
                _createAnchor() {
                    const n = this._document.createElement("div");
                    return this._toggleAnchorTabIndex(this._enabled, n), n.classList.add("cdk-visually-hidden"), n.classList.add("cdk-focus-trap-anchor"), n.setAttribute("aria-hidden", "true"), n
                }
                _toggleAnchorTabIndex(n, e) {
                    n ? e.setAttribute("tabindex", "0") : e.removeAttribute("tabindex")
                }
                toggleAnchors(n) {
                    this._startAnchor && this._endAnchor && (this._toggleAnchorTabIndex(n, this._startAnchor), this._toggleAnchorTabIndex(n, this._endAnchor))
                }
                _executeOnStable(n) {
                    this._ngZone.isStable ? n() : this._ngZone.onStable.pipe(Or(1)).subscribe(n)
                }
            }
            let Cq = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._checker = e, this._ngZone = i, this._document = s
                        }
                        create(e, i = !1) {
                            return new wq(e, this._checker, this._ngZone, this._document, i)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(vt(QI), vt(si), vt(fs))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                Sq = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._elementRef = e, this._focusTrapFactory = i, this._previouslyFocusedElement = null, this._autoCapture = !1, this._document = s, this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, !0)
                        }
                        get enabled() {
                            return this.focusTrap.enabled
                        }
                        set enabled(e) {
                            this.focusTrap.enabled = tL(e)
                        }
                        get autoCapture() {
                            return this._autoCapture
                        }
                        set autoCapture(e) {
                            this._autoCapture = tL(e)
                        }
                        ngOnDestroy() {
                            this.focusTrap.destroy(), this._previouslyFocusedElement && (this._previouslyFocusedElement.focus(), this._previouslyFocusedElement = null)
                        }
                        ngAfterContentInit() {
                            this.focusTrap.attachAnchors(), this.autoCapture && this._captureFocus()
                        }
                        ngDoCheck() {
                            this.focusTrap.hasAttached() || this.focusTrap.attachAnchors()
                        }
                        ngOnChanges(e) {
                            const i = e.autoCapture;
                            i && !i.firstChange && this.autoCapture && this.focusTrap.hasAttached() && this._captureFocus()
                        }
                        _captureFocus() {
                            this._previouslyFocusedElement = this._document.activeElement, this.focusTrap.focusInitialElementWhenReady()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii), $e(Cq), $e(fs))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "focusTrap", ""]
                        ],
                        inputs: {
                            enabled: ["cdkTrapFocus", "enabled"],
                            autoCapture: ["cdkTrapFocusAutoCapture", "autoCapture"]
                        },
                        exportAs: ["focusTrap"],
                        features: [ni]
                    }), t
                })(),
                nL = (() => {
                    class t {
                        static forRoot() {
                            return {
                                ngModule: t,
                                providers: [dq, KI, QI]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [Oa]
                    }), t
                })();
            const Tq = ["*"];
            let bd = (() => {
                    class t {
                        constructor() {
                            this.hide = () => {}, this.setClass = () => {}
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "platform"
                    }), t
                })(),
                iL = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "platform"
                    }), t
                })();
            const uv = {
                    backdrop: !0,
                    keyboard: !0,
                    focus: !0,
                    show: !1,
                    ignoreBackdropClick: !1,
                    class: "",
                    animated: !0,
                    initialState: {},
                    closeInterceptor: void 0
                },
                Dq = new zt("override-default-config");
            let Aq = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._element = i, this._renderer = s, this.isShown = !1, this.isAnimated = !1, this._focusEl = null, this.isModalHiding = !1, this.clickStartedInContent = !1, this.config = Object.assign({}, e)
                        }
                        ngOnInit() {
                            this._focusEl = Fs.activeElement, this.isAnimated && this._renderer.addClass(this._element.nativeElement, "fade"), this._renderer.setStyle(this._element.nativeElement, "display", "block"), setTimeout(() => {
                                this.isShown = !0, this._renderer.addClass(this._element.nativeElement, "show")
                            }, this.isAnimated ? 150 : 0), Fs && Fs.body && (this.bsModalService && 1 === this.bsModalService.getModalsCount() && (this.bsModalService.checkScrollbar(), this.bsModalService.setScrollbar()), this._renderer.addClass(Fs.body, "modal-open"), this._renderer.setStyle(Fs.body, "overflow-y", "hidden")), this._element.nativeElement && this._element.nativeElement.focus()
                        }
                        onClickStarted(e) {
                            this.clickStartedInContent = e.target !== this._element.nativeElement
                        }
                        onClickStop(e) {
                            this.config.ignoreBackdropClick || "static" === this.config.backdrop || e.target !== this._element.nativeElement || this.clickStartedInContent ? this.clickStartedInContent = !1 : (this.bsModalService ? .setDismissReason("backdrop-click"), this.hide())
                        }
                        onPopState() {
                            this.bsModalService ? .setDismissReason("browser-back-navigation-clicked"), this.hide()
                        }
                        onEsc(e) {
                            this.isShown && ((27 === e.keyCode || "Escape" === e.key) && e.preventDefault(), this.config.keyboard && this.level === this.bsModalService ? .getModalsCount() && (this.bsModalService ? .setDismissReason("esc"), this.hide()))
                        }
                        ngOnDestroy() {
                            this.isShown && this._hide()
                        }
                        hide() {
                            if (!this.isModalHiding) {
                                if (this.config.closeInterceptor) return void this.config.closeInterceptor().then(() => this._hide(), () => {});
                                this._hide()
                            }
                        }
                        _hide() {
                            this.isModalHiding = !0, this._renderer.removeClass(this._element.nativeElement, "show"), setTimeout(() => {
                                this.isShown = !1, Fs && Fs.body && 1 === this.bsModalService ? .getModalsCount() && (this._renderer.removeClass(Fs.body, "modal-open"), this._renderer.setStyle(Fs.body, "overflow-y", "")), this.bsModalService ? .hide(this.config.id), this.isModalHiding = !1, this._focusEl && this._focusEl.focus()
                            }, this.isAnimated ? 300 : 0)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(iL), $e(ii), $e(Ts))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["modal-container"]
                        ],
                        hostAttrs: ["role", "dialog", "tabindex", "-1", 1, "modal"],
                        hostVars: 3,
                        hostBindings: function(e, i) {
                            1 & e && bt("mousedown", function(r) {
                                return i.onClickStarted(r)
                            })("click", function(r) {
                                return i.onClickStop(r)
                            })("popstate", function() {
                                return i.onPopState()
                            }, !1, Nl)("keydown.esc", function(r) {
                                return i.onEsc(r)
                            }, !1, Nl), 2 & e && mn("aria-modal", !0)("aria-labelledby", i.config.ariaLabelledBy)("aria-describedby", i.config.ariaDescribedby)
                        },
                        ngContentSelectors: Tq,
                        decls: 3,
                        vars: 2,
                        consts: [
                            ["role", "document", "focusTrap", ""],
                            [1, "modal-content"]
                        ],
                        template: function(e, i) {
                            1 & e && (Rl(), N(0, "div", 0)(1, "div", 1), Go(2), H()()), 2 & e && vx("modal-dialog" + (i.config.class ? " " + i.config.class : ""))
                        },
                        dependencies: [Sq],
                        encapsulation: 2
                    }), t
                })(),
                kq = (() => {
                    class t {
                        constructor(e, i) {
                            this._isAnimated = !1, this._isShown = !1, this.element = e, this.renderer = i
                        }
                        get isAnimated() {
                            return this._isAnimated
                        }
                        set isAnimated(e) {
                            this._isAnimated = e
                        }
                        get isShown() {
                            return this._isShown
                        }
                        set isShown(e) {
                            this._isShown = e, e ? this.renderer.addClass(this.element.nativeElement, "show") : this.renderer.removeClass(this.element.nativeElement, "show")
                        }
                        ngOnInit() {
                            this.isAnimated && (this.renderer.addClass(this.element.nativeElement, "fade"), kY.reflow(this.element.nativeElement)), this.isShown = !0
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii), $e(Ts))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["bs-modal-backdrop"]
                        ],
                        hostAttrs: [1, "modal-backdrop"],
                        decls: 0,
                        vars: 0,
                        template: function(e, i) {},
                        encapsulation: 2
                    }), t
                })(),
                Eq = 1,
                Yl = (() => {
                    class t {
                        constructor(e, i, s) {
                            this.clf = i, this.modalDefaultOption = s, this.onShow = new Pt, this.onShown = new Pt, this.onHide = new Pt, this.onHidden = new Pt, this.isBodyOverflowing = !1, this.originalBodyPadding = 0, this.scrollbarWidth = 0, this.modalsCount = 0, this.loaders = [], this._focusEl = null, this._backdropLoader = this.clf.createLoader(), this._renderer = e.createRenderer(null, null), this.config = s ? Object.assign({}, uv, s) : uv
                        }
                        show(e, i) {
                            this._focusEl = Fs.activeElement, this.modalsCount++, this._createLoaders();
                            const s = i ? .id || Eq++;
                            return this.config = this.modalDefaultOption ? Object.assign({}, uv, this.modalDefaultOption, i) : Object.assign({}, uv, i), this.config.id = s, this._showBackdrop(), this.lastDismissReason = void 0, this._showModal(e)
                        }
                        hide(e) {
                            (1 === this.modalsCount || null == e) && (this._hideBackdrop(), this.resetScrollbar()), this.modalsCount = this.modalsCount >= 1 && null != e ? this.modalsCount - 1 : 0, setTimeout(() => {
                                this._hideModal(e), this.removeLoaders(e)
                            }, this.config.animated ? 150 : 0), this._focusEl && this._focusEl.focus()
                        }
                        _showBackdrop() {
                            const e = !0 === this.config.backdrop || "static" === this.config.backdrop,
                                i = !this.backdropRef || !this.backdropRef.instance.isShown;
                            1 === this.modalsCount && (this.removeBackdrop(), e && i && (this._backdropLoader.attach(kq).to("body").show({
                                isAnimated: this.config.animated
                            }), this.backdropRef = this._backdropLoader._componentRef))
                        }
                        _hideBackdrop() {
                            this.backdropRef && (this.backdropRef.instance.isShown = !1, setTimeout(() => this.removeBackdrop(), this.config.animated ? 150 : 0))
                        }
                        _showModal(e) {
                            const i = this.loaders[this.loaders.length - 1];
                            if (this.config && this.config.providers)
                                for (const l of this.config.providers) i.provide(l);
                            const s = new bd,
                                r = i.provide({
                                    provide: iL,
                                    useValue: this.config
                                }).provide({
                                    provide: bd,
                                    useValue: s
                                }).attach(Aq).to("body");
                            return s.hide = () => this.hide(s.id), s.setClass = l => {
                                r.instance && (r.instance.config.class = l)
                            }, s.onHidden = new Pt, s.onHide = new Pt, this.copyEvent(i.onBeforeHide, s.onHide), this.copyEvent(i.onHidden, s.onHidden), r.show({
                                content: e,
                                isAnimated: this.config.animated,
                                initialState: this.config.initialState,
                                bsModalService: this,
                                id: this.config.id
                            }), r.instance && (r.instance.level = this.getModalsCount(), s.content = i.getInnerComponent(), s.id = r.instance.config ? .id), s
                        }
                        _hideModal(e) {
                            if (null != e) {
                                const i = this.loaders.findIndex(r => r.instance ? .config.id === e),
                                    s = this.loaders[i];
                                s && s.hide(e)
                            } else this.loaders.forEach(i => {
                                i.instance && i.hide(i.instance.config.id)
                            })
                        }
                        getModalsCount() {
                            return this.modalsCount
                        }
                        setDismissReason(e) {
                            this.lastDismissReason = e
                        }
                        removeBackdrop() {
                            this._renderer.removeClass(Fs.body, "modal-open"), this._renderer.setStyle(Fs.body, "overflow-y", ""), this._backdropLoader.hide(), this.backdropRef = void 0
                        }
                        checkScrollbar() {
                            this.isBodyOverflowing = Fs.body.clientWidth < window.innerWidth, this.scrollbarWidth = this.getScrollbarWidth()
                        }
                        setScrollbar() {
                            Fs && (this.originalBodyPadding = parseInt(window.getComputedStyle(Fs.body).getPropertyValue("padding-right") || "0", 10), this.isBodyOverflowing && (Fs.body.style.paddingRight = `${this.originalBodyPadding+this.scrollbarWidth}px`))
                        }
                        resetScrollbar() {
                            Fs.body.style.paddingRight = `${this.originalBodyPadding}px`
                        }
                        getScrollbarWidth() {
                            const e = this._renderer.createElement("div");
                            this._renderer.addClass(e, "modal-scrollbar-measure"), this._renderer.appendChild(Fs.body, e);
                            const i = e.offsetWidth - e.clientWidth;
                            return this._renderer.removeChild(Fs.body, e), i
                        }
                        _createLoaders() {
                            const e = this.clf.createLoader();
                            this.copyEvent(e.onBeforeShow, this.onShow), this.copyEvent(e.onShown, this.onShown), this.copyEvent(e.onBeforeHide, this.onHide), this.copyEvent(e.onHidden, this.onHidden), this.loaders.push(e)
                        }
                        removeLoaders(e) {
                            if (null != e) {
                                const i = this.loaders.findIndex(s => s.instance ? .config.id === e);
                                i >= 0 && (this.loaders.splice(i, 1), this.loaders.forEach((s, r) => {
                                    s.instance && (s.instance.level = r + 1)
                                }))
                            } else this.loaders.splice(0, this.loaders.length)
                        }
                        copyEvent(e, i) {
                            e.subscribe(s => {
                                i.emit(this.lastDismissReason || s)
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(vt(Ac), vt(Tf), vt(Dq, 8))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "platform"
                    }), t
                })();
            nL.forRoot();
            let Mq = (() => {
                    class t {
                        static forRoot() {
                            return {
                                ngModule: t,
                                providers: [Yl, Tf, ov]
                            }
                        }
                        static forChild() {
                            return {
                                ngModule: t,
                                providers: [Yl, Tf, ov]
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [nL]
                    }), t
                })(),
                Pq = (() => {
                    class t {
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275mod = jn({
                            type: t
                        });
                        static\ u0275inj = zn({
                            imports: [Oa]
                        })
                    }
                    return t
                })(),
                sL = (() => {
                    class t {
                        constructor(e, i) {
                            this._renderer = e, this._elementRef = i, this.onChange = s => {}, this.onTouched = () => {}
                        }
                        setProperty(e, i) {
                            this._renderer.setProperty(this._elementRef.nativeElement, e, i)
                        }
                        registerOnTouched(e) {
                            this.onTouched = e
                        }
                        registerOnChange(e) {
                            this.onChange = e
                        }
                        setDisabledState(e) {
                            this.setProperty("disabled", e)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(Ts), $e(ii))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t
                        })
                    }
                    return t
                })(),
                Uc = (() => {
                    class t extends sL {
                        static# e = this.\u0275fac = function() {
                            let e;
                            return function(s) {
                                return (e || (e = _s(t)))(s || t)
                            }
                        }();
                        static# t = this.\u0275dir = tn({
                            type: t,
                            features: [Pi]
                        })
                    }
                    return t
                })();
            const ko = new zt("NgValueAccessor"),
                Iq = {
                    provide: ko,
                    useExisting: Tt(() => Df),
                    multi: !0
                },
                Fq = new zt("CompositionEventMode");
            let Df = (() => {
                class t extends sL {
                    constructor(e, i, s) {
                        super(e, i), this._compositionMode = s, this._composing = !1, null == this._compositionMode && (this._compositionMode = ! function Lq() {
                            const t = Yo() ? Yo().getUserAgent() : "";
                            return /android (\d+)/.test(t.toLowerCase())
                        }())
                    }
                    writeValue(e) {
                        this.setProperty("value", e ? ? "")
                    }
                    _handleInput(e) {
                        (!this._compositionMode || this._compositionMode && !this._composing) && this.onChange(e)
                    }
                    _compositionStart() {
                        this._composing = !0
                    }
                    _compositionEnd(e) {
                        this._composing = !1, this._compositionMode && this.onChange(e)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)($e(Ts), $e(ii), $e(Fq, 8))
                    };
                    static# t = this.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["input", "formControlName", "", 3, "type", "checkbox"],
                            ["textarea", "formControlName", ""],
                            ["input", "formControl", "", 3, "type", "checkbox"],
                            ["textarea", "formControl", ""],
                            ["input", "ngModel", "", 3, "type", "checkbox"],
                            ["textarea", "ngModel", ""],
                            ["", "ngDefaultControl", ""]
                        ],
                        hostBindings: function(i, s) {
                            1 & i && bt("input", function(l) {
                                return s._handleInput(l.target.value)
                            })("blur", function() {
                                return s.onTouched()
                            })("compositionstart", function() {
                                return s._compositionStart()
                            })("compositionend", function(l) {
                                return s._compositionEnd(l.target.value)
                            })
                        },
                        features: [Xi([Iq]), Pi]
                    })
                }
                return t
            })();
            const fr = new zt("NgValidators"),
                Zl = new zt("NgAsyncValidators");

            function pL(t) {
                if (!t) return hv;
                let n, e;
                return "string" == typeof t ? (e = "", "^" !== t.charAt(0) && (e += "^"), e += t, "$" !== t.charAt(t.length - 1) && (e += "$"), n = new RegExp(e)) : (e = t.toString(), n = t), i => {
                    if (function ql(t) {
                            return null == t || ("string" == typeof t || Array.isArray(t)) && 0 === t.length
                        }(i.value)) return null;
                    const s = i.value;
                    return n.test(s) ? null : {
                        pattern: {
                            requiredPattern: e,
                            actualValue: s
                        }
                    }
                }
            }

            function hv(t) {
                return null
            }

            function gL(t) {
                return null != t
            }

            function mL(t) {
                return Gh(t) ? $(t) : t
            }

            function vL(t) {
                let n = {};
                return t.forEach(e => {
                    n = null != e ? { ...n,
                        ...e
                    } : n
                }), 0 === Object.keys(n).length ? null : n
            }

            function yL(t, n) {
                return n.map(e => e(t))
            }

            function bL(t) {
                return t.map(n => function Rq(t) {
                    return !t.validate
                }(n) ? n : e => n.validate(e))
            }

            function Ew(t) {
                return null != t ? function xL(t) {
                    if (!t) return null;
                    const n = t.filter(gL);
                    return 0 == n.length ? null : function(e) {
                        return vL(yL(e, n))
                    }
                }(bL(t)) : null
            }

            function Mw(t) {
                return null != t ? function _L(t) {
                    if (!t) return null;
                    const n = t.filter(gL);
                    return 0 == n.length ? null : function(e) {
                        return aI(yL(e, n).map(mL)).pipe(kt(vL))
                    }
                }(bL(t)) : null
            }

            function wL(t, n) {
                return null === t ? [n] : Array.isArray(t) ? [...t, n] : [t, n]
            }

            function Pw(t) {
                return t ? Array.isArray(t) ? t : [t] : []
            }

            function fv(t, n) {
                return Array.isArray(t) ? t.includes(n) : t === n
            }

            function TL(t, n) {
                const e = Pw(n);
                return Pw(t).forEach(s => {
                    fv(e, s) || e.push(s)
                }), e
            }

            function DL(t, n) {
                return Pw(n).filter(e => !fv(t, e))
            }
            class AL {
                constructor() {
                    this._rawValidators = [], this._rawAsyncValidators = [], this._onDestroyCallbacks = []
                }
                get value() {
                    return this.control ? this.control.value : null
                }
                get valid() {
                    return this.control ? this.control.valid : null
                }
                get invalid() {
                    return this.control ? this.control.invalid : null
                }
                get pending() {
                    return this.control ? this.control.pending : null
                }
                get disabled() {
                    return this.control ? this.control.disabled : null
                }
                get enabled() {
                    return this.control ? this.control.enabled : null
                }
                get errors() {
                    return this.control ? this.control.errors : null
                }
                get pristine() {
                    return this.control ? this.control.pristine : null
                }
                get dirty() {
                    return this.control ? this.control.dirty : null
                }
                get touched() {
                    return this.control ? this.control.touched : null
                }
                get status() {
                    return this.control ? this.control.status : null
                }
                get untouched() {
                    return this.control ? this.control.untouched : null
                }
                get statusChanges() {
                    return this.control ? this.control.statusChanges : null
                }
                get valueChanges() {
                    return this.control ? this.control.valueChanges : null
                }
                get path() {
                    return null
                }
                _setValidators(n) {
                    this._rawValidators = n || [], this._composedValidatorFn = Ew(this._rawValidators)
                }
                _setAsyncValidators(n) {
                    this._rawAsyncValidators = n || [], this._composedAsyncValidatorFn = Mw(this._rawAsyncValidators)
                }
                get validator() {
                    return this._composedValidatorFn || null
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn || null
                }
                _registerOnDestroy(n) {
                    this._onDestroyCallbacks.push(n)
                }
                _invokeOnDestroyCallbacks() {
                    this._onDestroyCallbacks.forEach(n => n()), this._onDestroyCallbacks = []
                }
                reset(n = void 0) {
                    this.control && this.control.reset(n)
                }
                hasError(n, e) {
                    return !!this.control && this.control.hasError(n, e)
                }
                getError(n, e) {
                    return this.control ? this.control.getError(n, e) : null
                }
            }
            class Lr extends AL {
                get formDirective() {
                    return null
                }
                get path() {
                    return null
                }
            }
            class Kl extends AL {
                constructor() {
                    super(...arguments), this._parent = null, this.name = null, this.valueAccessor = null
                }
            }
            class kL {
                constructor(n) {
                    this._cd = n
                }
                get isTouched() {
                    return !!this._cd ? .control ? .touched
                }
                get isUntouched() {
                    return !!this._cd ? .control ? .untouched
                }
                get isPristine() {
                    return !!this._cd ? .control ? .pristine
                }
                get isDirty() {
                    return !!this._cd ? .control ? .dirty
                }
                get isValid() {
                    return !!this._cd ? .control ? .valid
                }
                get isInvalid() {
                    return !!this._cd ? .control ? .invalid
                }
                get isPending() {
                    return !!this._cd ? .control ? .pending
                }
                get isSubmitted() {
                    return !!this._cd ? .submitted
                }
            }
            let Ow = (() => {
                class t extends kL {
                    constructor(e) {
                        super(e)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)($e(Kl, 2))
                    };
                    static# t = this.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "formControlName", ""],
                            ["", "ngModel", ""],
                            ["", "formControl", ""]
                        ],
                        hostVars: 14,
                        hostBindings: function(i, s) {
                            2 & i && $r("ng-untouched", s.isUntouched)("ng-touched", s.isTouched)("ng-pristine", s.isPristine)("ng-dirty", s.isDirty)("ng-valid", s.isValid)("ng-invalid", s.isInvalid)("ng-pending", s.isPending)
                        },
                        features: [Pi]
                    })
                }
                return t
            })();
            const Af = "VALID",
                gv = "INVALID",
                xd = "PENDING",
                kf = "DISABLED";

            function mv(t) {
                return null != t && !Array.isArray(t) && "object" == typeof t
            }
            class OL {
                constructor(n, e) {
                    this._pendingDirty = !1, this._hasOwnPendingAsyncValidator = !1, this._pendingTouched = !1, this._onCollectionChange = () => {}, this._parent = null, this.pristine = !0, this.touched = !1, this._onDisabledChange = [], this._assignValidators(n), this._assignAsyncValidators(e)
                }
                get validator() {
                    return this._composedValidatorFn
                }
                set validator(n) {
                    this._rawValidators = this._composedValidatorFn = n
                }
                get asyncValidator() {
                    return this._composedAsyncValidatorFn
                }
                set asyncValidator(n) {
                    this._rawAsyncValidators = this._composedAsyncValidatorFn = n
                }
                get parent() {
                    return this._parent
                }
                get valid() {
                    return this.status === Af
                }
                get invalid() {
                    return this.status === gv
                }
                get pending() {
                    return this.status == xd
                }
                get disabled() {
                    return this.status === kf
                }
                get enabled() {
                    return this.status !== kf
                }
                get dirty() {
                    return !this.pristine
                }
                get untouched() {
                    return !this.touched
                }
                get updateOn() {
                    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : "change"
                }
                setValidators(n) {
                    this._assignValidators(n)
                }
                setAsyncValidators(n) {
                    this._assignAsyncValidators(n)
                }
                addValidators(n) {
                    this.setValidators(TL(n, this._rawValidators))
                }
                addAsyncValidators(n) {
                    this.setAsyncValidators(TL(n, this._rawAsyncValidators))
                }
                removeValidators(n) {
                    this.setValidators(DL(n, this._rawValidators))
                }
                removeAsyncValidators(n) {
                    this.setAsyncValidators(DL(n, this._rawAsyncValidators))
                }
                hasValidator(n) {
                    return fv(this._rawValidators, n)
                }
                hasAsyncValidator(n) {
                    return fv(this._rawAsyncValidators, n)
                }
                clearValidators() {
                    this.validator = null
                }
                clearAsyncValidators() {
                    this.asyncValidator = null
                }
                markAsTouched(n = {}) {
                    this.touched = !0, this._parent && !n.onlySelf && this._parent.markAsTouched(n)
                }
                markAllAsTouched() {
                    this.markAsTouched({
                        onlySelf: !0
                    }), this._forEachChild(n => n.markAllAsTouched())
                }
                markAsUntouched(n = {}) {
                    this.touched = !1, this._pendingTouched = !1, this._forEachChild(e => {
                        e.markAsUntouched({
                            onlySelf: !0
                        })
                    }), this._parent && !n.onlySelf && this._parent._updateTouched(n)
                }
                markAsDirty(n = {}) {
                    this.pristine = !1, this._parent && !n.onlySelf && this._parent.markAsDirty(n)
                }
                markAsPristine(n = {}) {
                    this.pristine = !0, this._pendingDirty = !1, this._forEachChild(e => {
                        e.markAsPristine({
                            onlySelf: !0
                        })
                    }), this._parent && !n.onlySelf && this._parent._updatePristine(n)
                }
                markAsPending(n = {}) {
                    this.status = xd, !1 !== n.emitEvent && this.statusChanges.emit(this.status), this._parent && !n.onlySelf && this._parent.markAsPending(n)
                }
                disable(n = {}) {
                    const e = this._parentMarkedDirty(n.onlySelf);
                    this.status = kf, this.errors = null, this._forEachChild(i => {
                        i.disable({ ...n,
                            onlySelf: !0
                        })
                    }), this._updateValue(), !1 !== n.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._updateAncestors({ ...n,
                        skipPristineCheck: e
                    }), this._onDisabledChange.forEach(i => i(!0))
                }
                enable(n = {}) {
                    const e = this._parentMarkedDirty(n.onlySelf);
                    this.status = Af, this._forEachChild(i => {
                        i.enable({ ...n,
                            onlySelf: !0
                        })
                    }), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: n.emitEvent
                    }), this._updateAncestors({ ...n,
                        skipPristineCheck: e
                    }), this._onDisabledChange.forEach(i => i(!1))
                }
                _updateAncestors(n) {
                    this._parent && !n.onlySelf && (this._parent.updateValueAndValidity(n), n.skipPristineCheck || this._parent._updatePristine(), this._parent._updateTouched())
                }
                setParent(n) {
                    this._parent = n
                }
                getRawValue() {
                    return this.value
                }
                updateValueAndValidity(n = {}) {
                    this._setInitialStatus(), this._updateValue(), this.enabled && (this._cancelExistingSubscription(), this.errors = this._runValidator(), this.status = this._calculateStatus(), (this.status === Af || this.status === xd) && this._runAsyncValidator(n.emitEvent)), !1 !== n.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)), this._parent && !n.onlySelf && this._parent.updateValueAndValidity(n)
                }
                _updateTreeValidity(n = {
                    emitEvent: !0
                }) {
                    this._forEachChild(e => e._updateTreeValidity(n)), this.updateValueAndValidity({
                        onlySelf: !0,
                        emitEvent: n.emitEvent
                    })
                }
                _setInitialStatus() {
                    this.status = this._allControlsDisabled() ? kf : Af
                }
                _runValidator() {
                    return this.validator ? this.validator(this) : null
                }
                _runAsyncValidator(n) {
                    if (this.asyncValidator) {
                        this.status = xd, this._hasOwnPendingAsyncValidator = !0;
                        const e = mL(this.asyncValidator(this));
                        this._asyncValidationSubscription = e.subscribe(i => {
                            this._hasOwnPendingAsyncValidator = !1, this.setErrors(i, {
                                emitEvent: n
                            })
                        })
                    }
                }
                _cancelExistingSubscription() {
                    this._asyncValidationSubscription && (this._asyncValidationSubscription.unsubscribe(), this._hasOwnPendingAsyncValidator = !1)
                }
                setErrors(n, e = {}) {
                    this.errors = n, this._updateControlsErrors(!1 !== e.emitEvent)
                }
                get(n) {
                    let e = n;
                    return null == e || (Array.isArray(e) || (e = e.split(".")), 0 === e.length) ? null : e.reduce((i, s) => i && i._find(s), this)
                }
                getError(n, e) {
                    const i = e ? this.get(e) : this;
                    return i && i.errors ? i.errors[n] : null
                }
                hasError(n, e) {
                    return !!this.getError(n, e)
                }
                get root() {
                    let n = this;
                    for (; n._parent;) n = n._parent;
                    return n
                }
                _updateControlsErrors(n) {
                    this.status = this._calculateStatus(), n && this.statusChanges.emit(this.status), this._parent && this._parent._updateControlsErrors(n)
                }
                _initObservables() {
                    this.valueChanges = new Pt, this.statusChanges = new Pt
                }
                _calculateStatus() {
                    return this._allControlsDisabled() ? kf : this.errors ? gv : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(xd) ? xd : this._anyControlsHaveStatus(gv) ? gv : Af
                }
                _anyControlsHaveStatus(n) {
                    return this._anyControls(e => e.status === n)
                }
                _anyControlsDirty() {
                    return this._anyControls(n => n.dirty)
                }
                _anyControlsTouched() {
                    return this._anyControls(n => n.touched)
                }
                _updatePristine(n = {}) {
                    this.pristine = !this._anyControlsDirty(), this._parent && !n.onlySelf && this._parent._updatePristine(n)
                }
                _updateTouched(n = {}) {
                    this.touched = this._anyControlsTouched(), this._parent && !n.onlySelf && this._parent._updateTouched(n)
                }
                _registerOnCollectionChange(n) {
                    this._onCollectionChange = n
                }
                _setUpdateStrategy(n) {
                    mv(n) && null != n.updateOn && (this._updateOn = n.updateOn)
                }
                _parentMarkedDirty(n) {
                    return !n && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty()
                }
                _find(n) {
                    return null
                }
                _assignValidators(n) {
                    this._rawValidators = Array.isArray(n) ? n.slice() : n, this._composedValidatorFn = function jq(t) {
                        return Array.isArray(t) ? Ew(t) : t || null
                    }(this._rawValidators)
                }
                _assignAsyncValidators(n) {
                    this._rawAsyncValidators = Array.isArray(n) ? n.slice() : n, this._composedAsyncValidatorFn = function $q(t) {
                        return Array.isArray(t) ? Mw(t) : t || null
                    }(this._rawAsyncValidators)
                }
            }
            const Wc = new zt("CallSetDisabledState", {
                    providedIn: "root",
                    factory: () => Ef
                }),
                Ef = "always";

            function Mf(t, n, e = Ef) {
                (function Bw(t, n) {
                    const e = function CL(t) {
                        return t._rawValidators
                    }(t);
                    null !== n.validator ? t.setValidators(wL(e, n.validator)) : "function" == typeof e && t.setValidators([e]);
                    const i = function SL(t) {
                        return t._rawAsyncValidators
                    }(t);
                    null !== n.asyncValidator ? t.setAsyncValidators(wL(i, n.asyncValidator)) : "function" == typeof i && t.setAsyncValidators([i]);
                    const s = () => t.updateValueAndValidity();
                    bv(n._rawValidators, s), bv(n._rawAsyncValidators, s)
                })(t, n), n.valueAccessor.writeValue(t.value), (t.disabled || "always" === e) && n.valueAccessor.setDisabledState ? .(t.disabled),
                    function Gq(t, n) {
                        n.valueAccessor.registerOnChange(e => {
                            t._pendingValue = e, t._pendingChange = !0, t._pendingDirty = !0, "change" === t.updateOn && IL(t, n)
                        })
                    }(t, n),
                    function Yq(t, n) {
                        const e = (i, s) => {
                            n.valueAccessor.writeValue(i), s && n.viewToModelUpdate(i)
                        };
                        t.registerOnChange(e), n._registerOnDestroy(() => {
                            t._unregisterOnChange(e)
                        })
                    }(t, n),
                    function Xq(t, n) {
                        n.valueAccessor.registerOnTouched(() => {
                            t._pendingTouched = !0, "blur" === t.updateOn && t._pendingChange && IL(t, n), "submit" !== t.updateOn && t.markAsTouched()
                        })
                    }(t, n),
                    function Wq(t, n) {
                        if (n.valueAccessor.setDisabledState) {
                            const e = i => {
                                n.valueAccessor.setDisabledState(i)
                            };
                            t.registerOnDisabledChange(e), n._registerOnDestroy(() => {
                                t._unregisterOnDisabledChange(e)
                            })
                        }
                    }(t, n)
            }

            function bv(t, n) {
                t.forEach(e => {
                    e.registerOnValidatorChange && e.registerOnValidatorChange(n)
                })
            }

            function IL(t, n) {
                t._pendingDirty && t.markAsDirty(), t.setValue(t._pendingValue, {
                    emitModelToViewChange: !1
                }), n.viewToModelUpdate(t._pendingValue), t._pendingChange = !1
            }

            function NL(t, n) {
                const e = t.indexOf(n);
                e > -1 && t.splice(e, 1)
            }

            function RL(t) {
                return "object" == typeof t && null !== t && 2 === Object.keys(t).length && "value" in t && "disabled" in t
            }
            const BL = class extends OL {
                    constructor(n = null, e, i) {
                        super(function Fw(t) {
                            return (mv(t) ? t.validators : t) || null
                        }(e), function Nw(t, n) {
                            return (mv(n) ? n.asyncValidators : t) || null
                        }(i, e)), this.defaultValue = null, this._onChange = [], this._pendingChange = !1, this._applyFormState(n), this._setUpdateStrategy(e), this._initObservables(), this.updateValueAndValidity({
                            onlySelf: !0,
                            emitEvent: !!this.asyncValidator
                        }), mv(e) && (e.nonNullable || e.initialValueIsDefault) && (this.defaultValue = RL(n) ? n.value : n)
                    }
                    setValue(n, e = {}) {
                        this.value = this._pendingValue = n, this._onChange.length && !1 !== e.emitModelToViewChange && this._onChange.forEach(i => i(this.value, !1 !== e.emitViewToModelChange)), this.updateValueAndValidity(e)
                    }
                    patchValue(n, e = {}) {
                        this.setValue(n, e)
                    }
                    reset(n = this.defaultValue, e = {}) {
                        this._applyFormState(n), this.markAsPristine(e), this.markAsUntouched(e), this.setValue(this.value, e), this._pendingChange = !1
                    }
                    _updateValue() {}
                    _anyControls(n) {
                        return !1
                    }
                    _allControlsDisabled() {
                        return this.disabled
                    }
                    registerOnChange(n) {
                        this._onChange.push(n)
                    }
                    _unregisterOnChange(n) {
                        NL(this._onChange, n)
                    }
                    registerOnDisabledChange(n) {
                        this._onDisabledChange.push(n)
                    }
                    _unregisterOnDisabledChange(n) {
                        NL(this._onDisabledChange, n)
                    }
                    _forEachChild(n) {}
                    _syncPendingControls() {
                        return !("submit" !== this.updateOn || (this._pendingDirty && this.markAsDirty(), this._pendingTouched && this.markAsTouched(), !this._pendingChange) || (this.setValue(this._pendingValue, {
                            onlySelf: !0,
                            emitModelToViewChange: !1
                        }), 0))
                    }
                    _applyFormState(n) {
                        RL(n) ? (this.value = this._pendingValue = n.value, n.disabled ? this.disable({
                            onlySelf: !0,
                            emitEvent: !1
                        }) : this.enable({
                            onlySelf: !0,
                            emitEvent: !1
                        })) : this.value = this._pendingValue = n
                    }
                },
                nZ = {
                    provide: Kl,
                    useExisting: Tt(() => _v)
                },
                zL = (() => Promise.resolve())();
            let _v = (() => {
                    class t extends Kl {
                        constructor(e, i, s, r, l, u) {
                            super(), this._changeDetectorRef = l, this.callSetDisabledState = u, this.control = new BL, this._registered = !1, this.name = "", this.update = new Pt, this._parent = e, this._setValidators(i), this._setAsyncValidators(s), this.valueAccessor = function zw(t, n) {
                                if (!n) return null;
                                let e, i, s;
                                return Array.isArray(n), n.forEach(r => {
                                    r.constructor === Df ? e = r : function Kq(t) {
                                        return Object.getPrototypeOf(t.constructor) === Uc
                                    }(r) ? i = r : s = r
                                }), s || i || e || null
                            }(0, r)
                        }
                        ngOnChanges(e) {
                            if (this._checkForErrors(), !this._registered || "name" in e) {
                                if (this._registered && (this._checkName(), this.formDirective)) {
                                    const i = e.name.previousValue;
                                    this.formDirective.removeControl({
                                        name: i,
                                        path: this._getPath(i)
                                    })
                                }
                                this._setUpControl()
                            }
                            "isDisabled" in e && this._updateDisabled(e),
                                function Hw(t, n) {
                                    if (!t.hasOwnProperty("model")) return !1;
                                    const e = t.model;
                                    return !!e.isFirstChange() || !Object.is(n, e.currentValue)
                                }(e, this.viewModel) && (this._updateValue(this.model), this.viewModel = this.model)
                        }
                        ngOnDestroy() {
                            this.formDirective && this.formDirective.removeControl(this)
                        }
                        get path() {
                            return this._getPath(this.name)
                        }
                        get formDirective() {
                            return this._parent ? this._parent.formDirective : null
                        }
                        viewToModelUpdate(e) {
                            this.viewModel = e, this.update.emit(e)
                        }
                        _setUpControl() {
                            this._setUpdateStrategy(), this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this), this._registered = !0
                        }
                        _setUpdateStrategy() {
                            this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn)
                        }
                        _isStandalone() {
                            return !this._parent || !(!this.options || !this.options.standalone)
                        }
                        _setUpStandalone() {
                            Mf(this.control, this, this.callSetDisabledState), this.control.updateValueAndValidity({
                                emitEvent: !1
                            })
                        }
                        _checkForErrors() {
                            this._isStandalone() || this._checkParentType(), this._checkName()
                        }
                        _checkParentType() {}
                        _checkName() {
                            this.options && this.options.name && (this.name = this.options.name), this._isStandalone()
                        }
                        _updateValue(e) {
                            zL.then(() => {
                                this.control.setValue(e, {
                                    emitViewToModelChange: !1
                                }), this._changeDetectorRef ? .markForCheck()
                            })
                        }
                        _updateDisabled(e) {
                            const i = e.isDisabled.currentValue,
                                s = 0 !== i && ud(i);
                            zL.then(() => {
                                s && !this.control.disabled ? this.control.disable() : !s && this.control.disabled && this.control.enable(), this._changeDetectorRef ? .markForCheck()
                            })
                        }
                        _getPath(e) {
                            return this._parent ? function vv(t, n) {
                                return [...n.path, t]
                            }(e, this._parent) : [e]
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(Lr, 9), $e(fr, 10), $e(Zl, 10), $e(ko, 10), $e(Xr, 8), $e(Wc, 8))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["", "ngModel", "", 3, "formControlName", "", 3, "formControl", ""]
                            ],
                            inputs: {
                                name: "name",
                                isDisabled: ["disabled", "isDisabled"],
                                model: ["ngModel", "model"],
                                options: ["ngModelOptions", "options"]
                            },
                            outputs: {
                                update: "ngModelChange"
                            },
                            exportAs: ["ngModel"],
                            features: [Xi([nZ]), Pi, ni]
                        })
                    }
                    return t
                })(),
                $L = (() => {
                    class t {
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275mod = jn({
                            type: t
                        });
                        static# n = this.\u0275inj = zn({})
                    }
                    return t
                })();
            const $w = new zt("NgModelWithFormControlWarning"),
                fZ = {
                    provide: ko,
                    useExisting: Tt(() => wv),
                    multi: !0
                };

            function qL(t, n) {
                return null == t ? `${n}` : (n && "object" == typeof n && (n = "Object"), `${t}: ${n}`.slice(0, 50))
            }
            let wv = (() => {
                    class t extends Uc {
                        constructor() {
                            super(...arguments), this._optionMap = new Map, this._idCounter = 0, this._compareWith = Object.is
                        }
                        set compareWith(e) {
                            this._compareWith = e
                        }
                        writeValue(e) {
                            this.value = e;
                            const s = qL(this._getOptionId(e), e);
                            this.setProperty("value", s)
                        }
                        registerOnChange(e) {
                            this.onChange = i => {
                                this.value = this._getOptionValue(i), e(this.value)
                            }
                        }
                        _registerOption() {
                            return (this._idCounter++).toString()
                        }
                        _getOptionId(e) {
                            for (const i of this._optionMap.keys())
                                if (this._compareWith(this._optionMap.get(i), e)) return i;
                            return null
                        }
                        _getOptionValue(e) {
                            const i = function pZ(t) {
                                return t.split(":")[0]
                            }(e);
                            return this._optionMap.has(i) ? this._optionMap.get(i) : e
                        }
                        static# e = this.\u0275fac = function() {
                            let e;
                            return function(s) {
                                return (e || (e = _s(t)))(s || t)
                            }
                        }();
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["select", "formControlName", "", 3, "multiple", ""],
                                ["select", "formControl", "", 3, "multiple", ""],
                                ["select", "ngModel", "", 3, "multiple", ""]
                            ],
                            hostBindings: function(i, s) {
                                1 & i && bt("change", function(l) {
                                    return s.onChange(l.target.value)
                                })("blur", function() {
                                    return s.onTouched()
                                })
                            },
                            inputs: {
                                compareWith: "compareWith"
                            },
                            features: [Xi([fZ]), Pi]
                        })
                    }
                    return t
                })(),
                ZL = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._element = e, this._renderer = i, this._select = s, this._select && (this.id = this._select._registerOption())
                        }
                        set ngValue(e) {
                            null != this._select && (this._select._optionMap.set(this.id, e), this._setElementValue(qL(this.id, e)), this._select.writeValue(this._select.value))
                        }
                        set value(e) {
                            this._setElementValue(e), this._select && this._select.writeValue(this._select.value)
                        }
                        _setElementValue(e) {
                            this._renderer.setProperty(this._element.nativeElement, "value", e)
                        }
                        ngOnDestroy() {
                            this._select && (this._select._optionMap.delete(this.id), this._select.writeValue(this._select.value))
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(ii), $e(Ts), $e(wv, 9))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["option"]
                            ],
                            inputs: {
                                ngValue: "ngValue",
                                value: "value"
                            }
                        })
                    }
                    return t
                })();
            const gZ = {
                provide: ko,
                useExisting: Tt(() => Xw),
                multi: !0
            };

            function KL(t, n) {
                return null == t ? `${n}` : ("string" == typeof n && (n = `'${n}'`), n && "object" == typeof n && (n = "Object"), `${t}: ${n}`.slice(0, 50))
            }
            let Xw = (() => {
                    class t extends Uc {
                        constructor() {
                            super(...arguments), this._optionMap = new Map, this._idCounter = 0, this._compareWith = Object.is
                        }
                        set compareWith(e) {
                            this._compareWith = e
                        }
                        writeValue(e) {
                            let i;
                            if (this.value = e, Array.isArray(e)) {
                                const s = e.map(r => this._getOptionId(r));
                                i = (r, l) => {
                                    r._setSelected(s.indexOf(l.toString()) > -1)
                                }
                            } else i = (s, r) => {
                                s._setSelected(!1)
                            };
                            this._optionMap.forEach(i)
                        }
                        registerOnChange(e) {
                            this.onChange = i => {
                                const s = [],
                                    r = i.selectedOptions;
                                if (void 0 !== r) {
                                    const l = r;
                                    for (let u = 0; u < l.length; u++) {
                                        const v = this._getOptionValue(l[u].value);
                                        s.push(v)
                                    }
                                } else {
                                    const l = i.options;
                                    for (let u = 0; u < l.length; u++) {
                                        const h = l[u];
                                        if (h.selected) {
                                            const v = this._getOptionValue(h.value);
                                            s.push(v)
                                        }
                                    }
                                }
                                this.value = s, e(s)
                            }
                        }
                        _registerOption(e) {
                            const i = (this._idCounter++).toString();
                            return this._optionMap.set(i, e), i
                        }
                        _getOptionId(e) {
                            for (const i of this._optionMap.keys())
                                if (this._compareWith(this._optionMap.get(i)._value, e)) return i;
                            return null
                        }
                        _getOptionValue(e) {
                            const i = function mZ(t) {
                                return t.split(":")[0]
                            }(e);
                            return this._optionMap.has(i) ? this._optionMap.get(i)._value : e
                        }
                        static# e = this.\u0275fac = function() {
                            let e;
                            return function(s) {
                                return (e || (e = _s(t)))(s || t)
                            }
                        }();
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["select", "multiple", "", "formControlName", ""],
                                ["select", "multiple", "", "formControl", ""],
                                ["select", "multiple", "", "ngModel", ""]
                            ],
                            hostBindings: function(i, s) {
                                1 & i && bt("change", function(l) {
                                    return s.onChange(l.target)
                                })("blur", function() {
                                    return s.onTouched()
                                })
                            },
                            inputs: {
                                compareWith: "compareWith"
                            },
                            features: [Xi([gZ]), Pi]
                        })
                    }
                    return t
                })(),
                QL = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._element = e, this._renderer = i, this._select = s, this._select && (this.id = this._select._registerOption(this))
                        }
                        set ngValue(e) {
                            null != this._select && (this._value = e, this._setElementValue(KL(this.id, e)), this._select.writeValue(this._select.value))
                        }
                        set value(e) {
                            this._select ? (this._value = e, this._setElementValue(KL(this.id, e)), this._select.writeValue(this._select.value)) : this._setElementValue(e)
                        }
                        _setElementValue(e) {
                            this._renderer.setProperty(this._element.nativeElement, "value", e)
                        }
                        _setSelected(e) {
                            this._renderer.setProperty(this._element.nativeElement, "selected", e)
                        }
                        ngOnDestroy() {
                            this._select && (this._select._optionMap.delete(this.id), this._select.writeValue(this._select.value))
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(ii), $e(Ts), $e(Xw, 9))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["option"]
                            ],
                            inputs: {
                                ngValue: "ngValue",
                                value: "value"
                            }
                        })
                    }
                    return t
                })(),
                Gc = (() => {
                    class t {
                        constructor() {
                            this._validator = hv
                        }
                        ngOnChanges(e) {
                            if (this.inputName in e) {
                                const i = this.normalizeInput(e[this.inputName].currentValue);
                                this._enabled = this.enabled(i), this._validator = this._enabled ? this.createValidator(i) : hv, this._onChange && this._onChange()
                            }
                        }
                        validate(e) {
                            return this._validator(e)
                        }
                        registerOnValidatorChange(e) {
                            this._onChange = e
                        }
                        enabled(e) {
                            return null != e
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            features: [ni]
                        })
                    }
                    return t
                })();
            const SZ = {
                provide: fr,
                useExisting: Tt(() => qw),
                multi: !0
            };
            let qw = (() => {
                    class t extends Gc {
                        constructor() {
                            super(...arguments), this.inputName = "pattern", this.normalizeInput = e => e, this.createValidator = e => pL(e)
                        }
                        static# e = this.\u0275fac = function() {
                            let e;
                            return function(s) {
                                return (e || (e = _s(t)))(s || t)
                            }
                        }();
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["", "pattern", "", "formControlName", ""],
                                ["", "pattern", "", "formControl", ""],
                                ["", "pattern", "", "ngModel", ""]
                            ],
                            hostVars: 1,
                            hostBindings: function(i, s) {
                                2 & i && mn("pattern", s._enabled ? s.pattern : null)
                            },
                            inputs: {
                                pattern: "pattern"
                            },
                            features: [Xi([SZ]), Pi]
                        })
                    }
                    return t
                })(),
                oF = (() => {
                    class t {
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275mod = jn({
                            type: t
                        });
                        static# n = this.\u0275inj = zn({
                            imports: [$L]
                        })
                    }
                    return t
                })(),
                DZ = (() => {
                    class t {
                        static withConfig(e) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: Wc,
                                    useValue: e.callSetDisabledState ? ? Ef
                                }]
                            }
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275mod = jn({
                            type: t
                        });
                        static# n = this.\u0275inj = zn({
                            imports: [oF]
                        })
                    }
                    return t
                })(),
                AZ = (() => {
                    class t {
                        static withConfig(e) {
                            return {
                                ngModule: t,
                                providers: [{
                                    provide: $w,
                                    useValue: e.warnOnNgModelWithFormControl ? ? "always"
                                }, {
                                    provide: Wc,
                                    useValue: e.callSetDisabledState ? ? Ef
                                }]
                            }
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275mod = jn({
                            type: t
                        });
                        static# n = this.\u0275inj = zn({
                            imports: [oF]
                        })
                    }
                    return t
                })();
            const kZ = new zt("WindowToken", typeof window < "u" && window.document ? {
                providedIn: "root",
                factory: () => window
            } : {
                providedIn: "root",
                factory: () => {}
            });
            let EZ = (() => {
                    class t {
                        constructor(e, i, s) {
                            this.ngZone = e, this.document = i, this.window = s, this.copySubject = new He, this.copyResponse$ = this.copySubject.asObservable(), this.config = {}
                        }
                        configure(e) {
                            this.config = e
                        }
                        copy(e) {
                            if (!this.isSupported || !e) return this.pushCopyResponse({
                                isSuccess: !1,
                                content: e
                            });
                            const i = this.copyFromContent(e);
                            return this.pushCopyResponse(i ? {
                                content: e,
                                isSuccess: i
                            } : {
                                isSuccess: !1,
                                content: e
                            })
                        }
                        get isSupported() {
                            return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported("copy") && !!this.window
                        }
                        isTargetValid(e) {
                            if (e instanceof HTMLInputElement || e instanceof HTMLTextAreaElement) {
                                if (e.hasAttribute("disabled")) throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
                                return !0
                            }
                            throw new Error("Target should be input or textarea")
                        }
                        copyFromInputElement(e, i = !0) {
                            try {
                                this.selectTarget(e);
                                const s = this.copyText();
                                return this.clearSelection(i ? e : void 0, this.window), s && this.isCopySuccessInIE11()
                            } catch {
                                return !1
                            }
                        }
                        isCopySuccessInIE11() {
                            const e = this.window.clipboardData;
                            return !(e && e.getData && !e.getData("Text"))
                        }
                        copyFromContent(e, i = this.document.body) {
                            if (this.tempTextArea && !i.contains(this.tempTextArea) && this.destroy(this.tempTextArea.parentElement || void 0), !this.tempTextArea) {
                                this.tempTextArea = this.createTempTextArea(this.document, this.window);
                                try {
                                    i.appendChild(this.tempTextArea)
                                } catch {
                                    throw new Error("Container should be a Dom element")
                                }
                            }
                            this.tempTextArea.value = e;
                            const s = this.copyFromInputElement(this.tempTextArea, !1);
                            return this.config.cleanUpAfterCopy && this.destroy(this.tempTextArea.parentElement || void 0), s
                        }
                        destroy(e = this.document.body) {
                            this.tempTextArea && (e.removeChild(this.tempTextArea), this.tempTextArea = void 0)
                        }
                        selectTarget(e) {
                            return e.select(), e.setSelectionRange(0, e.value.length), e.value.length
                        }
                        copyText() {
                            return this.document.execCommand("copy")
                        }
                        clearSelection(e, i) {
                            e && e.focus(), i.getSelection() ? .removeAllRanges()
                        }
                        createTempTextArea(e, i) {
                            const s = "rtl" === e.documentElement.getAttribute("dir");
                            let r;
                            return r = e.createElement("textarea"), r.style.fontSize = "12pt", r.style.border = "0", r.style.padding = "0", r.style.margin = "0", r.style.position = "absolute", r.style[s ? "right" : "left"] = "-9999px", r.style.top = (i.pageYOffset || e.documentElement.scrollTop) + "px", r.setAttribute("readonly", ""), r
                        }
                        pushCopyResponse(e) {
                            this.copySubject.observers.length > 0 && this.ngZone.run(() => {
                                this.copySubject.next(e)
                            })
                        }
                        pushCopyReponse(e) {
                            this.pushCopyResponse(e)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(vt(si), vt(fs), vt(kZ, 8))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                MZ = (() => {
                    class t {
                        constructor(e, i, s, r) {
                            this.ngZone = e, this.host = i, this.renderer = s, this.clipboardSrv = r, this.cbOnSuccess = new Pt, this.cbOnError = new Pt, this.onClick = l => {
                                this.clipboardSrv.isSupported ? this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm) ? this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, l) : this.cbContent && this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, l) : this.handleResult(!1, void 0, l)
                            }
                        }
                        ngOnInit() {
                            this.ngZone.runOutsideAngular(() => {
                                this.clickListener = this.renderer.listen(this.host.nativeElement, "click", this.onClick)
                            })
                        }
                        ngOnDestroy() {
                            this.clickListener && this.clickListener(), this.clipboardSrv.destroy(this.container)
                        }
                        handleResult(e, i, s) {
                            let r = {
                                isSuccess: e,
                                content: i,
                                successMessage: this.cbSuccessMsg,
                                event: s
                            };
                            e ? this.cbOnSuccess.observed && this.ngZone.run(() => {
                                this.cbOnSuccess.emit(r)
                            }) : this.cbOnError.observed && this.ngZone.run(() => {
                                this.cbOnError.emit(r)
                            }), this.clipboardSrv.pushCopyResponse(r)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(si), $e(ii), $e(Ts), $e(EZ))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "ngxClipboard", ""]
                        ],
                        inputs: {
                            targetElm: ["ngxClipboard", "targetElm"],
                            container: "container",
                            cbContent: "cbContent",
                            cbSuccessMsg: "cbSuccessMsg"
                        },
                        outputs: {
                            cbOnSuccess: "cbOnSuccess",
                            cbOnError: "cbOnError"
                        }
                    }), t
                })(),
                PZ = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [Oa]
                        ]
                    }), t
                })();
            const Cv = Ee(t => function() {
                t(this), this.name = "EmptyError", this.message = "no elements in sequence"
            });

            function Sv(t) {
                return Dt((n, e) => {
                    let i = !1;
                    n.subscribe(Ct(e, s => {
                        i = !0, e.next(s)
                    }, () => {
                        i || e.next(t), e.complete()
                    }))
                })
            }

            function lF(t = OZ) {
                return Dt((n, e) => {
                    let i = !1;
                    n.subscribe(Ct(e, s => {
                        i = !0, e.next(s)
                    }, () => i ? e.complete() : e.error(t())))
                })
            }

            function OZ() {
                return new Cv
            }

            function Eo(t, n) {
                const e = arguments.length >= 2;
                return i => i.pipe(t ? hr((s, r) => t(s, r, i)) : Ge, Or(1), e ? Sv(n) : lF(() => new Cv))
            }

            function cF(t) {
                return hr((n, e) => t <= e)
            }

            function uF(t, n, e, i, s) {
                return (r, l) => {
                    let u = e,
                        h = n,
                        v = 0;
                    r.subscribe(Ct(l, _ => {
                        const C = v++;
                        h = u ? t(h, _, C) : (u = !0, _), i && l.next(h)
                    }, s && (() => {
                        u && l.next(h), l.complete()
                    })))
                }
            }
            const LZ = (t, n) => (t.push(n), t);
            const Tv = new mw(gw),
                NZ = Tv;

            function dF(t) {
                return kt(() => t)
            }

            function hF(t, n) {
                return n ? e => pd(n.pipe(Or(1), function RZ() {
                    return Dt((t, n) => {
                        t.subscribe(Ct(n, Te))
                    })
                }()), e.pipe(hF(t))) : zi((e, i) => pt(t(e, i)).pipe(Or(1), dF(e)))
            }

            function fF(t = 0, n, e = NZ) {
                let i = -1;
                return null != n && (o(n) ? e = n : i = n), new we(s => {
                    let r = function BZ(t) {
                        return t instanceof Date && !isNaN(t)
                    }(t) ? +t - e.now() : t;
                    r < 0 && (r = 0);
                    let l = 0;
                    return e.schedule(function() {
                        s.closed || (s.next(l++), 0 <= i ? this.schedule(void 0, i) : s.complete())
                    }, r)
                })
            }

            function Zw(...t) {
                const n = f(t),
                    e = d(t),
                    {
                        args: i,
                        keys: s
                    } = sI(t);
                if (0 === i.length) return $([], n);
                const r = new we(function HZ(t, n, e = Ge) {
                    return i => {
                        pF(n, () => {
                            const {
                                length: s
                            } = t, r = new Array(s);
                            let l = s,
                                u = s;
                            for (let h = 0; h < s; h++) pF(n, () => {
                                const v = $(t[h], n);
                                let _ = !1;
                                v.subscribe(Ct(i, C => {
                                    r[h] = C, _ || (_ = !0, u--), u || i.next(e(r.slice()))
                                }, () => {
                                    --l || i.complete()
                                }))
                            }, i)
                        }, i)
                    }
                }(i, n, s ? l => rI(s, l) : Ge));
                return e ? r.pipe(iw(e)) : r
            }

            function pF(t, n, e) {
                t ? as(e, t, n) : n()
            }

            function Kw() {
                return Dt((t, n) => {
                    let e = null;
                    t._refCount++;
                    const i = Ct(n, void 0, void 0, void 0, () => {
                        if (!t || t._refCount <= 0 || 0 < --t._refCount) return void(e = null);
                        const s = t._connection,
                            r = e;
                        e = null, s && (!r || s === r) && s.unsubscribe(), n.unsubscribe()
                    });
                    t.subscribe(i), i.closed || (e = t.connect())
                })
            }
            class gF extends we {
                constructor(n, e) {
                    super(), this.source = n, this.subjectFactory = e, this._subject = null, this._refCount = 0, this._connection = null, Ft(n) && (this.lift = n.lift)
                }
                _subscribe(n) {
                    return this.getSubject().subscribe(n)
                }
                getSubject() {
                    const n = this._subject;
                    return (!n || n.isStopped) && (this._subject = this.subjectFactory()), this._subject
                }
                _teardown() {
                    this._refCount = 0;
                    const {
                        _connection: n
                    } = this;
                    this._subject = this._connection = null, n ? .unsubscribe()
                }
                connect() {
                    let n = this._connection;
                    if (!n) {
                        n = this._connection = new U;
                        const e = this.getSubject();
                        n.add(this.source.subscribe(Ct(e, void 0, () => {
                            this._teardown(), e.complete()
                        }, i => {
                            this._teardown(), e.error(i)
                        }, () => this._teardown()))), n.closed && (this._connection = null, n = U.EMPTY)
                    }
                    return n
                }
                refCount() {
                    return Kw()(this)
                }
            }

            function Qw(t) {
                return t <= 0 ? () => os : Dt((n, e) => {
                    let i = [];
                    n.subscribe(Ct(e, s => {
                        i.push(s), t < i.length && i.shift()
                    }, () => {
                        for (const s of i) e.next(s);
                        e.complete()
                    }, void 0, () => {
                        i = null
                    }))
                })
            }

            function mF(t) {
                return Dt((n, e) => {
                    pt(t).subscribe(Ct(e, () => e.complete(), Te)), !e.closed && n.subscribe(e)
                })
            }
            const Gn = "primary",
                Of = Symbol("RouteTitle");
            class UZ {
                constructor(n) {
                    this.params = n || {}
                }
                has(n) {
                    return Object.prototype.hasOwnProperty.call(this.params, n)
                }
                get(n) {
                    if (this.has(n)) {
                        const e = this.params[n];
                        return Array.isArray(e) ? e[0] : e
                    }
                    return null
                }
                getAll(n) {
                    if (this.has(n)) {
                        const e = this.params[n];
                        return Array.isArray(e) ? e : [e]
                    }
                    return []
                }
                get keys() {
                    return Object.keys(this.params)
                }
            }

            function _d(t) {
                return new UZ(t)
            }

            function WZ(t, n, e) {
                const i = e.path.split("/");
                if (i.length > t.length || "full" === e.pathMatch && (n.hasChildren() || i.length < t.length)) return null;
                const s = {};
                for (let r = 0; r < i.length; r++) {
                    const l = i[r],
                        u = t[r];
                    if (l.startsWith(":")) s[l.substring(1)] = u;
                    else if (l !== u.path) return null
                }
                return {
                    consumed: t.slice(0, i.length),
                    posParams: s
                }
            }

            function Mo(t, n) {
                const e = t ? Object.keys(t) : void 0,
                    i = n ? Object.keys(n) : void 0;
                if (!e || !i || e.length != i.length) return !1;
                let s;
                for (let r = 0; r < e.length; r++)
                    if (s = e[r], !vF(t[s], n[s])) return !1;
                return !0
            }

            function vF(t, n) {
                if (Array.isArray(t) && Array.isArray(n)) {
                    if (t.length !== n.length) return !1;
                    const e = [...t].sort(),
                        i = [...n].sort();
                    return e.every((s, r) => i[r] === s)
                }
                return t === n
            }

            function yF(t) {
                return t.length > 0 ? t[t.length - 1] : null
            }

            function Ql(t) {
                return nl(t) ? t : Gh(t) ? $(Promise.resolve(t)) : b(t)
            }
            const XZ = {
                    exact: function _F(t, n, e) {
                        if (!Xc(t.segments, n.segments) || !Dv(t.segments, n.segments, e) || t.numberOfChildren !== n.numberOfChildren) return !1;
                        for (const i in n.children)
                            if (!t.children[i] || !_F(t.children[i], n.children[i], e)) return !1;
                        return !0
                    },
                    subset: wF
                },
                bF = {
                    exact: function YZ(t, n) {
                        return Mo(t, n)
                    },
                    subset: function qZ(t, n) {
                        return Object.keys(n).length <= Object.keys(t).length && Object.keys(n).every(e => vF(t[e], n[e]))
                    },
                    ignored: () => !0
                };

            function xF(t, n, e) {
                return XZ[e.paths](t.root, n.root, e.matrixParams) && bF[e.queryParams](t.queryParams, n.queryParams) && !("exact" === e.fragment && t.fragment !== n.fragment)
            }

            function wF(t, n, e) {
                return CF(t, n, n.segments, e)
            }

            function CF(t, n, e, i) {
                if (t.segments.length > e.length) {
                    const s = t.segments.slice(0, e.length);
                    return !(!Xc(s, e) || n.hasChildren() || !Dv(s, e, i))
                }
                if (t.segments.length === e.length) {
                    if (!Xc(t.segments, e) || !Dv(t.segments, e, i)) return !1;
                    for (const s in n.children)
                        if (!t.children[s] || !wF(t.children[s], n.children[s], i)) return !1;
                    return !0
                } {
                    const s = e.slice(0, t.segments.length),
                        r = e.slice(t.segments.length);
                    return !!(Xc(t.segments, s) && Dv(t.segments, s, i) && t.children[Gn]) && CF(t.children[Gn], n, r, i)
                }
            }

            function Dv(t, n, e) {
                return n.every((i, s) => bF[e](t[s].parameters, i.parameters))
            }
            class wd {
                constructor(n = new Ri([], {}), e = {}, i = null) {
                    this.root = n, this.queryParams = e, this.fragment = i
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = _d(this.queryParams)), this._queryParamMap
                }
                toString() {
                    return QZ.serialize(this)
                }
            }
            class Ri {
                constructor(n, e) {
                    this.segments = n, this.children = e, this.parent = null, Object.values(e).forEach(i => i.parent = this)
                }
                hasChildren() {
                    return this.numberOfChildren > 0
                }
                get numberOfChildren() {
                    return Object.keys(this.children).length
                }
                toString() {
                    return Av(this)
                }
            }
            class If {
                constructor(n, e) {
                    this.path = n, this.parameters = e
                }
                get parameterMap() {
                    return this._parameterMap || (this._parameterMap = _d(this.parameters)), this._parameterMap
                }
                toString() {
                    return DF(this)
                }
            }

            function Xc(t, n) {
                return t.length === n.length && t.every((e, i) => e.path === n[i].path)
            }
            let Lf = (() => {
                class t {
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: function() {
                            return new Jw
                        },
                        providedIn: "root"
                    })
                }
                return t
            })();
            class Jw {
                parse(n) {
                    const e = new cK(n);
                    return new wd(e.parseRootSegment(), e.parseQueryParams(), e.parseFragment())
                }
                serialize(n) {
                    const e = `/${Ff(n.root,!0)}`,
                        i = function tK(t) {
                            const n = Object.keys(t).map(e => {
                                const i = t[e];
                                return Array.isArray(i) ? i.map(s => `${kv(e)}=${kv(s)}`).join("&") : `${kv(e)}=${kv(i)}`
                            }).filter(e => !!e);
                            return n.length ? `?${n.join("&")}` : ""
                        }(n.queryParams);
                    return `${e}${i}${"string"==typeof n.fragment?`#${function JZ(t){return encodeURI(t)}(n.fragment)}`:""}`
                }
            }
            const QZ = new Jw;

            function Av(t) {
                return t.segments.map(n => DF(n)).join("/")
            }

            function Ff(t, n) {
                if (!t.hasChildren()) return Av(t);
                if (n) {
                    const e = t.children[Gn] ? Ff(t.children[Gn], !1) : "",
                        i = [];
                    return Object.entries(t.children).forEach(([s, r]) => {
                        s !== Gn && i.push(`${s}:${Ff(r,!1)}`)
                    }), i.length > 0 ? `${e}(${i.join("//")})` : e
                } {
                    const e = function KZ(t, n) {
                        let e = [];
                        return Object.entries(t.children).forEach(([i, s]) => {
                            i === Gn && (e = e.concat(n(s, i)))
                        }), Object.entries(t.children).forEach(([i, s]) => {
                            i !== Gn && (e = e.concat(n(s, i)))
                        }), e
                    }(t, (i, s) => s === Gn ? [Ff(t.children[Gn], !1)] : [`${s}:${Ff(i,!1)}`]);
                    return 1 === Object.keys(t.children).length && null != t.children[Gn] ? `${Av(t)}/${e[0]}` : `${Av(t)}/(${e.join("//")})`
                }
            }

            function SF(t) {
                return encodeURIComponent(t).replace(/%40/g, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",")
            }

            function kv(t) {
                return SF(t).replace(/%3B/gi, ";")
            }

            function eC(t) {
                return SF(t).replace(/\(/g, "%28").replace(/\)/g, "%29").replace(/%26/gi, "&")
            }

            function Ev(t) {
                return decodeURIComponent(t)
            }

            function TF(t) {
                return Ev(t.replace(/\+/g, "%20"))
            }

            function DF(t) {
                return `${eC(t.path)}${function eK(t){return Object.keys(t).map(n=>`;${eC(n)}=${eC(t[n])}`).join("")}(t.parameters)}`
            }
            const nK = /^[^\/()?;#]+/;

            function tC(t) {
                const n = t.match(nK);
                return n ? n[0] : ""
            }
            const iK = /^[^\/()?;=#]+/,
                rK = /^[^=?&#]+/,
                oK = /^[^&#]+/;
            class cK {
                constructor(n) {
                    this.url = n, this.remaining = n
                }
                parseRootSegment() {
                    return this.consumeOptional("/"), "" === this.remaining || this.peekStartsWith("?") || this.peekStartsWith("#") ? new Ri([], {}) : new Ri([], this.parseChildren())
                }
                parseQueryParams() {
                    const n = {};
                    if (this.consumeOptional("?"))
                        do {
                            this.parseQueryParam(n)
                        } while (this.consumeOptional("&"));
                    return n
                }
                parseFragment() {
                    return this.consumeOptional("#") ? decodeURIComponent(this.remaining) : null
                }
                parseChildren() {
                    if ("" === this.remaining) return {};
                    this.consumeOptional("/");
                    const n = [];
                    for (this.peekStartsWith("(") || n.push(this.parseSegment()); this.peekStartsWith("/") && !this.peekStartsWith("//") && !this.peekStartsWith("/(");) this.capture("/"), n.push(this.parseSegment());
                    let e = {};
                    this.peekStartsWith("/(") && (this.capture("/"), e = this.parseParens(!0));
                    let i = {};
                    return this.peekStartsWith("(") && (i = this.parseParens(!1)), (n.length > 0 || Object.keys(e).length > 0) && (i[Gn] = new Ri(n, e)), i
                }
                parseSegment() {
                    const n = tC(this.remaining);
                    if ("" === n && this.peekStartsWith(";")) throw new ke(4009, !1);
                    return this.capture(n), new If(Ev(n), this.parseMatrixParams())
                }
                parseMatrixParams() {
                    const n = {};
                    for (; this.consumeOptional(";");) this.parseParam(n);
                    return n
                }
                parseParam(n) {
                    const e = function sK(t) {
                        const n = t.match(iK);
                        return n ? n[0] : ""
                    }(this.remaining);
                    if (!e) return;
                    this.capture(e);
                    let i = "";
                    if (this.consumeOptional("=")) {
                        const s = tC(this.remaining);
                        s && (i = s, this.capture(i))
                    }
                    n[Ev(e)] = Ev(i)
                }
                parseQueryParam(n) {
                    const e = function aK(t) {
                        const n = t.match(rK);
                        return n ? n[0] : ""
                    }(this.remaining);
                    if (!e) return;
                    this.capture(e);
                    let i = "";
                    if (this.consumeOptional("=")) {
                        const l = function lK(t) {
                            const n = t.match(oK);
                            return n ? n[0] : ""
                        }(this.remaining);
                        l && (i = l, this.capture(i))
                    }
                    const s = TF(e),
                        r = TF(i);
                    if (n.hasOwnProperty(s)) {
                        let l = n[s];
                        Array.isArray(l) || (l = [l], n[s] = l), l.push(r)
                    } else n[s] = r
                }
                parseParens(n) {
                    const e = {};
                    for (this.capture("("); !this.consumeOptional(")") && this.remaining.length > 0;) {
                        const i = tC(this.remaining),
                            s = this.remaining[i.length];
                        if ("/" !== s && ")" !== s && ";" !== s) throw new ke(4010, !1);
                        let r;
                        i.indexOf(":") > -1 ? (r = i.slice(0, i.indexOf(":")), this.capture(r), this.capture(":")) : n && (r = Gn);
                        const l = this.parseChildren();
                        e[r] = 1 === Object.keys(l).length ? l[Gn] : new Ri([], l), this.consumeOptional("//")
                    }
                    return e
                }
                peekStartsWith(n) {
                    return this.remaining.startsWith(n)
                }
                consumeOptional(n) {
                    return !!this.peekStartsWith(n) && (this.remaining = this.remaining.substring(n.length), !0)
                }
                capture(n) {
                    if (!this.consumeOptional(n)) throw new ke(4011, !1)
                }
            }

            function AF(t) {
                return t.segments.length > 0 ? new Ri([], {
                    [Gn]: t
                }) : t
            }

            function kF(t) {
                const n = {};
                for (const i of Object.keys(t.children)) {
                    const r = kF(t.children[i]);
                    if (i === Gn && 0 === r.segments.length && r.hasChildren())
                        for (const [l, u] of Object.entries(r.children)) n[l] = u;
                    else(r.segments.length > 0 || r.hasChildren()) && (n[i] = r)
                }
                return function uK(t) {
                    if (1 === t.numberOfChildren && t.children[Gn]) {
                        const n = t.children[Gn];
                        return new Ri(t.segments.concat(n.segments), n.children)
                    }
                    return t
                }(new Ri(t.segments, n))
            }

            function Yc(t) {
                return t instanceof wd
            }

            function EF(t) {
                let n;
                const s = AF(function e(r) {
                    const l = {};
                    for (const h of r.children) {
                        const v = e(h);
                        l[h.outlet] = v
                    }
                    const u = new Ri(r.url, l);
                    return r === t && (n = u), u
                }(t.root));
                return n ? ? s
            }

            function MF(t, n, e, i) {
                let s = t;
                for (; s.parent;) s = s.parent;
                if (0 === n.length) return nC(s, s, s, e, i);
                const r = function hK(t) {
                    if ("string" == typeof t[0] && 1 === t.length && "/" === t[0]) return new OF(!0, 0, t);
                    let n = 0,
                        e = !1;
                    const i = t.reduce((s, r, l) => {
                        if ("object" == typeof r && null != r) {
                            if (r.outlets) {
                                const u = {};
                                return Object.entries(r.outlets).forEach(([h, v]) => {
                                    u[h] = "string" == typeof v ? v.split("/") : v
                                }), [...s, {
                                    outlets: u
                                }]
                            }
                            if (r.segmentPath) return [...s, r.segmentPath]
                        }
                        return "string" != typeof r ? [...s, r] : 0 === l ? (r.split("/").forEach((u, h) => {
                            0 == h && "." === u || (0 == h && "" === u ? e = !0 : ".." === u ? n++ : "" != u && s.push(u))
                        }), s) : [...s, r]
                    }, []);
                    return new OF(e, n, i)
                }(n);
                if (r.toRoot()) return nC(s, s, new Ri([], {}), e, i);
                const l = function fK(t, n, e) {
                        if (t.isAbsolute) return new Pv(n, !0, 0);
                        if (!e) return new Pv(n, !1, NaN);
                        if (null === e.parent) return new Pv(e, !0, 0);
                        const i = Mv(t.commands[0]) ? 0 : 1;
                        return function pK(t, n, e) {
                            let i = t,
                                s = n,
                                r = e;
                            for (; r > s;) {
                                if (r -= s, i = i.parent, !i) throw new ke(4005, !1);
                                s = i.segments.length
                            }
                            return new Pv(i, !1, s - r)
                        }(e, e.segments.length - 1 + i, t.numberOfDoubleDots)
                    }(r, s, t),
                    u = l.processChildren ? Rf(l.segmentGroup, l.index, r.commands) : IF(l.segmentGroup, l.index, r.commands);
                return nC(s, l.segmentGroup, u, e, i)
            }

            function Mv(t) {
                return "object" == typeof t && null != t && !t.outlets && !t.segmentPath
            }

            function Nf(t) {
                return "object" == typeof t && null != t && t.outlets
            }

            function nC(t, n, e, i, s) {
                let l, r = {};
                i && Object.entries(i).forEach(([h, v]) => {
                    r[h] = Array.isArray(v) ? v.map(_ => `${_}`) : `${v}`
                }), l = t === n ? e : PF(t, n, e);
                const u = AF(kF(l));
                return new wd(u, r, s)
            }

            function PF(t, n, e) {
                const i = {};
                return Object.entries(t.children).forEach(([s, r]) => {
                    i[s] = r === n ? e : PF(r, n, e)
                }), new Ri(t.segments, i)
            }
            class OF {
                constructor(n, e, i) {
                    if (this.isAbsolute = n, this.numberOfDoubleDots = e, this.commands = i, n && i.length > 0 && Mv(i[0])) throw new ke(4003, !1);
                    const s = i.find(Nf);
                    if (s && s !== yF(i)) throw new ke(4004, !1)
                }
                toRoot() {
                    return this.isAbsolute && 1 === this.commands.length && "/" == this.commands[0]
                }
            }
            class Pv {
                constructor(n, e, i) {
                    this.segmentGroup = n, this.processChildren = e, this.index = i
                }
            }

            function IF(t, n, e) {
                if (t || (t = new Ri([], {})), 0 === t.segments.length && t.hasChildren()) return Rf(t, n, e);
                const i = function mK(t, n, e) {
                        let i = 0,
                            s = n;
                        const r = {
                            match: !1,
                            pathIndex: 0,
                            commandIndex: 0
                        };
                        for (; s < t.segments.length;) {
                            if (i >= e.length) return r;
                            const l = t.segments[s],
                                u = e[i];
                            if (Nf(u)) break;
                            const h = `${u}`,
                                v = i < e.length - 1 ? e[i + 1] : null;
                            if (s > 0 && void 0 === h) break;
                            if (h && v && "object" == typeof v && void 0 === v.outlets) {
                                if (!FF(h, v, l)) return r;
                                i += 2
                            } else {
                                if (!FF(h, {}, l)) return r;
                                i++
                            }
                            s++
                        }
                        return {
                            match: !0,
                            pathIndex: s,
                            commandIndex: i
                        }
                    }(t, n, e),
                    s = e.slice(i.commandIndex);
                if (i.match && i.pathIndex < t.segments.length) {
                    const r = new Ri(t.segments.slice(0, i.pathIndex), {});
                    return r.children[Gn] = new Ri(t.segments.slice(i.pathIndex), t.children), Rf(r, 0, s)
                }
                return i.match && 0 === s.length ? new Ri(t.segments, {}) : i.match && !t.hasChildren() ? iC(t, n, e) : i.match ? Rf(t, 0, s) : iC(t, n, e)
            }

            function Rf(t, n, e) {
                if (0 === e.length) return new Ri(t.segments, {}); {
                    const i = function gK(t) {
                            return Nf(t[0]) ? t[0].outlets : {
                                [Gn]: t
                            }
                        }(e),
                        s = {};
                    if (Object.keys(i).some(r => r !== Gn) && t.children[Gn] && 1 === t.numberOfChildren && 0 === t.children[Gn].segments.length) {
                        const r = Rf(t.children[Gn], n, e);
                        return new Ri(t.segments, r.children)
                    }
                    return Object.entries(i).forEach(([r, l]) => {
                        "string" == typeof l && (l = [l]), null !== l && (s[r] = IF(t.children[r], n, l))
                    }), Object.entries(t.children).forEach(([r, l]) => {
                        void 0 === i[r] && (s[r] = l)
                    }), new Ri(t.segments, s)
                }
            }

            function iC(t, n, e) {
                const i = t.segments.slice(0, n);
                let s = 0;
                for (; s < e.length;) {
                    const r = e[s];
                    if (Nf(r)) {
                        const h = vK(r.outlets);
                        return new Ri(i, h)
                    }
                    if (0 === s && Mv(e[0])) {
                        i.push(new If(t.segments[n].path, LF(e[0]))), s++;
                        continue
                    }
                    const l = Nf(r) ? r.outlets[Gn] : `${r}`,
                        u = s < e.length - 1 ? e[s + 1] : null;
                    l && u && Mv(u) ? (i.push(new If(l, LF(u))), s += 2) : (i.push(new If(l, {})), s++)
                }
                return new Ri(i, {})
            }

            function vK(t) {
                const n = {};
                return Object.entries(t).forEach(([e, i]) => {
                    "string" == typeof i && (i = [i]), null !== i && (n[e] = iC(new Ri([], {}), 0, i))
                }), n
            }

            function LF(t) {
                const n = {};
                return Object.entries(t).forEach(([e, i]) => n[e] = `${i}`), n
            }

            function FF(t, n, e) {
                return t == e.path && Mo(n, e.parameters)
            }
            const Bf = "imperative";
            class Po {
                constructor(n, e) {
                    this.id = n, this.url = e
                }
            }
            class Ov extends Po {
                constructor(n, e, i = "imperative", s = null) {
                    super(n, e), this.type = 0, this.navigationTrigger = i, this.restoredState = s
                }
                toString() {
                    return `NavigationStart(id: ${this.id}, url: '${this.url}')`
                }
            }
            class Jl extends Po {
                constructor(n, e, i) {
                    super(n, e), this.urlAfterRedirects = i, this.type = 1
                }
                toString() {
                    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`
                }
            }
            class Vf extends Po {
                constructor(n, e, i, s) {
                    super(n, e), this.reason = i, this.code = s, this.type = 2
                }
                toString() {
                    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`
                }
            }
            class Cd extends Po {
                constructor(n, e, i, s) {
                    super(n, e), this.reason = i, this.code = s, this.type = 16
                }
            }
            class Iv extends Po {
                constructor(n, e, i, s) {
                    super(n, e), this.error = i, this.target = s, this.type = 3
                }
                toString() {
                    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`
                }
            }
            class NF extends Po {
                constructor(n, e, i, s) {
                    super(n, e), this.urlAfterRedirects = i, this.state = s, this.type = 4
                }
                toString() {
                    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class yK extends Po {
                constructor(n, e, i, s) {
                    super(n, e), this.urlAfterRedirects = i, this.state = s, this.type = 7
                }
                toString() {
                    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class bK extends Po {
                constructor(n, e, i, s, r) {
                    super(n, e), this.urlAfterRedirects = i, this.state = s, this.shouldActivate = r, this.type = 8
                }
                toString() {
                    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`
                }
            }
            class xK extends Po {
                constructor(n, e, i, s) {
                    super(n, e), this.urlAfterRedirects = i, this.state = s, this.type = 5
                }
                toString() {
                    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class _K extends Po {
                constructor(n, e, i, s) {
                    super(n, e), this.urlAfterRedirects = i, this.state = s, this.type = 6
                }
                toString() {
                    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`
                }
            }
            class wK {
                constructor(n) {
                    this.route = n, this.type = 9
                }
                toString() {
                    return `RouteConfigLoadStart(path: ${this.route.path})`
                }
            }
            class CK {
                constructor(n) {
                    this.route = n, this.type = 10
                }
                toString() {
                    return `RouteConfigLoadEnd(path: ${this.route.path})`
                }
            }
            class SK {
                constructor(n) {
                    this.snapshot = n, this.type = 11
                }
                toString() {
                    return `ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class TK {
                constructor(n) {
                    this.snapshot = n, this.type = 12
                }
                toString() {
                    return `ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class DK {
                constructor(n) {
                    this.snapshot = n, this.type = 13
                }
                toString() {
                    return `ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class AK {
                constructor(n) {
                    this.snapshot = n, this.type = 14
                }
                toString() {
                    return `ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`
                }
            }
            class RF {
                constructor(n, e, i) {
                    this.routerEvent = n, this.position = e, this.anchor = i, this.type = 15
                }
                toString() {
                    return `Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`
                }
            }
            class sC {}
            class rC {
                constructor(n) {
                    this.url = n
                }
            }
            class kK {
                constructor() {
                    this.outlet = null, this.route = null, this.injector = null, this.children = new Hf, this.attachRef = null
                }
            }
            let Hf = (() => {
                class t {
                    constructor() {
                        this.contexts = new Map
                    }
                    onChildOutletCreated(e, i) {
                        const s = this.getOrCreateContext(e);
                        s.outlet = i, this.contexts.set(e, s)
                    }
                    onChildOutletDestroyed(e) {
                        const i = this.getContext(e);
                        i && (i.outlet = null, i.attachRef = null)
                    }
                    onOutletDeactivated() {
                        const e = this.contexts;
                        return this.contexts = new Map, e
                    }
                    onOutletReAttached(e) {
                        this.contexts = e
                    }
                    getOrCreateContext(e) {
                        let i = this.getContext(e);
                        return i || (i = new kK, this.contexts.set(e, i)), i
                    }
                    getContext(e) {
                        return this.contexts.get(e) || null
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            class BF {
                constructor(n) {
                    this._root = n
                }
                get root() {
                    return this._root.value
                }
                parent(n) {
                    const e = this.pathFromRoot(n);
                    return e.length > 1 ? e[e.length - 2] : null
                }
                children(n) {
                    const e = aC(n, this._root);
                    return e ? e.children.map(i => i.value) : []
                }
                firstChild(n) {
                    const e = aC(n, this._root);
                    return e && e.children.length > 0 ? e.children[0].value : null
                }
                siblings(n) {
                    const e = oC(n, this._root);
                    return e.length < 2 ? [] : e[e.length - 2].children.map(s => s.value).filter(s => s !== n)
                }
                pathFromRoot(n) {
                    return oC(n, this._root).map(e => e.value)
                }
            }

            function aC(t, n) {
                if (t === n.value) return n;
                for (const e of n.children) {
                    const i = aC(t, e);
                    if (i) return i
                }
                return null
            }

            function oC(t, n) {
                if (t === n.value) return [n];
                for (const e of n.children) {
                    const i = oC(t, e);
                    if (i.length) return i.unshift(n), i
                }
                return []
            }
            class sl {
                constructor(n, e) {
                    this.value = n, this.children = e
                }
                toString() {
                    return `TreeNode(${this.value})`
                }
            }

            function Sd(t) {
                const n = {};
                return t && t.children.forEach(e => n[e.value.outlet] = e), n
            }
            class VF extends BF {
                constructor(n, e) {
                    super(n), this.snapshot = e, lC(this, n)
                }
                toString() {
                    return this.snapshot.toString()
                }
            }

            function HF(t, n) {
                const e = function EK(t, n) {
                        const l = new Lv([], {}, {}, "", {}, Gn, n, null, {});
                        return new jF("", new sl(l, []))
                    }(0, n),
                    i = new re([new If("", {})]),
                    s = new re({}),
                    r = new re({}),
                    l = new re({}),
                    u = new re(""),
                    h = new rl(i, s, l, u, r, Gn, n, e.root);
                return h.snapshot = e.root, new VF(new sl(h, []), e)
            }
            class rl {
                constructor(n, e, i, s, r, l, u, h) {
                    this.urlSubject = n, this.paramsSubject = e, this.queryParamsSubject = i, this.fragmentSubject = s, this.dataSubject = r, this.outlet = l, this.component = u, this._futureSnapshot = h, this.title = this.dataSubject ? .pipe(kt(v => v[Of])) ? ? b(void 0), this.url = n, this.params = e, this.queryParams = i, this.fragment = s, this.data = r
                }
                get routeConfig() {
                    return this._futureSnapshot.routeConfig
                }
                get root() {
                    return this._routerState.root
                }
                get parent() {
                    return this._routerState.parent(this)
                }
                get firstChild() {
                    return this._routerState.firstChild(this)
                }
                get children() {
                    return this._routerState.children(this)
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this)
                }
                get paramMap() {
                    return this._paramMap || (this._paramMap = this.params.pipe(kt(n => _d(n)))), this._paramMap
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(kt(n => _d(n)))), this._queryParamMap
                }
                toString() {
                    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`
                }
            }

            function zF(t, n = "emptyOnly") {
                const e = t.pathFromRoot;
                let i = 0;
                if ("always" !== n)
                    for (i = e.length - 1; i >= 1;) {
                        const s = e[i],
                            r = e[i - 1];
                        if (s.routeConfig && "" === s.routeConfig.path) i--;
                        else {
                            if (r.component) break;
                            i--
                        }
                    }
                return function MK(t) {
                    return t.reduce((n, e) => ({
                        params: { ...n.params,
                            ...e.params
                        },
                        data: { ...n.data,
                            ...e.data
                        },
                        resolve: { ...e.data,
                            ...n.resolve,
                            ...e.routeConfig ? .data,
                            ...e._resolvedData
                        }
                    }), {
                        params: {},
                        data: {},
                        resolve: {}
                    })
                }(e.slice(i))
            }
            class Lv {
                get title() {
                    return this.data ? .[Of]
                }
                constructor(n, e, i, s, r, l, u, h, v) {
                    this.url = n, this.params = e, this.queryParams = i, this.fragment = s, this.data = r, this.outlet = l, this.component = u, this.routeConfig = h, this._resolve = v
                }
                get root() {
                    return this._routerState.root
                }
                get parent() {
                    return this._routerState.parent(this)
                }
                get firstChild() {
                    return this._routerState.firstChild(this)
                }
                get children() {
                    return this._routerState.children(this)
                }
                get pathFromRoot() {
                    return this._routerState.pathFromRoot(this)
                }
                get paramMap() {
                    return this._paramMap || (this._paramMap = _d(this.params)), this._paramMap
                }
                get queryParamMap() {
                    return this._queryParamMap || (this._queryParamMap = _d(this.queryParams)), this._queryParamMap
                }
                toString() {
                    return `Route(url:'${this.url.map(i=>i.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`
                }
            }
            class jF extends BF {
                constructor(n, e) {
                    super(e), this.url = n, lC(this, e)
                }
                toString() {
                    return $F(this._root)
                }
            }

            function lC(t, n) {
                n.value._routerState = t, n.children.forEach(e => lC(t, e))
            }

            function $F(t) {
                const n = t.children.length > 0 ? ` { ${t.children.map($F).join(", ")} } ` : "";
                return `${t.value}${n}`
            }

            function cC(t) {
                if (t.snapshot) {
                    const n = t.snapshot,
                        e = t._futureSnapshot;
                    t.snapshot = e, Mo(n.queryParams, e.queryParams) || t.queryParamsSubject.next(e.queryParams), n.fragment !== e.fragment && t.fragmentSubject.next(e.fragment), Mo(n.params, e.params) || t.paramsSubject.next(e.params),
                        function GZ(t, n) {
                            if (t.length !== n.length) return !1;
                            for (let e = 0; e < t.length; ++e)
                                if (!Mo(t[e], n[e])) return !1;
                            return !0
                        }(n.url, e.url) || t.urlSubject.next(e.url), Mo(n.data, e.data) || t.dataSubject.next(e.data)
                } else t.snapshot = t._futureSnapshot, t.dataSubject.next(t._futureSnapshot.data)
            }

            function uC(t, n) {
                const e = Mo(t.params, n.params) && function ZZ(t, n) {
                    return Xc(t, n) && t.every((e, i) => Mo(e.parameters, n[i].parameters))
                }(t.url, n.url);
                return e && !(!t.parent != !n.parent) && (!t.parent || uC(t.parent, n.parent))
            }
            let Fv = (() => {
                class t {
                    constructor() {
                        this.activated = null, this._activatedRoute = null, this.name = Gn, this.activateEvents = new Pt, this.deactivateEvents = new Pt, this.attachEvents = new Pt, this.detachEvents = new Pt, this.parentContexts = Xt(Hf), this.location = Xt(Wr), this.changeDetector = Xt(Xr), this.environmentInjector = Xt(la), this.inputBinder = Xt(Nv, {
                            optional: !0
                        }), this.supportsBindingToComponentInputs = !0
                    }
                    get activatedComponentRef() {
                        return this.activated
                    }
                    ngOnChanges(e) {
                        if (e.name) {
                            const {
                                firstChange: i,
                                previousValue: s
                            } = e.name;
                            if (i) return;
                            this.isTrackedInParentContexts(s) && (this.deactivate(), this.parentContexts.onChildOutletDestroyed(s)), this.initializeOutletWithName()
                        }
                    }
                    ngOnDestroy() {
                        this.isTrackedInParentContexts(this.name) && this.parentContexts.onChildOutletDestroyed(this.name), this.inputBinder ? .unsubscribeFromRouteData(this)
                    }
                    isTrackedInParentContexts(e) {
                        return this.parentContexts.getContext(e) ? .outlet === this
                    }
                    ngOnInit() {
                        this.initializeOutletWithName()
                    }
                    initializeOutletWithName() {
                        if (this.parentContexts.onChildOutletCreated(this.name, this), this.activated) return;
                        const e = this.parentContexts.getContext(this.name);
                        e ? .route && (e.attachRef ? this.attach(e.attachRef, e.route) : this.activateWith(e.route, e.injector))
                    }
                    get isActivated() {
                        return !!this.activated
                    }
                    get component() {
                        if (!this.activated) throw new ke(4012, !1);
                        return this.activated.instance
                    }
                    get activatedRoute() {
                        if (!this.activated) throw new ke(4012, !1);
                        return this._activatedRoute
                    }
                    get activatedRouteData() {
                        return this._activatedRoute ? this._activatedRoute.snapshot.data : {}
                    }
                    detach() {
                        if (!this.activated) throw new ke(4012, !1);
                        this.location.detach();
                        const e = this.activated;
                        return this.activated = null, this._activatedRoute = null, this.detachEvents.emit(e.instance), e
                    }
                    attach(e, i) {
                        this.activated = e, this._activatedRoute = i, this.location.insert(e.hostView), this.inputBinder ? .bindActivatedRouteToOutletComponent(this), this.attachEvents.emit(e.instance)
                    }
                    deactivate() {
                        if (this.activated) {
                            const e = this.component;
                            this.activated.destroy(), this.activated = null, this._activatedRoute = null, this.deactivateEvents.emit(e)
                        }
                    }
                    activateWith(e, i) {
                        if (this.isActivated) throw new ke(4013, !1);
                        this._activatedRoute = e;
                        const s = this.location,
                            l = e.snapshot.component,
                            u = this.parentContexts.getOrCreateContext(this.name).children,
                            h = new PK(e, u, s.injector);
                        this.activated = s.createComponent(l, {
                            index: s.length,
                            injector: h,
                            environmentInjector: i ? ? this.environmentInjector
                        }), this.changeDetector.markForCheck(), this.inputBinder ? .bindActivatedRouteToOutletComponent(this), this.activateEvents.emit(this.activated.instance)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["router-outlet"]
                        ],
                        inputs: {
                            name: "name"
                        },
                        outputs: {
                            activateEvents: "activate",
                            deactivateEvents: "deactivate",
                            attachEvents: "attach",
                            detachEvents: "detach"
                        },
                        exportAs: ["outlet"],
                        standalone: !0,
                        features: [ni]
                    })
                }
                return t
            })();
            class PK {
                constructor(n, e, i) {
                    this.route = n, this.childContexts = e, this.parent = i
                }
                get(n, e) {
                    return n === rl ? this.route : n === Hf ? this.childContexts : this.parent.get(n, e)
                }
            }
            const Nv = new zt("");
            let UF = (() => {
                class t {
                    constructor() {
                        this.outletDataSubscriptions = new Map
                    }
                    bindActivatedRouteToOutletComponent(e) {
                        this.unsubscribeFromRouteData(e), this.subscribeToRouteData(e)
                    }
                    unsubscribeFromRouteData(e) {
                        this.outletDataSubscriptions.get(e) ? .unsubscribe(), this.outletDataSubscriptions.delete(e)
                    }
                    subscribeToRouteData(e) {
                        const {
                            activatedRoute: i
                        } = e, s = Zw([i.queryParams, i.params, i.data]).pipe(X(([r, l, u], h) => (u = { ...r,
                            ...l,
                            ...u
                        }, 0 === h ? b(u) : Promise.resolve(u)))).subscribe(r => {
                            if (!e.isActivated || !e.activatedComponentRef || e.activatedRoute !== i || null === i.component) return void this.unsubscribeFromRouteData(e);
                            const l = function u7(t) {
                                const n = ti(t);
                                if (!n) return null;
                                const e = new zh(n);
                                return {
                                    get selector() {
                                        return e.selector
                                    },
                                    get type() {
                                        return e.componentType
                                    },
                                    get inputs() {
                                        return e.inputs
                                    },
                                    get outputs() {
                                        return e.outputs
                                    },
                                    get ngContentSelectors() {
                                        return e.ngContentSelectors
                                    },
                                    get isStandalone() {
                                        return n.standalone
                                    },
                                    get isSignal() {
                                        return n.signals
                                    }
                                }
                            }(i.component);
                            if (l)
                                for (const {
                                        templateName: u
                                    } of l.inputs) e.activatedComponentRef.setInput(u, r[u]);
                            else this.unsubscribeFromRouteData(e)
                        });
                        this.outletDataSubscriptions.set(e, s)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();

            function zf(t, n, e) {
                if (e && t.shouldReuseRoute(n.value, e.value.snapshot)) {
                    const i = e.value;
                    i._futureSnapshot = n.value;
                    const s = function IK(t, n, e) {
                        return n.children.map(i => {
                            for (const s of e.children)
                                if (t.shouldReuseRoute(i.value, s.value.snapshot)) return zf(t, i, s);
                            return zf(t, i)
                        })
                    }(t, n, e);
                    return new sl(i, s)
                } {
                    if (t.shouldAttach(n.value)) {
                        const r = t.retrieve(n.value);
                        if (null !== r) {
                            const l = r.route;
                            return l.value._futureSnapshot = n.value, l.children = n.children.map(u => zf(t, u)), l
                        }
                    }
                    const i = function LK(t) {
                            return new rl(new re(t.url), new re(t.params), new re(t.queryParams), new re(t.fragment), new re(t.data), t.outlet, t.component, t)
                        }(n.value),
                        s = n.children.map(r => zf(t, r));
                    return new sl(i, s)
                }
            }
            const dC = "ngNavigationCancelingError";

            function WF(t, n) {
                const {
                    redirectTo: e,
                    navigationBehaviorOptions: i
                } = Yc(n) ? {
                    redirectTo: n,
                    navigationBehaviorOptions: void 0
                } : n, s = GF(!1, 0, n);
                return s.url = e, s.navigationBehaviorOptions = i, s
            }

            function GF(t, n, e) {
                const i = new Error("NavigationCancelingError: " + (t || ""));
                return i[dC] = !0, i.cancellationCode = n, e && (i.url = e), i
            }

            function XF(t) {
                return t && t[dC]
            }
            let YF = (() => {
                class t {
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["ng-component"]
                        ],
                        standalone: !0,
                        features: [oM],
                        decls: 1,
                        vars: 0,
                        template: function(i, s) {
                            1 & i && ot(0, "router-outlet")
                        },
                        dependencies: [Fv],
                        encapsulation: 2
                    })
                }
                return t
            })();

            function hC(t) {
                const n = t.children && t.children.map(hC),
                    e = n ? { ...t,
                        children: n
                    } : { ...t
                    };
                return !e.component && !e.loadComponent && (n || e.loadChildren) && e.outlet && e.outlet !== Gn && (e.component = YF), e
            }

            function Ka(t) {
                return t.outlet || Gn
            }

            function jf(t) {
                if (!t) return null;
                if (t.routeConfig ? ._injector) return t.routeConfig._injector;
                for (let n = t.parent; n; n = n.parent) {
                    const e = n.routeConfig;
                    if (e ? ._loadedInjector) return e._loadedInjector;
                    if (e ? ._injector) return e._injector
                }
                return null
            }
            class jK {
                constructor(n, e, i, s, r) {
                    this.routeReuseStrategy = n, this.futureState = e, this.currState = i, this.forwardEvent = s, this.inputBindingEnabled = r
                }
                activate(n) {
                    const e = this.futureState._root,
                        i = this.currState ? this.currState._root : null;
                    this.deactivateChildRoutes(e, i, n), cC(this.futureState.root), this.activateChildRoutes(e, i, n)
                }
                deactivateChildRoutes(n, e, i) {
                    const s = Sd(e);
                    n.children.forEach(r => {
                        const l = r.value.outlet;
                        this.deactivateRoutes(r, s[l], i), delete s[l]
                    }), Object.values(s).forEach(r => {
                        this.deactivateRouteAndItsChildren(r, i)
                    })
                }
                deactivateRoutes(n, e, i) {
                    const s = n.value,
                        r = e ? e.value : null;
                    if (s === r)
                        if (s.component) {
                            const l = i.getContext(s.outlet);
                            l && this.deactivateChildRoutes(n, e, l.children)
                        } else this.deactivateChildRoutes(n, e, i);
                    else r && this.deactivateRouteAndItsChildren(e, i)
                }
                deactivateRouteAndItsChildren(n, e) {
                    n.value.component && this.routeReuseStrategy.shouldDetach(n.value.snapshot) ? this.detachAndStoreRouteSubtree(n, e) : this.deactivateRouteAndOutlet(n, e)
                }
                detachAndStoreRouteSubtree(n, e) {
                    const i = e.getContext(n.value.outlet),
                        s = i && n.value.component ? i.children : e,
                        r = Sd(n);
                    for (const l of Object.keys(r)) this.deactivateRouteAndItsChildren(r[l], s);
                    if (i && i.outlet) {
                        const l = i.outlet.detach(),
                            u = i.children.onOutletDeactivated();
                        this.routeReuseStrategy.store(n.value.snapshot, {
                            componentRef: l,
                            route: n,
                            contexts: u
                        })
                    }
                }
                deactivateRouteAndOutlet(n, e) {
                    const i = e.getContext(n.value.outlet),
                        s = i && n.value.component ? i.children : e,
                        r = Sd(n);
                    for (const l of Object.keys(r)) this.deactivateRouteAndItsChildren(r[l], s);
                    i && (i.outlet && (i.outlet.deactivate(), i.children.onOutletDeactivated()), i.attachRef = null, i.route = null)
                }
                activateChildRoutes(n, e, i) {
                    const s = Sd(e);
                    n.children.forEach(r => {
                        this.activateRoutes(r, s[r.value.outlet], i), this.forwardEvent(new AK(r.value.snapshot))
                    }), n.children.length && this.forwardEvent(new TK(n.value.snapshot))
                }
                activateRoutes(n, e, i) {
                    const s = n.value,
                        r = e ? e.value : null;
                    if (cC(s), s === r)
                        if (s.component) {
                            const l = i.getOrCreateContext(s.outlet);
                            this.activateChildRoutes(n, e, l.children)
                        } else this.activateChildRoutes(n, e, i);
                    else if (s.component) {
                        const l = i.getOrCreateContext(s.outlet);
                        if (this.routeReuseStrategy.shouldAttach(s.snapshot)) {
                            const u = this.routeReuseStrategy.retrieve(s.snapshot);
                            this.routeReuseStrategy.store(s.snapshot, null), l.children.onOutletReAttached(u.contexts), l.attachRef = u.componentRef, l.route = u.route.value, l.outlet && l.outlet.attach(u.componentRef, u.route.value), cC(u.route.value), this.activateChildRoutes(n, null, l.children)
                        } else {
                            const u = jf(s.snapshot);
                            l.attachRef = null, l.route = s, l.injector = u, l.outlet && l.outlet.activateWith(s, l.injector), this.activateChildRoutes(n, null, l.children)
                        }
                    } else this.activateChildRoutes(n, null, i)
                }
            }
            class qF {
                constructor(n) {
                    this.path = n, this.route = this.path[this.path.length - 1]
                }
            }
            class Rv {
                constructor(n, e) {
                    this.component = n, this.route = e
                }
            }

            function $K(t, n, e) {
                const i = t._root;
                return $f(i, n ? n._root : null, e, [i.value])
            }

            function Td(t, n) {
                const e = Symbol(),
                    i = n.get(t, e);
                return i === e ? "function" != typeof t || function Mp(t) {
                    return null !== dc(t)
                }(t) ? n.get(t) : t : i
            }

            function $f(t, n, e, i, s = {
                canDeactivateChecks: [],
                canActivateChecks: []
            }) {
                const r = Sd(n);
                return t.children.forEach(l => {
                    (function WK(t, n, e, i, s = {
                        canDeactivateChecks: [],
                        canActivateChecks: []
                    }) {
                        const r = t.value,
                            l = n ? n.value : null,
                            u = e ? e.getContext(t.value.outlet) : null;
                        if (l && r.routeConfig === l.routeConfig) {
                            const h = function GK(t, n, e) {
                                if ("function" == typeof e) return e(t, n);
                                switch (e) {
                                    case "pathParamsChange":
                                        return !Xc(t.url, n.url);
                                    case "pathParamsOrQueryParamsChange":
                                        return !Xc(t.url, n.url) || !Mo(t.queryParams, n.queryParams);
                                    case "always":
                                        return !0;
                                    case "paramsOrQueryParamsChange":
                                        return !uC(t, n) || !Mo(t.queryParams, n.queryParams);
                                    default:
                                        return !uC(t, n)
                                }
                            }(l, r, r.routeConfig.runGuardsAndResolvers);
                            h ? s.canActivateChecks.push(new qF(i)) : (r.data = l.data, r._resolvedData = l._resolvedData), $f(t, n, r.component ? u ? u.children : null : e, i, s), h && u && u.outlet && u.outlet.isActivated && s.canDeactivateChecks.push(new Rv(u.outlet.component, l))
                        } else l && Uf(n, u, s), s.canActivateChecks.push(new qF(i)), $f(t, null, r.component ? u ? u.children : null : e, i, s)
                    })(l, r[l.value.outlet], e, i.concat([l.value]), s), delete r[l.value.outlet]
                }), Object.entries(r).forEach(([l, u]) => Uf(u, e.getContext(l), s)), s
            }

            function Uf(t, n, e) {
                const i = Sd(t),
                    s = t.value;
                Object.entries(i).forEach(([r, l]) => {
                    Uf(l, s.component ? n ? n.children.getContext(r) : null : n, e)
                }), e.canDeactivateChecks.push(new Rv(s.component && n && n.outlet && n.outlet.isActivated ? n.outlet.component : null, s))
            }

            function Wf(t) {
                return "function" == typeof t
            }

            function ZF(t) {
                return t instanceof Cv || "EmptyError" === t ? .name
            }
            const Bv = Symbol("INITIAL_VALUE");

            function Dd() {
                return X(t => Zw(t.map(n => n.pipe(Or(1), function zZ(...t) {
                    const n = f(t);
                    return Dt((e, i) => {
                        (n ? pd(t, e, n) : pd(t, e)).subscribe(i)
                    })
                }(Bv)))).pipe(kt(n => {
                    for (const e of n)
                        if (!0 !== e) {
                            if (e === Bv) return Bv;
                            if (!1 === e || e instanceof wd) return e
                        }
                    return !0
                }), hr(n => n !== Bv), Or(1)))
            }

            function KF(t) {
                return function ct(...t) {
                    return Re(t)
                }(Wn(n => {
                    if (Yc(n)) throw WF(0, n)
                }), kt(n => !0 === n))
            }
            class Vv {
                constructor(n) {
                    this.segmentGroup = n || null
                }
            }
            class QF {
                constructor(n) {
                    this.urlTree = n
                }
            }

            function Ad(t) {
                return zc(new Vv(t))
            }

            function JF(t) {
                return zc(new QF(t))
            }
            class hQ {
                constructor(n, e) {
                    this.urlSerializer = n, this.urlTree = e
                }
                noMatchError(n) {
                    return new ke(4002, !1)
                }
                lineralizeSegments(n, e) {
                    let i = [],
                        s = e.root;
                    for (;;) {
                        if (i = i.concat(s.segments), 0 === s.numberOfChildren) return b(i);
                        if (s.numberOfChildren > 1 || !s.children[Gn]) return zc(new ke(4e3, !1));
                        s = s.children[Gn]
                    }
                }
                applyRedirectCommands(n, e, i) {
                    return this.applyRedirectCreateUrlTree(e, this.urlSerializer.parse(e), n, i)
                }
                applyRedirectCreateUrlTree(n, e, i, s) {
                    const r = this.createSegmentGroup(n, e.root, i, s);
                    return new wd(r, this.createQueryParams(e.queryParams, this.urlTree.queryParams), e.fragment)
                }
                createQueryParams(n, e) {
                    const i = {};
                    return Object.entries(n).forEach(([s, r]) => {
                        if ("string" == typeof r && r.startsWith(":")) {
                            const u = r.substring(1);
                            i[s] = e[u]
                        } else i[s] = r
                    }), i
                }
                createSegmentGroup(n, e, i, s) {
                    const r = this.createSegments(n, e.segments, i, s);
                    let l = {};
                    return Object.entries(e.children).forEach(([u, h]) => {
                        l[u] = this.createSegmentGroup(n, h, i, s)
                    }), new Ri(r, l)
                }
                createSegments(n, e, i, s) {
                    return e.map(r => r.path.startsWith(":") ? this.findPosParam(n, r, s) : this.findOrReturn(r, i))
                }
                findPosParam(n, e, i) {
                    const s = i[e.path.substring(1)];
                    if (!s) throw new ke(4001, !1);
                    return s
                }
                findOrReturn(n, e) {
                    let i = 0;
                    for (const s of e) {
                        if (s.path === n.path) return e.splice(i), s;
                        i++
                    }
                    return n
                }
            }
            const fC = {
                matched: !1,
                consumedSegments: [],
                remainingSegments: [],
                parameters: {},
                positionalParamSegments: {}
            };

            function fQ(t, n, e, i, s) {
                const r = pC(t, n, e);
                return r.matched ? (i = function NK(t, n) {
                    return t.providers && !t._injector && (t._injector = Ax(t.providers, n, `Route: ${t.path}`)), t._injector ? ? n
                }(n, i), function cQ(t, n, e, i) {
                    const s = n.canMatch;
                    return s && 0 !== s.length ? b(s.map(l => {
                        const u = Td(l, t);
                        return Ql(function QK(t) {
                            return t && Wf(t.canMatch)
                        }(u) ? u.canMatch(n, e) : t.runInContext(() => u(n, e)))
                    })).pipe(Dd(), KF()) : b(!0)
                }(i, n, e).pipe(kt(l => !0 === l ? r : { ...fC
                }))) : b(r)
            }

            function pC(t, n, e) {
                if ("" === n.path) return "full" === n.pathMatch && (t.hasChildren() || e.length > 0) ? { ...fC
                } : {
                    matched: !0,
                    consumedSegments: [],
                    remainingSegments: e,
                    parameters: {},
                    positionalParamSegments: {}
                };
                const s = (n.matcher || WZ)(e, t, n);
                if (!s) return { ...fC
                };
                const r = {};
                Object.entries(s.posParams ? ? {}).forEach(([u, h]) => {
                    r[u] = h.path
                });
                const l = s.consumed.length > 0 ? { ...r,
                    ...s.consumed[s.consumed.length - 1].parameters
                } : r;
                return {
                    matched: !0,
                    consumedSegments: s.consumed,
                    remainingSegments: e.slice(s.consumed.length),
                    parameters: l,
                    positionalParamSegments: s.posParams ? ? {}
                }
            }

            function eN(t, n, e, i) {
                return e.length > 0 && function mQ(t, n, e) {
                    return e.some(i => Hv(t, n, i) && Ka(i) !== Gn)
                }(t, e, i) ? {
                    segmentGroup: new Ri(n, gQ(i, new Ri(e, t.children))),
                    slicedSegments: []
                } : 0 === e.length && function vQ(t, n, e) {
                    return e.some(i => Hv(t, n, i))
                }(t, e, i) ? {
                    segmentGroup: new Ri(t.segments, pQ(t, 0, e, i, t.children)),
                    slicedSegments: e
                } : {
                    segmentGroup: new Ri(t.segments, t.children),
                    slicedSegments: e
                }
            }

            function pQ(t, n, e, i, s) {
                const r = {};
                for (const l of i)
                    if (Hv(t, e, l) && !s[Ka(l)]) {
                        const u = new Ri([], {});
                        r[Ka(l)] = u
                    }
                return { ...s,
                    ...r
                }
            }

            function gQ(t, n) {
                const e = {};
                e[Gn] = n;
                for (const i of t)
                    if ("" === i.path && Ka(i) !== Gn) {
                        const s = new Ri([], {});
                        e[Ka(i)] = s
                    }
                return e
            }

            function Hv(t, n, e) {
                return (!(t.hasChildren() || n.length > 0) || "full" !== e.pathMatch) && "" === e.path
            }
            class _Q {
                constructor(n, e, i, s, r, l, u) {
                    this.injector = n, this.configLoader = e, this.rootComponentType = i, this.config = s, this.urlTree = r, this.paramsInheritanceStrategy = l, this.urlSerializer = u, this.allowRedirects = !0, this.applyRedirects = new hQ(this.urlSerializer, this.urlTree)
                }
                noMatchError(n) {
                    return new ke(4002, !1)
                }
                recognize() {
                    const n = eN(this.urlTree.root, [], [], this.config).segmentGroup;
                    return this.processSegmentGroup(this.injector, this.config, n, Gn).pipe(Gl(e => {
                        if (e instanceof QF) return this.allowRedirects = !1, this.urlTree = e.urlTree, this.match(e.urlTree);
                        throw e instanceof Vv ? this.noMatchError(e) : e
                    }), kt(e => {
                        const i = new Lv([], Object.freeze({}), Object.freeze({ ...this.urlTree.queryParams
                            }), this.urlTree.fragment, {}, Gn, this.rootComponentType, null, {}),
                            s = new sl(i, e),
                            r = new jF("", s),
                            l = function dK(t, n, e = null, i = null) {
                                return MF(EF(t), n, e, i)
                            }(i, [], this.urlTree.queryParams, this.urlTree.fragment);
                        return l.queryParams = this.urlTree.queryParams, r.url = this.urlSerializer.serialize(l), this.inheritParamsAndData(r._root), {
                            state: r,
                            tree: l
                        }
                    }))
                }
                match(n) {
                    return this.processSegmentGroup(this.injector, this.config, n.root, Gn).pipe(Gl(i => {
                        throw i instanceof Vv ? this.noMatchError(i) : i
                    }))
                }
                inheritParamsAndData(n) {
                    const e = n.value,
                        i = zF(e, this.paramsInheritanceStrategy);
                    e.params = Object.freeze(i.params), e.data = Object.freeze(i.data), n.children.forEach(s => this.inheritParamsAndData(s))
                }
                processSegmentGroup(n, e, i, s) {
                    return 0 === i.segments.length && i.hasChildren() ? this.processChildren(n, e, i) : this.processSegment(n, e, i, i.segments, s, !0)
                }
                processChildren(n, e, i) {
                    const s = [];
                    for (const r of Object.keys(i.children)) "primary" === r ? s.unshift(r) : s.push(r);
                    return $(s).pipe(Bc(r => {
                        const l = i.children[r],
                            u = function HK(t, n) {
                                const e = t.filter(i => Ka(i) === n);
                                return e.push(...t.filter(i => Ka(i) !== n)), e
                            }(e, r);
                        return this.processSegmentGroup(n, u, l, r)
                    }), function jZ(t, n) {
                        return Dt(uF(t, n, arguments.length >= 2, !0))
                    }((r, l) => (r.push(...l), r)), Sv(null), function $Z(t, n) {
                        const e = arguments.length >= 2;
                        return i => i.pipe(t ? hr((s, r) => t(s, r, i)) : Ge, Qw(1), e ? Sv(n) : lF(() => new Cv))
                    }(), zi(r => {
                        if (null === r) return Ad(i);
                        const l = tN(r);
                        return function wQ(t) {
                            t.sort((n, e) => n.value.outlet === Gn ? -1 : e.value.outlet === Gn ? 1 : n.value.outlet.localeCompare(e.value.outlet))
                        }(l), b(l)
                    }))
                }
                processSegment(n, e, i, s, r, l) {
                    return $(e).pipe(Bc(u => this.processSegmentAgainstRoute(u._injector ? ? n, e, u, i, s, r, l).pipe(Gl(h => {
                        if (h instanceof Vv) return b(null);
                        throw h
                    }))), Eo(u => !!u), Gl(u => {
                        if (ZF(u)) return function bQ(t, n, e) {
                            return 0 === n.length && !t.children[e]
                        }(i, s, r) ? b([]) : Ad(i);
                        throw u
                    }))
                }
                processSegmentAgainstRoute(n, e, i, s, r, l, u) {
                    return function yQ(t, n, e, i) {
                        return !!(Ka(t) === i || i !== Gn && Hv(n, e, t)) && ("**" === t.path || pC(n, t, e).matched)
                    }(i, s, r, l) ? void 0 === i.redirectTo ? this.matchSegmentAgainstRoute(n, s, i, r, l, u) : u && this.allowRedirects ? this.expandSegmentAgainstRouteUsingRedirect(n, s, e, i, r, l) : Ad(s) : Ad(s)
                }
                expandSegmentAgainstRouteUsingRedirect(n, e, i, s, r, l) {
                    return "**" === s.path ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(n, i, s, l) : this.expandRegularSegmentAgainstRouteUsingRedirect(n, e, i, s, r, l)
                }
                expandWildCardWithParamsAgainstRouteUsingRedirect(n, e, i, s) {
                    const r = this.applyRedirects.applyRedirectCommands([], i.redirectTo, {});
                    return i.redirectTo.startsWith("/") ? JF(r) : this.applyRedirects.lineralizeSegments(i, r).pipe(zi(l => {
                        const u = new Ri(l, {});
                        return this.processSegment(n, e, u, l, s, !1)
                    }))
                }
                expandRegularSegmentAgainstRouteUsingRedirect(n, e, i, s, r, l) {
                    const {
                        matched: u,
                        consumedSegments: h,
                        remainingSegments: v,
                        positionalParamSegments: _
                    } = pC(e, s, r);
                    if (!u) return Ad(e);
                    const C = this.applyRedirects.applyRedirectCommands(h, s.redirectTo, _);
                    return s.redirectTo.startsWith("/") ? JF(C) : this.applyRedirects.lineralizeSegments(s, C).pipe(zi(M => this.processSegment(n, i, e, M.concat(v), l, !1)))
                }
                matchSegmentAgainstRoute(n, e, i, s, r, l) {
                    let u;
                    if ("**" === i.path) {
                        const h = s.length > 0 ? yF(s).parameters : {};
                        u = b({
                            snapshot: new Lv(s, h, Object.freeze({ ...this.urlTree.queryParams
                            }), this.urlTree.fragment, nN(i), Ka(i), i.component ? ? i._loadedComponent ? ? null, i, iN(i)),
                            consumedSegments: [],
                            remainingSegments: []
                        }), e.children = {}
                    } else u = fQ(e, i, s, n).pipe(kt(({
                        matched: h,
                        consumedSegments: v,
                        remainingSegments: _,
                        parameters: C
                    }) => h ? {
                        snapshot: new Lv(v, C, Object.freeze({ ...this.urlTree.queryParams
                        }), this.urlTree.fragment, nN(i), Ka(i), i.component ? ? i._loadedComponent ? ? null, i, iN(i)),
                        consumedSegments: v,
                        remainingSegments: _
                    } : null));
                    return u.pipe(X(h => null === h ? Ad(e) : this.getChildConfig(n = i._injector ? ? n, i, s).pipe(X(({
                        routes: v
                    }) => {
                        const _ = i._loadedInjector ? ? n,
                            {
                                snapshot: C,
                                consumedSegments: M,
                                remainingSegments: L
                            } = h,
                            {
                                segmentGroup: j,
                                slicedSegments: Z
                            } = eN(e, M, L, v);
                        if (0 === Z.length && j.hasChildren()) return this.processChildren(_, v, j).pipe(kt(Ae => null === Ae ? null : [new sl(C, Ae)]));
                        if (0 === v.length && 0 === Z.length) return b([new sl(C, [])]);
                        const Q = Ka(i) === r;
                        return this.processSegment(_, v, j, Z, Q ? Gn : r, !0).pipe(kt(Ae => [new sl(C, Ae)]))
                    }))))
                }
                getChildConfig(n, e, i) {
                    return e.children ? b({
                        routes: e.children,
                        injector: n
                    }) : e.loadChildren ? void 0 !== e._loadedRoutes ? b({
                        routes: e._loadedRoutes,
                        injector: e._loadedInjector
                    }) : function lQ(t, n, e, i) {
                        const s = n.canLoad;
                        return void 0 === s || 0 === s.length ? b(!0) : b(s.map(l => {
                            const u = Td(l, t);
                            return Ql(function YK(t) {
                                return t && Wf(t.canLoad)
                            }(u) ? u.canLoad(n, e) : t.runInContext(() => u(n, e)))
                        })).pipe(Dd(), KF())
                    }(n, e, i).pipe(zi(s => s ? this.configLoader.loadChildren(n, e).pipe(Wn(r => {
                        e._loadedRoutes = r.routes, e._loadedInjector = r.injector
                    })) : function dQ(t) {
                        return zc(GF(!1, 3))
                    }())) : b({
                        routes: [],
                        injector: n
                    })
                }
            }

            function CQ(t) {
                const n = t.value.routeConfig;
                return n && "" === n.path
            }

            function tN(t) {
                const n = [],
                    e = new Set;
                for (const i of t) {
                    if (!CQ(i)) {
                        n.push(i);
                        continue
                    }
                    const s = n.find(r => i.value.routeConfig === r.value.routeConfig);
                    void 0 !== s ? (s.children.push(...i.children), e.add(s)) : n.push(i)
                }
                for (const i of e) {
                    const s = tN(i.children);
                    n.push(new sl(i.value, s))
                }
                return n.filter(i => !e.has(i))
            }

            function nN(t) {
                return t.data || {}
            }

            function iN(t) {
                return t.resolve || {}
            }

            function sN(t) {
                return "string" == typeof t.title || null === t.title
            }

            function gC(t) {
                return X(n => {
                    const e = t(n);
                    return e ? $(e).pipe(kt(() => n)) : b(n)
                })
            }
            const kd = new zt("ROUTES");
            let mC = (() => {
                class t {
                    constructor() {
                        this.componentLoaders = new WeakMap, this.childrenLoaders = new WeakMap, this.compiler = Xt(QM)
                    }
                    loadComponent(e) {
                        if (this.componentLoaders.get(e)) return this.componentLoaders.get(e);
                        if (e._loadedComponent) return b(e._loadedComponent);
                        this.onLoadStartListener && this.onLoadStartListener(e);
                        const i = Ql(e.loadComponent()).pipe(kt(rN), Wn(r => {
                                this.onLoadEndListener && this.onLoadEndListener(e), e._loadedComponent = r
                            }), gd(() => {
                                this.componentLoaders.delete(e)
                            })),
                            s = new gF(i, () => new He).pipe(Kw());
                        return this.componentLoaders.set(e, s), s
                    }
                    loadChildren(e, i) {
                        if (this.childrenLoaders.get(i)) return this.childrenLoaders.get(i);
                        if (i._loadedRoutes) return b({
                            routes: i._loadedRoutes,
                            injector: i._loadedInjector
                        });
                        this.onLoadStartListener && this.onLoadStartListener(i);
                        const r = function MQ(t, n, e, i) {
                                return Ql(t.loadChildren()).pipe(kt(rN), zi(s => s instanceof rM || Array.isArray(s) ? b(s) : $(n.compileModuleAsync(s))), kt(s => {
                                    i && i(t);
                                    let r, l, u = !1;
                                    return Array.isArray(s) ? (l = s, !0) : (r = s.create(e).injector, l = r.get(kd, [], {
                                        optional: !0,
                                        self: !0
                                    }).flat()), {
                                        routes: l.map(hC),
                                        injector: r
                                    }
                                }))
                            }(i, this.compiler, e, this.onLoadEndListener).pipe(gd(() => {
                                this.childrenLoaders.delete(i)
                            })),
                            l = new gF(r, () => new He).pipe(Kw());
                        return this.childrenLoaders.set(i, l), l
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();

            function rN(t) {
                return function PQ(t) {
                    return t && "object" == typeof t && "default" in t
                }(t) ? t.default : t
            }
            let zv = (() => {
                class t {
                    get hasRequestedNavigation() {
                        return 0 !== this.navigationId
                    }
                    constructor() {
                        this.currentNavigation = null, this.currentTransition = null, this.lastSuccessfulNavigation = null, this.events = new He, this.transitionAbortSubject = new He, this.configLoader = Xt(mC), this.environmentInjector = Xt(la), this.urlSerializer = Xt(Lf), this.rootContexts = Xt(Hf), this.inputBindingEnabled = null !== Xt(Nv, {
                            optional: !0
                        }), this.navigationId = 0, this.afterPreactivation = () => b(void 0), this.rootComponentType = null, this.configLoader.onLoadEndListener = s => this.events.next(new CK(s)), this.configLoader.onLoadStartListener = s => this.events.next(new wK(s))
                    }
                    complete() {
                        this.transitions ? .complete()
                    }
                    handleNavigationRequest(e) {
                        const i = ++this.navigationId;
                        this.transitions ? .next({ ...this.transitions.value,
                            ...e,
                            id: i
                        })
                    }
                    setupNavigations(e, i, s) {
                        return this.transitions = new re({
                            id: 0,
                            currentUrlTree: i,
                            currentRawUrl: i,
                            currentBrowserUrl: i,
                            extractedUrl: e.urlHandlingStrategy.extract(i),
                            urlAfterRedirects: e.urlHandlingStrategy.extract(i),
                            rawUrl: i,
                            extras: {},
                            resolve: null,
                            reject: null,
                            promise: Promise.resolve(!0),
                            source: Bf,
                            restoredState: null,
                            currentSnapshot: s.snapshot,
                            targetSnapshot: null,
                            currentRouterState: s,
                            targetRouterState: null,
                            guards: {
                                canActivateChecks: [],
                                canDeactivateChecks: []
                            },
                            guardsResult: null
                        }), this.transitions.pipe(hr(r => 0 !== r.id), kt(r => ({ ...r,
                            extractedUrl: e.urlHandlingStrategy.extract(r.rawUrl)
                        })), X(r => {
                            this.currentTransition = r;
                            let l = !1,
                                u = !1;
                            return b(r).pipe(Wn(h => {
                                this.currentNavigation = {
                                    id: h.id,
                                    initialUrl: h.rawUrl,
                                    extractedUrl: h.extractedUrl,
                                    trigger: h.source,
                                    extras: h.extras,
                                    previousNavigation: this.lastSuccessfulNavigation ? { ...this.lastSuccessfulNavigation,
                                        previousNavigation: null
                                    } : null
                                }
                            }), X(h => {
                                const v = h.currentBrowserUrl.toString(),
                                    _ = !e.navigated || h.extractedUrl.toString() !== v || v !== h.currentUrlTree.toString();
                                if (!_ && "reload" !== (h.extras.onSameUrlNavigation ? ? e.onSameUrlNavigation)) {
                                    const M = "";
                                    return this.events.next(new Cd(h.id, this.urlSerializer.serialize(h.rawUrl), M, 0)), h.resolve(null), os
                                }
                                if (e.urlHandlingStrategy.shouldProcessUrl(h.rawUrl)) return b(h).pipe(X(M => {
                                    const L = this.transitions ? .getValue();
                                    return this.events.next(new Ov(M.id, this.urlSerializer.serialize(M.extractedUrl), M.source, M.restoredState)), L !== this.transitions ? .getValue() ? os : Promise.resolve(M)
                                }), function SQ(t, n, e, i, s, r) {
                                    return zi(l => function xQ(t, n, e, i, s, r, l = "emptyOnly") {
                                        return new _Q(t, n, e, i, s, l, r).recognize()
                                    }(t, n, e, i, l.extractedUrl, s, r).pipe(kt(({
                                        state: u,
                                        tree: h
                                    }) => ({ ...l,
                                        targetSnapshot: u,
                                        urlAfterRedirects: h
                                    }))))
                                }(this.environmentInjector, this.configLoader, this.rootComponentType, e.config, this.urlSerializer, e.paramsInheritanceStrategy), Wn(M => {
                                    r.targetSnapshot = M.targetSnapshot, r.urlAfterRedirects = M.urlAfterRedirects, this.currentNavigation = { ...this.currentNavigation,
                                        finalUrl: M.urlAfterRedirects
                                    };
                                    const L = new NF(M.id, this.urlSerializer.serialize(M.extractedUrl), this.urlSerializer.serialize(M.urlAfterRedirects), M.targetSnapshot);
                                    this.events.next(L)
                                }));
                                if (_ && e.urlHandlingStrategy.shouldProcessUrl(h.currentRawUrl)) {
                                    const {
                                        id: M,
                                        extractedUrl: L,
                                        source: j,
                                        restoredState: Z,
                                        extras: Q
                                    } = h, Ae = new Ov(M, this.urlSerializer.serialize(L), j, Z);
                                    this.events.next(Ae);
                                    const De = HF(0, this.rootComponentType).snapshot;
                                    return this.currentTransition = r = { ...h,
                                        targetSnapshot: De,
                                        urlAfterRedirects: L,
                                        extras: { ...Q,
                                            skipLocationChange: !1,
                                            replaceUrl: !1
                                        }
                                    }, b(r)
                                } {
                                    const M = "";
                                    return this.events.next(new Cd(h.id, this.urlSerializer.serialize(h.extractedUrl), M, 1)), h.resolve(null), os
                                }
                            }), Wn(h => {
                                const v = new yK(h.id, this.urlSerializer.serialize(h.extractedUrl), this.urlSerializer.serialize(h.urlAfterRedirects), h.targetSnapshot);
                                this.events.next(v)
                            }), kt(h => (this.currentTransition = r = { ...h,
                                guards: $K(h.targetSnapshot, h.currentSnapshot, this.rootContexts)
                            }, r)), function eQ(t, n) {
                                return zi(e => {
                                    const {
                                        targetSnapshot: i,
                                        currentSnapshot: s,
                                        guards: {
                                            canActivateChecks: r,
                                            canDeactivateChecks: l
                                        }
                                    } = e;
                                    return 0 === l.length && 0 === r.length ? b({ ...e,
                                        guardsResult: !0
                                    }) : function tQ(t, n, e, i) {
                                        return $(t).pipe(zi(s => function oQ(t, n, e, i, s) {
                                            const r = n && n.routeConfig ? n.routeConfig.canDeactivate : null;
                                            return r && 0 !== r.length ? b(r.map(u => {
                                                const h = jf(n) ? ? s,
                                                    v = Td(u, h);
                                                return Ql(function KK(t) {
                                                    return t && Wf(t.canDeactivate)
                                                }(v) ? v.canDeactivate(t, n, e, i) : h.runInContext(() => v(t, n, e, i))).pipe(Eo())
                                            })).pipe(Dd()) : b(!0)
                                        }(s.component, s.route, e, n, i)), Eo(s => !0 !== s, !0))
                                    }(l, i, s, t).pipe(zi(u => u && function XK(t) {
                                        return "boolean" == typeof t
                                    }(u) ? function nQ(t, n, e, i) {
                                        return $(n).pipe(Bc(s => pd(function sQ(t, n) {
                                            return null !== t && n && n(new SK(t)), b(!0)
                                        }(s.route.parent, i), function iQ(t, n) {
                                            return null !== t && n && n(new DK(t)), b(!0)
                                        }(s.route, i), function aQ(t, n, e) {
                                            const i = n[n.length - 1],
                                                r = n.slice(0, n.length - 1).reverse().map(l => function UK(t) {
                                                    const n = t.routeConfig ? t.routeConfig.canActivateChild : null;
                                                    return n && 0 !== n.length ? {
                                                        node: t,
                                                        guards: n
                                                    } : null
                                                }(l)).filter(l => null !== l).map(l => Ym(() => b(l.guards.map(h => {
                                                    const v = jf(l.node) ? ? e,
                                                        _ = Td(h, v);
                                                    return Ql(function ZK(t) {
                                                        return t && Wf(t.canActivateChild)
                                                    }(_) ? _.canActivateChild(i, t) : v.runInContext(() => _(i, t))).pipe(Eo())
                                                })).pipe(Dd())));
                                            return b(r).pipe(Dd())
                                        }(t, s.path, e), function rQ(t, n, e) {
                                            const i = n.routeConfig ? n.routeConfig.canActivate : null;
                                            if (!i || 0 === i.length) return b(!0);
                                            const s = i.map(r => Ym(() => {
                                                const l = jf(n) ? ? e,
                                                    u = Td(r, l);
                                                return Ql(function qK(t) {
                                                    return t && Wf(t.canActivate)
                                                }(u) ? u.canActivate(n, t) : l.runInContext(() => u(n, t))).pipe(Eo())
                                            }));
                                            return b(s).pipe(Dd())
                                        }(t, s.route, e))), Eo(s => !0 !== s, !0))
                                    }(i, r, t, n) : b(u)), kt(u => ({ ...e,
                                        guardsResult: u
                                    })))
                                })
                            }(this.environmentInjector, h => this.events.next(h)), Wn(h => {
                                if (r.guardsResult = h.guardsResult, Yc(h.guardsResult)) throw WF(0, h.guardsResult);
                                const v = new bK(h.id, this.urlSerializer.serialize(h.extractedUrl), this.urlSerializer.serialize(h.urlAfterRedirects), h.targetSnapshot, !!h.guardsResult);
                                this.events.next(v)
                            }), hr(h => !!h.guardsResult || (this.cancelNavigationTransition(h, "", 3), !1)), gC(h => {
                                if (h.guards.canActivateChecks.length) return b(h).pipe(Wn(v => {
                                    const _ = new xK(v.id, this.urlSerializer.serialize(v.extractedUrl), this.urlSerializer.serialize(v.urlAfterRedirects), v.targetSnapshot);
                                    this.events.next(_)
                                }), X(v => {
                                    let _ = !1;
                                    return b(v).pipe(function TQ(t, n) {
                                        return zi(e => {
                                            const {
                                                targetSnapshot: i,
                                                guards: {
                                                    canActivateChecks: s
                                                }
                                            } = e;
                                            if (!s.length) return b(e);
                                            let r = 0;
                                            return $(s).pipe(Bc(l => function DQ(t, n, e, i) {
                                                const s = t.routeConfig,
                                                    r = t._resolve;
                                                return void 0 !== s ? .title && !sN(s) && (r[Of] = s.title),
                                                    function AQ(t, n, e, i) {
                                                        const s = function kQ(t) {
                                                            return [...Object.keys(t), ...Object.getOwnPropertySymbols(t)]
                                                        }(t);
                                                        if (0 === s.length) return b({});
                                                        const r = {};
                                                        return $(s).pipe(zi(l => function EQ(t, n, e, i) {
                                                            const s = jf(n) ? ? i,
                                                                r = Td(t, s);
                                                            return Ql(r.resolve ? r.resolve(n, e) : s.runInContext(() => r(n, e)))
                                                        }(t[l], n, e, i).pipe(Eo(), Wn(u => {
                                                            r[l] = u
                                                        }))), Qw(1), dF(r), Gl(l => ZF(l) ? os : zc(l)))
                                                    }(r, t, n, i).pipe(kt(l => (t._resolvedData = l, t.data = zF(t, e).resolve, s && sN(s) && (t.data[Of] = s.title), null)))
                                            }(l.route, i, t, n)), Wn(() => r++), Qw(1), zi(l => r === s.length ? b(e) : os))
                                        })
                                    }(e.paramsInheritanceStrategy, this.environmentInjector), Wn({
                                        next: () => _ = !0,
                                        complete: () => {
                                            _ || this.cancelNavigationTransition(v, "", 2)
                                        }
                                    }))
                                }), Wn(v => {
                                    const _ = new _K(v.id, this.urlSerializer.serialize(v.extractedUrl), this.urlSerializer.serialize(v.urlAfterRedirects), v.targetSnapshot);
                                    this.events.next(_)
                                }))
                            }), gC(h => {
                                const v = _ => {
                                    const C = [];
                                    _.routeConfig ? .loadComponent && !_.routeConfig._loadedComponent && C.push(this.configLoader.loadComponent(_.routeConfig).pipe(Wn(M => {
                                        _.component = M
                                    }), kt(() => {})));
                                    for (const M of _.children) C.push(...v(M));
                                    return C
                                };
                                return Zw(v(h.targetSnapshot.root)).pipe(Sv(), Or(1))
                            }), gC(() => this.afterPreactivation()), kt(h => {
                                const v = function OK(t, n, e) {
                                    const i = zf(t, n._root, e ? e._root : void 0);
                                    return new VF(i, n)
                                }(e.routeReuseStrategy, h.targetSnapshot, h.currentRouterState);
                                return this.currentTransition = r = { ...h,
                                    targetRouterState: v
                                }, r
                            }), Wn(() => {
                                this.events.next(new sC)
                            }), ((t, n, e, i) => kt(s => (new jK(n, s.targetRouterState, s.currentRouterState, e, i).activate(t), s)))(this.rootContexts, e.routeReuseStrategy, h => this.events.next(h), this.inputBindingEnabled), Or(1), Wn({
                                next: h => {
                                    l = !0, this.lastSuccessfulNavigation = this.currentNavigation, this.events.next(new Jl(h.id, this.urlSerializer.serialize(h.extractedUrl), this.urlSerializer.serialize(h.urlAfterRedirects))), e.titleStrategy ? .updateTitle(h.targetRouterState.snapshot), h.resolve(!0)
                                },
                                complete: () => {
                                    l = !0
                                }
                            }), mF(this.transitionAbortSubject.pipe(Wn(h => {
                                throw h
                            }))), gd(() => {
                                l || u || this.cancelNavigationTransition(r, "", 1), this.currentNavigation ? .id === r.id && (this.currentNavigation = null)
                            }), Gl(h => {
                                if (u = !0, XF(h)) this.events.next(new Vf(r.id, this.urlSerializer.serialize(r.extractedUrl), h.message, h.cancellationCode)),
                                    function FK(t) {
                                        return XF(t) && Yc(t.url)
                                    }(h) ? this.events.next(new rC(h.url)) : r.resolve(!1);
                                else {
                                    this.events.next(new Iv(r.id, this.urlSerializer.serialize(r.extractedUrl), h, r.targetSnapshot ? ? void 0));
                                    try {
                                        r.resolve(e.errorHandler(h))
                                    } catch (v) {
                                        r.reject(v)
                                    }
                                }
                                return os
                            }))
                        }))
                    }
                    cancelNavigationTransition(e, i, s) {
                        const r = new Vf(e.id, this.urlSerializer.serialize(e.extractedUrl), i, s);
                        this.events.next(r), e.resolve(!1)
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();

            function aN(t) {
                return t !== Bf
            }
            let oN = (() => {
                    class t {
                        buildTitle(e) {
                            let i, s = e.root;
                            for (; void 0 !== s;) i = this.getResolvedTitleForRoute(s) ? ? i, s = s.children.find(r => r.outlet === Gn);
                            return i
                        }
                        getResolvedTitleForRoute(e) {
                            return e.data[Of]
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: function() {
                                return Xt(OQ)
                            },
                            providedIn: "root"
                        })
                    }
                    return t
                })(),
                OQ = (() => {
                    class t extends oN {
                        constructor(e) {
                            super(), this.title = e
                        }
                        updateTitle(e) {
                            const i = this.buildTitle(e);
                            void 0 !== i && this.title.setTitle(i)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)(vt(P_))
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        })
                    }
                    return t
                })(),
                IQ = (() => {
                    class t {
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: function() {
                                return Xt(FQ)
                            },
                            providedIn: "root"
                        })
                    }
                    return t
                })();
            class LQ {
                shouldDetach(n) {
                    return !1
                }
                store(n, e) {}
                shouldAttach(n) {
                    return !1
                }
                retrieve(n) {
                    return null
                }
                shouldReuseRoute(n, e) {
                    return n.routeConfig === e.routeConfig
                }
            }
            let FQ = (() => {
                class t extends LQ {
                    static# e = this.\u0275fac = function() {
                        let e;
                        return function(s) {
                            return (e || (e = _s(t)))(s || t)
                        }
                    }();
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            const jv = new zt("", {
                providedIn: "root",
                factory: () => ({})
            });
            let NQ = (() => {
                    class t {
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: function() {
                                return Xt(RQ)
                            },
                            providedIn: "root"
                        })
                    }
                    return t
                })(),
                RQ = (() => {
                    class t {
                        shouldProcessUrl(e) {
                            return !0
                        }
                        extract(e) {
                            return e
                        }
                        merge(e, i) {
                            return e
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)
                        };
                        static# t = this.\u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac,
                            providedIn: "root"
                        })
                    }
                    return t
                })();
            var Gf = function(t) {
                return t[t.COMPLETE = 0] = "COMPLETE", t[t.FAILED = 1] = "FAILED", t[t.REDIRECTING = 2] = "REDIRECTING", t
            }(Gf || {});

            function lN(t, n) {
                t.events.pipe(hr(e => e instanceof Jl || e instanceof Vf || e instanceof Iv || e instanceof Cd), kt(e => e instanceof Jl || e instanceof Cd ? Gf.COMPLETE : e instanceof Vf && (0 === e.code || 1 === e.code) ? Gf.REDIRECTING : Gf.FAILED), hr(e => e !== Gf.REDIRECTING), Or(1)).subscribe(() => {
                    n()
                })
            }

            function BQ(t) {
                throw t
            }

            function VQ(t, n, e) {
                return n.parse("/")
            }
            const HQ = {
                    paths: "exact",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "exact"
                },
                zQ = {
                    paths: "subset",
                    fragment: "ignored",
                    matrixParams: "ignored",
                    queryParams: "subset"
                };
            let Yr = (() => {
                class t {
                    get navigationId() {
                        return this.navigationTransitions.navigationId
                    }
                    get browserPageId() {
                        return "computed" !== this.canceledNavigationResolution ? this.currentPageId : this.location.getState() ? .\u0275routerPageId ? ? this.currentPageId
                    }
                    get events() {
                        return this._events
                    }
                    constructor() {
                        this.disposed = !1, this.currentPageId = 0, this.console = Xt(KM), this.isNgZoneEnabled = !1, this._events = new He, this.options = Xt(jv, {
                            optional: !0
                        }) || {}, this.pendingTasks = Xt(dm), this.errorHandler = this.options.errorHandler || BQ, this.malformedUriErrorHandler = this.options.malformedUriErrorHandler || VQ, this.navigated = !1, this.lastSuccessfulId = -1, this.urlHandlingStrategy = Xt(NQ), this.routeReuseStrategy = Xt(IQ), this.titleStrategy = Xt(oN), this.onSameUrlNavigation = this.options.onSameUrlNavigation || "ignore", this.paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || "emptyOnly", this.urlUpdateStrategy = this.options.urlUpdateStrategy || "deferred", this.canceledNavigationResolution = this.options.canceledNavigationResolution || "replace", this.config = Xt(kd, {
                            optional: !0
                        }) ? .flat() ? ? [], this.navigationTransitions = Xt(zv), this.urlSerializer = Xt(Lf), this.location = Xt(bm), this.componentInputBindingEnabled = !!Xt(Nv, {
                            optional: !0
                        }), this.eventsSubscription = new U, this.isNgZoneEnabled = Xt(si) instanceof si && si.isInAngularZone(), this.resetConfig(this.config), this.currentUrlTree = new wd, this.rawUrlTree = this.currentUrlTree, this.browserUrlTree = this.currentUrlTree, this.routerState = HF(0, null), this.navigationTransitions.setupNavigations(this, this.currentUrlTree, this.routerState).subscribe(e => {
                            this.lastSuccessfulId = e.id, this.currentPageId = this.browserPageId
                        }, e => {
                            this.console.warn(`Unhandled Navigation Error: ${e}`)
                        }), this.subscribeToNavigationEvents()
                    }
                    subscribeToNavigationEvents() {
                        const e = this.navigationTransitions.events.subscribe(i => {
                            try {
                                const {
                                    currentTransition: s
                                } = this.navigationTransitions;
                                if (null === s) return void(cN(i) && this._events.next(i));
                                if (i instanceof Ov) aN(s.source) && (this.browserUrlTree = s.extractedUrl);
                                else if (i instanceof Cd) this.rawUrlTree = s.rawUrl;
                                else if (i instanceof NF) {
                                    if ("eager" === this.urlUpdateStrategy) {
                                        if (!s.extras.skipLocationChange) {
                                            const r = this.urlHandlingStrategy.merge(s.urlAfterRedirects, s.rawUrl);
                                            this.setBrowserUrl(r, s)
                                        }
                                        this.browserUrlTree = s.urlAfterRedirects
                                    }
                                } else if (i instanceof sC) this.currentUrlTree = s.urlAfterRedirects, this.rawUrlTree = this.urlHandlingStrategy.merge(s.urlAfterRedirects, s.rawUrl), this.routerState = s.targetRouterState, "deferred" === this.urlUpdateStrategy && (s.extras.skipLocationChange || this.setBrowserUrl(this.rawUrlTree, s), this.browserUrlTree = s.urlAfterRedirects);
                                else if (i instanceof Vf) 0 !== i.code && 1 !== i.code && (this.navigated = !0), (3 === i.code || 2 === i.code) && this.restoreHistory(s);
                                else if (i instanceof rC) {
                                    const r = this.urlHandlingStrategy.merge(i.url, s.currentRawUrl),
                                        l = {
                                            skipLocationChange: s.extras.skipLocationChange,
                                            replaceUrl: "eager" === this.urlUpdateStrategy || aN(s.source)
                                        };
                                    this.scheduleNavigation(r, Bf, null, l, {
                                        resolve: s.resolve,
                                        reject: s.reject,
                                        promise: s.promise
                                    })
                                }
                                i instanceof Iv && this.restoreHistory(s, !0), i instanceof Jl && (this.navigated = !0), cN(i) && this._events.next(i)
                            } catch (s) {
                                this.navigationTransitions.transitionAbortSubject.next(s)
                            }
                        });
                        this.eventsSubscription.add(e)
                    }
                    resetRootComponentType(e) {
                        this.routerState.root.component = e, this.navigationTransitions.rootComponentType = e
                    }
                    initialNavigation() {
                        if (this.setUpLocationChangeListener(), !this.navigationTransitions.hasRequestedNavigation) {
                            const e = this.location.getState();
                            this.navigateToSyncWithBrowser(this.location.path(!0), Bf, e)
                        }
                    }
                    setUpLocationChangeListener() {
                        this.locationSubscription || (this.locationSubscription = this.location.subscribe(e => {
                            const i = "popstate" === e.type ? "popstate" : "hashchange";
                            "popstate" === i && setTimeout(() => {
                                this.navigateToSyncWithBrowser(e.url, i, e.state)
                            }, 0)
                        }))
                    }
                    navigateToSyncWithBrowser(e, i, s) {
                        const r = {
                                replaceUrl: !0
                            },
                            l = s ? .navigationId ? s : null;
                        if (s) {
                            const h = { ...s
                            };
                            delete h.navigationId, delete h.\u0275routerPageId, 0 !== Object.keys(h).length && (r.state = h)
                        }
                        const u = this.parseUrl(e);
                        this.scheduleNavigation(u, i, l, r)
                    }
                    get url() {
                        return this.serializeUrl(this.currentUrlTree)
                    }
                    getCurrentNavigation() {
                        return this.navigationTransitions.currentNavigation
                    }
                    get lastSuccessfulNavigation() {
                        return this.navigationTransitions.lastSuccessfulNavigation
                    }
                    resetConfig(e) {
                        this.config = e.map(hC), this.navigated = !1, this.lastSuccessfulId = -1
                    }
                    ngOnDestroy() {
                        this.dispose()
                    }
                    dispose() {
                        this.navigationTransitions.complete(), this.locationSubscription && (this.locationSubscription.unsubscribe(), this.locationSubscription = void 0), this.disposed = !0, this.eventsSubscription.unsubscribe()
                    }
                    createUrlTree(e, i = {}) {
                        const {
                            relativeTo: s,
                            queryParams: r,
                            fragment: l,
                            queryParamsHandling: u,
                            preserveFragment: h
                        } = i, v = h ? this.currentUrlTree.fragment : l;
                        let C, _ = null;
                        switch (u) {
                            case "merge":
                                _ = { ...this.currentUrlTree.queryParams,
                                    ...r
                                };
                                break;
                            case "preserve":
                                _ = this.currentUrlTree.queryParams;
                                break;
                            default:
                                _ = r || null
                        }
                        null !== _ && (_ = this.removeEmptyProps(_));
                        try {
                            C = EF(s ? s.snapshot : this.routerState.snapshot.root)
                        } catch {
                            ("string" != typeof e[0] || !e[0].startsWith("/")) && (e = []), C = this.currentUrlTree.root
                        }
                        return MF(C, e, _, v ? ? null)
                    }
                    navigateByUrl(e, i = {
                        skipLocationChange: !1
                    }) {
                        const s = Yc(e) ? e : this.parseUrl(e),
                            r = this.urlHandlingStrategy.merge(s, this.rawUrlTree);
                        return this.scheduleNavigation(r, Bf, null, i)
                    }
                    navigate(e, i = {
                        skipLocationChange: !1
                    }) {
                        return function jQ(t) {
                            for (let n = 0; n < t.length; n++)
                                if (null == t[n]) throw new ke(4008, !1)
                        }(e), this.navigateByUrl(this.createUrlTree(e, i), i)
                    }
                    serializeUrl(e) {
                        return this.urlSerializer.serialize(e)
                    }
                    parseUrl(e) {
                        let i;
                        try {
                            i = this.urlSerializer.parse(e)
                        } catch (s) {
                            i = this.malformedUriErrorHandler(s, this.urlSerializer, e)
                        }
                        return i
                    }
                    isActive(e, i) {
                        let s;
                        if (s = !0 === i ? { ...HQ
                            } : !1 === i ? { ...zQ
                            } : i, Yc(e)) return xF(this.currentUrlTree, e, s);
                        const r = this.parseUrl(e);
                        return xF(this.currentUrlTree, r, s)
                    }
                    removeEmptyProps(e) {
                        return Object.keys(e).reduce((i, s) => {
                            const r = e[s];
                            return null != r && (i[s] = r), i
                        }, {})
                    }
                    scheduleNavigation(e, i, s, r, l) {
                        if (this.disposed) return Promise.resolve(!1);
                        let u, h, v;
                        l ? (u = l.resolve, h = l.reject, v = l.promise) : v = new Promise((C, M) => {
                            u = C, h = M
                        });
                        const _ = this.pendingTasks.add();
                        return lN(this, () => {
                            queueMicrotask(() => this.pendingTasks.remove(_))
                        }), this.navigationTransitions.handleNavigationRequest({
                            source: i,
                            restoredState: s,
                            currentUrlTree: this.currentUrlTree,
                            currentRawUrl: this.currentUrlTree,
                            currentBrowserUrl: this.browserUrlTree,
                            rawUrl: e,
                            extras: r,
                            resolve: u,
                            reject: h,
                            promise: v,
                            currentSnapshot: this.routerState.snapshot,
                            currentRouterState: this.routerState
                        }), v.catch(C => Promise.reject(C))
                    }
                    setBrowserUrl(e, i) {
                        const s = this.urlSerializer.serialize(e);
                        if (this.location.isCurrentPathEqualTo(s) || i.extras.replaceUrl) {
                            const l = { ...i.extras.state,
                                ...this.generateNgRouterState(i.id, this.browserPageId)
                            };
                            this.location.replaceState(s, "", l)
                        } else {
                            const r = { ...i.extras.state,
                                ...this.generateNgRouterState(i.id, this.browserPageId + 1)
                            };
                            this.location.go(s, "", r)
                        }
                    }
                    restoreHistory(e, i = !1) {
                        if ("computed" === this.canceledNavigationResolution) {
                            const r = this.currentPageId - this.browserPageId;
                            0 !== r ? this.location.historyGo(r) : this.currentUrlTree === this.getCurrentNavigation() ? .finalUrl && 0 === r && (this.resetState(e), this.browserUrlTree = e.currentUrlTree, this.resetUrlToCurrentUrlTree())
                        } else "replace" === this.canceledNavigationResolution && (i && this.resetState(e), this.resetUrlToCurrentUrlTree())
                    }
                    resetState(e) {
                        this.routerState = e.currentRouterState, this.currentUrlTree = e.currentUrlTree, this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, e.rawUrl)
                    }
                    resetUrlToCurrentUrlTree() {
                        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), "", this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId))
                    }
                    generateNgRouterState(e, i) {
                        return "computed" === this.canceledNavigationResolution ? {
                            navigationId: e,
                            \u0275routerPageId: i
                        } : {
                            navigationId: e
                        }
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();

            function cN(t) {
                return !(t instanceof sC || t instanceof rC)
            }
            let $v = (() => {
                    class t {
                        constructor(e, i, s, r, l, u) {
                            this.router = e, this.route = i, this.tabIndexAttribute = s, this.renderer = r, this.el = l, this.locationStrategy = u, this.href = null, this.commands = null, this.onChanges = new He, this.preserveFragment = !1, this.skipLocationChange = !1, this.replaceUrl = !1;
                            const h = l.nativeElement.tagName ? .toLowerCase();
                            this.isAnchorElement = "a" === h || "area" === h, this.isAnchorElement ? this.subscription = e.events.subscribe(v => {
                                v instanceof Jl && this.updateHref()
                            }) : this.setTabIndexIfNotOnNativeEl("0")
                        }
                        setTabIndexIfNotOnNativeEl(e) {
                            null != this.tabIndexAttribute || this.isAnchorElement || this.applyAttributeValue("tabindex", e)
                        }
                        ngOnChanges(e) {
                            this.isAnchorElement && this.updateHref(), this.onChanges.next(this)
                        }
                        set routerLink(e) {
                            null != e ? (this.commands = Array.isArray(e) ? e : [e], this.setTabIndexIfNotOnNativeEl("0")) : (this.commands = null, this.setTabIndexIfNotOnNativeEl(null))
                        }
                        onClick(e, i, s, r, l) {
                            return !!(null === this.urlTree || this.isAnchorElement && (0 !== e || i || s || r || l || "string" == typeof this.target && "_self" != this.target)) || (this.router.navigateByUrl(this.urlTree, {
                                skipLocationChange: this.skipLocationChange,
                                replaceUrl: this.replaceUrl,
                                state: this.state
                            }), !this.isAnchorElement)
                        }
                        ngOnDestroy() {
                            this.subscription ? .unsubscribe()
                        }
                        updateHref() {
                            this.href = null !== this.urlTree && this.locationStrategy ? this.locationStrategy ? .prepareExternalUrl(this.router.serializeUrl(this.urlTree)) : null;
                            const e = null === this.href ? null : function c2(t, n, e) {
                                return function BV(t, n) {
                                    return "src" === n && ("embed" === t || "frame" === t || "iframe" === t || "media" === t || "script" === t) || "href" === n && ("base" === t || "link" === t) ? l2 : jr
                                }(n, e)(t)
                            }(this.href, this.el.nativeElement.tagName.toLowerCase(), "href");
                            this.applyAttributeValue("href", e)
                        }
                        applyAttributeValue(e, i) {
                            const s = this.renderer,
                                r = this.el.nativeElement;
                            null !== i ? s.setAttribute(r, e, i) : s.removeAttribute(r, e)
                        }
                        get urlTree() {
                            return null === this.commands ? null : this.router.createUrlTree(this.commands, {
                                relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                                queryParams: this.queryParams,
                                fragment: this.fragment,
                                queryParamsHandling: this.queryParamsHandling,
                                preserveFragment: this.preserveFragment
                            })
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(Yr), $e(rl), function pg(t) {
                                return function r4(t, n) {
                                    if ("class" === n) return t.classes;
                                    if ("style" === n) return t.styles;
                                    const e = t.attrs;
                                    if (e) {
                                        const i = e.length;
                                        let s = 0;
                                        for (; s < i;) {
                                            const r = e[s];
                                            if (jp(r)) break;
                                            if (0 === r) s += 2;
                                            else if ("number" == typeof r)
                                                for (s++; s < i && "string" == typeof e[s];) s++;
                                            else {
                                                if (r === n) return e[s + 1];
                                                s += 2
                                            }
                                        }
                                    }
                                    return null
                                }(Js(), t)
                            }("tabindex"), $e(Ts), $e(ii), $e(Lc))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["", "routerLink", ""]
                            ],
                            hostVars: 1,
                            hostBindings: function(i, s) {
                                1 & i && bt("click", function(l) {
                                    return s.onClick(l.button, l.ctrlKey, l.shiftKey, l.altKey, l.metaKey)
                                }), 2 & i && mn("target", s.target)
                            },
                            inputs: {
                                target: "target",
                                queryParams: "queryParams",
                                fragment: "fragment",
                                queryParamsHandling: "queryParamsHandling",
                                state: "state",
                                relativeTo: "relativeTo",
                                preserveFragment: ["preserveFragment", "preserveFragment", ud],
                                skipLocationChange: ["skipLocationChange", "skipLocationChange", ud],
                                replaceUrl: ["replaceUrl", "replaceUrl", ud],
                                routerLink: "routerLink"
                            },
                            standalone: !0,
                            features: [Ck, ni]
                        })
                    }
                    return t
                })(),
                uN = (() => {
                    class t {
                        get isActive() {
                            return this._isActive
                        }
                        constructor(e, i, s, r, l) {
                            this.router = e, this.element = i, this.renderer = s, this.cdr = r, this.link = l, this.classes = [], this._isActive = !1, this.routerLinkActiveOptions = {
                                exact: !1
                            }, this.isActiveChange = new Pt, this.routerEventsSubscription = e.events.subscribe(u => {
                                u instanceof Jl && this.update()
                            })
                        }
                        ngAfterContentInit() {
                            b(this.links.changes, b(null)).pipe(ks()).subscribe(e => {
                                this.update(), this.subscribeToEachLinkOnChanges()
                            })
                        }
                        subscribeToEachLinkOnChanges() {
                            this.linkInputChangesSubscription ? .unsubscribe();
                            const e = [...this.links.toArray(), this.link].filter(i => !!i).map(i => i.onChanges);
                            this.linkInputChangesSubscription = $(e).pipe(ks()).subscribe(i => {
                                this._isActive !== this.isLinkActive(this.router)(i) && this.update()
                            })
                        }
                        set routerLinkActive(e) {
                            const i = Array.isArray(e) ? e : e.split(" ");
                            this.classes = i.filter(s => !!s)
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        ngOnDestroy() {
                            this.routerEventsSubscription.unsubscribe(), this.linkInputChangesSubscription ? .unsubscribe()
                        }
                        update() {
                            !this.links || !this.router.navigated || queueMicrotask(() => {
                                const e = this.hasActiveLinks();
                                this._isActive !== e && (this._isActive = e, this.cdr.markForCheck(), this.classes.forEach(i => {
                                    e ? this.renderer.addClass(this.element.nativeElement, i) : this.renderer.removeClass(this.element.nativeElement, i)
                                }), e && void 0 !== this.ariaCurrentWhenActive ? this.renderer.setAttribute(this.element.nativeElement, "aria-current", this.ariaCurrentWhenActive.toString()) : this.renderer.removeAttribute(this.element.nativeElement, "aria-current"), this.isActiveChange.emit(e))
                            })
                        }
                        isLinkActive(e) {
                            const i = function $Q(t) {
                                return !!t.paths
                            }(this.routerLinkActiveOptions) ? this.routerLinkActiveOptions : this.routerLinkActiveOptions.exact || !1;
                            return s => !!s.urlTree && e.isActive(s.urlTree, i)
                        }
                        hasActiveLinks() {
                            const e = this.isLinkActive(this.router);
                            return this.link && e(this.link) || this.links.some(e)
                        }
                        static# e = this.\u0275fac = function(i) {
                            return new(i || t)($e(Yr), $e(ii), $e(Ts), $e(Xr), $e($v, 8))
                        };
                        static# t = this.\u0275dir = tn({
                            type: t,
                            selectors: [
                                ["", "routerLinkActive", ""]
                            ],
                            contentQueries: function(i, s, r) {
                                if (1 & i && cm(r, $v, 5), 2 & i) {
                                    let l;
                                    kr(l = Er()) && (s.links = l)
                                }
                            },
                            inputs: {
                                routerLinkActiveOptions: "routerLinkActiveOptions",
                                ariaCurrentWhenActive: "ariaCurrentWhenActive",
                                routerLinkActive: "routerLinkActive"
                            },
                            outputs: {
                                isActiveChange: "isActiveChange"
                            },
                            exportAs: ["routerLinkActive"],
                            standalone: !0,
                            features: [ni]
                        })
                    }
                    return t
                })();
            class dN {}
            let UQ = (() => {
                class t {
                    constructor(e, i, s, r, l) {
                        this.router = e, this.injector = s, this.preloadingStrategy = r, this.loader = l
                    }
                    setUpPreloading() {
                        this.subscription = this.router.events.pipe(hr(e => e instanceof Jl), Bc(() => this.preload())).subscribe(() => {})
                    }
                    preload() {
                        return this.processRoutes(this.injector, this.router.config)
                    }
                    ngOnDestroy() {
                        this.subscription && this.subscription.unsubscribe()
                    }
                    processRoutes(e, i) {
                        const s = [];
                        for (const r of i) {
                            r.providers && !r._injector && (r._injector = Ax(r.providers, e, `Route: ${r.path}`));
                            const l = r._injector ? ? e,
                                u = r._loadedInjector ? ? l;
                            (r.loadChildren && !r._loadedRoutes && void 0 === r.canLoad || r.loadComponent && !r._loadedComponent) && s.push(this.preloadConfig(l, r)), (r.children || r._loadedRoutes) && s.push(this.processRoutes(u, r.children ? ? r._loadedRoutes))
                        }
                        return $(s).pipe(ks())
                    }
                    preloadConfig(e, i) {
                        return this.preloadingStrategy.preload(i, () => {
                            let s;
                            s = i.loadChildren && void 0 === i.canLoad ? this.loader.loadChildren(e, i) : b(null);
                            const r = s.pipe(zi(l => null === l ? b(void 0) : (i._loadedRoutes = l.routes, i._loadedInjector = l.injector, this.processRoutes(l.injector ? ? e, l.routes))));
                            return i.loadComponent && !i._loadedComponent ? $([r, this.loader.loadComponent(i)]).pipe(ks()) : r
                        })
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(Yr), vt(QM), vt(la), vt(dN), vt(mC))
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            const vC = new zt("");
            let hN = (() => {
                class t {
                    constructor(e, i, s, r, l = {}) {
                        this.urlSerializer = e, this.transitions = i, this.viewportScroller = s, this.zone = r, this.options = l, this.lastId = 0, this.lastSource = "imperative", this.restoredId = 0, this.store = {}, l.scrollPositionRestoration = l.scrollPositionRestoration || "disabled", l.anchorScrolling = l.anchorScrolling || "disabled"
                    }
                    init() {
                        "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.setHistoryScrollRestoration("manual"), this.routerEventsSubscription = this.createScrollEvents(), this.scrollEventsSubscription = this.consumeScrollEvents()
                    }
                    createScrollEvents() {
                        return this.transitions.events.subscribe(e => {
                            e instanceof Ov ? (this.store[this.lastId] = this.viewportScroller.getScrollPosition(), this.lastSource = e.navigationTrigger, this.restoredId = e.restoredState ? e.restoredState.navigationId : 0) : e instanceof Jl ? (this.lastId = e.id, this.scheduleScrollEvent(e, this.urlSerializer.parse(e.urlAfterRedirects).fragment)) : e instanceof Cd && 0 === e.code && (this.lastSource = void 0, this.restoredId = 0, this.scheduleScrollEvent(e, this.urlSerializer.parse(e.url).fragment))
                        })
                    }
                    consumeScrollEvents() {
                        return this.transitions.events.subscribe(e => {
                            e instanceof RF && (e.position ? "top" === this.options.scrollPositionRestoration ? this.viewportScroller.scrollToPosition([0, 0]) : "enabled" === this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition(e.position) : e.anchor && "enabled" === this.options.anchorScrolling ? this.viewportScroller.scrollToAnchor(e.anchor) : "disabled" !== this.options.scrollPositionRestoration && this.viewportScroller.scrollToPosition([0, 0]))
                        })
                    }
                    scheduleScrollEvent(e, i) {
                        this.zone.runOutsideAngular(() => {
                            setTimeout(() => {
                                this.zone.run(() => {
                                    this.transitions.events.next(new RF(e, "popstate" === this.lastSource ? this.store[this.restoredId] : null, i))
                                })
                            }, 0)
                        })
                    }
                    ngOnDestroy() {
                        this.routerEventsSubscription ? .unsubscribe(), this.scrollEventsSubscription ? .unsubscribe()
                    }
                    static# e = this.\u0275fac = function(i) {
                        ! function Z2() {
                            throw new Error("invalid")
                        }()
                    };
                    static# t = this.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();

            function al(t, n) {
                return {\
                    u0275kind: t,
                    \u0275providers: n
                }
            }

            function pN() {
                const t = Xt(js);
                return n => {
                    const e = t.get(So);
                    if (n !== e.components[0]) return;
                    const i = t.get(Yr),
                        s = t.get(gN);
                    1 === t.get(yC) && i.initialNavigation(), t.get(mN, null, Rn.Optional) ? .setUpPreloading(), t.get(vC, null, Rn.Optional) ? .init(), i.resetRootComponentType(e.componentTypes[0]), s.closed || (s.next(), s.complete(), s.unsubscribe())
                }
            }
            const gN = new zt("", {
                    factory: () => new He
                }),
                yC = new zt("", {
                    providedIn: "root",
                    factory: () => 1
                }),
                mN = new zt("");

            function YQ(t) {
                return al(0, [{
                    provide: mN,
                    useExisting: UQ
                }, {
                    provide: dN,
                    useExisting: t
                }])
            }
            const vN = new zt("ROUTER_FORROOT_GUARD"),
                ZQ = [bm, {
                    provide: Lf,
                    useClass: Jw
                }, Yr, Hf, {
                    provide: rl,
                    useFactory: function fN(t) {
                        return t.routerState.root
                    },
                    deps: [Yr]
                }, mC, []];

            function KQ() {
                return new rP("Router", Yr)
            }
            let yN = (() => {
                class t {
                    constructor(e) {}
                    static forRoot(e, i) {
                        return {
                            ngModule: t,
                            providers: [ZQ, [], {
                                    provide: kd,
                                    multi: !0,
                                    useValue: e
                                }, {
                                    provide: vN,
                                    useFactory: tJ,
                                    deps: [
                                        [Yr, new Sc, new Ch]
                                    ]
                                }, {
                                    provide: jv,
                                    useValue: i || {}
                                }, i ? .useHash ? {
                                    provide: Lc,
                                    useClass: g7
                                } : {
                                    provide: Lc,
                                    useClass: FP
                                }, {
                                    provide: vC,
                                    useFactory: () => {
                                        const t = Xt(OW),
                                            n = Xt(si),
                                            e = Xt(jv),
                                            i = Xt(zv),
                                            s = Xt(Lf);
                                        return e.scrollOffset && t.setOffset(e.scrollOffset), new hN(s, i, t, n, e)
                                    }
                                }, i ? .preloadingStrategy ? YQ(i.preloadingStrategy).\u0275providers : [], {
                                    provide: rP,
                                    multi: !0,
                                    useFactory: KQ
                                }, i ? .initialNavigation ? nJ(i) : [], i ? .bindToComponentInputs ? al(8, [UF, {
                                    provide: Nv,
                                    useExisting: UF
                                }]).\u0275providers : [],
                                [{
                                    provide: bN,
                                    useFactory: pN
                                }, {
                                    provide: Zx,
                                    multi: !0,
                                    useExisting: bN
                                }]
                            ]
                        }
                    }
                    static forChild(e) {
                        return {
                            ngModule: t,
                            providers: [{
                                provide: kd,
                                multi: !0,
                                useValue: e
                            }]
                        }
                    }
                    static# e = this.\u0275fac = function(i) {
                        return new(i || t)(vt(vN, 8))
                    };
                    static# t = this.\u0275mod = jn({
                        type: t
                    });
                    static# n = this.\u0275inj = zn({})
                }
                return t
            })();

            function tJ(t) {
                return "guarded"
            }

            function nJ(t) {
                return ["disabled" === t.initialNavigation ? al(3, [{
                    provide: jx,
                    multi: !0,
                    useFactory: () => {
                        const n = Xt(Yr);
                        return () => {
                            n.setUpLocationChangeListener()
                        }
                    }
                }, {
                    provide: yC,
                    useValue: 2
                }]).\u0275providers : [], "enabledBlocking" === t.initialNavigation ? al(2, [{
                    provide: yC,
                    useValue: 0
                }, {
                    provide: jx,
                    multi: !0,
                    deps: [js],
                    useFactory: n => {
                        const e = n.get(f7, Promise.resolve());
                        return () => e.then(() => new Promise(i => {
                            const s = n.get(Yr),
                                r = n.get(gN);
                            lN(s, () => {
                                i(!0)
                            }), n.get(zv).afterPreactivation = () => (i(!0), r.closed ? b(void 0) : r), s.initialNavigation()
                        }))
                    }
                }]).\u0275providers : []]
            }
            const bN = new zt("");

            function sJ(t, n) {}
            const rJ = function(t, n) {
                return {
                    $implicit: t,
                    index: n
                }
            };

            function aJ(t, n) {
                if (1 & t && rt(0, sJ, 0, 0, "ng-template", 4), 2 & t) {
                    const e = Qe(),
                        i = e.$implicit,
                        s = e.index,
                        r = Qe();
                    Fe("ngTemplateOutlet", i.tplRef)("ngTemplateOutletContext", Da(2, rJ, r.preparePublicSlide(i), s))
                }
            }
            const oJ = function(t, n, e, i) {
                return {
                    width: t,
                    "margin-left": n,
                    "margin-right": e,
                    left: i
                }
            };

            function lJ(t, n) {
                if (1 & t) {
                    const e = sn();
                    xo(0), N(1, "div", 2), bt("animationend", function() {
                        const r = Ot(e).$implicit;
                        return It(Qe().clear(r.id))
                    }), rt(2, aJ, 1, 5, null, 3), H(), _o()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    xe(1), Fe("ngClass", e.classes)("ngStyle", gM(4, oJ, e.width + "px", e.marginL ? e.marginL + "px" : "", e.marginR ? e.marginR + "px" : "", e.left))("@autoHeight", e.heightState), xe(1), Fe("ngIf", e.load)
                }
            }
            const cJ = function(t, n, e, i, s) {
                    return {
                        width: t,
                        transform: n,
                        transition: e,
                        "padding-left": i,
                        "padding-right": s
                    }
                },
                uJ = function(t, n) {
                    return {
                        isMouseDragable: t,
                        isTouchDragable: n
                    }
                };

            function dJ(t, n) {
                if (1 & t && (N(0, "div", 4), ot(1, "owl-stage", 5), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("owlDraggable", Da(3, uJ, null == e.owlDOMData ? null : e.owlDOMData.isMouseDragable, null == e.owlDOMData ? null : e.owlDOMData.isTouchDragable))("stageData", e.stageData)("slidesData", e.slidesData)
                }
            }
            const hJ = function(t, n) {
                return {
                    active: t,
                    "owl-dot-text": n
                }
            };

            function fJ(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 11), bt("click", function() {
                        const r = Ot(e).$implicit;
                        return It(Qe(2).moveByDot(r.id))
                    }), ot(1, "span", 12), H()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    Fe("ngClass", Da(2, hJ, e.active, e.showInnerContent)), xe(1), Fe("innerHTML", e.innerContent, Ph)
                }
            }
            const Uv = function(t) {
                return {
                    disabled: t
                }
            };

            function pJ(t, n) {
                if (1 & t) {
                    const e = sn();
                    xo(0), N(1, "div", 6)(2, "div", 7), bt("click", function() {
                        return Ot(e), It(Qe().prev())
                    }), H(), N(3, "div", 8), bt("click", function() {
                        return Ot(e), It(Qe().next())
                    }), H()(), N(4, "div", 9), rt(5, fJ, 2, 5, "div", 10), H(), _o()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngClass", hn(7, Uv, null == e.navData ? null : e.navData.disabled)), xe(1), Fe("ngClass", hn(9, Uv, null == e.navData || null == e.navData.prev ? null : e.navData.prev.disabled))("innerHTML", null == e.navData || null == e.navData.prev ? null : e.navData.prev.htmlText, Ph), xe(1), Fe("ngClass", hn(11, Uv, null == e.navData || null == e.navData.next ? null : e.navData.next.disabled))("innerHTML", null == e.navData || null == e.navData.next ? null : e.navData.next.htmlText, Ph), xe(1), Fe("ngClass", hn(13, Uv, null == e.dotsData ? null : e.dotsData.disabled)), xe(1), Fe("ngForOf", null == e.dotsData ? null : e.dotsData.dots)
                }
            }
            const gJ = function(t, n, e, i, s) {
                return {
                    "owl-rtl": t,
                    "owl-loaded": n,
                    "owl-responsive": e,
                    "owl-drag": i,
                    "owl-grab": s
                }
            };
            class mJ {
                items = 3;
                skip_validateItems = !1;
                loop = !1;
                center = !1;
                rewind = !1;
                mouseDrag = !0;
                touchDrag = !0;
                pullDrag = !0;
                freeDrag = !1;
                margin = 0;
                stagePadding = 0;
                merge = !1;
                mergeFit = !0;
                autoWidth = !1;
                startPosition = 0;
                rtl = !1;
                smartSpeed = 250;
                fluidSpeed = !1;
                dragEndSpeed = !1;
                responsive = {};
                responsiveRefreshRate = 200;
                nav = !1;
                navText = ["prev", "next"];
                navSpeed = !1;
                slideBy = 1;
                dots = !0;
                dotsEach = !1;
                dotsData = !1;
                dotsSpeed = !1;
                autoplay = !1;
                autoplayTimeout = 5e3;
                autoplayHoverPause = !1;
                autoplaySpeed = !1;
                autoplayMouseleaveTimeout = 1;
                lazyLoad = !1;
                lazyLoadEager = 0;
                slideTransition = "";
                animateOut = !1;
                animateIn = !1;
                autoHeight = !1;
                URLhashListener = !1;
                constructor() {}
            }
            class vJ {
                items = "number";
                skip_validateItems = "boolean";
                loop = "boolean";
                center = "boolean";
                rewind = "boolean";
                mouseDrag = "boolean";
                touchDrag = "boolean";
                pullDrag = "boolean";
                freeDrag = "boolean";
                margin = "number";
                stagePadding = "number";
                merge = "boolean";
                mergeFit = "boolean";
                autoWidth = "boolean";
                startPosition = "number|string";
                rtl = "boolean";
                smartSpeed = "number";
                fluidSpeed = "boolean";
                dragEndSpeed = "number|boolean";
                responsive = {};
                responsiveRefreshRate = "number";
                nav = "boolean";
                navText = "string[]";
                navSpeed = "number|boolean";
                slideBy = "number|string";
                dots = "boolean";
                dotsEach = "number|boolean";
                dotsData = "boolean";
                dotsSpeed = "number|boolean";
                autoplay = "boolean";
                autoplayTimeout = "number";
                autoplayHoverPause = "boolean";
                autoplaySpeed = "number|boolean";
                autoplayMouseleaveTimeout = "number";
                lazyLoad = "boolean";
                lazyLoadEager = "number";
                slideTransition = "string";
                animateOut = "string|boolean";
                animateIn = "string|boolean";
                autoHeight = "boolean";
                URLhashListener = "boolean";
                constructor() {}
            }
            let bC = (() => {
                class t {
                    errorHandler;
                    constructor(e) {
                        this.errorHandler = e
                    }
                    log(e, ...i) {}
                    error(e) {
                        this.errorHandler.handleError(e)
                    }
                    warn(e, ...i) {
                        console.warn(e, ...i)
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)(vt(vo))
                    };
                    static\ u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    })
                }
                return t
            })();
            var xN = function(t) {
                    return t.Event = "event", t.State = "state", t
                }(xN || {}),
                Wv = function(t) {
                    return t.Default = "default", t.Inner = "inner", t.Outer = "outer", t
                }(Wv || {});
            let ol = (() => {
                    class t {
                        logger;
                        _viewSettingsShipper$ = new He;
                        _initializedCarousel$ = new He;
                        _changeSettingsCarousel$ = new He;
                        _changedSettingsCarousel$ = new He;
                        _translateCarousel$ = new He;
                        _translatedCarousel$ = new He;
                        _resizeCarousel$ = new He;
                        _resizedCarousel$ = new He;
                        _refreshCarousel$ = new He;
                        _refreshedCarousel$ = new He;
                        _dragCarousel$ = new He;
                        _draggedCarousel$ = new He;
                        settings = {
                            items: 0
                        };
                        owlDOMData = {
                            rtl: !1,
                            isResponsive: !1,
                            isRefreshed: !1,
                            isLoaded: !1,
                            isLoading: !1,
                            isMouseDragable: !1,
                            isGrab: !1,
                            isTouchDragable: !1
                        };
                        stageData = {
                            transform: "translate3d(0px,0px,0px)",
                            transition: "0s",
                            width: 0,
                            paddingL: 0,
                            paddingR: 0
                        };
                        slidesData;
                        navData;
                        dotsData;
                        _width;
                        _items = [];
                        _widths = [];
                        _supress = {};
                        _plugins = {};
                        _current = null;
                        _clones = [];
                        _mergers = [];
                        _speed = null;
                        _coordinates = [];
                        _breakpoint = null;
                        clonedIdPrefix = "cloned-";
                        _options = {};
                        _invalidated = {};
                        get invalidated() {
                            return this._invalidated
                        }
                        _states = {
                            current: {},
                            tags: {
                                initializing: ["busy"],
                                animating: ["busy"],
                                dragging: ["interacting"]
                            }
                        };
                        get states() {
                            return this._states
                        }
                        _pipe = [{
                            filter: ["width", "items", "settings"],
                            run: e => {
                                e.current = this._items && this._items[this.relative(this._current)] ? .id
                            }
                        }, {
                            filter: ["width", "items", "settings"],
                            run: e => {
                                const i = this.settings.margin || "",
                                    r = this.settings.rtl,
                                    l = {
                                        "margin-left": r ? i : "",
                                        "margin-right": r ? "" : i
                                    };
                                !this.settings.autoWidth || this.slidesData.forEach(u => {
                                    u.marginL = l["margin-left"], u.marginR = l["margin-right"]
                                }), e.css = l
                            }
                        }, {
                            filter: ["width", "items", "settings"],
                            run: e => {
                                const i = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin,
                                    s = !this.settings.autoWidth,
                                    r = [];
                                let l = null,
                                    u = this._items.length;
                                for (e.items = {
                                        merge: !1,
                                        width: i
                                    }; u-- > 0;) l = this._mergers[u], l = this.settings.mergeFit && Math.min(l, this.settings.items) || l, e.items.merge = l > 1 || e.items.merge, r[u] = s ? i * l : this._items[u].width ? this._items[u].width : i;
                                this._widths = r, this.slidesData.forEach((h, v) => {
                                    h.width = this._widths[v], h.marginR = e.css["margin-right"], h.marginL = e.css["margin-left"]
                                })
                            }
                        }, {
                            filter: ["items", "settings"],
                            run: () => {
                                const e = [],
                                    i = this._items,
                                    s = this.settings,
                                    r = Math.max(2 * s.items, 4),
                                    l = 2 * Math.ceil(i.length / 2);
                                let u = [],
                                    h = [],
                                    v = s.loop && i.length ? s.rewind ? r : Math.max(r, l) : 0;
                                for (v /= 2; v-- > 0;) e.push(this.normalize(e.length / 2, !0)), u.push({ ...this.slidesData[e[e.length - 1]]
                                }), e.push(this.normalize(i.length - 1 - (e.length - 1) / 2, !0)), h.unshift({ ...this.slidesData[e[e.length - 1]]
                                });
                                this._clones = e, u = u.map(_ => (_.id = `${this.clonedIdPrefix}${_.id}`, _.isActive = !1, _.isCloned = !0, _)), h = h.map(_ => (_.id = `${this.clonedIdPrefix}${_.id}`, _.isActive = !1, _.isCloned = !0, _)), this.slidesData = h.concat(this.slidesData).concat(u)
                            }
                        }, {
                            filter: ["width", "items", "settings"],
                            run: () => {
                                const e = this.settings.rtl ? 1 : -1,
                                    i = this._clones.length + this._items.length,
                                    s = [];
                                let r = -1,
                                    l = 0,
                                    u = 0;
                                for (; ++r < i;) l = s[r - 1] || 0, u = this._widths[this.relative(r)] + this.settings.margin, s.push(l + u * e);
                                this._coordinates = s
                            }
                        }, {
                            filter: ["width", "items", "settings"],
                            run: () => {
                                const e = this.settings.stagePadding,
                                    i = this._coordinates,
                                    s = {
                                        width: Math.ceil(Math.abs(i[i.length - 1])) + 2 * e,
                                        "padding-left": e || "",
                                        "padding-right": e || ""
                                    };
                                this.stageData.width = s.width, this.stageData.paddingL = s["padding-left"], this.stageData.paddingR = s["padding-right"]
                            }
                        }, {
                            filter: ["width", "items", "settings"],
                            run: e => {
                                let i = e.current ? this.slidesData.findIndex(s => s.id === e.current) : 0;
                                i = Math.max(this.minimum(), Math.min(this.maximum(), i)), this.reset(i)
                            }
                        }, {
                            filter: ["position"],
                            run: () => {
                                this.animate(this.coordinates(this._current))
                            }
                        }, {
                            filter: ["width", "position", "items", "settings"],
                            run: () => {
                                const e = this.settings.rtl ? 1 : -1,
                                    i = 2 * this.settings.stagePadding,
                                    s = [];
                                let r, l, u, h, v, _;
                                if (r = this.coordinates(this.current()), "number" == typeof r ? r += i : r = 0, l = r + this.width() * e, -1 === e && this.settings.center) {
                                    const C = this._coordinates.filter(M => this.settings.items % 2 == 1 ? M >= r : M > r);
                                    r = C.length ? C[C.length - 1] : r
                                }
                                for (v = 0, _ = this._coordinates.length; v < _; v++) u = Math.ceil(this._coordinates[v - 1] || 0), h = Math.ceil(Math.abs(this._coordinates[v]) + i * e), (this._op(u, "<=", r) && this._op(u, ">", l) || this._op(h, "<", r) && this._op(h, ">", l)) && s.push(v);
                                this.slidesData.forEach(C => (C.isActive = !1, C)), s.forEach(C => {
                                    this.slidesData[C].isActive = !0
                                }), this.settings.center && (this.slidesData.forEach(C => (C.isCentered = !1, C)), this.slidesData[this.current()].isCentered = !0)
                            }
                        }];
                        constructor(e) {
                            this.logger = e
                        }
                        getViewCurSettings() {
                            return this._viewSettingsShipper$.asObservable()
                        }
                        getInitializedState() {
                            return this._initializedCarousel$.asObservable()
                        }
                        getChangeState() {
                            return this._changeSettingsCarousel$.asObservable()
                        }
                        getChangedState() {
                            return this._changedSettingsCarousel$.asObservable()
                        }
                        getTranslateState() {
                            return this._translateCarousel$.asObservable()
                        }
                        getTranslatedState() {
                            return this._translatedCarousel$.asObservable()
                        }
                        getResizeState() {
                            return this._resizeCarousel$.asObservable()
                        }
                        getResizedState() {
                            return this._resizedCarousel$.asObservable()
                        }
                        getRefreshState() {
                            return this._refreshCarousel$.asObservable()
                        }
                        getRefreshedState() {
                            return this._refreshedCarousel$.asObservable()
                        }
                        getDragState() {
                            return this._dragCarousel$.asObservable()
                        }
                        getDraggedState() {
                            return this._draggedCarousel$.asObservable()
                        }
                        setOptions(e) {
                            const i = new mJ,
                                s = this._validateOptions(e, i);
                            this._options = { ...i,
                                ...s
                            }
                        }
                        _validateOptions(e, i) {
                            const s = { ...e
                                },
                                r = new vJ,
                                l = (u, h) => (this.logger.log(`options.${h} must be type of ${u}; ${h}=${e[h]} skipped to defaults: ${h}=${i[h]}`), i[h]);
                            for (const u in s)
                                if (s.hasOwnProperty(u))
                                    if ("number" === r[u]) this._isNumeric(s[u]) ? (s[u] = +s[u], s[u] = "items" === u ? this._validateItems(s[u], s.skip_validateItems) : s[u]) : s[u] = l(r[u], u);
                                    else if ("boolean" === r[u] && "boolean" != typeof s[u]) s[u] = l(r[u], u);
                            else if ("number|boolean" !== r[u] || this._isNumberOrBoolean(s[u]))
                                if ("number|string" !== r[u] || this._isNumberOrString(s[u]))
                                    if ("string|boolean" !== r[u] || this._isStringOrBoolean(s[u])) {
                                        if ("string[]" === r[u])
                                            if (Array.isArray(s[u])) {
                                                let h = !1;
                                                s[u].forEach(v => {
                                                    h = "string" == typeof v
                                                }), h || (s[u] = l(r[u], u))
                                            } else s[u] = l(r[u], u)
                                    } else s[u] = l(r[u], u);
                            else s[u] = l(r[u], u);
                            else s[u] = l(r[u], u);
                            return s
                        }
                        _validateItems(e, i) {
                            let s = e;
                            return e > this._items.length ? i ? this.logger.log("The option 'items' in your options is bigger than the number of slides. The navigation got disabled") : (s = this._items.length, this.logger.log("The option 'items' in your options is bigger than the number of slides. This option is updated to the current number of slides and the navigation got disabled")) : e === this._items.length && (this.settings.dots || this.settings.nav) && this.logger.log("Option 'items' in your options is equal to the number of slides. So the navigation got disabled"), s
                        }
                        setCarouselWidth(e) {
                            this._width = e
                        }
                        setup(e, i, s) {
                            this.setCarouselWidth(e), this.setItems(i), this._defineSlidesData(), this.setOptions(s), this.settings = { ...this._options
                            }, this.setOptionsForViewport(), this._trigger("change", {
                                property: {
                                    name: "settings",
                                    value: this.settings
                                }
                            }), this.invalidate("settings"), this._trigger("changed", {
                                property: {
                                    name: "settings",
                                    value: this.settings
                                }
                            })
                        }
                        setOptionsForViewport() {
                            const e = this._width,
                                i = this._options.responsive;
                            let s = -1;
                            if (!Object.keys(i).length) return;
                            if (!e) return void(this.settings.items = 1);
                            for (const l in i) i.hasOwnProperty(l) && +l <= e && +l > s && (s = Number(l));
                            this.settings = { ...this._options,
                                ...i[s],
                                items: i[s] && i[s].items ? this._validateItems(i[s].items, this._options.skip_validateItems) : this._options.items
                            }, delete this.settings.responsive, this.owlDOMData.isResponsive = !0, this.owlDOMData.isMouseDragable = this.settings.mouseDrag, this.owlDOMData.isTouchDragable = this.settings.touchDrag;
                            const r = [];
                            this._items.forEach(l => {
                                r.push(this.settings.merge ? l.dataMerge : 1)
                            }), this._mergers = r, this._breakpoint = s, this.invalidate("settings")
                        }
                        initialize(e) {
                            this.enter("initializing"), this.owlDOMData.rtl = this.settings.rtl, this._mergers.length && (this._mergers = []), e.forEach(i => {
                                this._mergers.push(this.settings.merge ? i.dataMerge : 1)
                            }), this._clones = [], this.reset(this._isNumeric(this.settings.startPosition) ? +this.settings.startPosition : 0), this.invalidate("items"), this.refresh(), this.owlDOMData.isLoaded = !0, this.owlDOMData.isMouseDragable = this.settings.mouseDrag, this.owlDOMData.isTouchDragable = this.settings.touchDrag, this.sendChanges(), this.leave("initializing"), this._trigger("initialized")
                        }
                        sendChanges() {
                            this._viewSettingsShipper$.next({
                                owlDOMData: this.owlDOMData,
                                stageData: this.stageData,
                                slidesData: this.slidesData,
                                navData: this.navData,
                                dotsData: this.dotsData
                            })
                        }
                        _optionsLogic() {
                            this.settings.autoWidth && (this.settings.stagePadding = 0, this.settings.merge = !1)
                        }
                        update() {
                            let e = 0;
                            const i = this._pipe.length,
                                s = l => this._invalidated[l],
                                r = {};
                            for (; e < i;) {
                                const l = this._pipe[e].filter.filter(s);
                                (this._invalidated.all || l.length > 0) && this._pipe[e].run(r), e++
                            }
                            this.slidesData.forEach(l => l.classes = this.setCurSlideClasses(l)), this.sendChanges(), this._invalidated = {}, this.is("valid") || this.enter("valid")
                        }
                        width(e) {
                            switch (e = e || Wv.Default) {
                                case Wv.Inner:
                                case Wv.Outer:
                                    return this._width;
                                default:
                                    return this._width - 2 * this.settings.stagePadding + this.settings.margin
                            }
                        }
                        refresh() {
                            this.enter("refreshing"), this._trigger("refresh"), this._defineSlidesData(), this.setOptionsForViewport(), this._optionsLogic(), this.update(), this.leave("refreshing"), this._trigger("refreshed")
                        }
                        onResize(e) {
                            if (!this._items.length) return !1;
                            this.setCarouselWidth(e), this.enter("resizing"), this._trigger("resize"), this.invalidate("width"), this.refresh(), this.leave("resizing"), this._trigger("resized")
                        }
                        prepareDragging(e) {
                            let s, i = null;
                            return s = this.stageData.transform.replace(/.*\(|\)| |[^,-\d]\w|\)/g, "").split(","), i = {
                                x: +s[0],
                                y: +s[1]
                            }, this.is("animating") && this.invalidate("position"), "mousedown" === e.type && (this.owlDOMData.isGrab = !0), this.speed(0), i
                        }
                        enterDragging() {
                            this.enter("dragging"), this._trigger("drag")
                        }
                        defineNewCoordsDrag(e, i) {
                            let s = null,
                                r = null,
                                l = null;
                            const u = this.difference(i.pointer, this.pointer(e)),
                                h = this.difference(i.stage.start, u);
                            return !!this.is("dragging") && (this.settings.loop ? (s = this.coordinates(this.minimum()), r = +this.coordinates(this.maximum() + 1) - s, h.x = ((h.x - s) % r + r) % r + s) : (s = this.coordinates(this.settings.rtl ? this.maximum() : this.minimum()), r = this.coordinates(this.settings.rtl ? this.minimum() : this.maximum()), l = this.settings.pullDrag ? -1 * u.x / 5 : 0, h.x = Math.max(Math.min(h.x, s + l), r + l)), h)
                        }
                        finishDragging(e, i, s) {
                            const l = this.difference(i.pointer, this.pointer(e)),
                                u = i.stage.current,
                                h = ["right", "left"][+(this.settings.rtl ? l.x < +this.settings.rtl : l.x > +this.settings.rtl)];
                            let v, _, C;
                            (0 !== l.x && this.is("dragging") || !this.is("valid")) && (this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed), v = this.closest(u.x, 0 !== l.x ? h : i.direction), _ = this.current(), C = this.current(-1 === v ? void 0 : v), _ !== C && (this.invalidate("position"), this.update()), i.direction = h, (Math.abs(l.x) > 3 || (new Date).getTime() - i.time > 300) && s()), this.is("dragging") && (this.leave("dragging"), this._trigger("dragged"))
                        }
                        closest(e, i) {
                            const r = this.width();
                            let l = this.coordinates(),
                                u = -1;
                            this.settings.center && (l = l.map(h => (0 === h && (h += 1e-6), h)));
                            for (let h = 0; h < l.length && ("left" === i && e > l[h] - 30 && e < l[h] + 30 ? u = h : "right" === i && e > l[h] - r - 30 && e < l[h] - r + 30 ? u = h + 1 : this._op(e, "<", l[h]) && this._op(e, ">", l[h + 1] || l[h] - r) ? u = "left" === i ? h + 1 : h : null === i && e > l[h] - 30 && e < l[h] + 30 && (u = h), -1 === u); h++);
                            return this.settings.loop || (this._op(e, ">", l[this.minimum()]) ? u = e = this.minimum() : this._op(e, "<", l[this.maximum()]) && (u = e = this.maximum())), u
                        }
                        animate(e) {
                            const i = this.speed() > 0;
                            this.is("animating") && this.onTransitionEnd(), i && (this.enter("animating"), this._trigger("translate")), this.stageData.transform = "translate3d(" + e + "px,0px,0px)", this.stageData.transition = this.speed() / 1e3 + "s" + (this.settings.slideTransition ? " " + this.settings.slideTransition : "")
                        }
                        is(e) {
                            return this._states.current[e] && this._states.current[e] > 0
                        }
                        current(e) {
                            return void 0 === e ? this._current : 0 !== this._items.length ? (e = this.normalize(e), this._current !== e && (this._trigger("change", {
                                property: {
                                    name: "position",
                                    value: e
                                }
                            }), this._current = e, this.invalidate("position"), this._trigger("changed", {
                                property: {
                                    name: "position",
                                    value: this._current
                                }
                            })), this._current) : void 0
                        }
                        invalidate(e) {
                            return "string" == typeof e && (this._invalidated[e] = !0, this.is("valid") && this.leave("valid")), Object.keys(this._invalidated)
                        }
                        reset(e) {
                            void 0 !== (e = this.normalize(e)) && (this._speed = 0, this._current = e, this._suppress(["translate", "translated"]), this.animate(this.coordinates(e)), this._release(["translate", "translated"]))
                        }
                        normalize(e, i) {
                            const s = this._items.length,
                                r = i ? 0 : this._clones.length;
                            return !this._isNumeric(e) || s < 1 ? e = void 0 : (e < 0 || e >= s + r) && (e = ((e - r / 2) % s + s) % s + r / 2), e
                        }
                        relative(e) {
                            return this.normalize(e -= this._clones.length / 2, !0)
                        }
                        maximum(e = !1) {
                            const i = this.settings;
                            let r, l, u, s = this._coordinates.length;
                            if (i.loop) s = this._clones.length / 2 + this._items.length - 1;
                            else if (i.autoWidth || i.merge) {
                                for (r = this._items.length, l = this.slidesData[--r].width, u = this._width; r-- > 0 && (l += +this.slidesData[r].width + this.settings.margin, !(l > u)););
                                s = r + 1
                            } else s = i.center ? this._items.length - 1 : this._items.length - i.items;
                            return e && (s -= this._clones.length / 2), Math.max(s, 0)
                        }
                        minimum(e = !1) {
                            return e ? 0 : this._clones.length / 2
                        }
                        items(e) {
                            return void 0 === e ? this._items.slice() : (e = this.normalize(e, !0), [this._items[e]])
                        }
                        mergers(e) {
                            return void 0 === e ? this._mergers.slice() : (e = this.normalize(e, !0), this._mergers[e])
                        }
                        clones(e) {
                            const i = this._clones.length / 2,
                                s = i + this._items.length,
                                r = l => l % 2 == 0 ? s + l / 2 : i - (l + 1) / 2;
                            return void 0 === e ? this._clones.map((l, u) => r(u)) : this._clones.map((l, u) => l === e ? r(u) : null).filter(l => l)
                        }
                        speed(e) {
                            return void 0 !== e && (this._speed = e), this._speed
                        }
                        coordinates(e) {
                            let r, l, i = 1,
                                s = e - 1;
                            return void 0 === e ? (l = this._coordinates.map((u, h) => this.coordinates(h)), l) : (this.settings.center ? (this.settings.rtl && (i = -1, s = e + 1), r = this._coordinates[e], r += (this.width() - r + (this._coordinates[s] || 0)) / 2 * i) : r = this._coordinates[s] || 0, r = Math.ceil(r), r)
                        }
                        _duration(e, i, s) {
                            return 0 === s ? 0 : Math.min(Math.max(Math.abs(i - e), 1), 6) * Math.abs(+s || this.settings.smartSpeed)
                        }
                        to(e, i) {
                            let s = this.current(),
                                r = null,
                                l = e - this.relative(s),
                                u = this.maximum(),
                                h = 0;
                            const v = +(l > 0) - +(l < 0),
                                _ = this._items.length,
                                C = this.minimum();
                            this.settings.loop ? (!this.settings.rewind && Math.abs(l) > _ / 2 && (l += -1 * v * _), r = (((e = s + l) - C) % _ + _) % _ + C, r !== e && r - l <= u && r - l > 0 && (s = r - l, e = r, h = 30, this.reset(s), this.sendChanges())) : this.settings.rewind ? (u += 1, e = (e % u + u) % u) : e = Math.max(C, Math.min(u, e)), setTimeout(() => {
                                this.speed(this._duration(s, e, i)), this.current(e), this.update()
                            }, h)
                        }
                        next(e) {
                            e = e || !1, this.to(this.relative(this.current()) + 1, e)
                        }
                        prev(e) {
                            e = e || !1, this.to(this.relative(this.current()) - 1, e)
                        }
                        onTransitionEnd(e) {
                            if (void 0 !== e) return !1;
                            this.leave("animating"), this._trigger("translated")
                        }
                        _viewport() {
                            let e;
                            return this._width ? e = this._width : this.logger.log("Can not detect viewport width."), e
                        }
                        setItems(e) {
                            this._items = e
                        }
                        _defineSlidesData() {
                            let e;
                            this.slidesData && this.slidesData.length && (e = new Map, this.slidesData.forEach(i => {
                                i.load && e.set(i.id, i.load)
                            })), this.slidesData = this._items.map(i => ({
                                id: `${i.id}`,
                                isActive: !1,
                                tplRef: i.tplRef,
                                dataMerge: i.dataMerge,
                                width: 0,
                                isCloned: !1,
                                load: !!e && e.get(i.id),
                                hashFragment: i.dataHash
                            }))
                        }
                        setCurSlideClasses(e) {
                            const i = {
                                active: e.isActive,
                                center: e.isCentered,
                                cloned: e.isCloned,
                                animated: e.isAnimated,
                                "owl-animated-in": e.isDefAnimatedIn,
                                "owl-animated-out": e.isDefAnimatedOut
                            };
                            return this.settings.animateIn && (i[this.settings.animateIn] = e.isCustomAnimatedIn), this.settings.animateOut && (i[this.settings.animateOut] = e.isCustomAnimatedOut), i
                        }
                        _op(e, i, s) {
                            const r = this.settings.rtl;
                            switch (i) {
                                case "<":
                                    return r ? e > s : e < s;
                                case ">":
                                    return r ? e < s : e > s;
                                case ">=":
                                    return r ? e <= s : e >= s;
                                case "<=":
                                    return r ? e >= s : e <= s
                            }
                        }
                        _trigger(e, i, s, r, l) {
                            switch (e) {
                                case "initialized":
                                    this._initializedCarousel$.next(e);
                                    break;
                                case "change":
                                    this._changeSettingsCarousel$.next(i);
                                    break;
                                case "changed":
                                    this._changedSettingsCarousel$.next(i);
                                    break;
                                case "drag":
                                    this._dragCarousel$.next(e);
                                    break;
                                case "dragged":
                                    this._draggedCarousel$.next(e);
                                    break;
                                case "resize":
                                    this._resizeCarousel$.next(e);
                                    break;
                                case "resized":
                                    this._resizedCarousel$.next(e);
                                    break;
                                case "refresh":
                                    this._refreshCarousel$.next(e);
                                    break;
                                case "refreshed":
                                    this._refreshedCarousel$.next(e);
                                    break;
                                case "translate":
                                    this._translateCarousel$.next(e);
                                    break;
                                case "translated":
                                    this._translatedCarousel$.next(e)
                            }
                        }
                        enter(e) {
                            [e].concat(this._states.tags[e] || []).forEach(i => {
                                void 0 === this._states.current[i] && (this._states.current[i] = 0), this._states.current[i]++
                            })
                        }
                        leave(e) {
                            [e].concat(this._states.tags[e] || []).forEach(i => {
                                (0 === this._states.current[i] || this._states.current[i]) && this._states.current[i]--
                            })
                        }
                        register(e) {
                            e.type === xN.State && (this._states.tags[e.name] = this._states.tags[e.name] ? this._states.tags[e.name].concat(e.tags) : e.tags, this._states.tags[e.name] = this._states.tags[e.name].filter((i, s) => this._states.tags[e.name].indexOf(i) === s))
                        }
                        _suppress(e) {
                            e.forEach(i => {
                                this._supress[i] = !0
                            })
                        }
                        _release(e) {
                            e.forEach(i => {
                                delete this._supress[i]
                            })
                        }
                        pointer(e) {
                            const i = {
                                x: null,
                                y: null
                            };
                            return (e = (e = e.originalEvent || e || window.event).touches && e.touches.length ? e.touches[0] : e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e).pageX ? (i.x = e.pageX, i.y = e.pageY) : (i.x = e.clientX, i.y = e.clientY), i
                        }
                        _isNumeric(e) {
                            return !isNaN(parseFloat(e))
                        }
                        _isNumberOrBoolean(e) {
                            return this._isNumeric(e) || "boolean" == typeof e
                        }
                        _isNumberOrString(e) {
                            return this._isNumeric(e) || "string" == typeof e
                        }
                        _isStringOrBoolean(e) {
                            return "string" == typeof e || "boolean" == typeof e
                        }
                        difference(e, i) {
                            return null === e || null === i ? {
                                x: 0,
                                y: 0
                            } : {
                                x: e.x - i.x,
                                y: e.y - i.y
                            }
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(bC))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                _N = (() => {
                    class t {
                        carouselService;
                        navSubscription;
                        _initialized = !1;
                        _pages = [];
                        _navData = {
                            disabled: !1,
                            prev: {
                                disabled: !1,
                                htmlText: ""
                            },
                            next: {
                                disabled: !1,
                                htmlText: ""
                            }
                        };
                        _dotsData = {
                            disabled: !1,
                            dots: []
                        };
                        constructor(e) {
                            this.carouselService = e, this.spyDataStreams()
                        }
                        ngOnDestroy() {
                            this.navSubscription.unsubscribe()
                        }
                        spyDataStreams() {
                            const r = ne(this.carouselService.getInitializedState().pipe(Wn(l => {
                                this.initialize(), this._updateNavPages(), this.draw(), this.update(), this.carouselService.sendChanges()
                            })), this.carouselService.getChangedState().pipe(hr(l => "position" === l.property.name), Wn(l => {
                                this.update()
                            })), this.carouselService.getRefreshedState().pipe(Wn(() => {
                                this._updateNavPages(), this.draw(), this.update(), this.carouselService.sendChanges()
                            })));
                            this.navSubscription = r.subscribe(() => {})
                        }
                        initialize() {
                            this._navData.disabled = !0, this._navData.prev.htmlText = this.carouselService.settings.navText[0], this._navData.next.htmlText = this.carouselService.settings.navText[1], this._dotsData.disabled = !0, this.carouselService.navData = this._navData, this.carouselService.dotsData = this._dotsData
                        }
                        _updateNavPages() {
                            let e, i, s;
                            const r = this.carouselService.clones().length / 2,
                                l = r + this.carouselService.items().length,
                                u = this.carouselService.maximum(!0),
                                h = [],
                                v = this.carouselService.settings;
                            let _ = v.center || v.autoWidth || v.dotsData ? 1 : Math.floor(Number(v.dotsEach)) || Math.floor(v.items);
                            if (_ = +_, "page" !== v.slideBy && (v.slideBy = Math.min(+v.slideBy, v.items)), v.dots || "page" === v.slideBy)
                                for (e = r, i = 0, s = 0; e < l; e++) {
                                    if (i >= _ || 0 === i) {
                                        if (h.push({
                                                start: Math.min(u, e - r),
                                                end: e - r + _ - 1
                                            }), Math.min(u, e - r) === u) break;
                                        i = 0, ++s
                                    }
                                    i += this.carouselService.mergers(this.carouselService.relative(e))
                                }
                            this._pages = h
                        }
                        draw() {
                            let e;
                            const i = this.carouselService.settings,
                                s = this.carouselService.items(),
                                r = s.length <= i.items;
                            if (this._navData.disabled = !i.nav || r, this._dotsData.disabled = !i.dots || r, i.dots)
                                if (e = this._pages.length - this._dotsData.dots.length, i.dotsData && 0 !== e) this._dotsData.dots = [], s.forEach(l => {
                                    this._dotsData.dots.push({
                                        active: !1,
                                        id: `dot-${l.id}`,
                                        innerContent: l.dotContent,
                                        showInnerContent: !0
                                    })
                                });
                                else if (e > 0) {
                                const l = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;
                                for (let u = 0; u < e; u++) this._dotsData.dots.push({
                                    active: !1,
                                    id: `dot-${u+l}`,
                                    innerContent: "",
                                    showInnerContent: !1
                                })
                            } else e < 0 && this._dotsData.dots.splice(e, Math.abs(e));
                            this.carouselService.navData = this._navData, this.carouselService.dotsData = this._dotsData
                        }
                        update() {
                            this._updateNavButtons(), this._updateDots()
                        }
                        _updateNavButtons() {
                            const e = this.carouselService.settings,
                                i = e.loop || e.rewind,
                                s = this.carouselService.relative(this.carouselService.current());
                            e.nav && (this._navData.prev.disabled = !i && s <= this.carouselService.minimum(!0), this._navData.next.disabled = !i && s >= this.carouselService.maximum(!0)), this.carouselService.navData = this._navData
                        }
                        _updateDots() {
                            let e;
                            this.carouselService.settings.dots && (this._dotsData.dots.forEach(i => {
                                !0 === i.active && (i.active = !1)
                            }), e = this._current(), this._dotsData.dots.length && (this._dotsData.dots[e].active = !0), this.carouselService.dotsData = this._dotsData)
                        }
                        _current() {
                            const e = this.carouselService.relative(this.carouselService.current());
                            let i;
                            const s = this._pages.filter((r, l) => r.start <= e && r.end >= e).pop();
                            return i = this._pages.findIndex(r => r.start === s.start && r.end === s.end), i
                        }
                        _getPosition(e) {
                            let i, s;
                            const r = this.carouselService.settings;
                            return "page" === r.slideBy ? (i = this._current(), s = this._pages.length, e ? ++i : --i, i = this._pages[(i % s + s) % s].start) : (i = this.carouselService.relative(this.carouselService.current()), s = this.carouselService.items().length, e ? i += +r.slideBy : i -= +r.slideBy), i
                        }
                        next(e) {
                            this.carouselService.to(this._getPosition(!0), e)
                        }
                        prev(e) {
                            this.carouselService.to(this._getPosition(!1), e)
                        }
                        to(e, i, s) {
                            let r;
                            !s && this._pages.length ? (r = this._pages.length, this.carouselService.to(this._pages[(e % r + r) % r].start, i)) : this.carouselService.to(e, i)
                        }
                        moveByDot(e) {
                            const i = this._dotsData.dots.findIndex(s => e === s.id);
                            this.to(i, this.carouselService.settings.dotsSpeed)
                        }
                        toSlideById(e) {
                            const i = this.carouselService.slidesData.findIndex(s => s.id === e && !1 === s.isCloned); - 1 === i || i === this.carouselService.current() || this.carouselService.to(this.carouselService.relative(i), !1)
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(ol))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })();
            const xC = new zt("WindowToken");
            class _C {
                get nativeWindow() {
                    throw new Error("Not implemented.")
                }
            }
            const xJ = [{
                    provide: _C,
                    useClass: (() => {
                        class t extends _C {
                            constructor() {
                                super()
                            }
                            get nativeWindow() {
                                return window
                            }
                            static\ u0275fac = function(i) {
                                return new(i || t)
                            };
                            static\ u0275prov = Et({
                                token: t,
                                factory: t.\u0275fac
                            })
                        }
                        return t
                    })()
                }, {
                    provide: xC,
                    useFactory: function bJ(t, n) {
                        return Ia(n) ? t.nativeWindow : {
                            setTimeout: (i, s) => {},
                            clearTimeout: i => {}
                        }
                    },
                    deps: [_C, ws]
                }],
                wC = new zt("DocumentToken");
            class CC {
                get nativeDocument() {
                    throw new Error("Not implemented.")
                }
            }
            const CJ = [{
                provide: CC,
                useClass: (() => {
                    class t extends CC {
                        constructor() {
                            super()
                        }
                        get nativeDocument() {
                            return document
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })()
            }, {
                provide: wC,
                useFactory: function wJ(t, n) {
                    return Ia(n) ? t.nativeDocument : {
                        hidden: !1,
                        visibilityState: "visible"
                    }
                },
                deps: [CC, ws]
            }];
            let wN = (() => {
                    class t {
                        carouselService;
                        ngZone;
                        autoplaySubscription;
                        _timeout = null;
                        _paused = !1;
                        _isArtificialAutoplayTimeout;
                        _isAutoplayStopped = !1;
                        get isAutoplayStopped() {
                            return this._isAutoplayStopped
                        }
                        set isAutoplayStopped(e) {
                            this._isAutoplayStopped = e
                        }
                        winRef;
                        docRef;
                        constructor(e, i, s, r) {
                            this.carouselService = e, this.ngZone = r, this.winRef = i, this.docRef = s, this.spyDataStreams()
                        }
                        ngOnDestroy() {
                            this.autoplaySubscription.unsubscribe()
                        }
                        spyDataStreams() {
                            const r = ne(this.carouselService.getInitializedState().pipe(Wn(() => {
                                this.carouselService.settings.autoplay && this.play()
                            })), this.carouselService.getChangedState().pipe(Wn(l => {
                                this._handleChangeObservable(l)
                            })), this.carouselService.getResizedState().pipe(Wn(() => {
                                this.carouselService.settings.autoplay && !this._isAutoplayStopped ? this.play() : this.stop()
                            })));
                            this.autoplaySubscription = r.subscribe(() => {})
                        }
                        play(e, i) {
                            this._paused && (this._paused = !1, this._setAutoPlayInterval(this.carouselService.settings.autoplayMouseleaveTimeout)), !this.carouselService.is("rotating") && (this.carouselService.enter("rotating"), this._setAutoPlayInterval())
                        }
                        _getNextTimeout(e, i) {
                            return this._timeout && this.winRef.clearTimeout(this._timeout), this._isArtificialAutoplayTimeout = !!e, this.ngZone.runOutsideAngular(() => this.winRef.setTimeout(() => {
                                this.ngZone.run(() => {
                                    this._paused || this.carouselService.is("busy") || this.carouselService.is("interacting") || this.docRef.hidden || this.carouselService.next(i || this.carouselService.settings.autoplaySpeed)
                                })
                            }, e || this.carouselService.settings.autoplayTimeout))
                        }
                        _setAutoPlayInterval(e) {
                            this._timeout = this._getNextTimeout(e)
                        }
                        stop() {
                            this.carouselService.is("rotating") && (this._paused = !0, this.winRef.clearTimeout(this._timeout), this.carouselService.leave("rotating"))
                        }
                        pause() {
                            this.carouselService.is("rotating") && (this._paused = !0)
                        }
                        _handleChangeObservable(e) {
                            "settings" === e.property.name ? this.carouselService.settings.autoplay ? this.play() : this.stop() : "position" === e.property.name && this.carouselService.settings.autoplay && this._setAutoPlayInterval()
                        }
                        _playAfterTranslated() {
                            b("translated").pipe(X(e => this.carouselService.getTranslatedState()), Eo(), hr(() => this._isArtificialAutoplayTimeout), Wn(() => this._setAutoPlayInterval())).subscribe(() => {})
                        }
                        startPausing() {
                            this.carouselService.settings.autoplayHoverPause && this.carouselService.is("rotating") && this.pause()
                        }
                        startPlayingMouseLeave() {
                            this.carouselService.settings.autoplayHoverPause && this.carouselService.is("rotating") && (this.play(), this._playAfterTranslated())
                        }
                        startPlayingTouchEnd() {
                            this.carouselService.settings.autoplayHoverPause && this.carouselService.is("rotating") && (this.play(), this._playAfterTranslated())
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(ol), vt(xC), vt(wC), vt(si))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                CN = (() => {
                    class t {
                        carouselService;
                        lazyLoadSubscription;
                        constructor(e) {
                            this.carouselService = e, this.spyDataStreams()
                        }
                        ngOnDestroy() {
                            this.lazyLoadSubscription.unsubscribe()
                        }
                        spyDataStreams() {
                            const r = ne(this.carouselService.getInitializedState().pipe(Wn(() => {
                                const l = this.carouselService.settings && !this.carouselService.settings.lazyLoad;
                                this.carouselService.slidesData.forEach(u => u.load = !!l)
                            })), this.carouselService.getChangeState(), this.carouselService.getResizedState()).pipe(Wn(l => this._defineLazyLoadSlides(l)));
                            this.lazyLoadSubscription = r.subscribe(() => {})
                        }
                        _defineLazyLoadSlides(e) {
                            if (this.carouselService.settings && this.carouselService.settings.lazyLoad && (e.property && "position" === e.property.name || "initialized" === e || "resized" === e)) {
                                const i = this.carouselService.settings,
                                    s = this.carouselService.clones().length;
                                let r = i.center && Math.ceil(i.items / 2) || i.items,
                                    l = i.center && -1 * r || 0,
                                    u = (e.property && void 0 !== e.property.value ? e.property.value : this.carouselService.current()) + l;
                                for (i.lazyLoadEager > 0 && (r += i.lazyLoadEager, i.loop && (u -= i.lazyLoadEager, r++)); l++ < r;) this._load(s / 2 + this.carouselService.relative(u)), s && this.carouselService.clones(this.carouselService.relative(u)).forEach(h => this._load(h)), u++
                            }
                        }
                        _load(e) {
                            this.carouselService.slidesData[e].load || (this.carouselService.slidesData[e].load = !0)
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(ol))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                SC = (() => {
                    class t {
                        carouselService;
                        animateSubscription;
                        swapping = !0;
                        previous = void 0;
                        next = void 0;
                        constructor(e) {
                            this.carouselService = e, this.spyDataStreams()
                        }
                        ngOnDestroy() {
                            this.animateSubscription.unsubscribe()
                        }
                        spyDataStreams() {
                            const e = this.carouselService.getChangeState().pipe(Wn(v => {
                                    "position" === v.property.name && (this.previous = this.carouselService.current(), this.next = v.property.value)
                                })),
                                l = ne(this.carouselService.getDragState(), this.carouselService.getDraggedState(), this.carouselService.getTranslatedState()).pipe(Wn(v => this.swapping = "translated" === v)),
                                h = ne(e, this.carouselService.getTranslateState().pipe(Wn(v => {
                                    this.swapping && (this.carouselService._options.animateOut || this.carouselService._options.animateIn) && this._swap()
                                })), l).pipe();
                            this.animateSubscription = h.subscribe(() => {})
                        }
                        _swap() {
                            if (1 !== this.carouselService.settings.items) return;
                            let e;
                            this.carouselService.speed(0);
                            const i = this.carouselService.slidesData[this.previous],
                                s = this.carouselService.slidesData[this.next],
                                r = this.carouselService.settings.animateIn,
                                l = this.carouselService.settings.animateOut;
                            this.carouselService.current() !== this.previous && (l && (e = +this.carouselService.coordinates(this.previous) - +this.carouselService.coordinates(this.next), this.carouselService.slidesData.forEach(u => {
                                u.id === i.id && (u.left = `${e}px`, u.isAnimated = !0, u.isDefAnimatedOut = !0, u.isCustomAnimatedOut = !0)
                            })), r && this.carouselService.slidesData.forEach(u => {
                                u.id === s.id && (u.isAnimated = !0, u.isDefAnimatedIn = !0, u.isCustomAnimatedIn = !0)
                            }))
                        }
                        clear(e) {
                            this.carouselService.slidesData.forEach(i => {
                                i.id === e && (i.left = "", i.isAnimated = !1, i.isDefAnimatedOut = !1, i.isCustomAnimatedOut = !1, i.isDefAnimatedIn = !1, i.isCustomAnimatedIn = !1, i.classes = this.carouselService.setCurSlideClasses(i))
                            }), this.carouselService.onTransitionEnd()
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(ol))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                SN = (() => {
                    class t {
                        carouselService;
                        autoHeightSubscription;
                        constructor(e) {
                            this.carouselService = e, this.spyDataStreams()
                        }
                        ngOnDestroy() {
                            this.autoHeightSubscription.unsubscribe()
                        }
                        spyDataStreams() {
                            const r = ne(this.carouselService.getInitializedState().pipe(Wn(l => {
                                this.carouselService.settings.autoHeight ? this.update() : this.carouselService.slidesData.forEach(u => u.heightState = "full")
                            })), this.carouselService.getChangedState().pipe(Wn(l => {
                                this.carouselService.settings.autoHeight && "position" === l.property.name && this.update()
                            })), this.carouselService.getRefreshedState().pipe(Wn(l => {
                                this.carouselService.settings.autoHeight && this.update()
                            })));
                            this.autoHeightSubscription = r.subscribe(() => {})
                        }
                        update() {
                            const e = this.carouselService.settings.items;
                            let i = this.carouselService.current(),
                                s = i + e;
                            this.carouselService.settings.center && (i = e % 2 == 1 ? i - (e - 1) / 2 : i - e / 2, s = e % 2 == 1 ? i + e : i + e + 1), this.carouselService.slidesData.forEach((r, l) => {
                                r.heightState = l >= i && l < s ? "full" : "nulled"
                            })
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(ol))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                TN = (() => {
                    class t {
                        carouselService;
                        route;
                        router;
                        hashSubscription;
                        currentHashFragment;
                        constructor(e, i, s) {
                            this.carouselService = e, this.route = i, this.router = s, this.spyDataStreams(), this.route || (this.route = {
                                fragment: b("no route").pipe(Or(1))
                            }), this.router || (this.router = {
                                navigate: (r, l) => {}
                            })
                        }
                        ngOnDestroy() {
                            this.hashSubscription.unsubscribe()
                        }
                        spyDataStreams() {
                            const s = ne(this.carouselService.getInitializedState().pipe(Wn(() => this.listenToRoute())), this.carouselService.getChangedState().pipe(Wn(r => {
                                if (this.carouselService.settings.URLhashListener && "position" === r.property.name) {
                                    const l = this.carouselService.current(),
                                        u = this.carouselService.slidesData[l].hashFragment;
                                    if (!u || u === this.currentHashFragment) return;
                                    this.router.navigate(["./"], {
                                        fragment: u,
                                        relativeTo: this.route
                                    })
                                }
                            })));
                            this.hashSubscription = s.subscribe(() => {})
                        }
                        rewind(e) {
                            const i = this.carouselService.slidesData.findIndex(s => s.hashFragment === e && !1 === s.isCloned); - 1 === i || i === this.carouselService.current() || this.carouselService.to(this.carouselService.relative(i), !1)
                        }
                        listenToRoute() {
                            this.route.fragment.pipe(cF("URLHash" === this.carouselService.settings.startPosition ? 0 : 2)).subscribe(i => {
                                this.currentHashFragment = i, this.rewind(i)
                            })
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(ol), vt(rl, 8), vt(Yr, 8))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                SJ = 0,
                Gv = (() => {
                    class t {
                        tplRef;
                        id = "owl-slide-" + SJ++;
                        _dataMerge = 1;
                        set dataMerge(e) {
                            this._dataMerge = this.isNumeric(e) ? e : 1
                        }
                        get dataMerge() {
                            return this._dataMerge
                        }
                        width = 0;
                        dotContent = "";
                        dataHash = "";
                        constructor(e) {
                            this.tplRef = e
                        }
                        isNumeric(e) {
                            return !isNaN(parseFloat(e))
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(Aa))
                        };
                        static\ u0275dir = tn({
                            type: t,
                            selectors: [
                                ["ng-template", "carouselSlide", ""]
                            ],
                            inputs: {
                                id: "id",
                                dataMerge: "dataMerge",
                                width: "width",
                                dotContent: "dotContent",
                                dataHash: "dataHash"
                            }
                        })
                    }
                    return t
                })(),
                DN = (() => {
                    class t {
                        resizeObservable$;
                        get onResize$() {
                            return this.resizeObservable$
                        }
                        constructor(e, i) {
                            this.resizeObservable$ = Ia(i) ? yd(e, "resize") : (new He).asObservable()
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)(vt(xC), vt(ws))
                        };
                        static\ u0275prov = Et({
                            token: t,
                            factory: t.\u0275fac
                        })
                    }
                    return t
                })(),
                TJ = (() => {
                    class t {
                        zone;
                        el;
                        renderer;
                        carouselService;
                        animateService;
                        owlDraggable;
                        stageData;
                        slidesData;
                        listenerMouseMove;
                        listenerTouchMove;
                        listenerOneMouseMove;
                        listenerOneTouchMove;
                        listenerMouseUp;
                        listenerTouchEnd;
                        listenerOneClick;
                        listenerATag;
                        _drag = {
                            time: null,
                            target: null,
                            pointer: null,
                            stage: {
                                start: null,
                                current: null
                            },
                            direction: null,
                            active: !1,
                            moving: !1
                        };
                        _oneDragMove$ = new He;
                        _oneMoveSubsription;
                        preparePublicSlide = e => {
                            const i = { ...e
                            };
                            return delete i.tplRef, i
                        };
                        constructor(e, i, s, r, l) {
                            this.zone = e, this.el = i, this.renderer = s, this.carouselService = r, this.animateService = l
                        }
                        onMouseDown(e) {
                            this.owlDraggable.isMouseDragable && this._onDragStart(e)
                        }
                        onTouchStart(e) {
                            if (e.targetTouches.length >= 2) return !1;
                            this.owlDraggable.isTouchDragable && this._onDragStart(e)
                        }
                        onTouchCancel(e) {
                            this._onDragEnd(e)
                        }
                        onDragStart() {
                            if (this.owlDraggable.isMouseDragable) return !1
                        }
                        onSelectStart() {
                            if (this.owlDraggable.isMouseDragable) return !1
                        }
                        ngOnInit() {
                            this._oneMoveSubsription = this._oneDragMove$.pipe(Eo()).subscribe(() => {
                                this._sendChanges()
                            })
                        }
                        ngOnDestroy() {
                            this._oneMoveSubsription.unsubscribe()
                        }
                        bindOneMouseTouchMove = e => {
                            this._oneMouseTouchMove(e)
                        };
                        bindOnDragMove = e => {
                            this._onDragMove(e)
                        };
                        bindOnDragEnd = e => {
                            this._onDragEnd(e)
                        };
                        _onDragStart(e) {
                            let i = null;
                            3 !== e.which && (i = this._prepareDragging(e), this._drag.time = (new Date).getTime(), this._drag.target = e.target, this._drag.stage.start = i, this._drag.stage.current = i, this._drag.pointer = this._pointer(e), this.listenerMouseUp = this.renderer.listen(document, "mouseup", this.bindOnDragEnd), this.listenerTouchEnd = this.renderer.listen(document, "touchend", this.bindOnDragEnd), this.zone.runOutsideAngular(() => {
                                this.listenerOneMouseMove = this.renderer.listen(document, "mousemove", this.bindOneMouseTouchMove), this.listenerOneTouchMove = this.renderer.listen(document, "touchmove", this.bindOneMouseTouchMove)
                            }))
                        }
                        _oneMouseTouchMove(e) {
                            const i = this._difference(this._drag.pointer, this._pointer(e));
                            this.listenerATag && this.listenerATag(), !(Math.abs(i.x) < 3 && Math.abs(i.y) < 3 && this._is("valid")) && (Math.abs(i.x) < 3 && Math.abs(i.x) < Math.abs(i.y) && this._is("valid") || (this.listenerOneMouseMove(), this.listenerOneTouchMove(), this._drag.moving = !0, this.blockClickAnchorInDragging(e), this.listenerMouseMove = this.renderer.listen(document, "mousemove", this.bindOnDragMove), this.listenerTouchMove = this.renderer.listen(document, "touchmove", this.bindOnDragMove), e.preventDefault(), this._enterDragging(), this._oneDragMove$.next(e)))
                        }
                        blockClickAnchorInDragging(e) {
                            let i = e.target;
                            for (; i && !(i instanceof HTMLAnchorElement);) i = i.parentElement;
                            i instanceof HTMLAnchorElement && (this.listenerATag = this.renderer.listen(i, "click", () => !1))
                        }
                        _onDragMove(e) {
                            let i;
                            const s = this.carouselService.defineNewCoordsDrag(e, this._drag);
                            !1 !== s && (i = s, e.preventDefault(), this._drag.stage.current = i, this._animate(i.x - this._drag.stage.start.x))
                        }
                        _animate(e) {
                            this.renderer.setStyle(this.el.nativeElement.children[0], "transform", `translate3d(${e}px,0px,0px`), this.renderer.setStyle(this.el.nativeElement.children[0], "transition", "0s")
                        }
                        _onDragEnd(e) {
                            this.carouselService.owlDOMData.isGrab = !1, this.listenerOneMouseMove(), this.listenerOneTouchMove(), this._drag.moving && (this.renderer.setStyle(this.el.nativeElement.children[0], "transform", ""), this.renderer.setStyle(this.el.nativeElement.children[0], "transition", this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed) / 1e3 + "s"), this._finishDragging(e), this.listenerMouseMove(), this.listenerTouchMove()), this._drag = {
                                time: null,
                                target: null,
                                pointer: null,
                                stage: {
                                    start: null,
                                    current: null
                                },
                                direction: null,
                                active: !1,
                                moving: !1
                            }, this.listenerMouseUp(), this.listenerTouchEnd()
                        }
                        _prepareDragging(e) {
                            return this.carouselService.prepareDragging(e)
                        }
                        _oneClickHandler = () => {
                            this.listenerOneClick = this.renderer.listen(this._drag.target, "click", () => !1), this.listenerOneClick()
                        };
                        _finishDragging(e) {
                            this.carouselService.finishDragging(e, this._drag, this._oneClickHandler)
                        }
                        _pointer(e) {
                            return this.carouselService.pointer(e)
                        }
                        _difference(e, i) {
                            return this.carouselService.difference(e, i)
                        }
                        _is(e) {
                            return this.carouselService.is(e)
                        }
                        _enter(e) {
                            this.carouselService.enter(e)
                        }
                        _sendChanges() {
                            this.carouselService.sendChanges()
                        }
                        onTransitionEnd() {
                            this.carouselService.onTransitionEnd()
                        }
                        _enterDragging() {
                            this.carouselService.enterDragging()
                        }
                        clear(e) {
                            this.animateService.clear(e)
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(si), $e(ii), $e(Ts), $e(ol), $e(SC))
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["owl-stage"]
                            ],
                            hostBindings: function(i, s) {
                                1 & i && bt("mousedown", function(l) {
                                    return s.onMouseDown(l)
                                })("touchstart", function(l) {
                                    return s.onTouchStart(l)
                                })("touchcancel", function(l) {
                                    return s.onTouchCancel(l)
                                })("dragstart", function() {
                                    return s.onDragStart()
                                })("selectstart", function() {
                                    return s.onSelectStart()
                                })
                            },
                            inputs: {
                                owlDraggable: "owlDraggable",
                                stageData: "stageData",
                                slidesData: "slidesData"
                            },
                            decls: 3,
                            vars: 8,
                            consts: [
                                [1, "owl-stage", 3, "ngStyle", "transitionend"],
                                [4, "ngFor", "ngForOf"],
                                [1, "owl-item", 3, "ngClass", "ngStyle", "animationend"],
                                [4, "ngIf"],
                                [3, "ngTemplateOutlet", "ngTemplateOutletContext"]
                            ],
                            template: function(i, s) {
                                1 & i && (N(0, "div")(1, "div", 0), bt("transitionend", function() {
                                    return s.onTransitionEnd()
                                }), rt(2, lJ, 3, 9, "ng-container", 1), H()()), 2 & i && (xe(1), Fe("ngStyle", Ex(2, cJ, s.stageData.width + "px", s.stageData.transform, s.stageData.transition, s.stageData.paddingL ? s.stageData.paddingL + "px" : "", s.stageData.paddingR ? s.stageData.paddingR + "px" : "")), xe(1), Fe("ngForOf", s.slidesData))
                            },
                            dependencies: [Qo, $s, Ji, y_, KP],
                            encapsulation: 2,
                            data: {
                                animation: [Im("autoHeight", [CO("nulled", Us({
                                    height: 0
                                })), CO("full", Us({
                                    height: "*"
                                })), hd("full => nulled", [el("700ms 350ms")]), hd("nulled => full", [el(350)])])]
                            }
                        })
                    }
                    return t
                })(),
                TC = (() => {
                    class t {
                        el;
                        resizeService;
                        carouselService;
                        navigationService;
                        autoplayService;
                        lazyLoadService;
                        animateService;
                        autoHeightService;
                        hashService;
                        logger;
                        changeDetectorRef;
                        slides;
                        translated = new Pt;
                        dragging = new Pt;
                        change = new Pt;
                        changed = new Pt;
                        initialized = new Pt;
                        carouselWindowWidth;
                        resizeSubscription;
                        _allObservSubscription;
                        _slidesChangesSubscription;
                        owlDOMData;
                        stageData;
                        slidesData = [];
                        navData;
                        dotsData;
                        slidesOutputData;
                        carouselLoaded = !1;
                        options;
                        prevOptions;
                        _viewCurSettings$;
                        _translatedCarousel$;
                        _draggingCarousel$;
                        _changeCarousel$;
                        _changedCarousel$;
                        _initializedCarousel$;
                        _carouselMerge$;
                        docRef;
                        constructor(e, i, s, r, l, u, h, v, _, C, M, L) {
                            this.el = e, this.resizeService = i, this.carouselService = s, this.navigationService = r, this.autoplayService = l, this.lazyLoadService = u, this.animateService = h, this.autoHeightService = v, this.hashService = _, this.logger = C, this.changeDetectorRef = M, this.docRef = L
                        }
                        onVisibilityChange(e) {
                            if (this.carouselService.settings.autoplay) switch (this.docRef.visibilityState) {
                                case "visible":
                                    !this.autoplayService.isAutoplayStopped && this.autoplayService.play();
                                    break;
                                case "hidden":
                                    this.autoplayService.pause()
                            }
                        }
                        ngOnInit() {
                            this.spyDataStreams(), this.carouselWindowWidth = this.el.nativeElement.querySelector(".owl-carousel").clientWidth
                        }
                        ngOnChanges() {
                            this.prevOptions !== this.options && (this.prevOptions && this.slides ? .toArray().length ? (this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options), this.carouselService.initialize(this.slides.toArray())) : this.prevOptions && !this.slides ? .toArray().length ? (this.carouselLoaded = !1, this.logger.log("There are no slides to show. So the carousel won't be re-rendered")) : this.carouselLoaded = !1, this.prevOptions = this.options)
                        }
                        ngAfterContentInit() {
                            this.slides.toArray().length ? (this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options), this.carouselService.initialize(this.slides.toArray()), this._winResizeWatcher()) : this.logger.log("There are no slides to show. So the carousel won't be rendered"), this._slidesChangesSubscription = this.slides.changes.pipe(Wn(e => {
                                this.carouselService.setup(this.carouselWindowWidth, e.toArray(), this.options), this.carouselService.initialize(e.toArray()), e.toArray().length || (this.carouselLoaded = !1), e.toArray().length && !this.resizeSubscription && this._winResizeWatcher()
                            })).subscribe(() => {})
                        }
                        ngOnDestroy() {
                            this.resizeSubscription && this.resizeSubscription.unsubscribe(), this._slidesChangesSubscription && this._slidesChangesSubscription.unsubscribe(), this._allObservSubscription && this._allObservSubscription.unsubscribe()
                        }
                        spyDataStreams() {
                            this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe(Wn(e => {
                                this.owlDOMData = e.owlDOMData, this.stageData = e.stageData, this.slidesData = e.slidesData, this.carouselLoaded || (this.carouselLoaded = !0), this.navData = e.navData, this.dotsData = e.dotsData, this.changeDetectorRef.markForCheck()
                            })), this._initializedCarousel$ = this.carouselService.getInitializedState().pipe(Wn(() => {
                                this.gatherTranslatedData(), this.initialized.emit(this.slidesOutputData)
                            })), this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe(Wn(() => {
                                this.gatherTranslatedData(), this.translated.emit(this.slidesOutputData)
                            })), this._changeCarousel$ = this.carouselService.getChangeState().pipe(Wn(() => {
                                this.gatherTranslatedData(), this.change.emit(this.slidesOutputData)
                            })), this._changedCarousel$ = this.carouselService.getChangeState().pipe(X(e => ne(b(e).pipe(hr(() => "position" === e.property.name), X(() => $(this.slidesData)), cF(e.property.value), Or(this.carouselService.settings.items), kt(s => {
                                const r = this.carouselService.clonedIdPrefix,
                                    l = s.id.indexOf(r) >= 0 ? s.id.slice(r.length) : s.id;
                                return { ...s,
                                    id: l,
                                    isActive: !0
                                }
                            }), function FZ() {
                                return Dt((t, n) => {
                                    (function IZ(t, n) {
                                        return Dt(uF(t, n, arguments.length >= 2, !1, !0))
                                    })(LZ, [])(t).subscribe(n)
                                })
                            }(), kt(s => ({
                                slides: s,
                                startPosition: this.carouselService.relative(e.property.value)
                            }))))), Wn(e => {
                                this.gatherTranslatedData(), this.changed.emit(e.slides.length ? e : this.slidesOutputData)
                            })), this._draggingCarousel$ = this.carouselService.getDragState().pipe(Wn(() => {
                                this.gatherTranslatedData(), this.dragging.emit({
                                    dragging: !0,
                                    data: this.slidesOutputData
                                })
                            }), X(() => this.carouselService.getDraggedState().pipe(kt(() => !!this.carouselService.is("animating")))), X(e => e ? this.carouselService.getTranslatedState().pipe(Eo()) : b("not animating")), Wn(() => {
                                this.dragging.emit({
                                    dragging: !1,
                                    data: this.slidesOutputData
                                })
                            })), this._carouselMerge$ = ne(this._viewCurSettings$, this._translatedCarousel$, this._draggingCarousel$, this._changeCarousel$, this._changedCarousel$, this._initializedCarousel$), this._allObservSubscription = this._carouselMerge$.subscribe(() => {})
                        }
                        _winResizeWatcher() {
                            Object.keys(this.carouselService._options.responsive).length && (this.resizeSubscription = this.resizeService.onResize$.pipe(hr(() => this.carouselWindowWidth !== this.el.nativeElement.querySelector(".owl-carousel").clientWidth), function VZ(t, n = Tv) {
                                const e = fF(t, n);
                                return hF(() => e)
                            }(this.carouselService.settings.responsiveRefreshRate)).subscribe(() => {
                                this.carouselService.onResize(this.el.nativeElement.querySelector(".owl-carousel").clientWidth), this.carouselWindowWidth = this.el.nativeElement.querySelector(".owl-carousel").clientWidth
                            }))
                        }
                        onTransitionEnd() {
                            this.carouselService.onTransitionEnd()
                        }
                        next() {
                            this.carouselLoaded && this.navigationService.next(this.carouselService.settings.navSpeed)
                        }
                        prev() {
                            this.carouselLoaded && this.navigationService.prev(this.carouselService.settings.navSpeed)
                        }
                        moveByDot(e) {
                            this.carouselLoaded && this.navigationService.moveByDot(e)
                        }
                        to(e) {
                            this.carouselLoaded && this.navigationService.toSlideById(e)
                        }
                        gatherTranslatedData() {
                            let e;
                            const i = this.carouselService.clonedIdPrefix,
                                s = this.slidesData.filter(r => !0 === r.isActive).map(r => ({
                                    id: r.id.indexOf(i) >= 0 ? r.id.slice(i.length) : r.id,
                                    width: r.width,
                                    marginL: r.marginL,
                                    marginR: r.marginR,
                                    center: r.isCentered
                                }));
                            e = this.carouselService.relative(this.carouselService.current()), this.slidesOutputData = {
                                startPosition: e,
                                slides: s
                            }
                        }
                        startPausing() {
                            this.autoplayService.startPausing()
                        }
                        startPlayML() {
                            this.autoplayService.startPlayingMouseLeave()
                        }
                        startPlayTE() {
                            this.autoplayService.startPlayingTouchEnd()
                        }
                        stopAutoplay() {
                            this.autoplayService.isAutoplayStopped = !0, this.autoplayService.stop()
                        }
                        startAutoplay() {
                            this.autoplayService.isAutoplayStopped = !1, this.autoplayService.play()
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(ii), $e(DN), $e(ol), $e(_N), $e(wN), $e(CN), $e(SC), $e(SN), $e(TN), $e(bC), $e(Xr), $e(wC))
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["owl-carousel-o"]
                            ],
                            contentQueries: function(i, s, r) {
                                if (1 & i && cm(r, Gv, 4), 2 & i) {
                                    let l;
                                    kr(l = Er()) && (s.slides = l)
                                }
                            },
                            hostBindings: function(i, s) {
                                1 & i && bt("visibilitychange", function(l) {
                                    return s.onVisibilityChange(l)
                                }, 0, N2)
                            },
                            inputs: {
                                options: "options"
                            },
                            outputs: {
                                translated: "translated",
                                dragging: "dragging",
                                change: "change",
                                changed: "changed",
                                initialized: "initialized"
                            },
                            features: [Xi([_N, wN, ol, CN, SC, SN, TN]), ni],
                            decls: 4,
                            vars: 9,
                            consts: [
                                [1, "owl-carousel", "owl-theme", 3, "ngClass", "mouseover", "mouseleave", "touchstart", "touchend"],
                                ["owlCarousel", ""],
                                ["class", "owl-stage-outer", 4, "ngIf"],
                                [4, "ngIf"],
                                [1, "owl-stage-outer"],
                                [3, "owlDraggable", "stageData", "slidesData"],
                                [1, "owl-nav", 3, "ngClass"],
                                [1, "owl-prev", 3, "ngClass", "innerHTML", "click"],
                                [1, "owl-next", 3, "ngClass", "innerHTML", "click"],
                                [1, "owl-dots", 3, "ngClass"],
                                ["class", "owl-dot", 3, "ngClass", "click", 4, "ngFor", "ngForOf"],
                                [1, "owl-dot", 3, "ngClass", "click"],
                                [3, "innerHTML"]
                            ],
                            template: function(i, s) {
                                1 & i && (N(0, "div", 0, 1), bt("mouseover", function() {
                                    return s.startPausing()
                                })("mouseleave", function() {
                                    return s.startPlayML()
                                })("touchstart", function() {
                                    return s.startPausing()
                                })("touchend", function() {
                                    return s.startPlayTE()
                                }), rt(2, dJ, 2, 6, "div", 2), rt(3, pJ, 6, 15, "ng-container", 3), H()), 2 & i && (Fe("ngClass", Ex(3, gJ, null == s.owlDOMData ? null : s.owlDOMData.rtl, null == s.owlDOMData ? null : s.owlDOMData.isLoaded, null == s.owlDOMData ? null : s.owlDOMData.isResponsive, null == s.owlDOMData ? null : s.owlDOMData.isMouseDragable, null == s.owlDOMData ? null : s.owlDOMData.isGrab)), xe(2), Fe("ngIf", s.carouselLoaded), xe(1), Fe("ngIf", s.slides.toArray().length))
                            },
                            dependencies: [Qo, $s, Ji, TJ],
                            styles: [".owl-theme[_ngcontent-%COMP%]{display:block}"],
                            changeDetection: 0
                        })
                    }
                    return t
                })(),
                DJ = (() => {
                    class t {
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275mod = jn({
                            type: t
                        });
                        static\ u0275inj = zn({
                            providers: [xJ, DN, CJ, bC],
                            imports: [Oa]
                        })
                    }
                    return t
                })();
            class DC {
                attach(n) {
                    return this._attachedHost = n, n.attach(this)
                }
                detach() {
                    let n = this._attachedHost;
                    null != n && (this._attachedHost = null, n.detach())
                }
                get isAttached() {
                    return null != this._attachedHost
                }
                setAttachedHost(n) {
                    this._attachedHost = n
                }
            }
            class AN extends DC {
                constructor(n, e, i, s, r) {
                    super(), this.component = n, this.viewContainerRef = e, this.injector = i, this.componentFactoryResolver = s, this.projectableNodes = r
                }
            }
            class AJ extends DC {
                constructor(n, e, i, s) {
                    super(), this.templateRef = n, this.viewContainerRef = e, this.context = i, this.injector = s
                }
                get origin() {
                    return this.templateRef.elementRef
                }
                attach(n, e = this.context) {
                    return this.context = e, super.attach(n)
                }
                detach() {
                    return this.context = void 0, super.detach()
                }
            }
            class kJ extends DC {
                constructor(n) {
                    super(), this.element = n instanceof ii ? n.nativeElement : n
                }
            }
            class EJ {
                constructor() {
                    this._isDisposed = !1, this.attachDomPortal = null
                }
                hasAttached() {
                    return !!this._attachedPortal
                }
                attach(n) {
                    return n instanceof AN ? (this._attachedPortal = n, this.attachComponentPortal(n)) : n instanceof AJ ? (this._attachedPortal = n, this.attachTemplatePortal(n)) : this.attachDomPortal && n instanceof kJ ? (this._attachedPortal = n, this.attachDomPortal(n)) : void 0
                }
                detach() {
                    this._attachedPortal && (this._attachedPortal.setAttachedHost(null), this._attachedPortal = null), this._invokeDisposeFn()
                }
                dispose() {
                    this.hasAttached() && this.detach(), this._invokeDisposeFn(), this._isDisposed = !0
                }
                setDisposeFn(n) {
                    this._disposeFn = n
                }
                _invokeDisposeFn() {
                    this._disposeFn && (this._disposeFn(), this._disposeFn = null)
                }
            }
            class MJ extends EJ {
                constructor(n, e, i, s, r) {
                    super(), this.outletElement = n, this._componentFactoryResolver = e, this._appRef = i, this._defaultInjector = s, this.attachDomPortal = l => {
                        const u = l.element,
                            h = this._document.createComment("dom-portal");
                        u.parentNode.insertBefore(h, u), this.outletElement.appendChild(u), this._attachedPortal = l, super.setDisposeFn(() => {
                            h.parentNode && h.parentNode.replaceChild(u, h)
                        })
                    }, this._document = r
                }
                attachComponentPortal(n) {
                    const i = (n.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(n.component);
                    let s;
                    return n.viewContainerRef ? (s = n.viewContainerRef.createComponent(i, n.viewContainerRef.length, n.injector || n.viewContainerRef.injector, n.projectableNodes || void 0), this.setDisposeFn(() => s.destroy())) : (s = i.create(n.injector || this._defaultInjector || js.NULL), this._appRef.attachView(s.hostView), this.setDisposeFn(() => {
                        this._appRef.viewCount > 0 && this._appRef.detachView(s.hostView), s.destroy()
                    })), this.outletElement.appendChild(this._getComponentRootNode(s)), this._attachedPortal = n, s
                }
                attachTemplatePortal(n) {
                    let e = n.viewContainerRef,
                        i = e.createEmbeddedView(n.templateRef, n.context, {
                            injector: n.injector
                        });
                    return i.rootNodes.forEach(s => this.outletElement.appendChild(s)), i.detectChanges(), this.setDisposeFn(() => {
                        let s = e.indexOf(i); - 1 !== s && e.remove(s)
                    }), this._attachedPortal = n, i
                }
                dispose() {
                    super.dispose(), this.outletElement.remove()
                }
                _getComponentRootNode(n) {
                    return n.hostView.rootNodes[0]
                }
            }

            function AC(t, n = Tv) {
                return Dt((e, i) => {
                    let s = null,
                        r = null,
                        l = null;
                    const u = () => {
                        if (s) {
                            s.unsubscribe(), s = null;
                            const v = r;
                            r = null, i.next(v)
                        }
                    };

                    function h() {
                        const v = l + t,
                            _ = n.now();
                        if (_ < v) return s = this.schedule(void 0, v - _), void i.add(s);
                        u()
                    }
                    e.subscribe(Ct(i, v => {
                        r = v, l = n.now(), s || (s = n.schedule(h, t), i.add(s))
                    }, () => {
                        u(), i.complete()
                    }, void 0, () => {
                        r = s = null
                    }))
                })
            }

            function PJ() {}

            function kC(t) {
                return null == t ? PJ : function() {
                    return this.querySelector(t)
                }
            }

            function LJ() {
                return []
            }

            function kN(t) {
                return null == t ? LJ : function() {
                    return this.querySelectorAll(t)
                }
            }

            function EN(t) {
                return function() {
                    return this.matches(t)
                }
            }

            function MN(t) {
                return function(n) {
                    return n.matches(t)
                }
            }
            var RJ = Array.prototype.find;

            function VJ() {
                return this.firstElementChild
            }
            var zJ = Array.prototype.filter;

            function jJ() {
                return Array.from(this.children)
            }

            function PN(t) {
                return new Array(t.length)
            }

            function Xv(t, n) {
                this.ownerDocument = t.ownerDocument, this.namespaceURI = t.namespaceURI, this._next = null, this._parent = t, this.__data__ = n
            }

            function YJ(t, n, e, i, s, r) {
                for (var u, l = 0, h = n.length, v = r.length; l < v; ++l)(u = n[l]) ? (u.__data__ = r[l], i[l] = u) : e[l] = new Xv(t, r[l]);
                for (; l < h; ++l)(u = n[l]) && (s[l] = u)
            }

            function qJ(t, n, e, i, s, r, l) {
                var u, h, L, v = new Map,
                    _ = n.length,
                    C = r.length,
                    M = new Array(_);
                for (u = 0; u < _; ++u)(h = n[u]) && (M[u] = L = l.call(h, h.__data__, u, n) + "", v.has(L) ? s[u] = h : v.set(L, h));
                for (u = 0; u < C; ++u) L = l.call(t, r[u], u, r) + "", (h = v.get(L)) ? (i[u] = h, h.__data__ = r[u], v.delete(L)) : e[u] = new Xv(t, r[u]);
                for (u = 0; u < _; ++u)(h = n[u]) && v.get(M[u]) === h && (s[u] = h)
            }

            function ZJ(t) {
                return t.__data__
            }

            function QJ(t) {
                return "object" == typeof t && "length" in t ? t : Array.from(t)
            }

            function see(t, n) {
                return t < n ? -1 : t > n ? 1 : t >= n ? 0 : NaN
            }
            Xv.prototype = {
                constructor: Xv,
                appendChild: function(t) {
                    return this._parent.insertBefore(t, this._next)
                },
                insertBefore: function(t, n) {
                    return this._parent.insertBefore(t, n)
                },
                querySelector: function(t) {
                    return this._parent.querySelector(t)
                },
                querySelectorAll: function(t) {
                    return this._parent.querySelectorAll(t)
                }
            };
            var EC = "http://www.w3.org/1999/xhtml";
            const ON = {
                svg: "http://www.w3.org/2000/svg",
                xhtml: EC,
                xlink: "http://www.w3.org/1999/xlink",
                xml: "http://www.w3.org/XML/1998/namespace",
                xmlns: "http://www.w3.org/2000/xmlns/"
            };

            function Yv(t) {
                var n = t += "",
                    e = n.indexOf(":");
                return e >= 0 && "xmlns" !== (n = t.slice(0, e)) && (t = t.slice(e + 1)), ON.hasOwnProperty(n) ? {
                    space: ON[n],
                    local: t
                } : t
            }

            function dee(t) {
                return function() {
                    this.removeAttribute(t)
                }
            }

            function hee(t) {
                return function() {
                    this.removeAttributeNS(t.space, t.local)
                }
            }

            function fee(t, n) {
                return function() {
                    this.setAttribute(t, n)
                }
            }

            function pee(t, n) {
                return function() {
                    this.setAttributeNS(t.space, t.local, n)
                }
            }

            function gee(t, n) {
                return function() {
                    var e = n.apply(this, arguments);
                    null == e ? this.removeAttribute(t) : this.setAttribute(t, e)
                }
            }

            function mee(t, n) {
                return function() {
                    var e = n.apply(this, arguments);
                    null == e ? this.removeAttributeNS(t.space, t.local) : this.setAttributeNS(t.space, t.local, e)
                }
            }

            function IN(t) {
                return t.ownerDocument && t.ownerDocument.defaultView || t.document && t || t.defaultView
            }

            function yee(t) {
                return function() {
                    this.style.removeProperty(t)
                }
            }

            function bee(t, n, e) {
                return function() {
                    this.style.setProperty(t, n, e)
                }
            }

            function xee(t, n, e) {
                return function() {
                    var i = n.apply(this, arguments);
                    null == i ? this.style.removeProperty(t) : this.style.setProperty(t, i, e)
                }
            }

            function Ed(t, n) {
                return t.style.getPropertyValue(n) || IN(t).getComputedStyle(t, null).getPropertyValue(n)
            }

            function wee(t) {
                return function() {
                    delete this[t]
                }
            }

            function Cee(t, n) {
                return function() {
                    this[t] = n
                }
            }

            function See(t, n) {
                return function() {
                    var e = n.apply(this, arguments);
                    null == e ? delete this[t] : this[t] = e
                }
            }

            function LN(t) {
                return t.trim().split(/^|\s+/)
            }

            function MC(t) {
                return t.classList || new FN(t)
            }

            function FN(t) {
                this._node = t, this._names = LN(t.getAttribute("class") || "")
            }

            function NN(t, n) {
                for (var e = MC(t), i = -1, s = n.length; ++i < s;) e.add(n[i])
            }

            function RN(t, n) {
                for (var e = MC(t), i = -1, s = n.length; ++i < s;) e.remove(n[i])
            }

            function Dee(t) {
                return function() {
                    NN(this, t)
                }
            }

            function Aee(t) {
                return function() {
                    RN(this, t)
                }
            }

            function kee(t, n) {
                return function() {
                    (n.apply(this, arguments) ? NN : RN)(this, t)
                }
            }

            function Mee() {
                this.textContent = ""
            }

            function Pee(t) {
                return function() {
                    this.textContent = t
                }
            }

            function Oee(t) {
                return function() {
                    var n = t.apply(this, arguments);
                    this.textContent = n ? ? ""
                }
            }

            function Lee() {
                this.innerHTML = ""
            }

            function Fee(t) {
                return function() {
                    this.innerHTML = t
                }
            }

            function Nee(t) {
                return function() {
                    var n = t.apply(this, arguments);
                    this.innerHTML = n ? ? ""
                }
            }

            function Bee() {
                this.nextSibling && this.parentNode.appendChild(this)
            }

            function Hee() {
                this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild)
            }

            function jee(t) {
                return function() {
                    var n = this.ownerDocument,
                        e = this.namespaceURI;
                    return e === EC && n.documentElement.namespaceURI === EC ? n.createElement(t) : n.createElementNS(e, t)
                }
            }

            function $ee(t) {
                return function() {
                    return this.ownerDocument.createElementNS(t.space, t.local)
                }
            }

            function BN(t) {
                var n = Yv(t);
                return (n.local ? $ee : jee)(n)
            }

            function Wee() {
                return null
            }

            function Xee() {
                var t = this.parentNode;
                t && t.removeChild(this)
            }

            function qee() {
                var t = this.cloneNode(!1),
                    n = this.parentNode;
                return n ? n.insertBefore(t, this.nextSibling) : t
            }

            function Zee() {
                var t = this.cloneNode(!0),
                    n = this.parentNode;
                return n ? n.insertBefore(t, this.nextSibling) : t
            }

            function tte(t) {
                return function() {
                    var n = this.__on;
                    if (n) {
                        for (var r, e = 0, i = -1, s = n.length; e < s; ++e) r = n[e], t.type && r.type !== t.type || r.name !== t.name ? n[++i] = r : this.removeEventListener(r.type, r.listener, r.options);
                        ++i ? n.length = i : delete this.__on
                    }
                }
            }

            function nte(t, n, e) {
                return function() {
                    var s, i = this.__on,
                        r = function Jee(t) {
                            return function(n) {
                                t.call(this, n, this.__data__)
                            }
                        }(n);
                    if (i)
                        for (var l = 0, u = i.length; l < u; ++l)
                            if ((s = i[l]).type === t.type && s.name === t.name) return this.removeEventListener(s.type, s.listener, s.options), this.addEventListener(s.type, s.listener = r, s.options = e), void(s.value = n);
                    this.addEventListener(t.type, r, e), s = {
                        type: t.type,
                        name: t.name,
                        value: n,
                        listener: r,
                        options: e
                    }, i ? i.push(s) : this.__on = [s]
                }
            }

            function VN(t, n, e) {
                var i = IN(t),
                    s = i.CustomEvent;
                "function" == typeof s ? s = new s(n, e) : (s = i.document.createEvent("Event"), e ? (s.initEvent(n, e.bubbles, e.cancelable), s.detail = e.detail) : s.initEvent(n, !1, !1)), t.dispatchEvent(s)
            }

            function ste(t, n) {
                return function() {
                    return VN(this, t, n)
                }
            }

            function rte(t, n) {
                return function() {
                    return VN(this, t, n.apply(this, arguments))
                }
            }
            FN.prototype = {
                add: function(t) {
                    this._names.indexOf(t) < 0 && (this._names.push(t), this._node.setAttribute("class", this._names.join(" ")))
                },
                remove: function(t) {
                    var n = this._names.indexOf(t);
                    n >= 0 && (this._names.splice(n, 1), this._node.setAttribute("class", this._names.join(" ")))
                },
                contains: function(t) {
                    return this._names.indexOf(t) >= 0
                }
            };
            var HN = [null];

            function pa(t, n) {
                this._groups = t, this._parents = n
            }

            function zN() {
                return new pa([
                    [document.documentElement]
                ], HN)
            }
            pa.prototype = zN.prototype = {
                constructor: pa,
                select: function OJ(t) {
                    "function" != typeof t && (t = kC(t));
                    for (var n = this._groups, e = n.length, i = new Array(e), s = 0; s < e; ++s)
                        for (var h, v, r = n[s], l = r.length, u = i[s] = new Array(l), _ = 0; _ < l; ++_)(h = r[_]) && (v = t.call(h, h.__data__, _, r)) && ("__data__" in h && (v.__data__ = h.__data__), u[_] = v);
                    return new pa(i, this._parents)
                },
                selectAll: function NJ(t) {
                    t = "function" == typeof t ? function FJ(t) {
                        return function() {
                            return function IJ(t) {
                                return null == t ? [] : Array.isArray(t) ? t : Array.from(t)
                            }(t.apply(this, arguments))
                        }
                    }(t) : kN(t);
                    for (var n = this._groups, e = n.length, i = [], s = [], r = 0; r < e; ++r)
                        for (var h, l = n[r], u = l.length, v = 0; v < u; ++v)(h = l[v]) && (i.push(t.call(h, h.__data__, v, l)), s.push(h));
                    return new pa(i, s)
                },
                selectChild: function HJ(t) {
                    return this.select(null == t ? VJ : function BJ(t) {
                        return function() {
                            return RJ.call(this.children, t)
                        }
                    }("function" == typeof t ? t : MN(t)))
                },
                selectChildren: function UJ(t) {
                    return this.selectAll(null == t ? jJ : function $J(t) {
                        return function() {
                            return zJ.call(this.children, t)
                        }
                    }("function" == typeof t ? t : MN(t)))
                },
                filter: function WJ(t) {
                    "function" != typeof t && (t = EN(t));
                    for (var n = this._groups, e = n.length, i = new Array(e), s = 0; s < e; ++s)
                        for (var h, r = n[s], l = r.length, u = i[s] = [], v = 0; v < l; ++v)(h = r[v]) && t.call(h, h.__data__, v, r) && u.push(h);
                    return new pa(i, this._parents)
                },
                data: function KJ(t, n) {
                    if (!arguments.length) return Array.from(this, ZJ);
                    var e = n ? qJ : YJ,
                        i = this._parents,
                        s = this._groups;
                    "function" != typeof t && (t = function XJ(t) {
                        return function() {
                            return t
                        }
                    }(t));
                    for (var r = s.length, l = new Array(r), u = new Array(r), h = new Array(r), v = 0; v < r; ++v) {
                        var _ = i[v],
                            C = s[v],
                            M = C.length,
                            L = QJ(t.call(_, _ && _.__data__, v, i)),
                            j = L.length,
                            Z = u[v] = new Array(j),
                            Q = l[v] = new Array(j);
                        e(_, C, Z, Q, h[v] = new Array(M), L, n);
                        for (var it, lt, De = 0, Ue = 0; De < j; ++De)
                            if (it = Z[De]) {
                                for (De >= Ue && (Ue = De + 1); !(lt = Q[Ue]) && ++Ue < j;);
                                it._next = lt || null
                            }
                    }
                    return (l = new pa(l, i))._enter = u, l._exit = h, l
                },
                enter: function GJ() {
                    return new pa(this._enter || this._groups.map(PN), this._parents)
                },
                exit: function JJ() {
                    return new pa(this._exit || this._groups.map(PN), this._parents)
                },
                join: function eee(t, n, e) {
                    var i = this.enter(),
                        s = this,
                        r = this.exit();
                    return "function" == typeof t ? (i = t(i)) && (i = i.selection()) : i = i.append(t + ""), null != n && (s = n(s)) && (s = s.selection()), null == e ? r.remove() : e(r), i && s ? i.merge(s).order() : s
                },
                merge: function tee(t) {
                    for (var n = t.selection ? t.selection() : t, e = this._groups, i = n._groups, s = e.length, l = Math.min(s, i.length), u = new Array(s), h = 0; h < l; ++h)
                        for (var L, v = e[h], _ = i[h], C = v.length, M = u[h] = new Array(C), j = 0; j < C; ++j)(L = v[j] || _[j]) && (M[j] = L);
                    for (; h < s; ++h) u[h] = e[h];
                    return new pa(u, this._parents)
                },
                selection: function lte() {
                    return this
                },
                order: function nee() {
                    for (var t = this._groups, n = -1, e = t.length; ++n < e;)
                        for (var l, i = t[n], s = i.length - 1, r = i[s]; --s >= 0;)(l = i[s]) && (r && 4 ^ l.compareDocumentPosition(r) && r.parentNode.insertBefore(l, r), r = l);
                    return this
                },
                sort: function iee(t) {
                    function n(C, M) {
                        return C && M ? t(C.__data__, M.__data__) : !C - !M
                    }
                    t || (t = see);
                    for (var e = this._groups, i = e.length, s = new Array(i), r = 0; r < i; ++r) {
                        for (var v, l = e[r], u = l.length, h = s[r] = new Array(u), _ = 0; _ < u; ++_)(v = l[_]) && (h[_] = v);
                        h.sort(n)
                    }
                    return new pa(s, this._parents).order()
                },
                call: function ree() {
                    var t = arguments[0];
                    return arguments[0] = this, t.apply(null, arguments), this
                },
                nodes: function aee() {
                    return Array.from(this)
                },
                node: function oee() {
                    for (var t = this._groups, n = 0, e = t.length; n < e; ++n)
                        for (var i = t[n], s = 0, r = i.length; s < r; ++s) {
                            var l = i[s];
                            if (l) return l
                        }
                    return null
                },
                size: function lee() {
                    let t = 0;
                    for (const n of this) ++t;
                    return t
                },
                empty: function cee() {
                    return !this.node()
                },
                each: function uee(t) {
                    for (var n = this._groups, e = 0, i = n.length; e < i; ++e)
                        for (var u, s = n[e], r = 0, l = s.length; r < l; ++r)(u = s[r]) && t.call(u, u.__data__, r, s);
                    return this
                },
                attr: function vee(t, n) {
                    var e = Yv(t);
                    if (arguments.length < 2) {
                        var i = this.node();
                        return e.local ? i.getAttributeNS(e.space, e.local) : i.getAttribute(e)
                    }
                    return this.each((null == n ? e.local ? hee : dee : "function" == typeof n ? e.local ? mee : gee : e.local ? pee : fee)(e, n))
                },
                style: function _ee(t, n, e) {
                    return arguments.length > 1 ? this.each((null == n ? yee : "function" == typeof n ? xee : bee)(t, n, e ? ? "")) : Ed(this.node(), t)
                },
                property: function Tee(t, n) {
                    return arguments.length > 1 ? this.each((null == n ? wee : "function" == typeof n ? See : Cee)(t, n)) : this.node()[t]
                },
                classed: function Eee(t, n) {
                    var e = LN(t + "");
                    if (arguments.length < 2) {
                        for (var i = MC(this.node()), s = -1, r = e.length; ++s < r;)
                            if (!i.contains(e[s])) return !1;
                        return !0
                    }
                    return this.each(("function" == typeof n ? kee : n ? Dee : Aee)(e, n))
                },
                text: function Iee(t) {
                    return arguments.length ? this.each(null == t ? Mee : ("function" == typeof t ? Oee : Pee)(t)) : this.node().textContent
                },
                html: function Ree(t) {
                    return arguments.length ? this.each(null == t ? Lee : ("function" == typeof t ? Nee : Fee)(t)) : this.node().innerHTML
                },
                raise: function Vee() {
                    return this.each(Bee)
                },
                lower: function zee() {
                    return this.each(Hee)
                },
                append: function Uee(t) {
                    var n = "function" == typeof t ? t : BN(t);
                    return this.select(function() {
                        return this.appendChild(n.apply(this, arguments))
                    })
                },
                insert: function Gee(t, n) {
                    var e = "function" == typeof t ? t : BN(t),
                        i = null == n ? Wee : "function" == typeof n ? n : kC(n);
                    return this.select(function() {
                        return this.insertBefore(e.apply(this, arguments), i.apply(this, arguments) || null)
                    })
                },
                remove: function Yee() {
                    return this.each(Xee)
                },
                clone: function Kee(t) {
                    return this.select(t ? Zee : qee)
                },
                datum: function Qee(t) {
                    return arguments.length ? this.property("__data__", t) : this.node().__data__
                },
                on: function ite(t, n, e) {
                    var s, l, i = function ete(t) {
                            return t.trim().split(/^|\s+/).map(function(n) {
                                var e = "",
                                    i = n.indexOf(".");
                                return i >= 0 && (e = n.slice(i + 1), n = n.slice(0, i)), {
                                    type: n,
                                    name: e
                                }
                            })
                        }(t + ""),
                        r = i.length;
                    if (!(arguments.length < 2)) {
                        for (u = n ? nte : tte, s = 0; s < r; ++s) this.each(u(i[s], n, e));
                        return this
                    }
                    var u = this.node().__on;
                    if (u)
                        for (var _, h = 0, v = u.length; h < v; ++h)
                            for (s = 0, _ = u[h]; s < r; ++s)
                                if ((l = i[s]).type === _.type && l.name === _.name) return _.value
                },
                dispatch: function ate(t, n) {
                    return this.each(("function" == typeof n ? rte : ste)(t, n))
                },
                [Symbol.iterator]: function* ote() {
                    for (var t = this._groups, n = 0, e = t.length; n < e; ++n)
                        for (var l, i = t[n], s = 0, r = i.length; s < r; ++s)(l = i[s]) && (yield l)
                }
            };
            const Xf = zN;
            var cte = {
                value: () => {}
            };

            function jN() {
                for (var i, t = 0, n = arguments.length, e = {}; t < n; ++t) {
                    if (!(i = arguments[t] + "") || i in e || /[\s.]/.test(i)) throw new Error("illegal type: " + i);
                    e[i] = []
                }
                return new qv(e)
            }

            function qv(t) {
                this._ = t
            }

            function dte(t, n) {
                for (var s, e = 0, i = t.length; e < i; ++e)
                    if ((s = t[e]).name === n) return s.value
            }

            function $N(t, n, e) {
                for (var i = 0, s = t.length; i < s; ++i)
                    if (t[i].name === n) {
                        t[i] = cte, t = t.slice(0, i).concat(t.slice(i + 1));
                        break
                    }
                return null != e && t.push({
                    name: n,
                    value: e
                }), t
            }
            qv.prototype = jN.prototype = {
                constructor: qv,
                on: function(t, n) {
                    var s, e = this._,
                        i = function ute(t, n) {
                            return t.trim().split(/^|\s+/).map(function(e) {
                                var i = "",
                                    s = e.indexOf(".");
                                if (s >= 0 && (i = e.slice(s + 1), e = e.slice(0, s)), e && !n.hasOwnProperty(e)) throw new Error("unknown type: " + e);
                                return {
                                    type: e,
                                    name: i
                                }
                            })
                        }(t + "", e),
                        r = -1,
                        l = i.length;
                    if (!(arguments.length < 2)) {
                        if (null != n && "function" != typeof n) throw new Error("invalid callback: " + n);
                        for (; ++r < l;)
                            if (s = (t = i[r]).type) e[s] = $N(e[s], t.name, n);
                            else if (null == n)
                            for (s in e) e[s] = $N(e[s], t.name, null);
                        return this
                    }
                    for (; ++r < l;)
                        if ((s = (t = i[r]).type) && (s = dte(e[s], t.name))) return s
                },
                copy: function() {
                    var t = {},
                        n = this._;
                    for (var e in n) t[e] = n[e].slice();
                    return new qv(t)
                },
                call: function(t, n) {
                    if ((s = arguments.length - 2) > 0)
                        for (var s, r, e = new Array(s), i = 0; i < s; ++i) e[i] = arguments[i + 2];
                    if (!this._.hasOwnProperty(t)) throw new Error("unknown type: " + t);
                    for (i = 0, s = (r = this._[t]).length; i < s; ++i) r[i].value.apply(n, e)
                },
                apply: function(t, n, e) {
                    if (!this._.hasOwnProperty(t)) throw new Error("unknown type: " + t);
                    for (var i = this._[t], s = 0, r = i.length; s < r; ++s) i[s].value.apply(n, e)
                }
            };
            const UN = jN;

            function IC(t, n, e) {
                t.prototype = n.prototype = e, e.constructor = t
            }

            function WN(t, n) {
                var e = Object.create(t.prototype);
                for (var i in n) e[i] = n[i];
                return e
            }

            function Yf() {}
            var Zv = 1 / .7,
                Md = "\\s*([+-]?\\d+)\\s*",
                Zf = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",
                Oo = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
                pte = /^#([0-9a-f]{3,8})$/,
                gte = new RegExp(`^rgb\\(${Md},${Md},${Md}\\)$`),
                mte = new RegExp(`^rgb\\(${Oo},${Oo},${Oo}\\)$`),
                vte = new RegExp(`^rgba\\(${Md},${Md},${Md},${Zf}\\)$`),
                yte = new RegExp(`^rgba\\(${Oo},${Oo},${Oo},${Zf}\\)$`),
                bte = new RegExp(`^hsl\\(${Zf},${Oo},${Oo}\\)$`),
                xte = new RegExp(`^hsla\\(${Zf},${Oo},${Oo},${Zf}\\)$`),
                GN = {
                    aliceblue: 15792383,
                    antiquewhite: 16444375,
                    aqua: 65535,
                    aquamarine: 8388564,
                    azure: 15794175,
                    beige: 16119260,
                    bisque: 16770244,
                    black: 0,
                    blanchedalmond: 16772045,
                    blue: 255,
                    blueviolet: 9055202,
                    brown: 10824234,
                    burlywood: 14596231,
                    cadetblue: 6266528,
                    chartreuse: 8388352,
                    chocolate: 13789470,
                    coral: 16744272,
                    cornflowerblue: 6591981,
                    cornsilk: 16775388,
                    crimson: 14423100,
                    cyan: 65535,
                    darkblue: 139,
                    darkcyan: 35723,
                    darkgoldenrod: 12092939,
                    darkgray: 11119017,
                    darkgreen: 25600,
                    darkgrey: 11119017,
                    darkkhaki: 12433259,
                    darkmagenta: 9109643,
                    darkolivegreen: 5597999,
                    darkorange: 16747520,
                    darkorchid: 10040012,
                    darkred: 9109504,
                    darksalmon: 15308410,
                    darkseagreen: 9419919,
                    darkslateblue: 4734347,
                    darkslategray: 3100495,
                    darkslategrey: 3100495,
                    darkturquoise: 52945,
                    darkviolet: 9699539,
                    deeppink: 16716947,
                    deepskyblue: 49151,
                    dimgray: 6908265,
                    dimgrey: 6908265,
                    dodgerblue: 2003199,
                    firebrick: 11674146,
                    floralwhite: 16775920,
                    forestgreen: 2263842,
                    fuchsia: 16711935,
                    gainsboro: 14474460,
                    ghostwhite: 16316671,
                    gold: 16766720,
                    goldenrod: 14329120,
                    gray: 8421504,
                    green: 32768,
                    greenyellow: 11403055,
                    grey: 8421504,
                    honeydew: 15794160,
                    hotpink: 16738740,
                    indianred: 13458524,
                    indigo: 4915330,
                    ivory: 16777200,
                    khaki: 15787660,
                    lavender: 15132410,
                    lavenderblush: 16773365,
                    lawngreen: 8190976,
                    lemonchiffon: 16775885,
                    lightblue: 11393254,
                    lightcoral: 15761536,
                    lightcyan: 14745599,
                    lightgoldenrodyellow: 16448210,
                    lightgray: 13882323,
                    lightgreen: 9498256,
                    lightgrey: 13882323,
                    lightpink: 16758465,
                    lightsalmon: 16752762,
                    lightseagreen: 2142890,
                    lightskyblue: 8900346,
                    lightslategray: 7833753,
                    lightslategrey: 7833753,
                    lightsteelblue: 11584734,
                    lightyellow: 16777184,
                    lime: 65280,
                    limegreen: 3329330,
                    linen: 16445670,
                    magenta: 16711935,
                    maroon: 8388608,
                    mediumaquamarine: 6737322,
                    mediumblue: 205,
                    mediumorchid: 12211667,
                    mediumpurple: 9662683,
                    mediumseagreen: 3978097,
                    mediumslateblue: 8087790,
                    mediumspringgreen: 64154,
                    mediumturquoise: 4772300,
                    mediumvioletred: 13047173,
                    midnightblue: 1644912,
                    mintcream: 16121850,
                    mistyrose: 16770273,
                    moccasin: 16770229,
                    navajowhite: 16768685,
                    navy: 128,
                    oldlace: 16643558,
                    olive: 8421376,
                    olivedrab: 7048739,
                    orange: 16753920,
                    orangered: 16729344,
                    orchid: 14315734,
                    palegoldenrod: 15657130,
                    palegreen: 10025880,
                    paleturquoise: 11529966,
                    palevioletred: 14381203,
                    papayawhip: 16773077,
                    peachpuff: 16767673,
                    peru: 13468991,
                    pink: 16761035,
                    plum: 14524637,
                    powderblue: 11591910,
                    purple: 8388736,
                    rebeccapurple: 6697881,
                    red: 16711680,
                    rosybrown: 12357519,
                    royalblue: 4286945,
                    saddlebrown: 9127187,
                    salmon: 16416882,
                    sandybrown: 16032864,
                    seagreen: 3050327,
                    seashell: 16774638,
                    sienna: 10506797,
                    silver: 12632256,
                    skyblue: 8900331,
                    slateblue: 6970061,
                    slategray: 7372944,
                    slategrey: 7372944,
                    snow: 16775930,
                    springgreen: 65407,
                    steelblue: 4620980,
                    tan: 13808780,
                    teal: 32896,
                    thistle: 14204888,
                    tomato: 16737095,
                    turquoise: 4251856,
                    violet: 15631086,
                    wheat: 16113331,
                    white: 16777215,
                    whitesmoke: 16119285,
                    yellow: 16776960,
                    yellowgreen: 10145074
                };

            function XN() {
                return this.rgb().formatHex()
            }

            function YN() {
                return this.rgb().formatRgb()
            }

            function qc(t) {
                var n, e;
                return t = (t + "").trim().toLowerCase(), (n = pte.exec(t)) ? (e = n[1].length, n = parseInt(n[1], 16), 6 === e ? qN(n) : 3 === e ? new qr(n >> 8 & 15 | n >> 4 & 240, n >> 4 & 15 | 240 & n, (15 & n) << 4 | 15 & n, 1) : 8 === e ? Kv(n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, (255 & n) / 255) : 4 === e ? Kv(n >> 12 & 15 | n >> 8 & 240, n >> 8 & 15 | n >> 4 & 240, n >> 4 & 15 | 240 & n, ((15 & n) << 4 | 15 & n) / 255) : null) : (n = gte.exec(t)) ? new qr(n[1], n[2], n[3], 1) : (n = mte.exec(t)) ? new qr(255 * n[1] / 100, 255 * n[2] / 100, 255 * n[3] / 100, 1) : (n = vte.exec(t)) ? Kv(n[1], n[2], n[3], n[4]) : (n = yte.exec(t)) ? Kv(255 * n[1] / 100, 255 * n[2] / 100, 255 * n[3] / 100, n[4]) : (n = bte.exec(t)) ? QN(n[1], n[2] / 100, n[3] / 100, 1) : (n = xte.exec(t)) ? QN(n[1], n[2] / 100, n[3] / 100, n[4]) : GN.hasOwnProperty(t) ? qN(GN[t]) : "transparent" === t ? new qr(NaN, NaN, NaN, 0) : null
            }

            function qN(t) {
                return new qr(t >> 16 & 255, t >> 8 & 255, 255 & t, 1)
            }

            function Kv(t, n, e, i) {
                return i <= 0 && (t = n = e = NaN), new qr(t, n, e, i)
            }

            function Qv(t, n, e, i) {
                return 1 === arguments.length ? function Cte(t) {
                    return t instanceof Yf || (t = qc(t)), t ? new qr((t = t.rgb()).r, t.g, t.b, t.opacity) : new qr
                }(t) : new qr(t, n, e, i ? ? 1)
            }

            function qr(t, n, e, i) {
                this.r = +t, this.g = +n, this.b = +e, this.opacity = +i
            }

            function ZN() {
                return `#${Kc(this.r)}${Kc(this.g)}${Kc(this.b)}`
            }

            function KN() {
                const t = Jv(this.opacity);
                return `${1===t?"rgb(":"rgba("}${Zc(this.r)}, ${Zc(this.g)}, ${Zc(this.b)}${1===t?")":`, ${t})`}`
            }

            function Jv(t) {
                return isNaN(t) ? 1 : Math.max(0, Math.min(1, t))
            }

            function Zc(t) {
                return Math.max(0, Math.min(255, Math.round(t) || 0))
            }

            function Kc(t) {
                return ((t = Zc(t)) < 16 ? "0" : "") + t.toString(16)
            }

            function QN(t, n, e, i) {
                return i <= 0 ? t = n = e = NaN : e <= 0 || e >= 1 ? t = n = NaN : n <= 0 && (t = NaN), new Qa(t, n, e, i)
            }

            function JN(t) {
                if (t instanceof Qa) return new Qa(t.h, t.s, t.l, t.opacity);
                if (t instanceof Yf || (t = qc(t)), !t) return new Qa;
                if (t instanceof Qa) return t;
                var n = (t = t.rgb()).r / 255,
                    e = t.g / 255,
                    i = t.b / 255,
                    s = Math.min(n, e, i),
                    r = Math.max(n, e, i),
                    l = NaN,
                    u = r - s,
                    h = (r + s) / 2;
                return u ? (l = n === r ? (e - i) / u + 6 * (e < i) : e === r ? (i - n) / u + 2 : (n - e) / u + 4, u /= h < .5 ? r + s : 2 - r - s, l *= 60) : u = h > 0 && h < 1 ? 0 : l, new Qa(l, u, h, t.opacity)
            }

            function Qa(t, n, e, i) {
                this.h = +t, this.s = +n, this.l = +e, this.opacity = +i
            }

            function eR(t) {
                return (t = (t || 0) % 360) < 0 ? t + 360 : t
            }

            function ey(t) {
                return Math.max(0, Math.min(1, t || 0))
            }

            function LC(t, n, e) {
                return 255 * (t < 60 ? n + (e - n) * t / 60 : t < 180 ? e : t < 240 ? n + (e - n) * (240 - t) / 60 : n)
            }

            function tR(t, n, e, i, s) {
                var r = t * t,
                    l = r * t;
                return ((1 - 3 * t + 3 * r - l) * n + (4 - 6 * r + 3 * l) * e + (1 + 3 * t + 3 * r - 3 * l) * i + l * s) / 6
            }
            IC(Yf, qc, {
                copy(t) {
                    return Object.assign(new this.constructor, this, t)
                },
                displayable() {
                    return this.rgb().displayable()
                },
                hex: XN,
                formatHex: XN,
                formatHex8: function _te() {
                    return this.rgb().formatHex8()
                },
                formatHsl: function wte() {
                    return JN(this).formatHsl()
                },
                formatRgb: YN,
                toString: YN
            }), IC(qr, Qv, WN(Yf, {
                brighter(t) {
                    return t = null == t ? Zv : Math.pow(Zv, t), new qr(this.r * t, this.g * t, this.b * t, this.opacity)
                },
                darker(t) {
                    return t = null == t ? .7 : Math.pow(.7, t), new qr(this.r * t, this.g * t, this.b * t, this.opacity)
                },
                rgb() {
                    return this
                },
                clamp() {
                    return new qr(Zc(this.r), Zc(this.g), Zc(this.b), Jv(this.opacity))
                },
                displayable() {
                    return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1
                },
                hex: ZN,
                formatHex: ZN,
                formatHex8: function Ste() {
                    return `#${Kc(this.r)}${Kc(this.g)}${Kc(this.b)}${Kc(255*(isNaN(this.opacity)?1:this.opacity))}`
                },
                formatRgb: KN,
                toString: KN
            })), IC(Qa, function Tte(t, n, e, i) {
                return 1 === arguments.length ? JN(t) : new Qa(t, n, e, i ? ? 1)
            }, WN(Yf, {
                brighter(t) {
                    return t = null == t ? Zv : Math.pow(Zv, t), new Qa(this.h, this.s, this.l * t, this.opacity)
                },
                darker(t) {
                    return t = null == t ? .7 : Math.pow(.7, t), new Qa(this.h, this.s, this.l * t, this.opacity)
                },
                rgb() {
                    var t = this.h % 360 + 360 * (this.h < 0),
                        n = isNaN(t) || isNaN(this.s) ? 0 : this.s,
                        e = this.l,
                        i = e + (e < .5 ? e : 1 - e) * n,
                        s = 2 * e - i;
                    return new qr(LC(t >= 240 ? t - 240 : t + 120, s, i), LC(t, s, i), LC(t < 120 ? t + 240 : t - 120, s, i), this.opacity)
                },
                clamp() {
                    return new Qa(eR(this.h), ey(this.s), ey(this.l), Jv(this.opacity))
                },
                displayable() {
                    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1
                },
                formatHsl() {
                    const t = Jv(this.opacity);
                    return `${1===t?"hsl(":"hsla("}${eR(this.h)}, ${100*ey(this.s)}%, ${100*ey(this.l)}%${1===t?")":`, ${t})`}`
                }
            }));
            const FC = t => () => t;

            function iR(t, n) {
                var e = n - t;
                return e ? function nR(t, n) {
                    return function(e) {
                        return t + e * n
                    }
                }(t, e) : FC(isNaN(t) ? n : t)
            }
            const ty = function t(n) {
                var e = function Ete(t) {
                    return 1 == (t = +t) ? iR : function(n, e) {
                        return e - n ? function kte(t, n, e) {
                            return t = Math.pow(t, e), n = Math.pow(n, e) - t, e = 1 / e,
                                function(i) {
                                    return Math.pow(t + i * n, e)
                                }
                        }(n, e, t) : FC(isNaN(n) ? e : n)
                    }
                }(n);

                function i(s, r) {
                    var l = e((s = Qv(s)).r, (r = Qv(r)).r),
                        u = e(s.g, r.g),
                        h = e(s.b, r.b),
                        v = iR(s.opacity, r.opacity);
                    return function(_) {
                        return s.r = l(_), s.g = u(_), s.b = h(_), s.opacity = v(_), s + ""
                    }
                }
                return i.gamma = t, i
            }(1);

            function sR(t) {
                return function(n) {
                    var l, u, e = n.length,
                        i = new Array(e),
                        s = new Array(e),
                        r = new Array(e);
                    for (l = 0; l < e; ++l) u = Qv(n[l]), i[l] = u.r || 0, s[l] = u.g || 0, r[l] = u.b || 0;
                    return i = t(i), s = t(s), r = t(r), u.opacity = 1,
                        function(h) {
                            return u.r = i(h), u.g = s(h), u.b = r(h), u + ""
                        }
                }
            }

            function rR(t, n) {
                var l, e = n ? n.length : 0,
                    i = t ? Math.min(e, t.length) : 0,
                    s = new Array(i),
                    r = new Array(e);
                for (l = 0; l < i; ++l) s[l] = ny(t[l], n[l]);
                for (; l < e; ++l) r[l] = n[l];
                return function(u) {
                    for (l = 0; l < i; ++l) r[l] = s[l](u);
                    return r
                }
            }

            function Mte(t, n) {
                var e = new Date;
                return t = +t, n = +n,
                    function(i) {
                        return e.setTime(t * (1 - i) + n * i), e
                    }
            }

            function Ja(t, n) {
                return t = +t, n = +n,
                    function(e) {
                        return t * (1 - e) + n * e
                    }
            }

            function Pte(t, n) {
                var s, e = {},
                    i = {};
                for (s in (null === t || "object" != typeof t) && (t = {}), (null === n || "object" != typeof n) && (n = {}), n) s in t ? e[s] = ny(t[s], n[s]) : i[s] = n[s];
                return function(r) {
                    for (s in e) i[s] = e[s](r);
                    return i
                }
            }
            sR(function Dte(t) {
                var n = t.length - 1;
                return function(e) {
                    var i = e <= 0 ? e = 0 : e >= 1 ? (e = 1, n - 1) : Math.floor(e * n),
                        s = t[i],
                        r = t[i + 1];
                    return tR((e - i / n) * n, i > 0 ? t[i - 1] : 2 * s - r, s, r, i < n - 1 ? t[i + 2] : 2 * r - s)
                }
            }), sR(function Ate(t) {
                var n = t.length;
                return function(e) {
                    var i = Math.floor(((e %= 1) < 0 ? ++e : e) * n);
                    return tR((e - i / n) * n, t[(i + n - 1) % n], t[i % n], t[(i + 1) % n], t[(i + 2) % n])
                }
            });
            var NC = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
                RC = new RegExp(NC.source, "g");

            function aR(t, n) {
                var i, s, r, e = NC.lastIndex = RC.lastIndex = 0,
                    l = -1,
                    u = [],
                    h = [];
                for (t += "", n += "";
                    (i = NC.exec(t)) && (s = RC.exec(n));)(r = s.index) > e && (r = n.slice(e, r), u[l] ? u[l] += r : u[++l] = r), (i = i[0]) === (s = s[0]) ? u[l] ? u[l] += s : u[++l] = s : (u[++l] = null, h.push({
                    i: l,
                    x: Ja(i, s)
                })), e = RC.lastIndex;
                return e < n.length && (r = n.slice(e), u[l] ? u[l] += r : u[++l] = r), u.length < 2 ? h[0] ? function Ite(t) {
                    return function(n) {
                        return t(n) + ""
                    }
                }(h[0].x) : function Ote(t) {
                    return function() {
                        return t
                    }
                }(n) : (n = h.length, function(v) {
                    for (var C, _ = 0; _ < n; ++_) u[(C = h[_]).i] = C.x(v);
                    return u.join("")
                })
            }

            function Lte(t, n) {
                n || (n = []);
                var s, e = t ? Math.min(n.length, t.length) : 0,
                    i = n.slice();
                return function(r) {
                    for (s = 0; s < e; ++s) i[s] = t[s] * (1 - r) + n[s] * r;
                    return i
                }
            }

            function ny(t, n) {
                var i, e = typeof n;
                return null == n || "boolean" === e ? FC(n) : ("number" === e ? Ja : "string" === e ? (i = qc(n)) ? (n = i, ty) : aR : n instanceof qc ? ty : n instanceof Date ? Mte : function Fte(t) {
                    return ArrayBuffer.isView(t) && !(t instanceof DataView)
                }(n) ? Lte : Array.isArray(n) ? rR : "function" != typeof n.valueOf && "function" != typeof n.toString || isNaN(n) ? Pte : Ja)(t, n)
            }
            var iy, Jf, Pd = 0,
                Kf = 0,
                Qf = 0,
                lR = 1e3,
                sy = 0,
                Qc = 0,
                ry = 0,
                ep = "object" == typeof performance && performance.now ? performance : Date,
                cR = "object" == typeof window && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(t) {
                    setTimeout(t, 17)
                };

            function BC() {
                return Qc || (cR(Rte), Qc = ep.now() + ry)
            }

            function Rte() {
                Qc = 0
            }

            function ay() {
                this._call = this._time = this._next = null
            }

            function uR(t, n, e) {
                var i = new ay;
                return i.restart(t, n, e), i
            }

            function dR() {
                Qc = (sy = ep.now()) + ry, Pd = Kf = 0;
                try {
                    ! function Bte() {
                        BC(), ++Pd;
                        for (var n, t = iy; t;)(n = Qc - t._time) >= 0 && t._call.call(void 0, n), t = t._next;
                        --Pd
                    }()
                } finally {
                    Pd = 0,
                        function Hte() {
                            for (var t, e, n = iy, i = 1 / 0; n;) n._call ? (i > n._time && (i = n._time), t = n, n = n._next) : (e = n._next, n._next = null, n = t ? t._next = e : iy = e);
                            Jf = t, VC(i)
                        }(), Qc = 0
                }
            }

            function Vte() {
                var t = ep.now(),
                    n = t - sy;
                n > lR && (ry -= n, sy = t)
            }

            function VC(t) {
                Pd || (Kf && (Kf = clearTimeout(Kf)), t - Qc > 24 ? (t < 1 / 0 && (Kf = setTimeout(dR, t - ep.now() - ry)), Qf && (Qf = clearInterval(Qf))) : (Qf || (sy = ep.now(), Qf = setInterval(Vte, lR)), Pd = 1, cR(dR)))
            }

            function hR(t, n, e) {
                var i = new ay;
                return i.restart(s => {
                    i.stop(), t(s + n)
                }, n = null == n ? 0 : +n, e), i
            }
            ay.prototype = uR.prototype = {
                constructor: ay,
                restart: function(t, n, e) {
                    if ("function" != typeof t) throw new TypeError("callback is not a function");
                    e = (null == e ? BC() : +e) + (null == n ? 0 : +n), !this._next && Jf !== this && (Jf ? Jf._next = this : iy = this, Jf = this), this._call = t, this._time = e, VC()
                },
                stop: function() {
                    this._call && (this._call = null, this._time = 1 / 0, VC())
                }
            };
            var zte = UN("start", "end", "cancel", "interrupt"),
                jte = [],
                fR = 0,
                oy = 3;

            function cy(t, n, e, i, s, r) {
                var l = t.__transition;
                if (l) {
                    if (e in l) return
                } else t.__transition = {};
                ! function $te(t, n, e) {
                    var s, i = t.__transition;

                    function l(v) {
                        var _, C, M, L;
                        if (1 !== e.state) return h();
                        for (_ in i)
                            if ((L = i[_]).name === e.name) {
                                if (L.state === oy) return hR(l);
                                4 === L.state ? (L.state = 6, L.timer.stop(), L.on.call("interrupt", t, t.__data__, L.index, L.group), delete i[_]) : +_ < n && (L.state = 6, L.timer.stop(), L.on.call("cancel", t, t.__data__, L.index, L.group), delete i[_])
                            }
                        if (hR(function() {
                                e.state === oy && (e.state = 4, e.timer.restart(u, e.delay, e.time), u(v))
                            }), e.state = 2, e.on.call("start", t, t.__data__, e.index, e.group), 2 === e.state) {
                            for (e.state = oy, s = new Array(M = e.tween.length), _ = 0, C = -1; _ < M; ++_)(L = e.tween[_].value.call(t, t.__data__, e.index, e.group)) && (s[++C] = L);
                            s.length = C + 1
                        }
                    }

                    function u(v) {
                        for (var _ = v < e.duration ? e.ease.call(null, v / e.duration) : (e.timer.restart(h), e.state = 5, 1), C = -1, M = s.length; ++C < M;) s[C].call(t, _);
                        5 === e.state && (e.on.call("end", t, t.__data__, e.index, e.group), h())
                    }

                    function h() {
                        for (var v in e.state = 6, e.timer.stop(), delete i[n], i) return;
                        delete t.__transition
                    }
                    i[n] = e, e.timer = uR(function r(v) {
                        e.state = 1, e.timer.restart(l, e.delay, e.time), e.delay <= v && l(v - e.delay)
                    }, 0, e.time)
                }(t, e, {
                    name: n,
                    index: i,
                    group: s,
                    on: zte,
                    tween: jte,
                    time: r.time,
                    delay: r.delay,
                    duration: r.duration,
                    ease: r.ease,
                    timer: null,
                    state: fR
                })
            }

            function jC(t, n) {
                var e = eo(t, n);
                if (e.state > fR) throw new Error("too late; already scheduled");
                return e
            }

            function Io(t, n) {
                var e = eo(t, n);
                if (e.state > oy) throw new Error("too late; already running");
                return e
            }

            function eo(t, n) {
                var e = t.__transition;
                if (!e || !(e = e[n])) throw new Error("transition not found");
                return e
            }
            var uy, mR = 180 / Math.PI,
                UC = {
                    translateX: 0,
                    translateY: 0,
                    rotate: 0,
                    skewX: 0,
                    scaleX: 1,
                    scaleY: 1
                };

            function vR(t, n, e, i, s, r) {
                var l, u, h;
                return (l = Math.sqrt(t * t + n * n)) && (t /= l, n /= l), (h = t * e + n * i) && (e -= t * h, i -= n * h), (u = Math.sqrt(e * e + i * i)) && (e /= u, i /= u, h /= u), t * i < n * e && (t = -t, n = -n, h = -h, l = -l), {
                    translateX: s,
                    translateY: r,
                    rotate: Math.atan2(n, t) * mR,
                    skewX: Math.atan(h) * mR,
                    scaleX: l,
                    scaleY: u
                }
            }

            function yR(t, n, e, i) {
                function s(v) {
                    return v.length ? v.pop() + " " : ""
                }
                return function(v, _) {
                    var C = [],
                        M = [];
                    return v = t(v), _ = t(_),
                        function r(v, _, C, M, L, j) {
                            if (v !== C || _ !== M) {
                                var Z = L.push("translate(", null, n, null, e);
                                j.push({
                                    i: Z - 4,
                                    x: Ja(v, C)
                                }, {
                                    i: Z - 2,
                                    x: Ja(_, M)
                                })
                            } else(C || M) && L.push("translate(" + C + n + M + e)
                        }(v.translateX, v.translateY, _.translateX, _.translateY, C, M),
                        function l(v, _, C, M) {
                            v !== _ ? (v - _ > 180 ? _ += 360 : _ - v > 180 && (v += 360), M.push({
                                i: C.push(s(C) + "rotate(", null, i) - 2,
                                x: Ja(v, _)
                            })) : _ && C.push(s(C) + "rotate(" + _ + i)
                        }(v.rotate, _.rotate, C, M),
                        function u(v, _, C, M) {
                            v !== _ ? M.push({
                                i: C.push(s(C) + "skewX(", null, i) - 2,
                                x: Ja(v, _)
                            }) : _ && C.push(s(C) + "skewX(" + _ + i)
                        }(v.skewX, _.skewX, C, M),
                        function h(v, _, C, M, L, j) {
                            if (v !== C || _ !== M) {
                                var Z = L.push(s(L) + "scale(", null, ",", null, ")");
                                j.push({
                                    i: Z - 4,
                                    x: Ja(v, C)
                                }, {
                                    i: Z - 2,
                                    x: Ja(_, M)
                                })
                            } else(1 !== C || 1 !== M) && L.push(s(L) + "scale(" + C + "," + M + ")")
                        }(v.scaleX, v.scaleY, _.scaleX, _.scaleY, C, M), v = _ = null,
                        function(L) {
                            for (var Q, j = -1, Z = M.length; ++j < Z;) C[(Q = M[j]).i] = Q.x(L);
                            return C.join("")
                        }
                }
            }
            var Xte = yR(function Wte(t) {
                    const n = new("function" == typeof DOMMatrix ? DOMMatrix : WebKitCSSMatrix)(t + "");
                    return n.isIdentity ? UC : vR(n.a, n.b, n.c, n.d, n.e, n.f)
                }, "px, ", "px)", "deg)"),
                Yte = yR(function Gte(t) {
                    return null != t && (uy || (uy = document.createElementNS("http://www.w3.org/2000/svg", "g")), uy.setAttribute("transform", t), t = uy.transform.baseVal.consolidate()) ? vR((t = t.matrix).a, t.b, t.c, t.d, t.e, t.f) : UC
                }, ", ", ")", ")");

            function qte(t, n) {
                var e, i;
                return function() {
                    var s = Io(this, t),
                        r = s.tween;
                    if (r !== e)
                        for (var l = 0, u = (i = e = r).length; l < u; ++l)
                            if (i[l].name === n) {
                                (i = i.slice()).splice(l, 1);
                                break
                            }
                    s.tween = i
                }
            }

            function Zte(t, n, e) {
                var i, s;
                if ("function" != typeof e) throw new Error;
                return function() {
                    var r = Io(this, t),
                        l = r.tween;
                    if (l !== i) {
                        s = (i = l).slice();
                        for (var u = {
                                name: n,
                                value: e
                            }, h = 0, v = s.length; h < v; ++h)
                            if (s[h].name === n) {
                                s[h] = u;
                                break
                            }
                        h === v && s.push(u)
                    }
                    r.tween = s
                }
            }

            function WC(t, n, e) {
                var i = t._id;
                return t.each(function() {
                        var s = Io(this, i);
                        (s.value || (s.value = {}))[n] = e.apply(this, arguments)
                    }),
                    function(s) {
                        return eo(s, i).value[n]
                    }
            }

            function bR(t, n) {
                var e;
                return ("number" == typeof n ? Ja : n instanceof qc ? ty : (e = qc(n)) ? (n = e, ty) : aR)(t, n)
            }

            function Qte(t) {
                return function() {
                    this.removeAttribute(t)
                }
            }

            function Jte(t) {
                return function() {
                    this.removeAttributeNS(t.space, t.local)
                }
            }

            function ene(t, n, e) {
                var i, r, s = e + "";
                return function() {
                    var l = this.getAttribute(t);
                    return l === s ? null : l === i ? r : r = n(i = l, e)
                }
            }

            function tne(t, n, e) {
                var i, r, s = e + "";
                return function() {
                    var l = this.getAttributeNS(t.space, t.local);
                    return l === s ? null : l === i ? r : r = n(i = l, e)
                }
            }

            function nne(t, n, e) {
                var i, s, r;
                return function() {
                    var l, h, u = e(this);
                    return null == u ? void this.removeAttribute(t) : (l = this.getAttribute(t)) === (h = u + "") ? null : l === i && h === s ? r : (s = h, r = n(i = l, u))
                }
            }

            function ine(t, n, e) {
                var i, s, r;
                return function() {
                    var l, h, u = e(this);
                    return null == u ? void this.removeAttributeNS(t.space, t.local) : (l = this.getAttributeNS(t.space, t.local)) === (h = u + "") ? null : l === i && h === s ? r : (s = h, r = n(i = l, u))
                }
            }

            function one(t, n) {
                var e, i;

                function s() {
                    var r = n.apply(this, arguments);
                    return r !== i && (e = (i = r) && function ane(t, n) {
                        return function(e) {
                            this.setAttributeNS(t.space, t.local, n.call(this, e))
                        }
                    }(t, r)), e
                }
                return s._value = n, s
            }

            function lne(t, n) {
                var e, i;

                function s() {
                    var r = n.apply(this, arguments);
                    return r !== i && (e = (i = r) && function rne(t, n) {
                        return function(e) {
                            this.setAttribute(t, n.call(this, e))
                        }
                    }(t, r)), e
                }
                return s._value = n, s
            }

            function une(t, n) {
                return function() {
                    jC(this, t).delay = +n.apply(this, arguments)
                }
            }

            function dne(t, n) {
                return n = +n,
                    function() {
                        jC(this, t).delay = n
                    }
            }

            function fne(t, n) {
                return function() {
                    Io(this, t).duration = +n.apply(this, arguments)
                }
            }

            function pne(t, n) {
                return n = +n,
                    function() {
                        Io(this, t).duration = n
                    }
            }
            var Ene = Xf.prototype.constructor;

            function xR(t) {
                return function() {
                    this.style.removeProperty(t)
                }
            }
            var Xne = 0;

            function ll(t, n, e, i) {
                this._groups = t, this._parents = n, this._name = e, this._id = i
            }

            function _R() {
                return ++Xne
            }
            var cl = Xf.prototype;
            ll.prototype = function Yne(t) {
                return Xf().transition(t)
            }.prototype = {
                constructor: ll,
                select: function Ane(t) {
                    var n = this._name,
                        e = this._id;
                    "function" != typeof t && (t = kC(t));
                    for (var i = this._groups, s = i.length, r = new Array(s), l = 0; l < s; ++l)
                        for (var _, C, u = i[l], h = u.length, v = r[l] = new Array(h), M = 0; M < h; ++M)(_ = u[M]) && (C = t.call(_, _.__data__, M, u)) && ("__data__" in _ && (C.__data__ = _.__data__), v[M] = C, cy(v[M], n, e, M, v, eo(_, e)));
                    return new ll(r, this._parents, n, e)
                },
                selectAll: function kne(t) {
                    var n = this._name,
                        e = this._id;
                    "function" != typeof t && (t = kN(t));
                    for (var i = this._groups, s = i.length, r = [], l = [], u = 0; u < s; ++u)
                        for (var _, h = i[u], v = h.length, C = 0; C < v; ++C)
                            if (_ = h[C]) {
                                for (var L, M = t.call(_, _.__data__, C, h), j = eo(_, e), Z = 0, Q = M.length; Z < Q; ++Z)(L = M[Z]) && cy(L, n, e, Z, M, j);
                                r.push(M), l.push(_)
                            }
                    return new ll(r, l, n, e)
                },
                selectChild: cl.selectChild,
                selectChildren: cl.selectChildren,
                filter: function xne(t) {
                    "function" != typeof t && (t = EN(t));
                    for (var n = this._groups, e = n.length, i = new Array(e), s = 0; s < e; ++s)
                        for (var h, r = n[s], l = r.length, u = i[s] = [], v = 0; v < l; ++v)(h = r[v]) && t.call(h, h.__data__, v, r) && u.push(h);
                    return new ll(i, this._parents, this._name, this._id)
                },
                merge: function _ne(t) {
                    if (t._id !== this._id) throw new Error;
                    for (var n = this._groups, e = t._groups, i = n.length, r = Math.min(i, e.length), l = new Array(i), u = 0; u < r; ++u)
                        for (var M, h = n[u], v = e[u], _ = h.length, C = l[u] = new Array(_), L = 0; L < _; ++L)(M = h[L] || v[L]) && (C[L] = M);
                    for (; u < i; ++u) l[u] = n[u];
                    return new ll(l, this._parents, this._name, this._id)
                },
                selection: function Mne() {
                    return new Ene(this._groups, this._parents)
                },
                transition: function Wne() {
                    for (var t = this._name, n = this._id, e = _R(), i = this._groups, s = i.length, r = 0; r < s; ++r)
                        for (var h, l = i[r], u = l.length, v = 0; v < u; ++v)
                            if (h = l[v]) {
                                var _ = eo(h, n);
                                cy(h, t, e, v, l, {
                                    time: _.time + _.delay + _.duration,
                                    delay: 0,
                                    duration: _.duration,
                                    ease: _.ease
                                })
                            }
                    return new ll(i, this._parents, t, e)
                },
                call: cl.call,
                nodes: cl.nodes,
                node: cl.node,
                size: cl.size,
                empty: cl.empty,
                each: cl.each,
                on: function Sne(t, n) {
                    var e = this._id;
                    return arguments.length < 2 ? eo(this.node(), e).on.on(t) : this.each(function Cne(t, n, e) {
                        var i, s, r = function wne(t) {
                            return (t + "").trim().split(/^|\s+/).every(function(n) {
                                var e = n.indexOf(".");
                                return e >= 0 && (n = n.slice(0, e)), !n || "start" === n
                            })
                        }(n) ? jC : Io;
                        return function() {
                            var l = r(this, t),
                                u = l.on;
                            u !== i && (s = (i = u).copy()).on(n, e), l.on = s
                        }
                    }(e, t, n))
                },
                attr: function sne(t, n) {
                    var e = Yv(t),
                        i = "transform" === e ? Yte : bR;
                    return this.attrTween(t, "function" == typeof n ? (e.local ? ine : nne)(e, i, WC(this, "attr." + t, n)) : null == n ? (e.local ? Jte : Qte)(e) : (e.local ? tne : ene)(e, i, n))
                },
                attrTween: function cne(t, n) {
                    var e = "attr." + t;
                    if (arguments.length < 2) return (e = this.tween(e)) && e._value;
                    if (null == n) return this.tween(e, null);
                    if ("function" != typeof n) throw new Error;
                    var i = Yv(t);
                    return this.tween(e, (i.local ? one : lne)(i, n))
                },
                style: function Fne(t, n, e) {
                    var i = "transform" == (t += "") ? Xte : bR;
                    return null == n ? this.styleTween(t, function Pne(t, n) {
                        var e, i, s;
                        return function() {
                            var r = Ed(this, t),
                                l = (this.style.removeProperty(t), Ed(this, t));
                            return r === l ? null : r === e && l === i ? s : s = n(e = r, i = l)
                        }
                    }(t, i)).on("end.style." + t, xR(t)) : "function" == typeof n ? this.styleTween(t, function Ine(t, n, e) {
                        var i, s, r;
                        return function() {
                            var l = Ed(this, t),
                                u = e(this),
                                h = u + "";
                            return null == u && (this.style.removeProperty(t), h = u = Ed(this, t)), l === h ? null : l === i && h === s ? r : (s = h, r = n(i = l, u))
                        }
                    }(t, i, WC(this, "style." + t, n))).each(function Lne(t, n) {
                        var e, i, s, u, r = "style." + n,
                            l = "end." + r;
                        return function() {
                            var h = Io(this, t),
                                v = h.on,
                                _ = null == h.value[r] ? u || (u = xR(n)) : void 0;
                            (v !== e || s !== _) && (i = (e = v).copy()).on(l, s = _), h.on = i
                        }
                    }(this._id, t)) : this.styleTween(t, function One(t, n, e) {
                        var i, r, s = e + "";
                        return function() {
                            var l = Ed(this, t);
                            return l === s ? null : l === i ? r : r = n(i = l, e)
                        }
                    }(t, i, n), e).on("end.style." + t, null)
                },
                styleTween: function Bne(t, n, e) {
                    var i = "style." + (t += "");
                    if (arguments.length < 2) return (i = this.tween(i)) && i._value;
                    if (null == n) return this.tween(i, null);
                    if ("function" != typeof n) throw new Error;
                    return this.tween(i, function Rne(t, n, e) {
                        var i, s;

                        function r() {
                            var l = n.apply(this, arguments);
                            return l !== s && (i = (s = l) && function Nne(t, n, e) {
                                return function(i) {
                                    this.style.setProperty(t, n.call(this, i), e)
                                }
                            }(t, l, e)), i
                        }
                        return r._value = n, r
                    }(t, n, e ? ? ""))
                },
                text: function zne(t) {
                    return this.tween("text", "function" == typeof t ? function Hne(t) {
                        return function() {
                            var n = t(this);
                            this.textContent = n ? ? ""
                        }
                    }(WC(this, "text", t)) : function Vne(t) {
                        return function() {
                            this.textContent = t
                        }
                    }(null == t ? "" : t + ""))
                },
                textTween: function Une(t) {
                    var n = "text";
                    if (arguments.length < 1) return (n = this.tween(n)) && n._value;
                    if (null == t) return this.tween(n, null);
                    if ("function" != typeof t) throw new Error;
                    return this.tween(n, function $ne(t) {
                        var n, e;

                        function i() {
                            var s = t.apply(this, arguments);
                            return s !== e && (n = (e = s) && function jne(t) {
                                return function(n) {
                                    this.textContent = t.call(this, n)
                                }
                            }(s)), n
                        }
                        return i._value = t, i
                    }(t))
                },
                remove: function Dne() {
                    return this.on("end.remove", function Tne(t) {
                        return function() {
                            var n = this.parentNode;
                            for (var e in this.__transition)
                                if (+e !== t) return;
                            n && n.removeChild(this)
                        }
                    }(this._id))
                },
                tween: function Kte(t, n) {
                    var e = this._id;
                    if (t += "", arguments.length < 2) {
                        for (var l, i = eo(this.node(), e).tween, s = 0, r = i.length; s < r; ++s)
                            if ((l = i[s]).name === t) return l.value;
                        return null
                    }
                    return this.each((null == n ? qte : Zte)(e, t, n))
                },
                delay: function hne(t) {
                    var n = this._id;
                    return arguments.length ? this.each(("function" == typeof t ? une : dne)(n, t)) : eo(this.node(), n).delay
                },
                duration: function gne(t) {
                    var n = this._id;
                    return arguments.length ? this.each(("function" == typeof t ? fne : pne)(n, t)) : eo(this.node(), n).duration
                },
                ease: function vne(t) {
                    var n = this._id;
                    return arguments.length ? this.each(function mne(t, n) {
                        if ("function" != typeof n) throw new Error;
                        return function() {
                            Io(this, t).ease = n
                        }
                    }(n, t)) : eo(this.node(), n).ease
                },
                easeVarying: function bne(t) {
                    if ("function" != typeof t) throw new Error;
                    return this.each(function yne(t, n) {
                        return function() {
                            var e = n.apply(this, arguments);
                            if ("function" != typeof e) throw new Error;
                            Io(this, t).ease = e
                        }
                    }(this._id, t))
                },
                end: function Gne() {
                    var t, n, e = this,
                        i = e._id,
                        s = e.size();
                    return new Promise(function(r, l) {
                        var u = {
                                value: l
                            },
                            h = {
                                value: function() {
                                    0 == --s && r()
                                }
                            };
                        e.each(function() {
                            var v = Io(this, i),
                                _ = v.on;
                            _ !== t && ((n = (t = _).copy())._.cancel.push(u), n._.interrupt.push(u), n._.end.push(h)), v.on = n
                        }), 0 === s && r()
                    })
                },
                [Symbol.iterator]: cl[Symbol.iterator]
            };
            var Zne = {
                time: null,
                delay: 0,
                duration: 250,
                ease: function qne(t) {
                    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2
                }
            };

            function Kne(t, n) {
                for (var e; !(e = t.__transition) || !(e = e[n]);)
                    if (!(t = t.parentNode)) throw new Error(`transition ${n} not found`);
                return e
            }
            Xf.prototype.interrupt = function Ute(t) {
                return this.each(function() {
                    ! function $C(t, n) {
                        var i, s, l, e = t.__transition,
                            r = !0;
                        if (e) {
                            for (l in n = null == n ? null : n + "", e)(i = e[l]).name === n ? (s = i.state > 2 && i.state < 5, i.state = 6, i.timer.stop(), i.on.call(s ? "interrupt" : "cancel", t, t.__data__, i.index, i.group), delete e[l]) : r = !1;
                            r && delete t.__transition
                        }
                    }(this, t)
                })
            }, Xf.prototype.transition = function Qne(t) {
                var n, e;
                t instanceof ll ? (n = t._id, t = t._name) : (n = _R(), (e = Zne).time = BC(), t = null == t ? null : t + "");
                for (var i = this._groups, s = i.length, r = 0; r < s; ++r)
                    for (var h, l = i[r], u = l.length, v = 0; v < u; ++v)(h = l[v]) && cy(h, t, n, v, l, e || Kne(h, n));
                return new ll(i, this._parents, t, n)
            };
            Math;

            function tp(t) {
                return {
                    type: t
                }
            }

            function np(t, n) {
                return null == t || null == n ? NaN : t < n ? -1 : t > n ? 1 : t >= n ? 0 : NaN
            }

            function cie(t, n) {
                return null == t || null == n ? NaN : n < t ? -1 : n > t ? 1 : n >= t ? 0 : NaN
            }

            function QC(t) {
                let n, e, i;

                function s(u, h, v = 0, _ = u.length) {
                    if (v < _) {
                        if (0 !== n(h, h)) return _;
                        do {
                            const C = v + _ >>> 1;
                            e(u[C], h) < 0 ? v = C + 1 : _ = C
                        } while (v < _)
                    }
                    return v
                }
                return 2 !== t.length ? (n = np, e = (u, h) => np(t(u), h), i = (u, h) => t(u) - h) : (n = t === np || t === cie ? t : uie, e = t, i = t), {
                    left: s,
                    center: function l(u, h, v = 0, _ = u.length) {
                        const C = s(u, h, v, _ - 1);
                        return C > v && i(u[C - 1], h) > -i(u[C], h) ? C - 1 : C
                    },
                    right: function r(u, h, v = 0, _ = u.length) {
                        if (v < _) {
                            if (0 !== n(h, h)) return _;
                            do {
                                const C = v + _ >>> 1;
                                e(u[C], h) <= 0 ? v = C + 1 : _ = C
                            } while (v < _)
                        }
                        return v
                    }
                }
            }

            function uie() {
                return 0
            }["w", "e"].map(tp), ["n", "s"].map(tp), ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(tp);
            const die = Math.sqrt(50),
                hie = Math.sqrt(10),
                fie = Math.sqrt(2);

            function fy(t, n, e) {
                const i = (n - t) / Math.max(0, e),
                    s = Math.floor(Math.log10(i)),
                    r = i / Math.pow(10, s),
                    l = r >= die ? 10 : r >= hie ? 5 : r >= fie ? 2 : 1;
                let u, h, v;
                return s < 0 ? (v = Math.pow(10, -s) / l, u = Math.round(t * v), h = Math.round(n * v), u / v < t && ++u, h / v > n && --h, v = -v) : (v = Math.pow(10, s) * l, u = Math.round(t / v), h = Math.round(n / v), u * v < t && ++u, h * v > n && --h), h < u && .5 <= e && e < 2 ? fy(t, n, 2 * e) : [u, h, v]
            }

            function JC(t, n, e) {
                return fy(t = +t, n = +n, e = +e)[2]
            }

            function e1(t, n, e) {
                e = +e;
                const i = (n = +n) < (t = +t),
                    s = i ? JC(n, t, e) : JC(t, n, e);
                return (i ? -1 : 1) * (s < 0 ? 1 / -s : s)
            }
            const dl = 1e3,
                Ra = 6e4,
                hl = 60 * Ra,
                fl = 24 * hl,
                t1 = 7 * fl,
                AR = 30 * fl,
                n1 = 365 * fl,
                s1 = new Date,
                r1 = new Date;

            function Ns(t, n, e, i) {
                function s(r) {
                    return t(r = 0 === arguments.length ? new Date : new Date(+r)), r
                }
                return s.floor = r => (t(r = new Date(+r)), r), s.ceil = r => (t(r = new Date(r - 1)), n(r, 1), t(r), r), s.round = r => {
                    const l = s(r),
                        u = s.ceil(r);
                    return r - l < u - r ? l : u
                }, s.offset = (r, l) => (n(r = new Date(+r), null == l ? 1 : Math.floor(l)), r), s.range = (r, l, u) => {
                    const h = [];
                    if (r = s.ceil(r), u = null == u ? 1 : Math.floor(u), !(r < l && u > 0)) return h;
                    let v;
                    do {
                        h.push(v = new Date(+r)), n(r, u), t(r)
                    } while (v < r && r < l);
                    return h
                }, s.filter = r => Ns(l => {
                    if (l >= l)
                        for (; t(l), !r(l);) l.setTime(l - 1)
                }, (l, u) => {
                    if (l >= l)
                        if (u < 0)
                            for (; ++u <= 0;)
                                for (; n(l, -1), !r(l););
                        else
                            for (; --u >= 0;)
                                for (; n(l, 1), !r(l););
                }), e && (s.count = (r, l) => (s1.setTime(+r), r1.setTime(+l), t(s1), t(r1), Math.floor(e(s1, r1))), s.every = r => (r = Math.floor(r), isFinite(r) && r > 0 ? r > 1 ? s.filter(i ? l => i(l) % r == 0 : l => s.count(0, l) % r == 0) : s : null)), s
            }
            const py = Ns(() => {}, (t, n) => {
                t.setTime(+t + n)
            }, (t, n) => n - t);
            py.every = t => (t = Math.floor(t), isFinite(t) && t > 0 ? t > 1 ? Ns(n => {
                n.setTime(Math.floor(n / t) * t)
            }, (n, e) => {
                n.setTime(+n + e * t)
            }, (n, e) => (e - n) / t) : py : null);
            const Ld = Ns(t => {
                    t.setTime(t - t.getMilliseconds())
                }, (t, n) => {
                    t.setTime(+t + n * dl)
                }, (t, n) => (n - t) / dl, t => t.getUTCSeconds()),
                a1 = Ns(t => {
                    t.setTime(t - t.getMilliseconds() - t.getSeconds() * dl)
                }, (t, n) => {
                    t.setTime(+t + n * Ra)
                }, (t, n) => (n - t) / Ra, t => t.getMinutes()),
                kR = Ns(t => {
                    t.setUTCSeconds(0, 0)
                }, (t, n) => {
                    t.setTime(+t + n * Ra)
                }, (t, n) => (n - t) / Ra, t => t.getUTCMinutes()),
                o1 = Ns(t => {
                    t.setTime(t - t.getMilliseconds() - t.getSeconds() * dl - t.getMinutes() * Ra)
                }, (t, n) => {
                    t.setTime(+t + n * hl)
                }, (t, n) => (n - t) / hl, t => t.getHours()),
                ER = Ns(t => {
                    t.setUTCMinutes(0, 0, 0)
                }, (t, n) => {
                    t.setTime(+t + n * hl)
                }, (t, n) => (n - t) / hl, t => t.getUTCHours()),
                l1 = Ns(t => t.setHours(0, 0, 0, 0), (t, n) => t.setDate(t.getDate() + n), (t, n) => (n - t - (n.getTimezoneOffset() - t.getTimezoneOffset()) * Ra) / fl, t => t.getDate() - 1),
                MR = (Ns(t => {
                    t.setUTCHours(0, 0, 0, 0)
                }, (t, n) => {
                    t.setUTCDate(t.getUTCDate() + n)
                }, (t, n) => (n - t) / fl, t => t.getUTCDate() - 1), Ns(t => {
                    t.setUTCHours(0, 0, 0, 0)
                }, (t, n) => {
                    t.setUTCDate(t.getUTCDate() + n)
                }, (t, n) => (n - t) / fl, t => Math.floor(t / fl)));

            function Jc(t) {
                return Ns(n => {
                    n.setDate(n.getDate() - (n.getDay() + 7 - t) % 7), n.setHours(0, 0, 0, 0)
                }, (n, e) => {
                    n.setDate(n.getDate() + 7 * e)
                }, (n, e) => (e - n - (e.getTimezoneOffset() - n.getTimezoneOffset()) * Ra) / t1)
            }
            const c1 = Jc(0);

            function eu(t) {
                return Ns(n => {
                    n.setUTCDate(n.getUTCDate() - (n.getUTCDay() + 7 - t) % 7), n.setUTCHours(0, 0, 0, 0)
                }, (n, e) => {
                    n.setUTCDate(n.getUTCDate() + 7 * e)
                }, (n, e) => (e - n) / t1)
            }
            Jc(1), Jc(2), Jc(3), Jc(4), Jc(5), Jc(6);
            const PR = eu(0),
                u1 = (eu(1), eu(2), eu(3), eu(4), eu(5), eu(6), Ns(t => {
                    t.setDate(1), t.setHours(0, 0, 0, 0)
                }, (t, n) => {
                    t.setMonth(t.getMonth() + n)
                }, (t, n) => n.getMonth() - t.getMonth() + 12 * (n.getFullYear() - t.getFullYear()), t => t.getMonth())),
                OR = Ns(t => {
                    t.setUTCDate(1), t.setUTCHours(0, 0, 0, 0)
                }, (t, n) => {
                    t.setUTCMonth(t.getUTCMonth() + n)
                }, (t, n) => n.getUTCMonth() - t.getUTCMonth() + 12 * (n.getUTCFullYear() - t.getUTCFullYear()), t => t.getUTCMonth()),
                gy = Ns(t => {
                    t.setMonth(0, 1), t.setHours(0, 0, 0, 0)
                }, (t, n) => {
                    t.setFullYear(t.getFullYear() + n)
                }, (t, n) => n.getFullYear() - t.getFullYear(), t => t.getFullYear());
            gy.every = t => isFinite(t = Math.floor(t)) && t > 0 ? Ns(n => {
                n.setFullYear(Math.floor(n.getFullYear() / t) * t), n.setMonth(0, 1), n.setHours(0, 0, 0, 0)
            }, (n, e) => {
                n.setFullYear(n.getFullYear() + e * t)
            }) : null;
            const d1 = Ns(t => {
                t.setUTCMonth(0, 1), t.setUTCHours(0, 0, 0, 0)
            }, (t, n) => {
                t.setUTCFullYear(t.getUTCFullYear() + n)
            }, (t, n) => n.getUTCFullYear() - t.getUTCFullYear(), t => t.getUTCFullYear());

            function IR(t, n, e, i, s, r) {
                const l = [
                    [Ld, 1, dl],
                    [Ld, 5, 5e3],
                    [Ld, 15, 15e3],
                    [Ld, 30, 3e4],
                    [r, 1, Ra],
                    [r, 5, 5 * Ra],
                    [r, 15, 15 * Ra],
                    [r, 30, 30 * Ra],
                    [s, 1, hl],
                    [s, 3, 3 * hl],
                    [s, 6, 6 * hl],
                    [s, 12, 12 * hl],
                    [i, 1, fl],
                    [i, 2, 2 * fl],
                    [e, 1, t1],
                    [n, 1, AR],
                    [n, 3, 3 * AR],
                    [t, 1, n1]
                ];

                function h(v, _, C) {
                    const M = Math.abs(_ - v) / C,
                        L = QC(([, , Q]) => Q).right(l, M);
                    if (L === l.length) return t.every(e1(v / n1, _ / n1, C));
                    if (0 === L) return py.every(Math.max(e1(v, _, C), 1));
                    const [j, Z] = l[M / l[L - 1][2] < l[L][2] / M ? L - 1 : L];
                    return j.every(Z)
                }
                return [function u(v, _, C) {
                    const M = _ < v;
                    M && ([v, _] = [_, v]);
                    const L = C && "function" == typeof C.range ? C : h(v, _, C),
                        j = L ? L.range(v, +_ + 1) : [];
                    return M ? j.reverse() : j
                }, h]
            }
            d1.every = t => isFinite(t = Math.floor(t)) && t > 0 ? Ns(n => {
                n.setUTCFullYear(Math.floor(n.getUTCFullYear() / t) * t), n.setUTCMonth(0, 1), n.setUTCHours(0, 0, 0, 0)
            }, (n, e) => {
                n.setUTCFullYear(n.getUTCFullYear() + e * t)
            }) : null;
            const [jwe, $we] = IR(d1, OR, PR, MR, ER, kR), [kie, Eie] = IR(gy, u1, c1, l1, o1, a1);
            var h1 = new Date,
                f1 = new Date;

            function pl(t, n, e, i) {
                function s(r) {
                    return t(r = 0 === arguments.length ? new Date : new Date(+r)), r
                }
                return s.floor = function(r) {
                    return t(r = new Date(+r)), r
                }, s.ceil = function(r) {
                    return t(r = new Date(r - 1)), n(r, 1), t(r), r
                }, s.round = function(r) {
                    var l = s(r),
                        u = s.ceil(r);
                    return r - l < u - r ? l : u
                }, s.offset = function(r, l) {
                    return n(r = new Date(+r), null == l ? 1 : Math.floor(l)), r
                }, s.range = function(r, l, u) {
                    var v, h = [];
                    if (r = s.ceil(r), u = null == u ? 1 : Math.floor(u), !(r < l && u > 0)) return h;
                    do {
                        h.push(v = new Date(+r)), n(r, u), t(r)
                    } while (v < r && r < l);
                    return h
                }, s.filter = function(r) {
                    return pl(function(l) {
                        if (l >= l)
                            for (; t(l), !r(l);) l.setTime(l - 1)
                    }, function(l, u) {
                        if (l >= l)
                            if (u < 0)
                                for (; ++u <= 0;)
                                    for (; n(l, -1), !r(l););
                            else
                                for (; --u >= 0;)
                                    for (; n(l, 1), !r(l););
                    })
                }, e && (s.count = function(r, l) {
                    return h1.setTime(+r), f1.setTime(+l), t(h1), t(f1), Math.floor(e(h1, f1))
                }, s.every = function(r) {
                    return r = Math.floor(r), isFinite(r) && r > 0 ? r > 1 ? s.filter(i ? function(l) {
                        return i(l) % r == 0
                    } : function(l) {
                        return s.count(0, l) % r == 0
                    }) : s : null
                }), s
            }
            const ip = 864e5,
                LR = 7 * ip;

            function tu(t) {
                return pl(function(n) {
                    n.setUTCDate(n.getUTCDate() - (n.getUTCDay() + 7 - t) % 7), n.setUTCHours(0, 0, 0, 0)
                }, function(n, e) {
                    n.setUTCDate(n.getUTCDate() + 7 * e)
                }, function(n, e) {
                    return (e - n) / LR
                })
            }
            var FR = tu(0),
                my = tu(1),
                Fd = (tu(2), tu(3), tu(4));
            const RR = (tu(5), tu(6), pl(function(t) {
                t.setUTCHours(0, 0, 0, 0)
            }, function(t, n) {
                t.setUTCDate(t.getUTCDate() + n)
            }, function(t, n) {
                return (n - t) / ip
            }, function(t) {
                return t.getUTCDate() - 1
            }));

            function nu(t) {
                return pl(function(n) {
                    n.setDate(n.getDate() - (n.getDay() + 7 - t) % 7), n.setHours(0, 0, 0, 0)
                }, function(n, e) {
                    n.setDate(n.getDate() + 7 * e)
                }, function(n, e) {
                    return (e - n - 6e4 * (e.getTimezoneOffset() - n.getTimezoneOffset())) / LR
                })
            }
            var BR = nu(0),
                vy = nu(1),
                Nd = (nu(2), nu(3), nu(4));
            const HR = (nu(5), nu(6), pl(t => t.setHours(0, 0, 0, 0), (t, n) => t.setDate(t.getDate() + n), (t, n) => (n - t - 6e4 * (n.getTimezoneOffset() - t.getTimezoneOffset())) / ip, t => t.getDate() - 1));
            var g1 = pl(function(t) {
                t.setMonth(0, 1), t.setHours(0, 0, 0, 0)
            }, function(t, n) {
                t.setFullYear(t.getFullYear() + n)
            }, function(t, n) {
                return n.getFullYear() - t.getFullYear()
            }, function(t) {
                return t.getFullYear()
            });
            g1.every = function(t) {
                return isFinite(t = Math.floor(t)) && t > 0 ? pl(function(n) {
                    n.setFullYear(Math.floor(n.getFullYear() / t) * t), n.setMonth(0, 1), n.setHours(0, 0, 0, 0)
                }, function(n, e) {
                    n.setFullYear(n.getFullYear() + e * t)
                }) : null
            };
            const sp = g1;
            var m1 = pl(function(t) {
                t.setUTCMonth(0, 1), t.setUTCHours(0, 0, 0, 0)
            }, function(t, n) {
                t.setUTCFullYear(t.getUTCFullYear() + n)
            }, function(t, n) {
                return n.getUTCFullYear() - t.getUTCFullYear()
            }, function(t) {
                return t.getUTCFullYear()
            });
            m1.every = function(t) {
                return isFinite(t = Math.floor(t)) && t > 0 ? pl(function(n) {
                    n.setUTCFullYear(Math.floor(n.getUTCFullYear() / t) * t), n.setUTCMonth(0, 1), n.setUTCHours(0, 0, 0, 0)
                }, function(n, e) {
                    n.setUTCFullYear(n.getUTCFullYear() + e * t)
                }) : null
            };
            const rp = m1;

            function v1(t) {
                if (0 <= t.y && t.y < 100) {
                    var n = new Date(-1, t.m, t.d, t.H, t.M, t.S, t.L);
                    return n.setFullYear(t.y), n
                }
                return new Date(t.y, t.m, t.d, t.H, t.M, t.S, t.L)
            }

            function y1(t) {
                if (0 <= t.y && t.y < 100) {
                    var n = new Date(Date.UTC(-1, t.m, t.d, t.H, t.M, t.S, t.L));
                    return n.setUTCFullYear(t.y), n
                }
                return new Date(Date.UTC(t.y, t.m, t.d, t.H, t.M, t.S, t.L))
            }

            function ap(t, n, e) {
                return {
                    y: t,
                    m: n,
                    d: e,
                    H: 0,
                    M: 0,
                    S: 0,
                    L: 0
                }
            }
            var zR = {
                    "-": "",
                    _: " ",
                    0: "0"
                },
                Ws = /^\s*\d+/,
                Vie = /^%/,
                Hie = /[\\^$*+?|[\]().{}]/g;

            function wi(t, n, e) {
                var i = t < 0 ? "-" : "",
                    s = (i ? -t : t) + "",
                    r = s.length;
                return i + (r < e ? new Array(e - r + 1).join(n) + s : s)
            }

            function zie(t) {
                return t.replace(Hie, "\\$&")
            }

            function op(t) {
                return new RegExp("^(?:" + t.map(zie).join("|") + ")", "i")
            }

            function lp(t) {
                return new Map(t.map((n, e) => [n.toLowerCase(), e]))
            }

            function jie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 1));
                return i ? (t.w = +i[0], e + i[0].length) : -1
            }

            function $ie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 1));
                return i ? (t.u = +i[0], e + i[0].length) : -1
            }

            function Uie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.U = +i[0], e + i[0].length) : -1
            }

            function Wie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.V = +i[0], e + i[0].length) : -1
            }

            function Gie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.W = +i[0], e + i[0].length) : -1
            }

            function jR(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 4));
                return i ? (t.y = +i[0], e + i[0].length) : -1
            }

            function $R(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.y = +i[0] + (+i[0] > 68 ? 1900 : 2e3), e + i[0].length) : -1
            }

            function Xie(t, n, e) {
                var i = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e, e + 6));
                return i ? (t.Z = i[1] ? 0 : -(i[2] + (i[3] || "00")), e + i[0].length) : -1
            }

            function Yie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 1));
                return i ? (t.q = 3 * i[0] - 3, e + i[0].length) : -1
            }

            function qie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.m = i[0] - 1, e + i[0].length) : -1
            }

            function UR(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.d = +i[0], e + i[0].length) : -1
            }

            function Zie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 3));
                return i ? (t.m = 0, t.d = +i[0], e + i[0].length) : -1
            }

            function WR(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.H = +i[0], e + i[0].length) : -1
            }

            function Kie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.M = +i[0], e + i[0].length) : -1
            }

            function Qie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 2));
                return i ? (t.S = +i[0], e + i[0].length) : -1
            }

            function Jie(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 3));
                return i ? (t.L = +i[0], e + i[0].length) : -1
            }

            function ese(t, n, e) {
                var i = Ws.exec(n.slice(e, e + 6));
                return i ? (t.L = Math.floor(i[0] / 1e3), e + i[0].length) : -1
            }

            function tse(t, n, e) {
                var i = Vie.exec(n.slice(e, e + 1));
                return i ? e + i[0].length : -1
            }

            function nse(t, n, e) {
                var i = Ws.exec(n.slice(e));
                return i ? (t.Q = +i[0], e + i[0].length) : -1
            }

            function ise(t, n, e) {
                var i = Ws.exec(n.slice(e));
                return i ? (t.s = +i[0], e + i[0].length) : -1
            }

            function GR(t, n) {
                return wi(t.getDate(), n, 2)
            }

            function sse(t, n) {
                return wi(t.getHours(), n, 2)
            }

            function rse(t, n) {
                return wi(t.getHours() % 12 || 12, n, 2)
            }

            function ase(t, n) {
                return wi(1 + HR.count(sp(t), t), n, 3)
            }

            function XR(t, n) {
                return wi(t.getMilliseconds(), n, 3)
            }

            function ose(t, n) {
                return XR(t, n) + "000"
            }

            function lse(t, n) {
                return wi(t.getMonth() + 1, n, 2)
            }

            function cse(t, n) {
                return wi(t.getMinutes(), n, 2)
            }

            function use(t, n) {
                return wi(t.getSeconds(), n, 2)
            }

            function dse(t) {
                var n = t.getDay();
                return 0 === n ? 7 : n
            }

            function hse(t, n) {
                return wi(BR.count(sp(t) - 1, t), n, 2)
            }

            function YR(t) {
                var n = t.getDay();
                return n >= 4 || 0 === n ? Nd(t) : Nd.ceil(t)
            }

            function fse(t, n) {
                return t = YR(t), wi(Nd.count(sp(t), t) + (4 === sp(t).getDay()), n, 2)
            }

            function pse(t) {
                return t.getDay()
            }

            function gse(t, n) {
                return wi(vy.count(sp(t) - 1, t), n, 2)
            }

            function mse(t, n) {
                return wi(t.getFullYear() % 100, n, 2)
            }

            function vse(t, n) {
                return wi((t = YR(t)).getFullYear() % 100, n, 2)
            }

            function yse(t, n) {
                return wi(t.getFullYear() % 1e4, n, 4)
            }

            function bse(t, n) {
                var e = t.getDay();
                return wi((t = e >= 4 || 0 === e ? Nd(t) : Nd.ceil(t)).getFullYear() % 1e4, n, 4)
            }

            function xse(t) {
                var n = t.getTimezoneOffset();
                return (n > 0 ? "-" : (n *= -1, "+")) + wi(n / 60 | 0, "0", 2) + wi(n % 60, "0", 2)
            }

            function qR(t, n) {
                return wi(t.getUTCDate(), n, 2)
            }

            function _se(t, n) {
                return wi(t.getUTCHours(), n, 2)
            }

            function wse(t, n) {
                return wi(t.getUTCHours() % 12 || 12, n, 2)
            }

            function Cse(t, n) {
                return wi(1 + RR.count(rp(t), t), n, 3)
            }

            function ZR(t, n) {
                return wi(t.getUTCMilliseconds(), n, 3)
            }

            function Sse(t, n) {
                return ZR(t, n) + "000"
            }

            function Tse(t, n) {
                return wi(t.getUTCMonth() + 1, n, 2)
            }

            function Dse(t, n) {
                return wi(t.getUTCMinutes(), n, 2)
            }

            function Ase(t, n) {
                return wi(t.getUTCSeconds(), n, 2)
            }

            function kse(t) {
                var n = t.getUTCDay();
                return 0 === n ? 7 : n
            }

            function Ese(t, n) {
                return wi(FR.count(rp(t) - 1, t), n, 2)
            }

            function KR(t) {
                var n = t.getUTCDay();
                return n >= 4 || 0 === n ? Fd(t) : Fd.ceil(t)
            }

            function Mse(t, n) {
                return t = KR(t), wi(Fd.count(rp(t), t) + (4 === rp(t).getUTCDay()), n, 2)
            }

            function Pse(t) {
                return t.getUTCDay()
            }

            function Ose(t, n) {
                return wi(my.count(rp(t) - 1, t), n, 2)
            }

            function Ise(t, n) {
                return wi(t.getUTCFullYear() % 100, n, 2)
            }

            function Lse(t, n) {
                return wi((t = KR(t)).getUTCFullYear() % 100, n, 2)
            }

            function Fse(t, n) {
                return wi(t.getUTCFullYear() % 1e4, n, 4)
            }

            function Nse(t, n) {
                var e = t.getUTCDay();
                return wi((t = e >= 4 || 0 === e ? Fd(t) : Fd.ceil(t)).getUTCFullYear() % 1e4, n, 4)
            }

            function Rse() {
                return "+0000"
            }

            function QR() {
                return "%"
            }

            function JR(t) {
                return +t
            }

            function e5(t) {
                return Math.floor(+t / 1e3)
            }

            function n5(t) {
                return null === t ? NaN : +t
            }! function zse(t) {
                (function Bie(t) {
                    var n = t.dateTime,
                        e = t.date,
                        i = t.time,
                        s = t.periods,
                        r = t.days,
                        l = t.shortDays,
                        u = t.months,
                        h = t.shortMonths,
                        v = op(s),
                        _ = lp(s),
                        C = op(r),
                        M = lp(r),
                        L = op(l),
                        j = lp(l),
                        Z = op(u),
                        Q = lp(u),
                        Ae = op(h),
                        De = lp(h),
                        Ue = {
                            a: function $t(Ut) {
                                return l[Ut.getDay()]
                            },
                            A: function Qt(Ut) {
                                return r[Ut.getDay()]
                            },
                            b: function en(Ut) {
                                return h[Ut.getMonth()]
                            },
                            B: function ai(Ut) {
                                return u[Ut.getMonth()]
                            },
                            c: null,
                            d: GR,
                            e: GR,
                            f: ose,
                            g: vse,
                            G: bse,
                            H: sse,
                            I: rse,
                            j: ase,
                            L: XR,
                            m: lse,
                            M: cse,
                            p: function Ci(Ut) {
                                return s[+(Ut.getHours() >= 12)]
                            },
                            q: function ci(Ut) {
                                return 1 + ~~(Ut.getMonth() / 3)
                            },
                            Q: JR,
                            s: e5,
                            S: use,
                            u: dse,
                            U: hse,
                            V: fse,
                            w: pse,
                            W: gse,
                            x: null,
                            X: null,
                            y: mse,
                            Y: yse,
                            Z: xse,
                            "%": QR
                        },
                        it = {
                            a: function Jr(Ut) {
                                return l[Ut.getUTCDay()]
                            },
                            A: function Oi(Ut) {
                                return r[Ut.getUTCDay()]
                            },
                            b: function xl(Ut) {
                                return h[Ut.getUTCMonth()]
                            },
                            B: function oc(Ut) {
                                return u[Ut.getUTCMonth()]
                            },
                            c: null,
                            d: qR,
                            e: qR,
                            f: Sse,
                            g: Lse,
                            G: Nse,
                            H: _se,
                            I: wse,
                            j: Cse,
                            L: ZR,
                            m: Tse,
                            M: Dse,
                            p: function vi(Ut) {
                                return s[+(Ut.getUTCHours() >= 12)]
                            },
                            q: function Fr(Ut) {
                                return 1 + ~~(Ut.getUTCMonth() / 3)
                            },
                            Q: JR,
                            s: e5,
                            S: Ase,
                            u: kse,
                            U: Ese,
                            V: Mse,
                            w: Pse,
                            W: Ose,
                            x: null,
                            X: null,
                            y: Ise,
                            Y: Fse,
                            Z: Rse,
                            "%": QR
                        },
                        lt = {
                            a: function Ln(Ut, kn, ei) {
                                var Nt = L.exec(kn.slice(ei));
                                return Nt ? (Ut.w = j.get(Nt[0].toLowerCase()), ei + Nt[0].length) : -1
                            },
                            A: function rn(Ut, kn, ei) {
                                var Nt = C.exec(kn.slice(ei));
                                return Nt ? (Ut.w = M.get(Nt[0].toLowerCase()), ei + Nt[0].length) : -1
                            },
                            b: function rs(Ut, kn, ei) {
                                var Nt = Ae.exec(kn.slice(ei));
                                return Nt ? (Ut.m = De.get(Nt[0].toLowerCase()), ei + Nt[0].length) : -1
                            },
                            B: function Zn(Ut, kn, ei) {
                                var Nt = Z.exec(kn.slice(ei));
                                return Nt ? (Ut.m = Q.get(Nt[0].toLowerCase()), ei + Nt[0].length) : -1
                            },
                            c: function Bi(Ut, kn, ei) {
                                return on(Ut, n, kn, ei)
                            },
                            d: UR,
                            e: UR,
                            f: ese,
                            g: $R,
                            G: jR,
                            H: WR,
                            I: WR,
                            j: Zie,
                            L: Jie,
                            m: qie,
                            M: Kie,
                            p: function hi(Ut, kn, ei) {
                                var Nt = v.exec(kn.slice(ei));
                                return Nt ? (Ut.p = _.get(Nt[0].toLowerCase()), ei + Nt[0].length) : -1
                            },
                            q: Yie,
                            Q: nse,
                            s: ise,
                            S: Qie,
                            u: $ie,
                            U: Uie,
                            V: Wie,
                            w: jie,
                            W: Gie,
                            x: function mr(Ut, kn, ei) {
                                return on(Ut, e, kn, ei)
                            },
                            X: function Bt(Ut, kn, ei) {
                                return on(Ut, i, kn, ei)
                            },
                            y: $R,
                            Y: jR,
                            Z: Xie,
                            "%": tse
                        };

                    function ht(Ut, kn) {
                        return function(ei) {
                            var Rr, Cn, ys, Nt = [],
                                vs = -1,
                                Vi = 0,
                                Nr = Ut.length;
                            for (ei instanceof Date || (ei = new Date(+ei)); ++vs < Nr;) 37 === Ut.charCodeAt(vs) && (Nt.push(Ut.slice(Vi, vs)), null != (Cn = zR[Rr = Ut.charAt(++vs)]) ? Rr = Ut.charAt(++vs) : Cn = "e" === Rr ? " " : "0", (ys = kn[Rr]) && (Rr = ys(ei, Cn)), Nt.push(Rr), Vi = vs + 1);
                            return Nt.push(Ut.slice(Vi, vs)), Nt.join("")
                        }
                    }

                    function Ht(Ut, kn) {
                        return function(ei) {
                            var Vi, Nr, Nt = ap(1900, void 0, 1);
                            if (on(Nt, Ut, ei += "", 0) != ei.length) return null;
                            if ("Q" in Nt) return new Date(Nt.Q);
                            if ("s" in Nt) return new Date(1e3 * Nt.s + ("L" in Nt ? Nt.L : 0));
                            if (kn && !("Z" in Nt) && (Nt.Z = 0), "p" in Nt && (Nt.H = Nt.H % 12 + 12 * Nt.p), void 0 === Nt.m && (Nt.m = "q" in Nt ? Nt.q : 0), "V" in Nt) {
                                if (Nt.V < 1 || Nt.V > 53) return null;
                                "w" in Nt || (Nt.w = 1), "Z" in Nt ? (Nr = (Vi = y1(ap(Nt.y, 0, 1))).getUTCDay(), Vi = Nr > 4 || 0 === Nr ? my.ceil(Vi) : my(Vi), Vi = RR.offset(Vi, 7 * (Nt.V - 1)), Nt.y = Vi.getUTCFullYear(), Nt.m = Vi.getUTCMonth(), Nt.d = Vi.getUTCDate() + (Nt.w + 6) % 7) : (Nr = (Vi = v1(ap(Nt.y, 0, 1))).getDay(), Vi = Nr > 4 || 0 === Nr ? vy.ceil(Vi) : vy(Vi), Vi = HR.offset(Vi, 7 * (Nt.V - 1)), Nt.y = Vi.getFullYear(), Nt.m = Vi.getMonth(), Nt.d = Vi.getDate() + (Nt.w + 6) % 7)
                            } else("W" in Nt || "U" in Nt) && ("w" in Nt || (Nt.w = "u" in Nt ? Nt.u % 7 : "W" in Nt ? 1 : 0), Nr = "Z" in Nt ? y1(ap(Nt.y, 0, 1)).getUTCDay() : v1(ap(Nt.y, 0, 1)).getDay(), Nt.m = 0, Nt.d = "W" in Nt ? (Nt.w + 6) % 7 + 7 * Nt.W - (Nr + 5) % 7 : Nt.w + 7 * Nt.U - (Nr + 6) % 7);
                            return "Z" in Nt ? (Nt.H += Nt.Z / 100 | 0, Nt.M += Nt.Z % 100, y1(Nt)) : v1(Nt)
                        }
                    }

                    function on(Ut, kn, ei, Nt) {
                        for (var Rr, Cn, vs = 0, Vi = kn.length, Nr = ei.length; vs < Vi;) {
                            if (Nt >= Nr) return -1;
                            if (37 === (Rr = kn.charCodeAt(vs++))) {
                                if (Rr = kn.charAt(vs++), !(Cn = lt[Rr in zR ? kn.charAt(vs++) : Rr]) || (Nt = Cn(Ut, ei, Nt)) < 0) return -1
                            } else if (Rr != ei.charCodeAt(Nt++)) return -1
                        }
                        return Nt
                    }
                    return Ue.x = ht(e, Ue), Ue.X = ht(i, Ue), Ue.c = ht(n, Ue), it.x = ht(e, it), it.X = ht(i, it), it.c = ht(n, it), {
                        format: function(Ut) {
                            var kn = ht(Ut += "", Ue);
                            return kn.toString = function() {
                                return Ut
                            }, kn
                        },
                        parse: function(Ut) {
                            var kn = Ht(Ut += "", !1);
                            return kn.toString = function() {
                                return Ut
                            }, kn
                        },
                        utcFormat: function(Ut) {
                            var kn = ht(Ut += "", it);
                            return kn.toString = function() {
                                return Ut
                            }, kn
                        },
                        utcParse: function(Ut) {
                            var kn = Ht(Ut += "", !0);
                            return kn.toString = function() {
                                return Ut
                            }, kn
                        }
                    }
                })(t)
            }({
                dateTime: "%x, %X",
                date: "%-m/%-d/%Y",
                time: "%-I:%M:%S %p",
                periods: ["AM", "PM"],
                days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
            });
            const jse = QC(np).right,
                s5 = (QC(n5), jse);

            function $se(t, n) {
                return t = +t, n = +n,
                    function(e) {
                        return Math.round(t * (1 - e) + n * e)
                    }
            }

            function Wse(t) {
                return +t
            }
            var r5 = [0, 1];

            function Bd(t) {
                return t
            }

            function b1(t, n) {
                return (n -= t = +t) ? function(e) {
                    return (e - t) / n
                } : function Use(t) {
                    return function() {
                        return t
                    }
                }(isNaN(n) ? NaN : .5)
            }

            function Xse(t, n, e) {
                var i = t[0],
                    s = t[1],
                    r = n[0],
                    l = n[1];
                return s < i ? (i = b1(s, i), r = e(l, r)) : (i = b1(i, s), r = e(r, l)),
                    function(u) {
                        return r(i(u))
                    }
            }

            function Yse(t, n, e) {
                var i = Math.min(t.length, n.length) - 1,
                    s = new Array(i),
                    r = new Array(i),
                    l = -1;
                for (t[i] < t[0] && (t = t.slice().reverse(), n = n.slice().reverse()); ++l < i;) s[l] = b1(t[l], t[l + 1]), r[l] = e(n[l], n[l + 1]);
                return function(u) {
                    var h = s5(t, u, 1, i) - 1;
                    return r[h](s[h](u))
                }
            }

            function o5() {
                return function qse() {
                    var i, s, r, u, h, v, t = r5,
                        n = r5,
                        e = ny,
                        l = Bd;

                    function _() {
                        var M = Math.min(t.length, n.length);
                        return l !== Bd && (l = function Gse(t, n) {
                            var e;
                            return t > n && (e = t, t = n, n = e),
                                function(i) {
                                    return Math.max(t, Math.min(n, i))
                                }
                        }(t[0], t[M - 1])), u = M > 2 ? Yse : Xse, h = v = null, C
                    }

                    function C(M) {
                        return null == M || isNaN(M = +M) ? r : (h || (h = u(t.map(i), n, e)))(i(l(M)))
                    }
                    return C.invert = function(M) {
                            return l(s((v || (v = u(n, t.map(i), Ja)))(M)))
                        }, C.domain = function(M) {
                            return arguments.length ? (t = Array.from(M, Wse), _()) : t.slice()
                        }, C.range = function(M) {
                            return arguments.length ? (n = Array.from(M), _()) : n.slice()
                        }, C.rangeRound = function(M) {
                            return n = Array.from(M), e = $se, _()
                        }, C.clamp = function(M) {
                            return arguments.length ? (l = !!M || Bd, _()) : l !== Bd
                        }, C.interpolate = function(M) {
                            return arguments.length ? (e = M, _()) : e
                        }, C.unknown = function(M) {
                            return arguments.length ? (r = M, C) : r
                        },
                        function(M, L) {
                            return i = M, s = L, _()
                        }
                }()(Bd, Bd)
            }

            function cp(t, n) {
                switch (arguments.length) {
                    case 0:
                        break;
                    case 1:
                        this.range(t);
                        break;
                    default:
                        this.range(n).domain(t)
                }
                return this
            }
            var c5, ere = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

            function yy(t) {
                if (!(n = ere.exec(t))) throw new Error("invalid format: " + t);
                var n;
                return new x1({
                    fill: n[1],
                    align: n[2],
                    sign: n[3],
                    symbol: n[4],
                    zero: n[5],
                    width: n[6],
                    comma: n[7],
                    precision: n[8] && n[8].slice(1),
                    trim: n[9],
                    type: n[10]
                })
            }

            function x1(t) {
                this.fill = void 0 === t.fill ? " " : t.fill + "", this.align = void 0 === t.align ? ">" : t.align + "", this.sign = void 0 === t.sign ? "-" : t.sign + "", this.symbol = void 0 === t.symbol ? "" : t.symbol + "", this.zero = !!t.zero, this.width = void 0 === t.width ? void 0 : +t.width, this.comma = !!t.comma, this.precision = void 0 === t.precision ? void 0 : +t.precision, this.trim = !!t.trim, this.type = void 0 === t.type ? "" : t.type + ""
            }

            function by(t, n) {
                if ((e = (t = n ? t.toExponential(n - 1) : t.toExponential()).indexOf("e")) < 0) return null;
                var e, i = t.slice(0, e);
                return [i.length > 1 ? i[0] + i.slice(2) : i, +t.slice(e + 1)]
            }

            function Vd(t) {
                return (t = by(Math.abs(t))) ? t[1] : NaN
            }

            function u5(t, n) {
                var e = by(t, n);
                if (!e) return t + "";
                var i = e[0],
                    s = e[1];
                return s < 0 ? "0." + new Array(-s).join("0") + i : i.length > s + 1 ? i.slice(0, s + 1) + "." + i.slice(s + 1) : i + new Array(s - i.length + 2).join("0")
            }
            yy.prototype = x1.prototype, x1.prototype.toString = function() {
                return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (void 0 === this.width ? "" : Math.max(1, 0 | this.width)) + (this.comma ? "," : "") + (void 0 === this.precision ? "" : "." + Math.max(0, 0 | this.precision)) + (this.trim ? "~" : "") + this.type
            };
            const d5 = {
                "%": (t, n) => (100 * t).toFixed(n),
                b: t => Math.round(t).toString(2),
                c: t => t + "",
                d: function tre(t) {
                    return Math.abs(t = Math.round(t)) >= 1e21 ? t.toLocaleString("en").replace(/,/g, "") : t.toString(10)
                },
                e: (t, n) => t.toExponential(n),
                f: (t, n) => t.toFixed(n),
                g: (t, n) => t.toPrecision(n),
                o: t => Math.round(t).toString(8),
                p: (t, n) => u5(100 * t, n),
                r: u5,
                s: function are(t, n) {
                    var e = by(t, n);
                    if (!e) return t + "";
                    var i = e[0],
                        s = e[1],
                        r = s - (c5 = 3 * Math.max(-8, Math.min(8, Math.floor(s / 3)))) + 1,
                        l = i.length;
                    return r === l ? i : r > l ? i + new Array(r - l + 1).join("0") : r > 0 ? i.slice(0, r) + "." + i.slice(r) : "0." + new Array(1 - r).join("0") + by(t, Math.max(0, n + r - 1))[0]
                },
                X: t => Math.round(t).toString(16).toUpperCase(),
                x: t => Math.round(t).toString(16)
            };

            function h5(t) {
                return t
            }
            var xy, g5, m5, f5 = Array.prototype.map,
                p5 = ["y", "z", "a", "f", "p", "n", "\xb5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

            function hre(t) {
                var n = t.domain;
                return t.ticks = function(e) {
                    var i = n();
                    return function gie(t, n, e) {
                        if (!((e = +e) > 0)) return [];
                        if ((t = +t) == (n = +n)) return [t];
                        const i = n < t,
                            [s, r, l] = i ? fy(n, t, e) : fy(t, n, e);
                        if (!(r >= s)) return [];
                        const u = r - s + 1,
                            h = new Array(u);
                        if (i)
                            if (l < 0)
                                for (let v = 0; v < u; ++v) h[v] = (r - v) / -l;
                            else
                                for (let v = 0; v < u; ++v) h[v] = (r - v) * l;
                        else if (l < 0)
                            for (let v = 0; v < u; ++v) h[v] = (s + v) / -l;
                        else
                            for (let v = 0; v < u; ++v) h[v] = (s + v) * l;
                        return h
                    }(i[0], i[i.length - 1], e ? ? 10)
                }, t.tickFormat = function(e, i) {
                    var s = n();
                    return function dre(t, n, e, i) {
                        var r, s = e1(t, n, e);
                        switch ((i = yy(i ? ? ",f")).type) {
                            case "s":
                                var l = Math.max(Math.abs(t), Math.abs(n));
                                return null == i.precision && !isNaN(r = function nre(t, n) {
                                    return Math.max(0, 3 * Math.max(-8, Math.min(8, Math.floor(Vd(n) / 3))) - Vd(Math.abs(t)))
                                }(s, l)) && (i.precision = r), m5(i, l);
                            case "":
                            case "e":
                            case "g":
                            case "p":
                            case "r":
                                null == i.precision && !isNaN(r = function cre(t, n) {
                                    return t = Math.abs(t), n = Math.abs(n) - t, Math.max(0, Vd(n) - Vd(t)) + 1
                                }(s, Math.max(Math.abs(t), Math.abs(n)))) && (i.precision = r - ("e" === i.type));
                                break;
                            case "f":
                            case "%":
                                null == i.precision && !isNaN(r = function ure(t) {
                                    return Math.max(0, -Vd(Math.abs(t)))
                                }(s)) && (i.precision = r - 2 * ("%" === i.type))
                        }
                        return g5(i)
                    }(s[0], s[s.length - 1], e ? ? 10, i)
                }, t.nice = function(e) {
                    null == e && (e = 10);
                    var h, v, i = n(),
                        s = 0,
                        r = i.length - 1,
                        l = i[s],
                        u = i[r],
                        _ = 10;
                    for (u < l && (v = l, l = u, u = v, v = s, s = r, r = v); _-- > 0;) {
                        if ((v = JC(l, u, e)) === h) return i[s] = l, i[r] = u, n(i);
                        if (v > 0) l = Math.floor(l / v) * v, u = Math.ceil(u / v) * v;
                        else {
                            if (!(v < 0)) break;
                            l = Math.ceil(l * v) / v, u = Math.floor(u * v) / v
                        }
                        h = v
                    }
                    return t
                }, t
            }

            function Hd() {
                var t = o5();
                return t.copy = function() {
                    return function a5(t, n) {
                        return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown())
                    }(t, Hd())
                }, cp.apply(t, arguments), hre(t)
            }

            function v5(t, n, e) {
                t = +t, n = +n, e = (s = arguments.length) < 2 ? (n = t, t = 0, 1) : s < 3 ? 1 : +e;
                for (var i = -1, s = 0 | Math.max(0, Math.ceil((n - t) / e)), r = new Array(s); ++i < s;) r[i] = t + i * e;
                return r
            }! function lre(t) {
                xy = function ore(t) {
                    var n = void 0 === t.grouping || void 0 === t.thousands ? h5 : function ire(t, n) {
                            return function(e, i) {
                                for (var s = e.length, r = [], l = 0, u = t[0], h = 0; s > 0 && u > 0 && (h + u + 1 > i && (u = Math.max(1, i - h)), r.push(e.substring(s -= u, s + u)), !((h += u + 1) > i));) u = t[l = (l + 1) % t.length];
                                return r.reverse().join(n)
                            }
                        }(f5.call(t.grouping, Number), t.thousands + ""),
                        e = void 0 === t.currency ? "" : t.currency[0] + "",
                        i = void 0 === t.currency ? "" : t.currency[1] + "",
                        s = void 0 === t.decimal ? "." : t.decimal + "",
                        r = void 0 === t.numerals ? h5 : function sre(t) {
                            return function(n) {
                                return n.replace(/[0-9]/g, function(e) {
                                    return t[+e]
                                })
                            }
                        }(f5.call(t.numerals, String)),
                        l = void 0 === t.percent ? "%" : t.percent + "",
                        u = void 0 === t.minus ? "\u2212" : t.minus + "",
                        h = void 0 === t.nan ? "NaN" : t.nan + "";

                    function v(C) {
                        var M = (C = yy(C)).fill,
                            L = C.align,
                            j = C.sign,
                            Z = C.symbol,
                            Q = C.zero,
                            Ae = C.width,
                            De = C.comma,
                            Ue = C.precision,
                            it = C.trim,
                            lt = C.type;
                        "n" === lt ? (De = !0, lt = "g") : d5[lt] || (void 0 === Ue && (Ue = 12), it = !0, lt = "g"), (Q || "0" === M && "=" === L) && (Q = !0, M = "0", L = "=");
                        var ht = "$" === Z ? e : "#" === Z && /[boxX]/.test(lt) ? "0" + lt.toLowerCase() : "",
                            Ht = "$" === Z ? i : /[%p]/.test(lt) ? l : "",
                            on = d5[lt],
                            hi = /[defgprs%]/.test(lt);

                        function Ln(rn) {
                            var Bi, mr, Bt, rs = ht,
                                Zn = Ht;
                            if ("c" === lt) Zn = on(rn) + Zn, rn = "";
                            else {
                                var $t = (rn = +rn) < 0 || 1 / rn < 0;
                                if (rn = isNaN(rn) ? h : on(Math.abs(rn), Ue), it && (rn = function rre(t) {
                                        e: for (var s, n = t.length, e = 1, i = -1; e < n; ++e) switch (t[e]) {
                                            case ".":
                                                i = s = e;
                                                break;
                                            case "0":
                                                0 === i && (i = e), s = e;
                                                break;
                                            default:
                                                if (!+t[e]) break e;
                                                i > 0 && (i = 0)
                                        }
                                        return i > 0 ? t.slice(0, i) + t.slice(s + 1) : t
                                    }(rn)), $t && 0 == +rn && "+" !== j && ($t = !1), rs = ($t ? "(" === j ? j : u : "-" === j || "(" === j ? "" : j) + rs, Zn = ("s" === lt ? p5[8 + c5 / 3] : "") + Zn + ($t && "(" === j ? ")" : ""), hi)
                                    for (Bi = -1, mr = rn.length; ++Bi < mr;)
                                        if (48 > (Bt = rn.charCodeAt(Bi)) || Bt > 57) {
                                            Zn = (46 === Bt ? s + rn.slice(Bi + 1) : rn.slice(Bi)) + Zn, rn = rn.slice(0, Bi);
                                            break
                                        }
                            }
                            De && !Q && (rn = n(rn, 1 / 0));
                            var Qt = rs.length + rn.length + Zn.length,
                                en = Qt < Ae ? new Array(Ae - Qt + 1).join(M) : "";
                            switch (De && Q && (rn = n(en + rn, en.length ? Ae - Zn.length : 1 / 0), en = ""), L) {
                                case "<":
                                    rn = rs + rn + Zn + en;
                                    break;
                                case "=":
                                    rn = rs + en + rn + Zn;
                                    break;
                                case "^":
                                    rn = en.slice(0, Qt = en.length >> 1) + rs + rn + Zn + en.slice(Qt);
                                    break;
                                default:
                                    rn = en + rs + rn + Zn
                            }
                            return r(rn)
                        }
                        return Ue = void 0 === Ue ? 6 : /[gprs]/.test(lt) ? Math.max(1, Math.min(21, Ue)) : Math.max(0, Math.min(20, Ue)), Ln.toString = function() {
                            return C + ""
                        }, Ln
                    }
                    return {
                        format: v,
                        formatPrefix: function _(C, M) {
                            var L = v(((C = yy(C)).type = "f", C)),
                                j = 3 * Math.max(-8, Math.min(8, Math.floor(Vd(M) / 3))),
                                Z = Math.pow(10, -j),
                                Q = p5[8 + j / 3];
                            return function(Ae) {
                                return L(Z * Ae) + Q
                            }
                        }
                    }
                }(t), g5 = xy.format, m5 = xy.formatPrefix
            }({
                thousands: ",",
                grouping: [3],
                currency: ["$", ""]
            });
            class y5 extends Map {
                constructor(n, e = _5) {
                    if (super(), Object.defineProperties(this, {
                            _intern: {
                                value: new Map
                            },
                            _key: {
                                value: e
                            }
                        }), null != n)
                        for (const [i, s] of n) this.set(i, s)
                }
                get(n) {
                    return super.get(_1(this, n))
                }
                has(n) {
                    return super.has(_1(this, n))
                }
                set(n, e) {
                    return super.set(function b5({
                        _intern: t,
                        _key: n
                    }, e) {
                        const i = n(e);
                        return t.has(i) ? t.get(i) : (t.set(i, e), e)
                    }(this, n), e)
                }
                delete(n) {
                    return super.delete(function x5({
                        _intern: t,
                        _key: n
                    }, e) {
                        const i = n(e);
                        return t.has(i) && (e = t.get(i), t.delete(i)), e
                    }(this, n))
                }
            }

            function _1({
                _intern: t,
                _key: n
            }, e) {
                const i = n(e);
                return t.has(i) ? t.get(i) : e
            }

            function _5(t) {
                return null !== t && "object" == typeof t ? t.valueOf() : t
            }
            const w5 = Symbol("implicit");

            function w1() {
                var t = new y5,
                    n = [],
                    e = [],
                    i = w5;

                function s(r) {
                    let l = t.get(r);
                    if (void 0 === l) {
                        if (i !== w5) return i;
                        t.set(r, l = n.push(r) - 1)
                    }
                    return e[l % e.length]
                }
                return s.domain = function(r) {
                    if (!arguments.length) return n.slice();
                    n = [], t = new y5;
                    for (const l of r) t.has(l) || t.set(l, n.push(l) - 1);
                    return s
                }, s.range = function(r) {
                    return arguments.length ? (e = Array.from(r), s) : e.slice()
                }, s.unknown = function(r) {
                    return arguments.length ? (i = r, s) : i
                }, s.copy = function() {
                    return w1(n, e).unknown(i)
                }, cp.apply(s, arguments), s
            }

            function _y() {
                var r, l, t = w1().unknown(void 0),
                    n = t.domain,
                    e = t.range,
                    i = 0,
                    s = 1,
                    u = !1,
                    h = 0,
                    v = 0,
                    _ = .5;

                function C() {
                    var M = n().length,
                        L = s < i,
                        j = L ? s : i,
                        Z = L ? i : s;
                    r = (Z - j) / Math.max(1, M - h + 2 * v), u && (r = Math.floor(r)), j += (Z - j - r * (M - h)) * _, l = r * (1 - h), u && (j = Math.round(j), l = Math.round(l));
                    var Q = v5(M).map(function(Ae) {
                        return j + r * Ae
                    });
                    return e(L ? Q.reverse() : Q)
                }
                return delete t.unknown, t.domain = function(M) {
                    return arguments.length ? (n(M), C()) : n()
                }, t.range = function(M) {
                    return arguments.length ? ([i, s] = M, i = +i, s = +s, C()) : [i, s]
                }, t.rangeRound = function(M) {
                    return [i, s] = M, i = +i, s = +s, u = !0, C()
                }, t.bandwidth = function() {
                    return l
                }, t.step = function() {
                    return r
                }, t.round = function(M) {
                    return arguments.length ? (u = !!M, C()) : u
                }, t.padding = function(M) {
                    return arguments.length ? (h = Math.min(1, v = +M), C()) : h
                }, t.paddingInner = function(M) {
                    return arguments.length ? (h = Math.min(1, M), C()) : h
                }, t.paddingOuter = function(M) {
                    return arguments.length ? (v = +M, C()) : v
                }, t.align = function(M) {
                    return arguments.length ? (_ = Math.max(0, Math.min(1, M)), C()) : _
                }, t.copy = function() {
                    return _y(n(), [i, s]).round(u).paddingInner(h).paddingOuter(v).align(_)
                }, cp.apply(C(), arguments)
            }

            function pre(t, n, e = n5) {
                if ((i = t.length) && !isNaN(n = +n)) {
                    if (n <= 0 || i < 2) return +e(t[0], 0, t);
                    if (n >= 1) return +e(t[i - 1], i - 1, t);
                    var i, s = (i - 1) * n,
                        r = Math.floor(s),
                        l = +e(t[r], r, t);
                    return l + (+e(t[r + 1], r + 1, t) - l) * (s - r)
                }
            }

            function S5() {
                var i, t = [],
                    n = [],
                    e = [];

                function s() {
                    var l = 0,
                        u = Math.max(1, n.length);
                    for (e = new Array(u - 1); ++l < u;) e[l - 1] = pre(t, l / u);
                    return r
                }

                function r(l) {
                    return null == l || isNaN(l = +l) ? i : n[s5(e, l)]
                }
                return r.invertExtent = function(l) {
                    var u = n.indexOf(l);
                    return u < 0 ? [NaN, NaN] : [u > 0 ? e[u - 1] : t[0], u < e.length ? e[u] : t[t.length - 1]]
                }, r.domain = function(l) {
                    if (!arguments.length) return t.slice();
                    t = [];
                    for (let u of l) null != u && !isNaN(u = +u) && t.push(u);
                    return t.sort(np), s()
                }, r.range = function(l) {
                    return arguments.length ? (n = Array.from(l), s()) : n.slice()
                }, r.unknown = function(l) {
                    return arguments.length ? (i = l, r) : i
                }, r.quantiles = function() {
                    return e.slice()
                }, r.copy = function() {
                    return S5().domain(t).range(n).unknown(i)
                }, cp.apply(r, arguments)
            }
            var gre = I(2178);
            const mre = ["caretElm"];

            function vre(t, n) {}
            const yre = function(t) {
                return {
                    model: t
                }
            };

            function bre(t, n) {
                if (1 & t && (N(0, "span"), rt(1, vre, 0, 0, "ng-template", 5), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngTemplateOutlet", e.template)("ngTemplateOutletContext", hn(2, yre, e.context))
                }
            }

            function xre(t, n) {
                1 & t && ot(0, "span", 6), 2 & t && Fe("innerHTML", Qe().title, Ph)
            }

            function _re(t, n) {
                if (1 & t && (N(0, "header", 4)(1, "span", 5), ae(2), H()()), 2 & t) {
                    const e = Qe();
                    xe(2), qt(e.title)
                }
            }

            function wre(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 6)(1, "ngx-charts-legend-entry", 7), bt("select", function(s) {
                        return Ot(e), It(Qe().labelClick.emit(s))
                    })("activate", function(s) {
                        return Ot(e), It(Qe().activate(s))
                    })("deactivate", function(s) {
                        return Ot(e), It(Qe().deactivate(s))
                    }), H()()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = Qe();
                    xe(1), Fe("label", e.label)("formattedLabel", e.formattedLabel)("color", e.color)("isActive", i.isActive(e))
                }
            }

            function Cre(t, n) {
                if (1 & t && (Kt(), rg(), ot(0, "ngx-charts-scale-legend", 4)), 2 & t) {
                    const e = Qe();
                    Fe("horizontal", e.legendOptions && e.legendOptions.position === e.LegendPosition.Below)("valueRange", e.legendOptions.domain)("colors", e.legendOptions.colors)("height", e.view[1])("width", e.legendWidth)
                }
            }

            function Sre(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), rg(), N(0, "ngx-charts-legend", 5), bt("labelClick", function(s) {
                        return Ot(e), It(Qe().legendLabelClick.emit(s))
                    })("labelActivate", function(s) {
                        return Ot(e), It(Qe().legendLabelActivate.emit(s))
                    })("labelDeactivate", function(s) {
                        return Ot(e), It(Qe().legendLabelDeactivate.emit(s))
                    }), H()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("horizontal", e.legendOptions && e.legendOptions.position === e.LegendPosition.Below)("data", e.legendOptions.domain)("title", e.legendOptions.title)("colors", e.legendOptions.colors)("height", e.view[1])("width", e.legendWidth)("activeEntries", e.activeEntries)
                }
            }
            const T5 = ["*"],
                Tre = ["ngx-charts-axis-label", ""],
                D5 = ["ticksel"],
                Dre = ["ngx-charts-x-axis-ticks", ""];

            function Are(t, n) {
                1 & t && (Kt(), Jg(0))
            }

            function kre(t, n) {
                if (1 & t && (Kt(), N(0, "tspan", 10), ae(1), H()), 2 & t) {
                    const e = n.$implicit;
                    mn("y", 12 * n.index), xe(1), dn(" ", e, " ")
                }
            }

            function Ere(t, n) {
                if (1 & t && (Kt(), xo(0), rt(1, kre, 2, 2, "tspan", 9), _o()), 2 & t) {
                    const e = n.ngIf;
                    xe(1), Fe("ngForOf", e)
                }
            }

            function Mre(t, n) {
                if (1 & t && (Kt(), rt(0, Ere, 2, 1, "ng-container", 4)), 2 & t) {
                    const e = Qe(2).$implicit;
                    Fe("ngIf", Qe().tickChunks(e))
                }
            }

            function Pre(t, n) {
                if (1 & t && (Kt(), ae(0)), 2 & t) {
                    const e = Qe().ngIf;
                    dn(" ", Qe(2).tickTrim(e), " ")
                }
            }

            function Ore(t, n) {
                if (1 & t && (Kt(), xo(0), N(1, "title"), ae(2), H(), N(3, "text", 5), rt(4, Are, 1, 0, "ng-container", 6), H(), rt(5, Mre, 1, 1, "ng-template", null, 7, Ea), rt(7, Pre, 1, 1, "ng-template", null, 8, Ea), _o()), 2 & t) {
                    const e = n.ngIf,
                        i = Ta(6),
                        s = Ta(8),
                        r = Qe(2);
                    xe(2), qt(e), xe(1), mn("text-anchor", r.textAnchor)("transform", r.textTransform), xe(1), Fe("ngIf", r.isWrapTicksSupported)("ngIfThen", i)("ngIfElse", s)
                }
            }

            function Ire(t, n) {
                if (1 & t && (Kt(), N(0, "g", 3), rt(1, Ore, 9, 6, "ng-container", 4), H()), 2 & t) {
                    const e = n.$implicit,
                        i = Qe();
                    mn("transform", i.tickTransform(e)), xe(1), Fe("ngIf", i.tickFormat(e))
                }
            }

            function Lre(t, n) {
                if (1 & t && (Kt(), N(0, "g"), ot(1, "line", 11), H()), 2 & t) {
                    const e = Qe(2);
                    mn("transform", e.gridLineTransform()), xe(1), mn("y1", -e.gridLineHeight)
                }
            }

            function Fre(t, n) {
                if (1 & t && (Kt(), N(0, "g"), rt(1, Lre, 2, 2, "g", 4), H()), 2 & t) {
                    const e = n.$implicit,
                        i = Qe();
                    mn("transform", i.tickTransform(e)), xe(1), Fe("ngIf", i.showGridLines)
                }
            }
            const Nre = ["ngx-charts-x-axis", ""];

            function Rre(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), N(0, "g", 2), bt("dimensionsChanged", function(s) {
                        return Ot(e), It(Qe().emitTicksHeight(s))
                    }), H()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("trimTicks", e.trimTicks)("rotateTicks", e.rotateTicks)("maxTickLength", e.maxTickLength)("tickFormatting", e.tickFormatting)("tickArguments", e.tickArguments)("tickStroke", e.tickStroke)("scale", e.xScale)("orient", e.xOrient)("showGridLines", e.showGridLines)("gridLineHeight", e.dims.height)("width", e.dims.width)("tickValues", e.ticks)("wrapTicks", e.wrapTicks)
                }
            }

            function Bre(t, n) {
                if (1 & t && (Kt(), ot(0, "g", 3)), 2 & t) {
                    const e = Qe();
                    Fe("label", e.labelText)("offset", e.labelOffset)("orient", e.orientation.Bottom)("height", e.dims.height)("width", e.dims.width)
                }
            }
            const Vre = ["ngx-charts-y-axis-ticks", ""];

            function Hre(t, n) {
                1 & t && (Kt(), Jg(0))
            }

            function zre(t, n) {
                if (1 & t && (Kt(), N(0, "tspan", 12), ae(1), H()), 2 & t) {
                    const e = n.$implicit;
                    mn("y", n.index * (8 + Qe(6).tickSpacing)), xe(1), dn(" ", e, " ")
                }
            }

            function jre(t, n) {
                if (1 & t && (Kt(), xo(0), rt(1, zre, 2, 2, "tspan", 11), _o()), 2 & t) {
                    const e = Qe().ngIf;
                    xe(1), Fe("ngForOf", e)
                }
            }

            function $re(t, n) {
                if (1 & t && (Kt(), xo(0), rt(1, jre, 2, 1, "ng-container", 10), _o()), 2 & t) {
                    const e = n.ngIf;
                    Qe(2);
                    const i = Ta(8);
                    xe(1), Fe("ngIf", e.length > 1)("ngIfElse", i)
                }
            }

            function Ure(t, n) {
                if (1 & t && (Kt(), rt(0, $re, 2, 2, "ng-container", 5)), 2 & t) {
                    const e = Qe(2).$implicit;
                    Fe("ngIf", Qe().tickChunks(e))
                }
            }

            function Wre(t, n) {
                if (1 & t && (Kt(), ae(0)), 2 & t) {
                    const e = Qe().ngIf;
                    dn(" ", Qe(2).tickTrim(e), " ")
                }
            }

            function Gre(t, n) {
                if (1 & t && (Kt(), xo(0), N(1, "title"), ae(2), H(), N(3, "text", 6), rt(4, Hre, 1, 0, "ng-container", 7), H(), rt(5, Ure, 1, 1, "ng-template", null, 8, Ea), rt(7, Wre, 1, 1, "ng-template", null, 9, Ea), _o()), 2 & t) {
                    const e = n.ngIf,
                        i = Ta(6),
                        s = Ta(8),
                        r = Qe(2);
                    xe(2), qt(e), xe(1), er("font-size", "12px"), mn("dy", r.dy)("x", r.x1)("y", r.y1)("text-anchor", r.textAnchor), xe(1), Fe("ngIf", r.wrapTicks)("ngIfThen", i)("ngIfElse", s)
                }
            }

            function Xre(t, n) {
                if (1 & t && (Kt(), N(0, "g", 4), rt(1, Gre, 9, 10, "ng-container", 5), H()), 2 & t) {
                    const e = n.$implicit,
                        i = Qe();
                    mn("transform", i.transform(e)), xe(1), Fe("ngIf", i.tickFormat(e))
                }
            }

            function Yre(t, n) {
                if (1 & t && (Kt(), ot(0, "path", 13)), 2 & t) {
                    const e = Qe();
                    mn("d", e.referenceAreaPath)("transform", e.gridLineTransform())
                }
            }

            function qre(t, n) {
                1 & t && (Kt(), ot(0, "line", 15)), 2 & t && mn("x2", Qe(3).gridLineWidth)
            }

            function Zre(t, n) {
                1 & t && (Kt(), ot(0, "line", 15)), 2 & t && mn("x2", -Qe(3).gridLineWidth)
            }

            function Kre(t, n) {
                if (1 & t && (Kt(), N(0, "g"), rt(1, qre, 1, 1, "line", 14), rt(2, Zre, 1, 1, "line", 14), H()), 2 & t) {
                    const e = Qe(2);
                    mn("transform", e.gridLineTransform()), xe(1), Fe("ngIf", e.orient === e.Orientation.Left), xe(1), Fe("ngIf", e.orient === e.Orientation.Right)
                }
            }

            function Qre(t, n) {
                if (1 & t && (Kt(), N(0, "g"), rt(1, Kre, 3, 3, "g", 5), H()), 2 & t) {
                    const e = n.$implicit,
                        i = Qe();
                    mn("transform", i.transform(e)), xe(1), Fe("ngIf", i.showGridLines)
                }
            }

            function Jre(t, n) {
                if (1 & t && (Kt(), N(0, "g")(1, "title"), ae(2), H(), N(3, "text", 17), ae(4), H()()), 2 & t) {
                    const e = Qe(2).$implicit,
                        i = Qe();
                    xe(2), qt(i.tickTrim(i.tickFormat(e.value))), xe(1), mn("dy", i.dy)("y", -6)("x", i.gridLineWidth)("text-anchor", i.textAnchor), xe(1), dn(" ", e.name, " ")
                }
            }

            function eae(t, n) {
                if (1 & t && (Kt(), N(0, "g"), ot(1, "line", 16), rt(2, Jre, 5, 6, "g", 5), H()), 2 & t) {
                    const e = Qe().$implicit,
                        i = Qe();
                    mn("transform", i.transform(e.value)), xe(1), mn("x2", i.gridLineWidth)("transform", i.gridLineTransform()), xe(1), Fe("ngIf", i.showRefLabels)
                }
            }

            function tae(t, n) {
                if (1 & t && (Kt(), N(0, "g"), rt(1, eae, 3, 4, "g", 5), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngIf", e.showRefLines)
                }
            }
            const nae = ["ngx-charts-y-axis", ""];

            function iae(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), N(0, "g", 2), bt("dimensionsChanged", function(s) {
                        return Ot(e), It(Qe().emitTicksWidth(s))
                    }), H()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("trimTicks", e.trimTicks)("maxTickLength", e.maxTickLength)("tickFormatting", e.tickFormatting)("tickArguments", e.tickArguments)("tickValues", e.ticks)("tickStroke", e.tickStroke)("scale", e.yScale)("orient", e.yOrient)("showGridLines", e.showGridLines)("gridLineWidth", e.dims.width)("referenceLines", e.referenceLines)("showRefLines", e.showRefLines)("showRefLabels", e.showRefLabels)("height", e.dims.height)("wrapTicks", e.wrapTicks)
                }
            }

            function sae(t, n) {
                if (1 & t && (Kt(), ot(0, "g", 3)), 2 & t) {
                    const e = Qe();
                    Fe("label", e.labelText)("offset", e.labelOffset)("orient", e.yOrient)("height", e.dims.height)("width", e.dims.width)
                }
            }
            const rae = ["ngx-charts-svg-linear-gradient", ""];

            function aae(t, n) {
                if (1 & t && (Kt(), ot(0, "stop")), 2 & t) {
                    const e = n.$implicit;
                    er("stop-color", e.color)("stop-opacity", e.opacity), mn("offset", e.offset + "%")
                }
            }
            const Iae = ["tooltipTemplate"],
                up = function(t, n) {
                    return [t, n]
                },
                zae = ["ngx-charts-bar", ""];

            function jae(t, n) {
                if (1 & t && (Kt(), N(0, "defs"), ot(1, "g", 2), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("orientation", e.orientation)("name", e.gradientId)("stops", e.gradientStops)
                }
            }
            const $ae = ["ngx-charts-bar-label", ""],
                Kae = ["ngx-charts-series-vertical", ""];

            function Qae(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), N(0, "g", 2), bt("select", function(s) {
                        return Ot(e), It(Qe(2).onClick(s))
                    })("activate", function(s) {
                        return Ot(e), It(Qe(2).activate.emit(s))
                    })("deactivate", function(s) {
                        return Ot(e), It(Qe(2).deactivate.emit(s))
                    }), H()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = Qe(2);
                    Fe("@animationState", "active")("@.disabled", !i.animations)("width", e.width)("height", e.height)("x", e.x)("y", e.y)("fill", e.color)("stops", e.gradientStops)("data", e.data)("orientation", i.barOrientation.Vertical)("roundEdges", e.roundEdges)("gradient", i.gradient)("ariaLabel", e.ariaLabel)("isActive", i.isActive(e.data))("tooltipDisabled", i.tooltipDisabled)("tooltipPlacement", i.tooltipPlacement)("tooltipType", i.tooltipType)("tooltipTitle", i.tooltipTemplate ? void 0 : e.tooltipText)("tooltipTemplate", i.tooltipTemplate)("tooltipContext", e.data)("noBarWhenZero", i.noBarWhenZero)("animations", i.animations)
                }
            }

            function Jae(t, n) {
                if (1 & t && (Kt(), N(0, "g"), rt(1, Qae, 1, 22, "g", 1), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngForOf", e.bars)("ngForTrackBy", e.trackBy)
                }
            }

            function eoe(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), N(0, "g", 2), bt("select", function(s) {
                        return Ot(e), It(Qe(2).onClick(s))
                    })("activate", function(s) {
                        return Ot(e), It(Qe(2).activate.emit(s))
                    })("deactivate", function(s) {
                        return Ot(e), It(Qe(2).deactivate.emit(s))
                    }), H()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = Qe(2);
                    Fe("width", e.width)("height", e.height)("x", e.x)("y", e.y)("fill", e.color)("stops", e.gradientStops)("data", e.data)("orientation", i.barOrientation.Vertical)("roundEdges", e.roundEdges)("gradient", i.gradient)("ariaLabel", e.ariaLabel)("isActive", i.isActive(e.data))("tooltipDisabled", i.tooltipDisabled)("tooltipPlacement", i.tooltipPlacement)("tooltipType", i.tooltipType)("tooltipTitle", i.tooltipTemplate ? void 0 : e.tooltipText)("tooltipTemplate", i.tooltipTemplate)("tooltipContext", e.data)("noBarWhenZero", i.noBarWhenZero)("animations", i.animations)
                }
            }

            function toe(t, n) {
                if (1 & t && (Kt(), N(0, "g"), rt(1, eoe, 1, 20, "g", 1), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngForOf", e.bars)("ngForTrackBy", e.trackBy)
                }
            }

            function noe(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), N(0, "g", 4), bt("dimensionsChanged", function(s) {
                        const l = Ot(e).index;
                        return It(Qe(2).dataLabelHeightChanged.emit({
                            size: s,
                            index: l
                        }))
                    }), H()
                }
                if (2 & t) {
                    const e = n.$implicit,
                        i = Qe(2);
                    Fe("barX", e.x)("barY", e.y)("barWidth", e.width)("barHeight", e.height)("value", e.total)("valueFormatting", i.dataLabelFormatting)("orientation", i.barOrientation.Vertical)
                }
            }

            function ioe(t, n) {
                if (1 & t && (Kt(), N(0, "g"), rt(1, noe, 1, 7, "g", 3), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngForOf", e.barsForDataLabels)("ngForTrackBy", e.trackDataLabelBy)
                }
            }

            function soe(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), N(0, "g", 5), bt("dimensionsChanged", function(s) {
                        return Ot(e), It(Qe().updateXAxisHeight(s))
                    }), H()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("xScale", e.xScale)("dims", e.dims)("showGridLines", e.showGridLines)("showLabel", e.showXAxisLabel)("labelText", e.xAxisLabel)("trimTicks", e.trimXAxisTicks)("rotateTicks", e.rotateXAxisTicks)("maxTickLength", e.maxXAxisTickLength)("tickFormatting", e.xAxisTickFormatting)("ticks", e.xAxisTicks)("xAxisOffset", e.dataLabelMaxHeight.negative)("wrapTicks", e.wrapTicks)
                }
            }

            function roe(t, n) {
                if (1 & t) {
                    const e = sn();
                    Kt(), N(0, "g", 6), bt("dimensionsChanged", function(s) {
                        return Ot(e), It(Qe().updateYAxisWidth(s))
                    }), H()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("yScale", e.yScale)("dims", e.dims)("showGridLines", e.showGridLines)("showLabel", e.showYAxisLabel)("labelText", e.yAxisLabel)("trimTicks", e.trimYAxisTicks)("maxTickLength", e.maxYAxisTickLength)("tickFormatting", e.yAxisTickFormatting)("ticks", e.yAxisTicks)("wrapTicks", e.wrapTicks)
                }
            }

            function Loe(t, n, e) {
                e = e || {};
                let i, s, r, l = null,
                    u = 0;

                function h() {
                    u = !1 === e.leading ? 0 : +new Date, l = null, r = t.apply(i, s)
                }
                return function() {
                    const v = +new Date;
                    !u && !1 === e.leading && (u = v);
                    const _ = n - (v - u);
                    return i = this, s = arguments, _ <= 0 ? (clearTimeout(l), l = null, u = v, r = t.apply(i, s)) : !l && !1 !== e.trailing && (l = setTimeout(h, _)), r
                }
            }

            function Foe(t, n) {
                return function(i, s, r) {
                    return {
                        configurable: !0,
                        enumerable: r.enumerable,
                        get: function() {
                            return Object.defineProperty(this, s, {
                                configurable: !0,
                                enumerable: r.enumerable,
                                value: Loe(r.value, t, n)
                            }), this[s]
                        }
                    }
                }
            }
            var ri = function(t) {
                return t.Top = "top", t.Bottom = "bottom", t.Left = "left", t.Right = "right", t.Center = "center", t
            }(ri || {});

            function A5(t, n, e) {
                return e === ri.Top ? t.top - 7 : e === ri.Bottom ? t.top + t.height - n.height + 7 : e === ri.Center ? t.top + t.height / 2 - n.height / 2 : void 0
            }

            function k5(t, n, e) {
                return e === ri.Left ? t.left - 7 : e === ri.Right ? t.left + t.width - n.width + 7 : e === ri.Center ? t.left + t.width / 2 - n.width / 2 : void 0
            }
            class ga {
                static calculateVerticalAlignment(n, e, i) {
                    let s = A5(n, e, i);
                    return s + e.height > window.innerHeight && (s = window.innerHeight - e.height), s
                }
                static calculateVerticalCaret(n, e, i, s) {
                    let r;
                    s === ri.Top && (r = n.height / 2 - i.height / 2 + 7), s === ri.Bottom && (r = e.height - n.height / 2 - i.height / 2 - 7), s === ri.Center && (r = e.height / 2 - i.height / 2);
                    const l = A5(n, e, s);
                    return l + e.height > window.innerHeight && (r += l + e.height - window.innerHeight), r
                }
                static calculateHorizontalAlignment(n, e, i) {
                    let s = k5(n, e, i);
                    return s + e.width > window.innerWidth && (s = window.innerWidth - e.width), s
                }
                static calculateHorizontalCaret(n, e, i, s) {
                    let r;
                    s === ri.Left && (r = n.width / 2 - i.width / 2 + 7), s === ri.Right && (r = e.width - n.width / 2 - i.width / 2 - 7), s === ri.Center && (r = e.width / 2 - i.width / 2);
                    const l = k5(n, e, s);
                    return l + e.width > window.innerWidth && (r += l + e.width - window.innerWidth), r
                }
                static shouldFlip(n, e, i, s) {
                    let r = !1;
                    return i === ri.Right && n.left + n.width + e.width + s > window.innerWidth && (r = !0), i === ri.Left && n.left - e.width - s < 0 && (r = !0), i === ri.Top && n.top - e.height - s < 0 && (r = !0), i === ri.Bottom && n.top + n.height + e.height + s > window.innerHeight && (r = !0), r
                }
                static positionCaret(n, e, i, s, r) {
                    let l = 0,
                        u = 0;
                    return n === ri.Right ? (u = -7, l = ga.calculateVerticalCaret(i, e, s, r)) : n === ri.Left ? (u = e.width, l = ga.calculateVerticalCaret(i, e, s, r)) : n === ri.Top ? (l = e.height, u = ga.calculateHorizontalCaret(i, e, s, r)) : n === ri.Bottom && (l = -7, u = ga.calculateHorizontalCaret(i, e, s, r)), {
                        top: l,
                        left: u
                    }
                }
                static positionContent(n, e, i, s, r) {
                    let l = 0,
                        u = 0;
                    return n === ri.Right ? (u = i.left + i.width + s, l = ga.calculateVerticalAlignment(i, e, r)) : n === ri.Left ? (u = i.left - e.width - s, l = ga.calculateVerticalAlignment(i, e, r)) : n === ri.Top ? (l = i.top - e.height - s, u = ga.calculateHorizontalAlignment(i, e, r)) : n === ri.Bottom && (l = i.top + i.height + s, u = ga.calculateHorizontalAlignment(i, e, r)), {
                        top: l,
                        left: u
                    }
                }
                static determinePlacement(n, e, i, s) {
                    if (ga.shouldFlip(i, e, n, s)) {
                        if (n === ri.Right) return ri.Left;
                        if (n === ri.Left) return ri.Right;
                        if (n === ri.Top) return ri.Bottom;
                        if (n === ri.Bottom) return ri.Top
                    }
                    return n
                }
            }
            let Noe = (() => {
                class t {
                    constructor(e, i, s) {
                        this.element = e, this.renderer = i, this.platformId = s
                    }
                    get cssClasses() {
                        let e = "ngx-charts-tooltip-content";
                        return e += ` position-${this.placement}`, e += ` type-${this.type}`, e += ` ${this.cssClass}`, e
                    }
                    ngAfterViewInit() {
                        setTimeout(this.position.bind(this))
                    }
                    position() {
                        if (!Ia(this.platformId)) return;
                        const e = this.element.nativeElement,
                            i = this.host.nativeElement.getBoundingClientRect();
                        if (!i.height && !i.width) return;
                        const s = e.getBoundingClientRect();
                        this.checkFlip(i, s), this.positionContent(e, i, s), this.showCaret && this.positionCaret(i, s), setTimeout(() => this.renderer.addClass(e, "animate"), 1)
                    }
                    positionContent(e, i, s) {
                        const {
                            top: r,
                            left: l
                        } = ga.positionContent(this.placement, s, i, this.spacing, this.alignment);
                        this.renderer.setStyle(e, "top", `${r}px`), this.renderer.setStyle(e, "left", `${l}px`)
                    }
                    positionCaret(e, i) {
                        const s = this.caretElm.nativeElement,
                            r = s.getBoundingClientRect(),
                            {
                                top: l,
                                left: u
                            } = ga.positionCaret(this.placement, i, e, r, this.alignment);
                        this.renderer.setStyle(s, "top", `${l}px`), this.renderer.setStyle(s, "left", `${u}px`)
                    }
                    checkFlip(e, i) {
                        this.placement = ga.determinePlacement(this.placement, i, e, this.spacing)
                    }
                    onWindowResize() {
                        this.position()
                    }
                }
                return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii), $e(Ts), $e(ws))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["ngx-tooltip-content"]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && ka(mre, 5), 2 & e) {
                                let s;
                                kr(s = Er()) && (i.caretElm = s.first)
                            }
                        },
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            1 & e && bt("resize", function() {
                                return i.onWindowResize()
                            }, 0, Nl), 2 & e && vx(i.cssClasses)
                        },
                        inputs: {
                            host: "host",
                            showCaret: "showCaret",
                            type: "type",
                            placement: "placement",
                            alignment: "alignment",
                            spacing: "spacing",
                            cssClass: "cssClass",
                            title: "title",
                            template: "template",
                            context: "context"
                        },
                        decls: 6,
                        vars: 6,
                        consts: [
                            [3, "hidden"],
                            ["caretElm", ""],
                            [1, "tooltip-content"],
                            [4, "ngIf"],
                            [3, "innerHTML", 4, "ngIf"],
                            [3, "ngTemplateOutlet", "ngTemplateOutletContext"],
                            [3, "innerHTML"]
                        ],
                        template: function(e, i) {
                            1 & e && (N(0, "div"), ot(1, "span", 0, 1), N(3, "div", 2), rt(4, bre, 2, 4, "span", 3), rt(5, xre, 1, 1, "span", 4), H()()), 2 & e && (xe(1), function bE(t, n, e) {
                                Xa(oa, Co, qu(At(), t, n, e), !0)
                            }("tooltip-caret position-", i.placement, ""), Fe("hidden", !i.showCaret), xe(3), Fe("ngIf", !i.title), xe(1), Fe("ngIf", i.title))
                        },
                        dependencies: [Ji, y_],
                        styles: [".ngx-charts-tooltip-content{position:fixed;border-radius:3px;z-index:5000;display:block;font-weight:400;opacity:0;pointer-events:none!important}.ngx-charts-tooltip-content.type-popover{background:#fff;color:#060709;border:1px solid #72809b;box-shadow:0 1px 3px #0003,0 1px 1px #00000024,0 2px 1px -1px #0000001f;font-size:13px;padding:4px}.ngx-charts-tooltip-content.type-popover .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid #fff}.ngx-charts-tooltip-content.type-popover .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid #fff}.ngx-charts-tooltip-content.type-tooltip{color:#fff;background:rgba(0,0,0,.75);font-size:12px;padding:0 10px;text-align:center;pointer-events:auto}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-left{border-top:7px solid transparent;border-bottom:7px solid transparent;border-left:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-top{border-left:7px solid transparent;border-right:7px solid transparent;border-top:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-right{border-top:7px solid transparent;border-bottom:7px solid transparent;border-right:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content.type-tooltip .tooltip-caret.position-bottom{border-left:7px solid transparent;border-right:7px solid transparent;border-bottom:7px solid rgba(0,0,0,.75)}.ngx-charts-tooltip-content .tooltip-label{display:block;line-height:1em;padding:8px 5px 5px;font-size:1em}.ngx-charts-tooltip-content .tooltip-val{display:block;font-size:1.3em;line-height:1em;padding:0 5px 8px}.ngx-charts-tooltip-content .tooltip-caret{position:absolute;z-index:5001;width:0;height:0}.ngx-charts-tooltip-content.position-right{transform:translate(10px)}.ngx-charts-tooltip-content.position-left{transform:translate(-10px)}.ngx-charts-tooltip-content.position-top{transform:translateY(-10px)}.ngx-charts-tooltip-content.position-bottom{transform:translateY(10px)}.ngx-charts-tooltip-content.animate{opacity:1;transition:opacity .3s,transform .3s;transform:translate(0);pointer-events:auto}.area-tooltip-container{padding:5px 0;pointer-events:none}.tooltip-item{text-align:left;line-height:1.2em;padding:5px 0}.tooltip-item .tooltip-item-color{display:inline-block;height:12px;width:12px;margin-right:5px;color:#5b646b;border-radius:3px}\n"],
                        encapsulation: 2
                    }),
                    function Kn(t, n, e, i) {
                        var l, s = arguments.length,
                            r = s < 3 ? n : null === i ? i = Object.getOwnPropertyDescriptor(n, e) : i;
                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, n, e, i);
                        else
                            for (var u = t.length - 1; u >= 0; u--)(l = t[u]) && (r = (s < 3 ? l(r) : s > 3 ? l(n, e, r) : l(n, e)) || r);
                        return s > 3 && r && Object.defineProperty(n, e, r), r
                    }([Foe(100)], t.prototype, "onWindowResize", null), t
            })();
            class Roe {
                constructor(n) {
                    this.injectionService = n, this.defaults = {}, this.components = new Map
                }
                getByType(n = this.type) {
                    return this.components.get(n)
                }
                create(n) {
                    return this.createByType(this.type, n)
                }
                createByType(n, e) {
                    e = this.assignDefaults(e);
                    const i = this.injectComponent(n, e);
                    return this.register(n, i), i
                }
                destroy(n) {
                    const e = this.components.get(n.componentType);
                    if (e && e.length) {
                        const i = e.indexOf(n);
                        i > -1 && (e[i].destroy(), e.splice(i, 1))
                    }
                }
                destroyAll() {
                    this.destroyByType(this.type)
                }
                destroyByType(n) {
                    const e = this.components.get(n);
                    if (e && e.length) {
                        let i = e.length - 1;
                        for (; i >= 0;) this.destroy(e[i--])
                    }
                }
                injectComponent(n, e) {
                    return this.injectionService.appendComponent(n, e)
                }
                assignDefaults(n) {
                    const e = { ...this.defaults.inputs
                        },
                        i = { ...this.defaults.outputs
                        };
                    return !n.inputs && !n.outputs && (n = {
                        inputs: n
                    }), e && (n.inputs = { ...e,
                        ...n.inputs
                    }), i && (n.outputs = { ...i,
                        ...n.outputs
                    }), n
                }
                register(n, e) {
                    this.components.has(n) || this.components.set(n, []), this.components.get(n).push(e)
                }
            }
            let E5 = (() => {
                    class t {
                        constructor(e, i, s) {
                            this.applicationRef = e, this.componentFactoryResolver = i, this.injector = s
                        }
                        static setGlobalRootViewContainer(e) {
                            t.globalRootViewContainer = e
                        }
                        getRootViewContainer() {
                            if (this._container) return this._container;
                            if (t.globalRootViewContainer) return t.globalRootViewContainer;
                            if (this.applicationRef.components.length) return this.applicationRef.components[0];
                            throw new Error("View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.")
                        }
                        setRootViewContainer(e) {
                            this._container = e
                        }
                        getComponentRootNode(e) {
                            return function Boe(t) {
                                return t.element
                            }(e) ? e.element.nativeElement : e.hostView && e.hostView.rootNodes.length > 0 ? e.hostView.rootNodes[0] : e.location.nativeElement
                        }
                        getRootViewContainerNode(e) {
                            return this.getComponentRootNode(e)
                        }
                        projectComponentBindings(e, i) {
                            if (i) {
                                if (void 0 !== i.inputs) {
                                    const s = Object.getOwnPropertyNames(i.inputs);
                                    for (const r of s) e.instance[r] = i.inputs[r]
                                }
                                if (void 0 !== i.outputs) {
                                    const s = Object.getOwnPropertyNames(i.outputs);
                                    for (const r of s) e.instance[r] = i.outputs[r]
                                }
                            }
                            return e
                        }
                        appendComponent(e, i = {}, s) {
                            s || (s = this.getRootViewContainer());
                            const r = this.getComponentRootNode(s),
                                l = new MJ(r, this.componentFactoryResolver, this.applicationRef, this.injector),
                                u = new AN(e),
                                h = l.attach(u);
                            return this.projectComponentBindings(h, i), h
                        }
                    }
                    return t.globalRootViewContainer = null, t.\u0275fac = function(e) {
                        return new(e || t)(vt(So), vt($u), vt(js))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })(),
                C1 = (() => {
                    class t extends Roe {
                        constructor(e) {
                            super(e), this.type = Noe
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)(vt(E5))
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac
                    }), t
                })();
            var iu = function(t) {
                    return t.Right = "right", t.Below = "below", t
                }(iu || {}),
                dp = function(t) {
                    return t.ScaleLegend = "scaleLegend", t.Legend = "legend", t
                }(dp || {}),
                yn = function(t) {
                    return t.Time = "time", t.Linear = "linear", t.Ordinal = "ordinal", t.Quantile = "quantile", t
                }(yn || {});
            let M5 = (() => {
                class t {
                    constructor() {
                        this.horizontal = !1
                    }
                    ngOnChanges(e) {
                        const i = this.gradientString(this.colors.range(), this.colors.domain());
                        this.gradient = `linear-gradient(to ${this.horizontal?"right":"bottom"}, ${i})`
                    }
                    gradientString(e, i) {
                        i.push(1);
                        const s = [];
                        return e.reverse().forEach((r, l) => {
                            s.push(`${r} ${Math.round(100*i[l])}%`)
                        }), s.join(", ")
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275cmp = cn({
                    type: t,
                    selectors: [
                        ["ngx-charts-scale-legend"]
                    ],
                    inputs: {
                        valueRange: "valueRange",
                        colors: "colors",
                        height: "height",
                        width: "width",
                        horizontal: "horizontal"
                    },
                    features: [ni],
                    decls: 8,
                    vars: 10,
                    consts: [
                        [1, "scale-legend"],
                        [1, "scale-legend-label"],
                        [1, "scale-legend-wrap"]
                    ],
                    template: function(e, i) {
                        1 & e && (N(0, "div", 0)(1, "div", 1)(2, "span"), ae(3), H()(), ot(4, "div", 2), N(5, "div", 1)(6, "span"), ae(7), H()()()), 2 & e && (er("height", i.horizontal ? void 0 : i.height, "px")("width", i.width, "px"), $r("horizontal-legend", i.horizontal), xe(3), qt(i.valueRange[1].toLocaleString()), xe(1), er("background", i.gradient), xe(3), qt(i.valueRange[0].toLocaleString()))
                    },
                    styles: [".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .scale-legend{text-align:center;display:flex;flex-direction:column}.chart-legend .scale-legend-wrap{display:inline-block;flex:1;width:30px;border-radius:5px;margin:0 auto}.chart-legend .scale-legend-label{font-size:12px}.chart-legend .horizontal-legend.scale-legend{flex-direction:row}.chart-legend .horizontal-legend .scale-legend-wrap{width:auto;height:30px;margin:0 16px}\n"],
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();

            function hp(t) {
                return t instanceof Date ? t.toLocaleDateString() : t.toLocaleString()
            }
            let P5 = (() => {
                    class t {
                        constructor() {
                            this.isActive = !1, this.select = new Pt, this.activate = new Pt, this.deactivate = new Pt, this.toggle = new Pt
                        }
                        get trimmedLabel() {
                            return this.formattedLabel || "(empty)"
                        }
                        onMouseEnter() {
                            this.activate.emit({
                                name: this.label
                            })
                        }
                        onMouseLeave() {
                            this.deactivate.emit({
                                name: this.label
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["ngx-charts-legend-entry"]
                        ],
                        hostBindings: function(e, i) {
                            1 & e && bt("mouseenter", function() {
                                return i.onMouseEnter()
                            })("mouseleave", function() {
                                return i.onMouseLeave()
                            })
                        },
                        inputs: {
                            color: "color",
                            label: "label",
                            formattedLabel: "formattedLabel",
                            isActive: "isActive"
                        },
                        outputs: {
                            select: "select",
                            activate: "activate",
                            deactivate: "deactivate",
                            toggle: "toggle"
                        },
                        decls: 4,
                        vars: 6,
                        consts: [
                            ["tabindex", "-1", 3, "title", "click"],
                            [1, "legend-label-color", 3, "click"],
                            [1, "legend-label-text"]
                        ],
                        template: function(e, i) {
                            1 & e && (N(0, "span", 0), bt("click", function() {
                                return i.select.emit(i.formattedLabel)
                            }), N(1, "span", 1), bt("click", function() {
                                return i.toggle.emit(i.formattedLabel)
                            }), H(), N(2, "span", 2), ae(3), H()()), 2 & e && ($r("active", i.isActive), Fe("title", i.formattedLabel), xe(1), er("background-color", i.color), xe(2), dn(" ", i.trimmedLabel, " "))
                        },
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                O5 = (() => {
                    class t {
                        constructor(e) {
                            this.cd = e, this.horizontal = !1, this.labelClick = new Pt, this.labelActivate = new Pt, this.labelDeactivate = new Pt, this.legendEntries = []
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        update() {
                            this.cd.markForCheck(), this.legendEntries = this.getLegendEntries()
                        }
                        getLegendEntries() {
                            const e = [];
                            for (const i of this.data) {
                                const s = hp(i); - 1 === e.findIndex(l => l.label === s) && e.push({
                                    label: i,
                                    formattedLabel: s,
                                    color: this.colors.getColor(i)
                                })
                            }
                            return e
                        }
                        isActive(e) {
                            return !!this.activeEntries && void 0 !== this.activeEntries.find(s => e.label === s.name)
                        }
                        activate(e) {
                            this.labelActivate.emit(e)
                        }
                        deactivate(e) {
                            this.labelDeactivate.emit(e)
                        }
                        trackBy(e, i) {
                            return i.label
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(Xr))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["ngx-charts-legend"]
                        ],
                        inputs: {
                            data: "data",
                            title: "title",
                            colors: "colors",
                            height: "height",
                            width: "width",
                            activeEntries: "activeEntries",
                            horizontal: "horizontal"
                        },
                        outputs: {
                            labelClick: "labelClick",
                            labelActivate: "labelActivate",
                            labelDeactivate: "labelDeactivate"
                        },
                        features: [ni],
                        decls: 5,
                        vars: 9,
                        consts: [
                            ["class", "legend-title", 4, "ngIf"],
                            [1, "legend-wrap"],
                            [1, "legend-labels"],
                            ["class", "legend-label", 4, "ngFor", "ngForOf", "ngForTrackBy"],
                            [1, "legend-title"],
                            [1, "legend-title-text"],
                            [1, "legend-label"],
                            [3, "label", "formattedLabel", "color", "isActive", "select", "activate", "deactivate"]
                        ],
                        template: function(e, i) {
                            1 & e && (N(0, "div"), rt(1, _re, 3, 1, "header", 0), N(2, "div", 1)(3, "ul", 2), rt(4, wre, 2, 4, "li", 3), H()()()), 2 & e && (er("width", i.width, "px"), xe(1), Fe("ngIf", (null == i.title ? null : i.title.length) > 0), xe(2), er("max-height", i.height - 45, "px"), $r("horizontal-legend", i.horizontal), xe(1), Fe("ngForOf", i.legendEntries)("ngForTrackBy", i.trackBy))
                        },
                        dependencies: [P5, Ji, $s],
                        styles: [".chart-legend{display:inline-block;padding:0;width:auto!important}.chart-legend .legend-title{white-space:nowrap;overflow:hidden;margin-left:10px;margin-bottom:5px;font-size:14px;font-weight:700}.chart-legend ul,.chart-legend li{padding:0;margin:0;list-style:none}.chart-legend .horizontal-legend li{display:inline-block}.chart-legend .legend-wrap{width:calc(100% - 10px)}.chart-legend .legend-labels{line-height:85%;list-style:none;text-align:left;float:left;width:100%;border-radius:3px;overflow-y:auto;overflow-x:hidden;white-space:nowrap;background:rgba(0,0,0,.05)}.chart-legend .legend-label{cursor:pointer;font-size:90%;margin:8px;color:#afb7c8}.chart-legend .legend-label:hover{color:#000;transition:.2s}.chart-legend .legend-label .active .legend-label-text{color:#000}.chart-legend .legend-label-color{display:inline-block;height:15px;width:15px;margin-right:5px;color:#5b646b;border-radius:3px}.chart-legend .legend-label-text{display:inline-block;vertical-align:top;line-height:15px;font-size:12px;width:calc(100% - 20px);text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.chart-legend .legend-title-text{vertical-align:bottom;display:inline-block;line-height:16px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}\n"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                I5 = (() => {
                    class t {
                        constructor() {
                            this.showLegend = !1, this.animations = !0, this.legendLabelClick = new Pt, this.legendLabelActivate = new Pt, this.legendLabelDeactivate = new Pt, this.LegendPosition = iu, this.LegendType = dp
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        update() {
                            let e = 0;
                            this.showLegend && (this.legendType = this.getLegendType(), (!this.legendOptions || this.legendOptions.position === iu.Right) && (e = this.legendType === dp.ScaleLegend ? 1 : 2)), this.chartWidth = Math.floor(this.view[0] * (12 - e) / 12), this.legendWidth = this.legendOptions && this.legendOptions.position !== iu.Right ? this.chartWidth : Math.floor(this.view[0] * e / 12)
                        }
                        getLegendType() {
                            return this.legendOptions.scaleType === yn.Linear ? dp.ScaleLegend : dp.Legend
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["ngx-charts-chart"]
                        ],
                        inputs: {
                            view: "view",
                            showLegend: "showLegend",
                            legendOptions: "legendOptions",
                            legendType: "legendType",
                            activeEntries: "activeEntries",
                            animations: "animations"
                        },
                        outputs: {
                            legendLabelClick: "legendLabelClick",
                            legendLabelActivate: "legendLabelActivate",
                            legendLabelDeactivate: "legendLabelDeactivate"
                        },
                        features: [Xi([C1]), ni],
                        ngContentSelectors: T5,
                        decls: 5,
                        vars: 8,
                        consts: [
                            [1, "ngx-charts-outer"],
                            [1, "ngx-charts"],
                            ["class", "chart-legend", 3, "horizontal", "valueRange", "colors", "height", "width", 4, "ngIf"],
                            ["class", "chart-legend", 3, "horizontal", "data", "title", "colors", "height", "width", "activeEntries", "labelClick", "labelActivate", "labelDeactivate", 4, "ngIf"],
                            [1, "chart-legend", 3, "horizontal", "valueRange", "colors", "height", "width"],
                            [1, "chart-legend", 3, "horizontal", "data", "title", "colors", "height", "width", "activeEntries", "labelClick", "labelActivate", "labelDeactivate"]
                        ],
                        template: function(e, i) {
                            1 & e && (Rl(), N(0, "div", 0), Kt(), N(1, "svg", 1), Go(2), H(), rt(3, Cre, 1, 5, "ngx-charts-scale-legend", 2), rt(4, Sre, 1, 7, "ngx-charts-legend", 3), H()), 2 & e && (er("width", i.view[0], "px")("height", i.view[1], "px"), xe(1), mn("width", i.chartWidth)("height", i.view[1]), xe(2), Fe("ngIf", i.showLegend && i.legendType === i.LegendType.ScaleLegend), xe(1), Fe("ngIf", i.showLegend && i.legendType === i.LegendType.Legend))
                        },
                        dependencies: [M5, O5, Ji],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Voe = (() => {
                    class t {
                        constructor(e, i) {
                            this.element = e, this.zone = i, this.visible = new Pt, this.isVisible = !1, this.runCheck()
                        }
                        destroy() {
                            clearTimeout(this.timeout)
                        }
                        onVisibilityChange() {
                            this.zone.run(() => {
                                this.isVisible = !0, this.visible.emit(!0)
                            })
                        }
                        runCheck() {
                            const e = () => {
                                if (!this.element) return;
                                const {
                                    offsetHeight: i,
                                    offsetWidth: s
                                } = this.element.nativeElement;
                                i && s ? (clearTimeout(this.timeout), this.onVisibilityChange()) : (clearTimeout(this.timeout), this.zone.runOutsideAngular(() => {
                                    this.timeout = setTimeout(() => e(), 100)
                                }))
                            };
                            this.zone.runOutsideAngular(() => {
                                this.timeout = setTimeout(() => e())
                            })
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii), $e(si))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["visibility-observer"]
                        ],
                        outputs: {
                            visible: "visible"
                        }
                    }), t
                })();

            function L5(t) {
                return "[object Date]" === toString.call(t)
            }
            let F5 = (() => {
                class t {
                    constructor(e, i, s, r) {
                        this.chartElement = e, this.zone = i, this.cd = s, this.platformId = r, this.scheme = "cool", this.schemeType = yn.Ordinal, this.animations = !0, this.select = new Pt
                    }
                    ngOnInit() {
                        af(this.platformId) && (this.animations = !1)
                    }
                    ngAfterViewInit() {
                        this.bindWindowResizeEvent(), this.visibilityObserver = new Voe(this.chartElement, this.zone), this.visibilityObserver.visible.subscribe(this.update.bind(this))
                    }
                    ngOnDestroy() {
                        this.unbindEvents(), this.visibilityObserver && (this.visibilityObserver.visible.unsubscribe(), this.visibilityObserver.destroy())
                    }
                    ngOnChanges(e) {
                        this.update()
                    }
                    update() {
                        if (this.results = this.results ? this.cloneData(this.results) : [], this.view) this.width = this.view[0], this.height = this.view[1];
                        else {
                            const e = this.getContainerDims();
                            e && (this.width = e.width, this.height = e.height)
                        }
                        this.width || (this.width = 600), this.height || (this.height = 400), this.width = Math.floor(this.width), this.height = Math.floor(this.height), this.cd && this.cd.markForCheck()
                    }
                    getContainerDims() {
                        let e, i;
                        const s = this.chartElement.nativeElement;
                        if (Ia(this.platformId) && null !== s.parentNode) {
                            const r = s.parentNode.getBoundingClientRect();
                            e = r.width, i = r.height
                        }
                        return e && i ? {
                            width: e,
                            height: i
                        } : null
                    }
                    formatDates() {
                        for (let e = 0; e < this.results.length; e++) {
                            const i = this.results[e];
                            if (i.label = i.name, L5(i.label) && (i.label = i.label.toLocaleDateString()), i.series)
                                for (let s = 0; s < i.series.length; s++) {
                                    const r = i.series[s];
                                    r.label = r.name, L5(r.label) && (r.label = r.label.toLocaleDateString())
                                }
                        }
                    }
                    unbindEvents() {
                        this.resizeSubscription && this.resizeSubscription.unsubscribe()
                    }
                    bindWindowResizeEvent() {
                        if (!Ia(this.platformId)) return;
                        const i = yd(window, "resize").pipe(AC(200)).subscribe(s => {
                            this.update(), this.cd && this.cd.markForCheck()
                        });
                        this.resizeSubscription = i
                    }
                    cloneData(e) {
                        const i = [];
                        for (const s of e) {
                            const r = {};
                            if (void 0 !== s.name && (r.name = s.name), void 0 !== s.value && (r.value = s.value), void 0 !== s.series) {
                                r.series = [];
                                for (const l of s.series) {
                                    const u = Object.assign({}, l);
                                    r.series.push(u)
                                }
                            }
                            void 0 !== s.extra && (r.extra = JSON.parse(JSON.stringify(s.extra))), void 0 !== s.source && (r.source = s.source), void 0 !== s.target && (r.target = s.target), i.push(r)
                        }
                        return i
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)($e(ii), $e(si), $e(Xr), $e(ws))
                }, t.\u0275cmp = cn({
                    type: t,
                    selectors: [
                        ["base-chart"]
                    ],
                    inputs: {
                        results: "results",
                        view: "view",
                        scheme: "scheme",
                        schemeType: "schemeType",
                        customColors: "customColors",
                        animations: "animations"
                    },
                    outputs: {
                        select: "select"
                    },
                    features: [ni],
                    decls: 1,
                    vars: 0,
                    template: function(e, i) {
                        1 & e && ot(0, "div")
                    },
                    encapsulation: 2
                }), t
            })();
            var tr = function(t) {
                return t.Top = "top", t.Bottom = "bottom", t.Left = "left", t.Right = "right", t
            }(tr || {});
            let N5 = (() => {
                class t {
                    constructor(e) {
                        this.textHeight = 25, this.margin = 5, this.element = e.nativeElement
                    }
                    ngOnChanges(e) {
                        this.update()
                    }
                    update() {
                        switch (this.strokeWidth = "0.01", this.textAnchor = "middle", this.transform = "", this.orient) {
                            case tr.Top:
                            case tr.Bottom:
                                this.y = this.offset, this.x = this.width / 2;
                                break;
                            case tr.Left:
                                this.y = -(this.offset + this.textHeight + this.margin), this.x = -this.height / 2, this.transform = "rotate(270)";
                                break;
                            case tr.Right:
                                this.y = this.offset + this.margin, this.x = -this.height / 2, this.transform = "rotate(270)"
                        }
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)($e(ii))
                }, t.\u0275cmp = cn({
                    type: t,
                    selectors: [
                        ["g", "ngx-charts-axis-label", ""]
                    ],
                    inputs: {
                        orient: "orient",
                        label: "label",
                        offset: "offset",
                        width: "width",
                        height: "height"
                    },
                    features: [ni],
                    attrs: Tre,
                    decls: 2,
                    vars: 6,
                    template: function(e, i) {
                        1 & e && (Kt(), N(0, "text"), ae(1), H()), 2 & e && (mn("stroke-width", i.strokeWidth)("x", i.x)("y", i.y)("text-anchor", i.textAnchor)("transform", i.transform), xe(1), dn(" ", i.label, " "))
                    },
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();

            function T1(t, n = 16) {
                return "string" != typeof t ? "number" == typeof t ? t + "" : "" : (t = t.trim()).length <= n ? t : `${t.slice(0,n)}...`
            }

            function R5(t, n) {
                if (t.length > n) {
                    const e = [],
                        i = Math.floor(t.length / n);
                    for (let s = 0; s < t.length; s++) s % i == 0 && e.push(t[s]);
                    t = e
                }
                return t
            }

            function B5(t, n, e) {
                const i = (t || "").toString();
                let s = [];
                if (/\s/.test(i)) s = i.split(/\s+/).reduce((r, l) => {
                    const u = (r.pop() || "") + " ";
                    return u.length + l.length > n ? [...r, u.trim(), l.trim()] : [...r, u + l]
                }, []);
                else {
                    let r = 0;
                    for (; r < i.length;) s.push(i.substring(r, r + n)), r += n
                }
                return s.length > e && (s = s.splice(0, e), s[s.length - 1] += "..."), s
            }
            var gl = function(t) {
                return t.Start = "start", t.Middle = "middle", t.End = "end", t
            }(gl || {});
            let V5 = (() => {
                    class t {
                        constructor(e) {
                            this.platformId = e, this.tickArguments = [5], this.tickStroke = "#ccc", this.trimTicks = !0, this.maxTickLength = 16, this.showGridLines = !1, this.rotateTicks = !0, this.wrapTicks = !1, this.dimensionsChanged = new Pt, this.verticalSpacing = 20, this.rotateLabels = !1, this.innerTickSize = 6, this.outerTickSize = 6, this.tickPadding = 3, this.textAnchor = gl.Middle, this.maxTicksLength = 0, this.maxAllowedLength = 16, this.height = 0, this.approxHeight = 10, this.maxPossibleLengthForTickIfWrapped = 16
                        }
                        get isWrapTicksSupported() {
                            return this.wrapTicks && this.scale.step
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        ngAfterViewInit() {
                            setTimeout(() => this.updateDims())
                        }
                        updateDims() {
                            if (!Ia(this.platformId)) return void this.dimensionsChanged.emit({
                                height: this.approxHeight
                            });
                            const e = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);
                            e !== this.height && (this.height = e, this.dimensionsChanged.emit({
                                height: this.height
                            }), setTimeout(() => this.updateDims()))
                        }
                        update() {
                            const e = this.scale;
                            this.ticks = this.getTicks(), this.tickFormat = this.tickFormatting ? this.tickFormatting : e.tickFormat ? e.tickFormat.apply(e, this.tickArguments) : function(s) {
                                return "Date" === s.constructor.name ? s.toLocaleDateString() : s.toLocaleString()
                            };
                            const i = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;
                            this.adjustedScale = this.scale.bandwidth ? function(s) {
                                return this.scale(s) + .5 * this.scale.bandwidth()
                            } : this.scale, this.textTransform = "", i && 0 !== i ? (this.textTransform = `rotate(${i})`, this.textAnchor = gl.End, this.verticalSpacing = 10) : this.textAnchor = gl.Middle, setTimeout(() => this.updateDims())
                        }
                        getRotationAngle(e) {
                            let i = 0;
                            this.maxTicksLength = 0;
                            for (let C = 0; C < e.length; C++) {
                                const M = this.tickFormat(e[C]).toString();
                                let L = M.length;
                                this.trimTicks && (L = this.tickTrim(M).length), L > this.maxTicksLength && (this.maxTicksLength = L)
                            }
                            const l = 7 * Math.min(this.maxTicksLength, this.maxAllowedLength);
                            let u = l;
                            const h = Math.floor(this.width / e.length);
                            for (; u > h && i > -90;) i -= 30, u = Math.cos(i * (Math.PI / 180)) * l;
                            let v = 14;
                            if (this.isWrapTicksSupported) {
                                const C = this.ticks.reduce((L, j) => j.length > L.length ? j : L, "");
                                v = 14 * (this.tickChunks(C).length || 1), this.maxPossibleLengthForTickIfWrapped = this.getMaxPossibleLengthForTick(C)
                            }
                            const _ = 0 !== i ? Math.max(Math.abs(Math.sin(i * Math.PI / 180)) * this.maxTickLength * 7, 10) : v;
                            return this.approxHeight = Math.min(_, 200), i
                        }
                        getTicks() {
                            let e;
                            const i = this.getMaxTicks(20),
                                s = this.getMaxTicks(100);
                            return this.tickValues ? e = this.tickValues : this.scale.ticks ? e = this.scale.ticks.apply(this.scale, [s]) : (e = this.scale.domain(), e = R5(e, i)), e
                        }
                        getMaxTicks(e) {
                            return Math.floor(this.width / e)
                        }
                        tickTransform(e) {
                            return "translate(" + this.adjustedScale(e) + "," + this.verticalSpacing + ")"
                        }
                        gridLineTransform() {
                            return `translate(0,${-this.verticalSpacing-5})`
                        }
                        tickTrim(e) {
                            return this.trimTicks ? T1(e, this.maxTickLength) : e
                        }
                        getMaxPossibleLengthForTick(e) {
                            if (this.scale.bandwidth) {
                                const s = Math.floor(this.scale.bandwidth() / 7),
                                    r = e.slice(0, s);
                                return Math.max(r.length, this.maxTickLength)
                            }
                            return this.maxTickLength
                        }
                        tickChunks(e) {
                            if (e.toString().length > this.maxTickLength && this.scale.bandwidth) {
                                let s = this.rotateTicks ? Math.floor(this.scale.step() / 14) : 5;
                                if (s <= 1) return [this.tickTrim(e)];
                                let r = Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength);
                                return Ia(this.platformId) || (r = Math.floor(Math.min(this.approxHeight / 5, Math.max(this.maxPossibleLengthForTickIfWrapped, this.maxTickLength)))), s = Math.min(s, 5), B5(e, r, s < 1 ? 1 : s)
                            }
                            return [this.tickTrim(e)]
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ws))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["g", "ngx-charts-x-axis-ticks", ""]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && ka(D5, 5), 2 & e) {
                                let s;
                                kr(s = Er()) && (i.ticksElement = s.first)
                            }
                        },
                        inputs: {
                            scale: "scale",
                            orient: "orient",
                            tickArguments: "tickArguments",
                            tickValues: "tickValues",
                            tickStroke: "tickStroke",
                            trimTicks: "trimTicks",
                            maxTickLength: "maxTickLength",
                            tickFormatting: "tickFormatting",
                            showGridLines: "showGridLines",
                            gridLineHeight: "gridLineHeight",
                            width: "width",
                            rotateTicks: "rotateTicks",
                            wrapTicks: "wrapTicks"
                        },
                        outputs: {
                            dimensionsChanged: "dimensionsChanged"
                        },
                        features: [ni],
                        attrs: Dre,
                        decls: 4,
                        vars: 2,
                        consts: [
                            ["ticksel", ""],
                            ["class", "tick", 4, "ngFor", "ngForOf"],
                            [4, "ngFor", "ngForOf"],
                            [1, "tick"],
                            [4, "ngIf"],
                            ["stroke-width", "0.01", "font-size", "12px"],
                            [4, "ngIf", "ngIfThen", "ngIfElse"],
                            ["tmplMultilineTick", ""],
                            ["tmplSinglelineTick", ""],
                            ["x", "0", 4, "ngFor", "ngForOf"],
                            ["x", "0"],
                            ["y2", "0", 1, "gridline-path", "gridline-path-vertical"]
                        ],
                        template: function(e, i) {
                            1 & e && (Kt(), N(0, "g", null, 0), rt(2, Ire, 2, 2, "g", 1), H(), rt(3, Fre, 2, 2, "g", 2)), 2 & e && (xe(2), Fe("ngForOf", i.ticks), xe(1), Fe("ngForOf", i.ticks))
                        },
                        dependencies: [$s, Ji],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Hoe = (() => {
                    class t {
                        constructor() {
                            this.rotateTicks = !0, this.showGridLines = !1, this.xOrient = tr.Bottom, this.xAxisOffset = 0, this.wrapTicks = !1, this.dimensionsChanged = new Pt, this.xAxisClassName = "x axis", this.labelOffset = 0, this.fill = "none", this.stroke = "stroke", this.tickStroke = "#ccc", this.strokeWidth = "none", this.padding = 5, this.orientation = tr
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        update() {
                            this.transform = `translate(0,${this.xAxisOffset+this.padding+this.dims.height})`, typeof this.xAxisTickCount < "u" && (this.tickArguments = [this.xAxisTickCount])
                        }
                        emitTicksHeight({
                            height: e
                        }) {
                            const i = e + 25 + 5;
                            i !== this.labelOffset && (this.labelOffset = i, setTimeout(() => {
                                this.dimensionsChanged.emit({
                                    height: e
                                })
                            }, 0))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["g", "ngx-charts-x-axis", ""]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && ka(V5, 5), 2 & e) {
                                let s;
                                kr(s = Er()) && (i.ticksComponent = s.first)
                            }
                        },
                        inputs: {
                            xScale: "xScale",
                            dims: "dims",
                            trimTicks: "trimTicks",
                            rotateTicks: "rotateTicks",
                            maxTickLength: "maxTickLength",
                            tickFormatting: "tickFormatting",
                            showGridLines: "showGridLines",
                            showLabel: "showLabel",
                            labelText: "labelText",
                            ticks: "ticks",
                            xAxisTickCount: "xAxisTickCount",
                            xOrient: "xOrient",
                            xAxisOffset: "xAxisOffset",
                            wrapTicks: "wrapTicks"
                        },
                        outputs: {
                            dimensionsChanged: "dimensionsChanged"
                        },
                        features: [ni],
                        attrs: Nre,
                        decls: 3,
                        vars: 4,
                        consts: [
                            ["ngx-charts-x-axis-ticks", "", 3, "trimTicks", "rotateTicks", "maxTickLength", "tickFormatting", "tickArguments", "tickStroke", "scale", "orient", "showGridLines", "gridLineHeight", "width", "tickValues", "wrapTicks", "dimensionsChanged", 4, "ngIf"],
                            ["ngx-charts-axis-label", "", 3, "label", "offset", "orient", "height", "width", 4, "ngIf"],
                            ["ngx-charts-x-axis-ticks", "", 3, "trimTicks", "rotateTicks", "maxTickLength", "tickFormatting", "tickArguments", "tickStroke", "scale", "orient", "showGridLines", "gridLineHeight", "width", "tickValues", "wrapTicks", "dimensionsChanged"],
                            ["ngx-charts-axis-label", "", 3, "label", "offset", "orient", "height", "width"]
                        ],
                        template: function(e, i) {
                            1 & e && (Kt(), N(0, "g"), rt(1, Rre, 1, 13, "g", 0), rt(2, Bre, 1, 5, "g", 1), H()), 2 & e && (mn("class", i.xAxisClassName)("transform", i.transform), xe(1), Fe("ngIf", i.xScale), xe(1), Fe("ngIf", i.showLabel))
                        },
                        dependencies: [V5, N5, Ji],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })();

            function tc(t, n, e, i, s, [r, l, u, h]) {
                let v = "";
                return v = `M${[t+s,n]}`, v += "h" + ((e = 0 === (e = Math.floor(e)) ? 1 : e) - 2 * s), v += l ? `a${[s,s]} 0 0 1 ${[s,s]}` : `h${s}v${s}`, v += "v" + ((i = 0 === (i = Math.floor(i)) ? 1 : i) - 2 * s), v += h ? `a${[s,s]} 0 0 1 ${[-s,s]}` : `v${s}h${-s}`, v += "h" + (2 * s - e), v += u ? `a${[s,s]} 0 0 1 ${[-s,-s]}` : `h${-s}v${-s}`, v += "v" + (2 * s - i), v += r ? `a${[s,s]} 0 0 1 ${[s,-s]}` : `v${-s}h${s}`, v += "z", v
            }
            let H5 = (() => {
                    class t {
                        constructor(e) {
                            this.platformId = e, this.tickArguments = [5], this.tickStroke = "#ccc", this.trimTicks = !0, this.maxTickLength = 16, this.showGridLines = !1, this.showRefLabels = !1, this.showRefLines = !1, this.wrapTicks = !1, this.dimensionsChanged = new Pt, this.innerTickSize = 6, this.tickPadding = 3, this.verticalSpacing = 20, this.textAnchor = gl.Middle, this.width = 0, this.outerTickSize = 6, this.rotateLabels = !1, this.referenceLineLength = 0, this.Orientation = tr
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        ngAfterViewInit() {
                            setTimeout(() => this.updateDims())
                        }
                        updateDims() {
                            if (!Ia(this.platformId)) return this.width = this.getApproximateAxisWidth(), void this.dimensionsChanged.emit({
                                width: this.width
                            });
                            const e = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);
                            e !== this.width && (this.width = e, this.dimensionsChanged.emit({
                                width: e
                            }), setTimeout(() => this.updateDims()))
                        }
                        update() {
                            const e = this.scale,
                                i = this.orient === tr.Top || this.orient === tr.Right ? -1 : 1;
                            switch (this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding, this.ticks = this.getTicks(), this.tickFormat = this.tickFormatting ? this.tickFormatting : e.tickFormat ? e.tickFormat.apply(e, this.tickArguments) : function(s) {
                                return "Date" === s.constructor.name ? s.toLocaleDateString() : s.toLocaleString()
                            }, this.adjustedScale = e.bandwidth ? s => {
                                const r = e(s) + .5 * e.bandwidth();
                                if (this.wrapTicks && s.toString().length > this.maxTickLength) {
                                    const l = this.tickChunks(s).length;
                                    if (1 === l) return r;
                                    const v = .5 * e.bandwidth() - 8 * l * .5;
                                    return e(s) + v
                                }
                                return r
                            } : e, this.showRefLines && this.referenceLines && this.setReferencelines(), this.orient) {
                                case tr.Top:
                                case tr.Bottom:
                                    this.transform = function(s) {
                                        return "translate(" + this.adjustedScale(s) + ",0)"
                                    }, this.textAnchor = gl.Middle, this.y2 = this.innerTickSize * i, this.y1 = this.tickSpacing * i, this.dy = i < 0 ? "0em" : ".71em";
                                    break;
                                case tr.Left:
                                    this.transform = function(s) {
                                        return "translate(0," + this.adjustedScale(s) + ")"
                                    }, this.textAnchor = gl.End, this.x2 = this.innerTickSize * -i, this.x1 = this.tickSpacing * -i, this.dy = ".32em";
                                    break;
                                case tr.Right:
                                    this.transform = function(s) {
                                        return "translate(0," + this.adjustedScale(s) + ")"
                                    }, this.textAnchor = gl.Start, this.x2 = this.innerTickSize * -i, this.x1 = this.tickSpacing * -i, this.dy = ".32em"
                            }
                            setTimeout(() => this.updateDims())
                        }
                        setReferencelines() {
                            this.refMin = this.adjustedScale(Math.min.apply(null, this.referenceLines.map(e => e.value))), this.refMax = this.adjustedScale(Math.max.apply(null, this.referenceLines.map(e => e.value))), this.referenceLineLength = this.referenceLines.length, this.referenceAreaPath = tc(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [!1, !1, !1, !1])
                        }
                        getTicks() {
                            let e;
                            const i = this.getMaxTicks(20),
                                s = this.getMaxTicks(50);
                            return this.tickValues ? e = this.tickValues : this.scale.ticks ? e = this.scale.ticks.apply(this.scale, [s]) : (e = this.scale.domain(), e = R5(e, i)), e
                        }
                        getMaxTicks(e) {
                            return Math.floor(this.height / e)
                        }
                        tickTransform(e) {
                            return `translate(${this.adjustedScale(e)},${this.verticalSpacing})`
                        }
                        gridLineTransform() {
                            return "translate(5,0)"
                        }
                        tickTrim(e) {
                            return this.trimTicks ? T1(e, this.maxTickLength) : e
                        }
                        getApproximateAxisWidth() {
                            return 7 * Math.max(...this.ticks.map(s => this.tickTrim(this.tickFormat(s)).length))
                        }
                        tickChunks(e) {
                            if (e.toString().length > this.maxTickLength && this.scale.bandwidth) {
                                const i = this.maxTickLength,
                                    s = Math.floor(this.scale.bandwidth() / 15);
                                return s <= 1 ? [this.tickTrim(e)] : B5(e, i, Math.min(s, 5))
                            }
                            return [this.tickFormat(e)]
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ws))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["g", "ngx-charts-y-axis-ticks", ""]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && ka(D5, 5), 2 & e) {
                                let s;
                                kr(s = Er()) && (i.ticksElement = s.first)
                            }
                        },
                        inputs: {
                            scale: "scale",
                            orient: "orient",
                            tickArguments: "tickArguments",
                            tickValues: "tickValues",
                            tickStroke: "tickStroke",
                            trimTicks: "trimTicks",
                            maxTickLength: "maxTickLength",
                            tickFormatting: "tickFormatting",
                            showGridLines: "showGridLines",
                            gridLineWidth: "gridLineWidth",
                            height: "height",
                            referenceLines: "referenceLines",
                            showRefLabels: "showRefLabels",
                            showRefLines: "showRefLines",
                            wrapTicks: "wrapTicks"
                        },
                        outputs: {
                            dimensionsChanged: "dimensionsChanged"
                        },
                        features: [ni],
                        attrs: Vre,
                        decls: 6,
                        vars: 4,
                        consts: [
                            ["ticksel", ""],
                            ["class", "tick", 4, "ngFor", "ngForOf"],
                            ["class", "reference-area", 4, "ngIf"],
                            [4, "ngFor", "ngForOf"],
                            [1, "tick"],
                            [4, "ngIf"],
                            ["stroke-width", "0.01"],
                            [4, "ngIf", "ngIfThen", "ngIfElse"],
                            ["tmplMultilineTick", ""],
                            ["tmplSinglelineTick", ""],
                            [4, "ngIf", "ngIfElse"],
                            ["x", "0", 4, "ngFor", "ngForOf"],
                            ["x", "0"],
                            [1, "reference-area"],
                            ["class", "gridline-path gridline-path-horizontal", "x1", "0", 4, "ngIf"],
                            ["x1", "0", 1, "gridline-path", "gridline-path-horizontal"],
                            ["x1", "0", 1, "refline-path", "gridline-path-horizontal"],
                            [1, "refline-label"]
                        ],
                        template: function(e, i) {
                            1 & e && (Kt(), N(0, "g", null, 0), rt(2, Xre, 2, 2, "g", 1), H(), rt(3, Yre, 1, 2, "path", 2), rt(4, Qre, 2, 2, "g", 3), rt(5, tae, 2, 1, "g", 3)), 2 & e && (xe(2), Fe("ngForOf", i.ticks), xe(1), Fe("ngIf", i.referenceLineLength > 1 && i.refMax && i.refMin && i.showRefLines), xe(1), Fe("ngForOf", i.ticks), xe(1), Fe("ngForOf", i.referenceLines))
                        },
                        dependencies: [$s, Ji],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                zoe = (() => {
                    class t {
                        constructor() {
                            this.showGridLines = !1, this.yOrient = tr.Left, this.yAxisOffset = 0, this.wrapTicks = !1, this.dimensionsChanged = new Pt, this.yAxisClassName = "y axis", this.labelOffset = 15, this.fill = "none", this.stroke = "#CCC", this.tickStroke = "#CCC", this.strokeWidth = 1, this.padding = 5
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        update() {
                            this.offset = -(this.yAxisOffset + this.padding), this.yOrient === tr.Right ? (this.labelOffset = 65, this.transform = `translate(${this.offset+this.dims.width} , 0)`) : this.transform = `translate(${this.offset} , 0)`, void 0 !== this.yAxisTickCount && (this.tickArguments = [this.yAxisTickCount])
                        }
                        emitTicksWidth({
                            width: e
                        }) {
                            e !== this.labelOffset && this.yOrient === tr.Right ? (this.labelOffset = e + this.labelOffset, setTimeout(() => {
                                this.dimensionsChanged.emit({
                                    width: e
                                })
                            }, 0)) : e !== this.labelOffset && (this.labelOffset = e, setTimeout(() => {
                                this.dimensionsChanged.emit({
                                    width: e
                                })
                            }, 0))
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["g", "ngx-charts-y-axis", ""]
                        ],
                        viewQuery: function(e, i) {
                            if (1 & e && ka(H5, 5), 2 & e) {
                                let s;
                                kr(s = Er()) && (i.ticksComponent = s.first)
                            }
                        },
                        inputs: {
                            yScale: "yScale",
                            dims: "dims",
                            trimTicks: "trimTicks",
                            maxTickLength: "maxTickLength",
                            tickFormatting: "tickFormatting",
                            ticks: "ticks",
                            showGridLines: "showGridLines",
                            showLabel: "showLabel",
                            labelText: "labelText",
                            yAxisTickCount: "yAxisTickCount",
                            yOrient: "yOrient",
                            referenceLines: "referenceLines",
                            showRefLines: "showRefLines",
                            showRefLabels: "showRefLabels",
                            yAxisOffset: "yAxisOffset",
                            wrapTicks: "wrapTicks"
                        },
                        outputs: {
                            dimensionsChanged: "dimensionsChanged"
                        },
                        features: [ni],
                        attrs: nae,
                        decls: 3,
                        vars: 4,
                        consts: [
                            ["ngx-charts-y-axis-ticks", "", 3, "trimTicks", "maxTickLength", "tickFormatting", "tickArguments", "tickValues", "tickStroke", "scale", "orient", "showGridLines", "gridLineWidth", "referenceLines", "showRefLines", "showRefLabels", "height", "wrapTicks", "dimensionsChanged", 4, "ngIf"],
                            ["ngx-charts-axis-label", "", 3, "label", "offset", "orient", "height", "width", 4, "ngIf"],
                            ["ngx-charts-y-axis-ticks", "", 3, "trimTicks", "maxTickLength", "tickFormatting", "tickArguments", "tickValues", "tickStroke", "scale", "orient", "showGridLines", "gridLineWidth", "referenceLines", "showRefLines", "showRefLabels", "height", "wrapTicks", "dimensionsChanged"],
                            ["ngx-charts-axis-label", "", 3, "label", "offset", "orient", "height", "width"]
                        ],
                        template: function(e, i) {
                            1 & e && (Kt(), N(0, "g"), rt(1, iae, 1, 15, "g", 0), rt(2, sae, 1, 5, "g", 1), H()), 2 & e && (mn("class", i.yAxisClassName)("transform", i.transform), xe(1), Fe("ngIf", i.yScale), xe(1), Fe("ngIf", i.showLabel))
                        },
                        dependencies: [H5, N5, Ji],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                z5 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [Oa]
                        ]
                    }), t
                })();
            var fp = function(t) {
                    return t.popover = "popover", t.tooltip = "tooltip", t
                }(fp || {}),
                zd = function(t) {
                    return t[t.all = "all"] = "all", t[t.focus = "focus"] = "focus", t[t.mouseover = "mouseover"] = "mouseover", t
                }(zd || {});
            let D1 = (() => {
                    class t {
                        constructor(e, i, s) {
                            this.tooltipService = e, this.viewContainerRef = i, this.renderer = s, this.tooltipCssClass = "", this.tooltipAppendToBody = !0, this.tooltipSpacing = 10, this.tooltipDisabled = !1, this.tooltipShowCaret = !0, this.tooltipPlacement = ri.Top, this.tooltipAlignment = ri.Center, this.tooltipType = fp.popover, this.tooltipCloseOnClickOutside = !0, this.tooltipCloseOnMouseLeave = !0, this.tooltipHideTimeout = 300, this.tooltipShowTimeout = 100, this.tooltipShowEvent = zd.all, this.tooltipImmediateExit = !1, this.show = new Pt, this.hide = new Pt
                        }
                        get listensForFocus() {
                            return this.tooltipShowEvent === zd.all || this.tooltipShowEvent === zd.focus
                        }
                        get listensForHover() {
                            return this.tooltipShowEvent === zd.all || this.tooltipShowEvent === zd.mouseover
                        }
                        ngOnDestroy() {
                            this.hideTooltip(!0)
                        }
                        onFocus() {
                            this.listensForFocus && this.showTooltip()
                        }
                        onBlur() {
                            this.listensForFocus && this.hideTooltip(!0)
                        }
                        onMouseEnter() {
                            this.listensForHover && this.showTooltip()
                        }
                        onMouseLeave(e) {
                            if (this.listensForHover && this.tooltipCloseOnMouseLeave) {
                                if (clearTimeout(this.timeout), this.component && this.component.instance.element.nativeElement.contains(e)) return;
                                this.hideTooltip(this.tooltipImmediateExit)
                            }
                        }
                        onMouseClick() {
                            this.listensForHover && this.hideTooltip(!0)
                        }
                        showTooltip(e) {
                            if (this.component || this.tooltipDisabled) return;
                            const i = e ? 0 : this.tooltipShowTimeout + (navigator.userAgent.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 400 : 0);
                            clearTimeout(this.timeout), this.timeout = setTimeout(() => {
                                this.tooltipService.destroyAll();
                                const s = this.createBoundOptions();
                                this.component = this.tooltipService.create(s), setTimeout(() => {
                                    this.component && this.addHideListeners(this.component.instance.element.nativeElement)
                                }, 10), this.show.emit(!0)
                            }, i)
                        }
                        addHideListeners(e) {
                            this.mouseEnterContentEvent = this.renderer.listen(e, "mouseenter", () => {
                                clearTimeout(this.timeout)
                            }), this.tooltipCloseOnMouseLeave && (this.mouseLeaveContentEvent = this.renderer.listen(e, "mouseleave", () => {
                                this.hideTooltip(this.tooltipImmediateExit)
                            })), this.tooltipCloseOnClickOutside && (this.documentClickEvent = this.renderer.listen("window", "click", i => {
                                e.contains(i.target) || this.hideTooltip()
                            }))
                        }
                        hideTooltip(e = !1) {
                            if (!this.component) return;
                            const i = () => {
                                this.mouseLeaveContentEvent && this.mouseLeaveContentEvent(), this.mouseEnterContentEvent && this.mouseEnterContentEvent(), this.documentClickEvent && this.documentClickEvent(), this.hide.emit(!0), this.tooltipService.destroy(this.component), this.component = void 0
                            };
                            clearTimeout(this.timeout), e ? i() : this.timeout = setTimeout(i, this.tooltipHideTimeout)
                        }
                        createBoundOptions() {
                            return {
                                title: this.tooltipTitle,
                                template: this.tooltipTemplate,
                                host: this.viewContainerRef.element,
                                placement: this.tooltipPlacement,
                                alignment: this.tooltipAlignment,
                                type: this.tooltipType,
                                showCaret: this.tooltipShowCaret,
                                cssClass: this.tooltipCssClass,
                                spacing: this.tooltipSpacing,
                                context: this.tooltipContext
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(C1), $e(Wr), $e(Ts))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "ngx-tooltip", ""]
                        ],
                        hostBindings: function(e, i) {
                            1 & e && bt("focusin", function() {
                                return i.onFocus()
                            })("blur", function() {
                                return i.onBlur()
                            })("mouseenter", function() {
                                return i.onMouseEnter()
                            })("mouseleave", function(r) {
                                return i.onMouseLeave(r.target)
                            })("click", function() {
                                return i.onMouseClick()
                            })
                        },
                        inputs: {
                            tooltipCssClass: "tooltipCssClass",
                            tooltipTitle: "tooltipTitle",
                            tooltipAppendToBody: "tooltipAppendToBody",
                            tooltipSpacing: "tooltipSpacing",
                            tooltipDisabled: "tooltipDisabled",
                            tooltipShowCaret: "tooltipShowCaret",
                            tooltipPlacement: "tooltipPlacement",
                            tooltipAlignment: "tooltipAlignment",
                            tooltipType: "tooltipType",
                            tooltipCloseOnClickOutside: "tooltipCloseOnClickOutside",
                            tooltipCloseOnMouseLeave: "tooltipCloseOnMouseLeave",
                            tooltipHideTimeout: "tooltipHideTimeout",
                            tooltipShowTimeout: "tooltipShowTimeout",
                            tooltipTemplate: "tooltipTemplate",
                            tooltipShowEvent: "tooltipShowEvent",
                            tooltipContext: "tooltipContext",
                            tooltipImmediateExit: "tooltipImmediateExit"
                        },
                        outputs: {
                            show: "show",
                            hide: "hide"
                        }
                    }), t
                })(),
                j5 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        providers: [E5, C1],
                        imports: [
                            [Oa]
                        ]
                    }), t
                })();
            const $5 = {};

            function pp() {
                let t = ("0000" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);
                return t = `a${t}`, $5[t] ? pp() : ($5[t] = !0, t)
            }
            var Rs = function(t) {
                return t.Vertical = "vertical", t.Horizontal = "horizontal", t
            }(Rs || {});
            let A1, wy = (() => {
                class t {
                    constructor() {
                        this.orientation = Rs.Vertical
                    }
                    ngOnChanges(e) {
                        this.x1 = "0%", this.x2 = "0%", this.y1 = "0%", this.y2 = "0%", this.orientation === Rs.Horizontal ? this.x2 = "100%" : this.orientation === Rs.Vertical && (this.y1 = "100%")
                    }
                }
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275cmp = cn({
                    type: t,
                    selectors: [
                        ["g", "ngx-charts-svg-linear-gradient", ""]
                    ],
                    inputs: {
                        orientation: "orientation",
                        name: "name",
                        stops: "stops"
                    },
                    features: [ni],
                    attrs: rae,
                    decls: 2,
                    vars: 6,
                    consts: [
                        [3, "id"],
                        [3, "stop-color", "stop-opacity", 4, "ngFor", "ngForOf"]
                    ],
                    template: function(e, i) {
                        1 & e && (Kt(), N(0, "linearGradient", 0), rt(1, aae, 1, 5, "stop", 1), H()), 2 & e && (Fe("id", i.name), mn("x1", i.x1)("y1", i.y1)("x2", i.x2)("y2", i.y2), xe(1), Fe("ngForOf", i.stops))
                    },
                    dependencies: [$s],
                    encapsulation: 2,
                    changeDetection: 0
                }), t
            })();
            typeof window < "u" ? A1 = window : typeof global < "u" && (A1 = global);
            let ma = (() => {
                class t {}
                return t.\u0275fac = function(e) {
                    return new(e || t)
                }, t.\u0275mod = jn({
                    type: t
                }), t.\u0275inj = zn({
                    imports: [
                        [Oa, z5, j5], Oa, z5, j5
                    ]
                }), t
            })();
            const q5 = [{
                name: "vivid",
                selectable: !0,
                group: yn.Ordinal,
                domain: ["#647c8a", "#3f51b5", "#2196f3", "#00b862", "#afdf0a", "#a7b61a", "#f3e562", "#ff9800", "#ff5722", "#ff4514"]
            }, {
                name: "natural",
                selectable: !0,
                group: yn.Ordinal,
                domain: ["#bf9d76", "#e99450", "#d89f59", "#f2dfa7", "#a5d7c6", "#7794b1", "#afafaf", "#707160", "#ba9383", "#d9d5c3"]
            }, {
                name: "cool",
                selectable: !0,
                group: yn.Ordinal,
                domain: ["#a8385d", "#7aa3e5", "#a27ea8", "#aae3f5", "#adcded", "#a95963", "#8796c0", "#7ed3ed", "#50abcc", "#ad6886"]
            }, {
                name: "fire",
                selectable: !0,
                group: yn.Ordinal,
                domain: ["#ff3d00", "#bf360c", "#ff8f00", "#ff6f00", "#ff5722", "#e65100", "#ffca28", "#ffab00"]
            }, {
                name: "solar",
                selectable: !0,
                group: yn.Linear,
                domain: ["#fff8e1", "#ffecb3", "#ffe082", "#ffd54f", "#ffca28", "#ffc107", "#ffb300", "#ffa000", "#ff8f00", "#ff6f00"]
            }, {
                name: "air",
                selectable: !0,
                group: yn.Linear,
                domain: ["#e1f5fe", "#b3e5fc", "#81d4fa", "#4fc3f7", "#29b6f6", "#03a9f4", "#039be5", "#0288d1", "#0277bd", "#01579b"]
            }, {
                name: "aqua",
                selectable: !0,
                group: yn.Linear,
                domain: ["#e0f7fa", "#b2ebf2", "#80deea", "#4dd0e1", "#26c6da", "#00bcd4", "#00acc1", "#0097a7", "#00838f", "#006064"]
            }, {
                name: "flame",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#A10A28", "#D3342D", "#EF6D49", "#FAAD67", "#FDDE90", "#DBED91", "#A9D770", "#6CBA67", "#2C9653", "#146738"]
            }, {
                name: "ocean",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#1D68FB", "#33C0FC", "#4AFFFE", "#AFFFFF", "#FFFC63", "#FDBD2D", "#FC8A25", "#FA4F1E", "#FA141B", "#BA38D1"]
            }, {
                name: "forest",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#55C22D", "#C1F33D", "#3CC099", "#AFFFFF", "#8CFC9D", "#76CFFA", "#BA60FB", "#EE6490", "#C42A1C", "#FC9F32"]
            }, {
                name: "horizon",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#2597FB", "#65EBFD", "#99FDD0", "#FCEE4B", "#FEFCFA", "#FDD6E3", "#FCB1A8", "#EF6F7B", "#CB96E8", "#EFDEE0"]
            }, {
                name: "neons",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#FF3333", "#FF33FF", "#CC33FF", "#0000FF", "#33CCFF", "#33FFFF", "#33FF66", "#CCFF33", "#FFCC00", "#FF6600"]
            }, {
                name: "picnic",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#FAC51D", "#66BD6D", "#FAA026", "#29BB9C", "#E96B56", "#55ACD2", "#B7332F", "#2C83C9", "#9166B8", "#92E7E8"]
            }, {
                name: "night",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#2B1B5A", "#501356", "#183356", "#28203F", "#391B3C", "#1E2B3C", "#120634", "#2D0432", "#051932", "#453080", "#75267D", "#2C507D", "#4B3880", "#752F7D", "#35547D"]
            }, {
                name: "nightLights",
                selectable: !1,
                group: yn.Ordinal,
                domain: ["#4e31a5", "#9c25a7", "#3065ab", "#57468b", "#904497", "#46648b", "#32118d", "#a00fb3", "#1052a2", "#6e51bd", "#b63cc3", "#6c97cb", "#8671c1", "#b455be", "#7496c3"]
            }];
            class qoe {
                constructor(n, e, i, s) {
                    "string" == typeof n && (n = q5.find(r => r.name === n)), this.colorDomain = n.domain, this.scaleType = e, this.domain = i, this.customColors = s, this.scale = this.generateColorScheme(n, e, this.domain)
                }
                generateColorScheme(n, e, i) {
                    let s;
                    switch ("string" == typeof n && (n = q5.find(r => r.name === n)), e) {
                        case yn.Quantile:
                            s = S5().range(n.domain).domain(i);
                            break;
                        case yn.Ordinal:
                            s = w1().range(n.domain).domain(i);
                            break;
                        case yn.Linear:
                            {
                                const r = [...n.domain];1 === r.length && (r.push(r[0]), this.colorDomain = r);
                                const l = v5(0, 1, 1 / r.length);s = Hd().range(r).domain(l)
                            }
                    }
                    return s
                }
                getColor(n) {
                    if (null == n) throw new Error("Value can not be null");
                    if (this.scaleType === yn.Linear) {
                        const e = Hd().domain(this.domain).range([0, 1]);
                        return this.scale(e(n))
                    } {
                        if ("function" == typeof this.customColors) return this.customColors(n);
                        const e = n.toString();
                        let i;
                        return this.customColors && this.customColors.length > 0 && (i = this.customColors.find(s => s.name.toLowerCase() === e.toLowerCase())), i ? i.value : this.scale(n)
                    }
                }
                getLinearGradientStops(n, e) {
                    void 0 === e && (e = this.domain[0]);
                    const i = Hd().domain(this.domain).range([0, 1]),
                        s = _y().domain(this.colorDomain).range([0, 1]),
                        r = this.getColor(n),
                        l = i(e),
                        u = this.getColor(e),
                        h = i(n);
                    let v = 1,
                        _ = l;
                    const C = [];
                    for (C.push({
                            color: u,
                            offset: l,
                            originalOffset: l,
                            opacity: 1
                        }); _ < h && v < this.colorDomain.length;) {
                        const M = this.colorDomain[v],
                            L = s(M);
                        if (L <= l) v++;
                        else {
                            if (L.toFixed(4) >= (h - s.bandwidth()).toFixed(4)) break;
                            C.push({
                                color: M,
                                offset: L,
                                opacity: 1
                            }), _ = L, v++
                        }
                    }
                    if (C[C.length - 1].offset < 100 && C.push({
                            color: r,
                            offset: h,
                            opacity: 1
                        }), h === l) C[0].offset = 0, C[1].offset = 100;
                    else if (100 !== C[C.length - 1].offset)
                        for (const M of C) M.offset = (M.offset - l) / (h - l) * 100;
                    return C
                }
            }
            let Koe = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                Qoe = (() => {
                    class t {
                        constructor(e) {
                            this.roundEdges = !0, this.gradient = !1, this.offset = 0, this.isActive = !1, this.animations = !0, this.noBarWhenZero = !0, this.select = new Pt, this.activate = new Pt, this.deactivate = new Pt, this.hasGradient = !1, this.hideBar = !1, this.element = e.nativeElement
                        }
                        ngOnChanges(e) {
                            e.roundEdges && this.loadAnimation(), this.update()
                        }
                        update() {
                            this.gradientId = "grad" + pp().toString(), this.gradientFill = `url(#${this.gradientId})`, this.gradient || this.stops ? (this.gradientStops = this.getGradient(), this.hasGradient = !0) : this.hasGradient = !1, this.updatePathEl(), this.checkToHideBar()
                        }
                        loadAnimation() {
                            this.path = this.getStartingPath(), setTimeout(this.update.bind(this), 100)
                        }
                        updatePathEl() {
                            const e = function Na(t) {
                                    return "string" == typeof t ? new pa([
                                        [document.querySelector(t)]
                                    ], [document.documentElement]) : new pa([
                                        [t]
                                    ], HN)
                                }(this.element).select(".bar"),
                                i = this.getPath();
                            this.animations ? e.transition().duration(500).attr("d", i) : e.attr("d", i)
                        }
                        getGradient() {
                            return this.stops ? this.stops : [{
                                offset: 0,
                                color: this.fill,
                                opacity: this.getStartOpacity()
                            }, {
                                offset: 100,
                                color: this.fill,
                                opacity: 1
                            }]
                        }
                        getStartingPath() {
                            if (!this.animations) return this.getPath();
                            let i, e = this.getRadius();
                            return this.roundEdges ? this.orientation === Rs.Vertical ? (e = Math.min(this.height, e), i = tc(this.x, this.y + this.height, this.width, 1, 0, this.edges)) : this.orientation === Rs.Horizontal && (e = Math.min(this.width, e), i = tc(this.x, this.y, 1, this.height, 0, this.edges)) : this.orientation === Rs.Vertical ? i = tc(this.x, this.y + this.height, this.width, 1, 0, this.edges) : this.orientation === Rs.Horizontal && (i = tc(this.x, this.y, 1, this.height, 0, this.edges)), i
                        }
                        getPath() {
                            let i, e = this.getRadius();
                            return this.roundEdges ? this.orientation === Rs.Vertical ? (e = Math.min(this.height, e), i = tc(this.x, this.y, this.width, this.height, e, this.edges)) : this.orientation === Rs.Horizontal && (e = Math.min(this.width, e), i = tc(this.x, this.y, this.width, this.height, e, this.edges)) : i = tc(this.x, this.y, this.width, this.height, e, this.edges), i
                        }
                        getRadius() {
                            let e = 0;
                            return this.roundEdges && this.height > 5 && this.width > 5 && (e = Math.floor(Math.min(5, this.height / 2, this.width / 2))), e
                        }
                        getStartOpacity() {
                            return this.roundEdges ? .2 : .5
                        }
                        get edges() {
                            let e = [!1, !1, !1, !1];
                            return this.roundEdges && (this.orientation === Rs.Vertical ? e = this.data.value > 0 ? [!0, !0, !1, !1] : [!1, !1, !0, !0] : this.orientation === Rs.Horizontal && (e = this.data.value > 0 ? [!1, !0, !1, !0] : [!0, !1, !0, !1])), e
                        }
                        onMouseEnter() {
                            this.activate.emit(this.data)
                        }
                        onMouseLeave() {
                            this.deactivate.emit(this.data)
                        }
                        checkToHideBar() {
                            this.hideBar = this.noBarWhenZero && (this.orientation === Rs.Vertical && 0 === this.height || this.orientation === Rs.Horizontal && 0 === this.width)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["g", "ngx-charts-bar", ""]
                        ],
                        hostBindings: function(e, i) {
                            1 & e && bt("mouseenter", function() {
                                return i.onMouseEnter()
                            })("mouseleave", function() {
                                return i.onMouseLeave()
                            })
                        },
                        inputs: {
                            fill: "fill",
                            data: "data",
                            width: "width",
                            height: "height",
                            x: "x",
                            y: "y",
                            orientation: "orientation",
                            roundEdges: "roundEdges",
                            gradient: "gradient",
                            offset: "offset",
                            isActive: "isActive",
                            stops: "stops",
                            animations: "animations",
                            ariaLabel: "ariaLabel",
                            noBarWhenZero: "noBarWhenZero"
                        },
                        outputs: {
                            select: "select",
                            activate: "activate",
                            deactivate: "deactivate"
                        },
                        features: [ni],
                        attrs: zae,
                        decls: 2,
                        vars: 8,
                        consts: [
                            [4, "ngIf"],
                            ["stroke", "none", "role", "img", "tabIndex", "-1", 1, "bar", 3, "click"],
                            ["ngx-charts-svg-linear-gradient", "", 3, "orientation", "name", "stops"]
                        ],
                        template: function(e, i) {
                            1 & e && (rt(0, jae, 2, 3, "defs", 0), Kt(), N(1, "path", 1), bt("click", function() {
                                return i.select.emit(i.data)
                            }), H()), 2 & e && (Fe("ngIf", i.hasGradient), xe(1), $r("active", i.isActive)("hidden", i.hideBar), mn("d", i.path)("aria-label", i.ariaLabel)("fill", i.hasGradient ? i.gradientFill : i.fill))
                        },
                        dependencies: [wy, Ji],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })();
            var nc = function(t) {
                    return t.Standard = "standard", t.Normalized = "normalized", t.Stacked = "stacked", t
                }(nc || {}),
                jd = function(t) {
                    return t.positive = "positive", t.negative = "negative", t
                }(jd || {});
            let Joe = (() => {
                    class t {
                        constructor(e) {
                            this.dimensionsChanged = new Pt, this.horizontalPadding = 2, this.verticalPadding = 5, this.element = e.nativeElement
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        getSize() {
                            return {
                                height: this.element.getBoundingClientRect().height,
                                width: this.element.getBoundingClientRect().width,
                                negative: this.value < 0
                            }
                        }
                        ngAfterViewInit() {
                            this.dimensionsChanged.emit(this.getSize())
                        }
                        update() {
                            this.formatedValue = this.valueFormatting ? this.valueFormatting(this.value) : hp(this.value), "horizontal" === this.orientation ? (this.x = this.barX + this.barWidth, this.value < 0 ? (this.x = this.x - this.horizontalPadding, this.textAnchor = "end") : (this.x = this.x + this.horizontalPadding, this.textAnchor = "start"), this.y = this.barY + this.barHeight / 2) : (this.x = this.barX + this.barWidth / 2, this.y = this.barY + this.barHeight, this.value < 0 ? (this.y = this.y + this.verticalPadding, this.textAnchor = "end") : (this.y = this.y - this.verticalPadding, this.textAnchor = "start"), this.transform = `rotate(-45, ${this.x} , ${this.y})`)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["g", "ngx-charts-bar-label", ""]
                        ],
                        inputs: {
                            value: "value",
                            valueFormatting: "valueFormatting",
                            barX: "barX",
                            barY: "barY",
                            barWidth: "barWidth",
                            barHeight: "barHeight",
                            orientation: "orientation"
                        },
                        outputs: {
                            dimensionsChanged: "dimensionsChanged"
                        },
                        features: [ni],
                        attrs: $ae,
                        decls: 2,
                        vars: 5,
                        consts: [
                            ["alignment-baseline", "middle", 1, "textDataLabel"]
                        ],
                        template: function(e, i) {
                            1 & e && (Kt(), N(0, "text", 0), ae(1), H()), 2 & e && (mn("text-anchor", i.textAnchor)("transform", i.transform)("x", i.x)("y", i.y), xe(1), dn(" ", i.formatedValue, " "))
                        },
                        styles: [".textDataLabel[_ngcontent-%COMP%]{font-size:11px}"],
                        changeDetection: 0
                    }), t
                })(),
                ele = (() => {
                    class t {
                        constructor(e) {
                            this.platformId = e, this.type = nc.Standard, this.tooltipDisabled = !1, this.animations = !0, this.showDataLabel = !1, this.noBarWhenZero = !0, this.select = new Pt, this.activate = new Pt, this.deactivate = new Pt, this.dataLabelHeightChanged = new Pt, this.barsForDataLabels = [], this.barOrientation = Rs, this.isSSR = !1
                        }
                        ngOnInit() {
                            af(this.platformId) && (this.isSSR = !0)
                        }
                        ngOnChanges(e) {
                            this.update()
                        }
                        update() {
                            let e;
                            this.updateTooltipSettings(), this.series.length && (e = this.xScale.bandwidth()), e = Math.round(e);
                            const i = Math.max(this.yScale.domain()[0], 0),
                                s = {
                                    [jd.positive]: 0,
                                    [jd.negative]: 0
                                };
                            let l, r = jd.positive;
                            this.type === nc.Normalized && (l = this.series.map(u => u.value).reduce((u, h) => u + h, 0)), this.bars = this.series.map((u, h) => {
                                let v = u.value;
                                const _ = this.getLabel(u),
                                    C = hp(_);
                                r = v > 0 ? jd.positive : jd.negative;
                                const L = {
                                    value: v,
                                    label: _,
                                    roundEdges: this.roundEdges,
                                    data: u,
                                    width: e,
                                    formattedLabel: C,
                                    height: 0,
                                    x: 0,
                                    y: 0
                                };
                                if (this.type === nc.Standard) L.height = Math.abs(this.yScale(v) - this.yScale(i)), L.x = this.xScale(_), L.y = this.yScale(v < 0 ? 0 : v);
                                else if (this.type === nc.Stacked) {
                                    const Z = s[r],
                                        Q = Z + v;
                                    s[r] += v, L.height = this.yScale(Z) - this.yScale(Q), L.x = 0, L.y = this.yScale(Q), L.offset0 = Z, L.offset1 = Q
                                } else if (this.type === nc.Normalized) {
                                    let Z = s[r],
                                        Q = Z + v;
                                    s[r] += v, l > 0 ? (Z = 100 * Z / l, Q = 100 * Q / l) : (Z = 0, Q = 0), L.height = this.yScale(Z) - this.yScale(Q), L.x = 0, L.y = this.yScale(Q), L.offset0 = Z, L.offset1 = Q, v = (Q - Z).toFixed(2) + "%"
                                }
                                this.colors.scaleType === yn.Ordinal ? L.color = this.colors.getColor(_) : this.type === nc.Standard ? (L.color = this.colors.getColor(v), L.gradientStops = this.colors.getLinearGradientStops(v)) : (L.color = this.colors.getColor(L.offset1), L.gradientStops = this.colors.getLinearGradientStops(L.offset1, L.offset0));
                                let j = C;
                                return L.ariaLabel = C + " " + v.toLocaleString(), null != this.seriesName && (j = `${this.seriesName} \u2022 ${C}`, L.data.series = this.seriesName, L.ariaLabel = this.seriesName + " " + L.ariaLabel), L.tooltipText = this.tooltipDisabled ? void 0 : `\n        <span class="tooltip-label">${function S1(t){return t.toLocaleString().replace(/[&'`"<>]/g,n=>({"&":"&amp;","'":"&#x27;","`":"&#x60;",'"':"&quot;","<":"&lt;",">":"&gt;"}[n]))}(j)}</span>\n        <span class="tooltip-val">${this.dataLabelFormatting?this.dataLabelFormatting(v):v.toLocaleString()}</span>\n      `, L
                            }), this.updateDataLabels()
                        }
                        updateDataLabels() {
                            if (this.type === nc.Stacked) {
                                this.barsForDataLabels = [];
                                const e = {};
                                e.series = this.seriesName;
                                const i = this.series.map(r => r.value).reduce((r, l) => l > 0 ? r + l : r, 0),
                                    s = this.series.map(r => r.value).reduce((r, l) => l < 0 ? r + l : r, 0);
                                e.total = i + s, e.x = 0, e.y = 0, e.height = this.yScale(e.total > 0 ? i : s), e.width = this.xScale.bandwidth(), this.barsForDataLabels.push(e)
                            } else this.barsForDataLabels = this.series.map(e => {
                                const i = {};
                                return i.series = this.seriesName ? ? e.label, i.total = e.value, i.x = this.xScale(e.label), i.y = this.yScale(0), i.height = this.yScale(i.total) - this.yScale(0), i.width = this.xScale.bandwidth(), i
                            })
                        }
                        updateTooltipSettings() {
                            this.tooltipPlacement = this.tooltipDisabled ? void 0 : ri.Top, this.tooltipType = this.tooltipDisabled ? void 0 : fp.tooltip
                        }
                        isActive(e) {
                            return !!this.activeEntries && void 0 !== this.activeEntries.find(s => e.name === s.name && e.value === s.value)
                        }
                        onClick(e) {
                            this.select.emit(e)
                        }
                        getLabel(e) {
                            return e.label ? e.label : e.name
                        }
                        trackBy(e, i) {
                            return i.label
                        }
                        trackDataLabelBy(e, i) {
                            return e + "#" + i.series + "#" + i.total
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ws))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["g", "ngx-charts-series-vertical", ""]
                        ],
                        inputs: {
                            dims: "dims",
                            type: "type",
                            series: "series",
                            xScale: "xScale",
                            yScale: "yScale",
                            colors: "colors",
                            gradient: "gradient",
                            activeEntries: "activeEntries",
                            seriesName: "seriesName",
                            tooltipDisabled: "tooltipDisabled",
                            tooltipTemplate: "tooltipTemplate",
                            roundEdges: "roundEdges",
                            animations: "animations",
                            showDataLabel: "showDataLabel",
                            dataLabelFormatting: "dataLabelFormatting",
                            noBarWhenZero: "noBarWhenZero"
                        },
                        outputs: {
                            select: "select",
                            activate: "activate",
                            deactivate: "deactivate",
                            dataLabelHeightChanged: "dataLabelHeightChanged"
                        },
                        features: [ni],
                        attrs: Kae,
                        decls: 3,
                        vars: 3,
                        consts: [
                            [4, "ngIf"],
                            ["ngx-charts-bar", "", "ngx-tooltip", "", 3, "width", "height", "x", "y", "fill", "stops", "data", "orientation", "roundEdges", "gradient", "ariaLabel", "isActive", "tooltipDisabled", "tooltipPlacement", "tooltipType", "tooltipTitle", "tooltipTemplate", "tooltipContext", "noBarWhenZero", "animations", "select", "activate", "deactivate", 4, "ngFor", "ngForOf", "ngForTrackBy"],
                            ["ngx-charts-bar", "", "ngx-tooltip", "", 3, "width", "height", "x", "y", "fill", "stops", "data", "orientation", "roundEdges", "gradient", "ariaLabel", "isActive", "tooltipDisabled", "tooltipPlacement", "tooltipType", "tooltipTitle", "tooltipTemplate", "tooltipContext", "noBarWhenZero", "animations", "select", "activate", "deactivate"],
                            ["ngx-charts-bar-label", "", 3, "barX", "barY", "barWidth", "barHeight", "value", "valueFormatting", "orientation", "dimensionsChanged", 4, "ngFor", "ngForOf", "ngForTrackBy"],
                            ["ngx-charts-bar-label", "", 3, "barX", "barY", "barWidth", "barHeight", "value", "valueFormatting", "orientation", "dimensionsChanged"]
                        ],
                        template: function(e, i) {
                            1 & e && (rt(0, Jae, 2, 2, "g", 0), rt(1, toe, 2, 2, "g", 0), rt(2, ioe, 2, 2, "g", 0)), 2 & e && (Fe("ngIf", !i.isSSR), xe(1), Fe("ngIf", i.isSSR), xe(1), Fe("ngIf", i.showDataLabel))
                        },
                        dependencies: [Qoe, Joe, Ji, $s, D1],
                        encapsulation: 2,
                        data: {
                            animation: [Im("animationState", [hd(":leave", [Us({
                                opacity: 1
                            }), el(500, Us({
                                opacity: 0
                            }))])])]
                        },
                        changeDetection: 0
                    }), t
                })(),
                tle = (() => {
                    class t extends F5 {
                        constructor() {
                            super(...arguments), this.legend = !1, this.legendTitle = "Legend", this.legendPosition = iu.Right, this.tooltipDisabled = !1, this.showGridLines = !0, this.activeEntries = [], this.trimXAxisTicks = !0, this.trimYAxisTicks = !0, this.rotateXAxisTicks = !0, this.maxXAxisTickLength = 16, this.maxYAxisTickLength = 16, this.barPadding = 8, this.roundDomains = !1, this.roundEdges = !0, this.showDataLabel = !1, this.noBarWhenZero = !0, this.wrapTicks = !1, this.activate = new Pt, this.deactivate = new Pt, this.margin = [10, 20, 10, 20], this.xAxisHeight = 0, this.yAxisWidth = 0, this.dataLabelMaxHeight = {
                                negative: 0,
                                positive: 0
                            }
                        }
                        update() {
                            super.update(), this.showDataLabel || (this.dataLabelMaxHeight = {
                                negative: 0,
                                positive: 0
                            }), this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20], this.dims = function Yoe({
                                width: t,
                                height: n,
                                margins: e,
                                showXAxis: i = !1,
                                showYAxis: s = !1,
                                xAxisHeight: r = 0,
                                yAxisWidth: l = 0,
                                showXLabel: u = !1,
                                showYLabel: h = !1,
                                showLegend: v = !1,
                                legendType: _ = yn.Ordinal,
                                legendPosition: C = iu.Right,
                                columns: M = 12
                            }) {
                                let L = e[3],
                                    j = t,
                                    Z = n - e[0] - e[2];
                                return v && C === iu.Right && (M -= _ === yn.Ordinal ? 2 : 1), j = j * M / 12, j = j - e[1] - e[3], i && (Z -= 5, Z -= r, u && (Z -= 30)), s && (j -= 5, j -= l, L += l, L += 10, h && (j -= 30, L += 30)), j = Math.max(0, j), Z = Math.max(0, Z), {
                                    width: Math.floor(j),
                                    height: Math.floor(Z),
                                    xOffset: Math.floor(L)
                                }
                            }({
                                width: this.width,
                                height: this.height,
                                margins: this.margin,
                                showXAxis: this.xAxis,
                                showYAxis: this.yAxis,
                                xAxisHeight: this.xAxisHeight,
                                yAxisWidth: this.yAxisWidth,
                                showXLabel: this.showXAxisLabel,
                                showYLabel: this.showYAxisLabel,
                                showLegend: this.legend,
                                legendType: this.schemeType,
                                legendPosition: this.legendPosition
                            }), this.formatDates(), this.showDataLabel && (this.dims.height -= this.dataLabelMaxHeight.negative), this.xScale = this.getXScale(), this.yScale = this.getYScale(), this.setColors(), this.legendOptions = this.getLegendOptions(), this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]+this.dataLabelMaxHeight.negative})`
                        }
                        getXScale() {
                            this.xDomain = this.getXDomain();
                            const e = this.xDomain.length / (this.dims.width / this.barPadding + 1);
                            return _y().range([0, this.dims.width]).paddingInner(e).domain(this.xDomain)
                        }
                        getYScale() {
                            this.yDomain = this.getYDomain();
                            const e = Hd().range([this.dims.height, 0]).domain(this.yDomain);
                            return this.roundDomains ? e.nice() : e
                        }
                        getXDomain() {
                            return this.results.map(e => e.label)
                        }
                        getYDomain() {
                            const e = this.results.map(r => r.value);
                            let i = this.yScaleMin ? Math.min(this.yScaleMin, ...e) : Math.min(0, ...e);
                            this.yAxisTicks && !this.yAxisTicks.some(isNaN) && (i = Math.min(i, ...this.yAxisTicks));
                            let s = this.yScaleMax ? Math.max(this.yScaleMax, ...e) : Math.max(0, ...e);
                            return this.yAxisTicks && !this.yAxisTicks.some(isNaN) && (s = Math.max(s, ...this.yAxisTicks)), [i, s]
                        }
                        onClick(e) {
                            this.select.emit(e)
                        }
                        setColors() {
                            let e;
                            e = this.schemeType === yn.Ordinal ? this.xDomain : this.yDomain, this.colors = new qoe(this.scheme, this.schemeType, e, this.customColors)
                        }
                        getLegendOptions() {
                            const e = {
                                scaleType: this.schemeType,
                                colors: void 0,
                                domain: [],
                                title: void 0,
                                position: this.legendPosition
                            };
                            return e.scaleType === yn.Ordinal ? (e.domain = this.xDomain, e.colors = this.colors, e.title = this.legendTitle) : (e.domain = this.yDomain, e.colors = this.colors.scale), e
                        }
                        updateYAxisWidth({
                            width: e
                        }) {
                            this.yAxisWidth = e, this.update()
                        }
                        updateXAxisHeight({
                            height: e
                        }) {
                            this.xAxisHeight = e, this.update()
                        }
                        onDataLabelMaxHeightChanged(e) {
                            e.size.negative ? this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, e.size.height) : this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, e.size.height), e.index === this.results.length - 1 && setTimeout(() => this.update())
                        }
                        onActivate(e, i = !1) {
                            e = this.results.find(r => i ? r.label === e.name : r.name === e.name), !(this.activeEntries.findIndex(r => r.name === e.name && r.value === e.value && r.series === e.series) > -1) && (this.activeEntries = [e, ...this.activeEntries], this.activate.emit({
                                value: e,
                                entries: this.activeEntries
                            }))
                        }
                        onDeactivate(e, i = !1) {
                            e = this.results.find(r => i ? r.label === e.name : r.name === e.name);
                            const s = this.activeEntries.findIndex(r => r.name === e.name && r.value === e.value && r.series === e.series);
                            this.activeEntries.splice(s, 1), this.activeEntries = [...this.activeEntries], this.deactivate.emit({
                                value: e,
                                entries: this.activeEntries
                            })
                        }
                    }
                    return t.\u0275fac = function() {
                        let n;
                        return function(i) {
                            return (n || (n = _s(t)))(i || t)
                        }
                    }(), t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["ngx-charts-bar-vertical"]
                        ],
                        contentQueries: function(e, i, s) {
                            if (1 & e && cm(s, Iae, 5), 2 & e) {
                                let r;
                                kr(r = Er()) && (i.tooltipTemplate = r.first)
                            }
                        },
                        inputs: {
                            legend: "legend",
                            legendTitle: "legendTitle",
                            legendPosition: "legendPosition",
                            xAxis: "xAxis",
                            yAxis: "yAxis",
                            showXAxisLabel: "showXAxisLabel",
                            showYAxisLabel: "showYAxisLabel",
                            xAxisLabel: "xAxisLabel",
                            yAxisLabel: "yAxisLabel",
                            tooltipDisabled: "tooltipDisabled",
                            gradient: "gradient",
                            showGridLines: "showGridLines",
                            activeEntries: "activeEntries",
                            schemeType: "schemeType",
                            trimXAxisTicks: "trimXAxisTicks",
                            trimYAxisTicks: "trimYAxisTicks",
                            rotateXAxisTicks: "rotateXAxisTicks",
                            maxXAxisTickLength: "maxXAxisTickLength",
                            maxYAxisTickLength: "maxYAxisTickLength",
                            xAxisTickFormatting: "xAxisTickFormatting",
                            yAxisTickFormatting: "yAxisTickFormatting",
                            xAxisTicks: "xAxisTicks",
                            yAxisTicks: "yAxisTicks",
                            barPadding: "barPadding",
                            roundDomains: "roundDomains",
                            roundEdges: "roundEdges",
                            yScaleMax: "yScaleMax",
                            yScaleMin: "yScaleMin",
                            showDataLabel: "showDataLabel",
                            dataLabelFormatting: "dataLabelFormatting",
                            noBarWhenZero: "noBarWhenZero",
                            wrapTicks: "wrapTicks"
                        },
                        outputs: {
                            activate: "activate",
                            deactivate: "deactivate"
                        },
                        features: [Pi],
                        decls: 5,
                        vars: 25,
                        consts: [
                            [3, "view", "showLegend", "legendOptions", "activeEntries", "animations", "legendLabelClick", "legendLabelActivate", "legendLabelDeactivate"],
                            [1, "bar-chart", "chart"],
                            ["ngx-charts-x-axis", "", 3, "xScale", "dims", "showGridLines", "showLabel", "labelText", "trimTicks", "rotateTicks", "maxTickLength", "tickFormatting", "ticks", "xAxisOffset", "wrapTicks", "dimensionsChanged", 4, "ngIf"],
                            ["ngx-charts-y-axis", "", 3, "yScale", "dims", "showGridLines", "showLabel", "labelText", "trimTicks", "maxTickLength", "tickFormatting", "ticks", "wrapTicks", "dimensionsChanged", 4, "ngIf"],
                            ["ngx-charts-series-vertical", "", 3, "xScale", "yScale", "colors", "series", "dims", "gradient", "tooltipDisabled", "tooltipTemplate", "showDataLabel", "dataLabelFormatting", "activeEntries", "roundEdges", "animations", "noBarWhenZero", "activate", "deactivate", "select", "dataLabelHeightChanged"],
                            ["ngx-charts-x-axis", "", 3, "xScale", "dims", "showGridLines", "showLabel", "labelText", "trimTicks", "rotateTicks", "maxTickLength", "tickFormatting", "ticks", "xAxisOffset", "wrapTicks", "dimensionsChanged"],
                            ["ngx-charts-y-axis", "", 3, "yScale", "dims", "showGridLines", "showLabel", "labelText", "trimTicks", "maxTickLength", "tickFormatting", "ticks", "wrapTicks", "dimensionsChanged"]
                        ],
                        template: function(e, i) {
                            1 & e && (N(0, "ngx-charts-chart", 0), bt("legendLabelClick", function(r) {
                                return i.onClick(r)
                            })("legendLabelActivate", function(r) {
                                return i.onActivate(r, !0)
                            })("legendLabelDeactivate", function(r) {
                                return i.onDeactivate(r, !0)
                            }), Kt(), N(1, "g", 1), rt(2, soe, 1, 12, "g", 2), rt(3, roe, 1, 10, "g", 3), N(4, "g", 4), bt("activate", function(r) {
                                return i.onActivate(r)
                            })("deactivate", function(r) {
                                return i.onDeactivate(r)
                            })("select", function(r) {
                                return i.onClick(r)
                            })("dataLabelHeightChanged", function(r) {
                                return i.onDataLabelMaxHeightChanged(r)
                            }), H()()()), 2 & e && (Fe("view", Da(22, up, i.width, i.height))("showLegend", i.legend)("legendOptions", i.legendOptions)("activeEntries", i.activeEntries)("animations", i.animations), xe(1), mn("transform", i.transform), xe(1), Fe("ngIf", i.xAxis), xe(1), Fe("ngIf", i.yAxis), xe(1), Fe("xScale", i.xScale)("yScale", i.yScale)("colors", i.colors)("series", i.results)("dims", i.dims)("gradient", i.gradient)("tooltipDisabled", i.tooltipDisabled)("tooltipTemplate", i.tooltipTemplate)("showDataLabel", i.showDataLabel)("dataLabelFormatting", i.dataLabelFormatting)("activeEntries", i.activeEntries)("roundEdges", i.roundEdges)("animations", i.animations)("noBarWhenZero", i.noBarWhenZero))
                        },
                        dependencies: [I5, Hoe, zoe, ele, Ji],
                        styles: [".ngx-charts-outer{animation:chartFadeIn linear .6s}@keyframes chartFadeIn{0%{opacity:0}20%{opacity:0}to{opacity:1}}.ngx-charts{float:left;overflow:visible}.ngx-charts .circle,.ngx-charts .cell,.ngx-charts .bar,.ngx-charts .node,.ngx-charts .link,.ngx-charts .arc{cursor:pointer}.ngx-charts .bar.active,.ngx-charts .bar:hover,.ngx-charts .cell.active,.ngx-charts .cell:hover,.ngx-charts .arc.active,.ngx-charts .arc:hover,.ngx-charts .node.active,.ngx-charts .node:hover,.ngx-charts .link.active,.ngx-charts .link:hover,.ngx-charts .card.active,.ngx-charts .card:hover{opacity:.8;transition:opacity .1s ease-in-out}.ngx-charts .bar:focus,.ngx-charts .cell:focus,.ngx-charts .arc:focus,.ngx-charts .node:focus,.ngx-charts .link:focus,.ngx-charts .card:focus{outline:none}.ngx-charts .bar.hidden,.ngx-charts .cell.hidden,.ngx-charts .arc.hidden,.ngx-charts .node.hidden,.ngx-charts .link.hidden,.ngx-charts .card.hidden{display:none}.ngx-charts g:focus{outline:none}.ngx-charts .line-series.inactive,.ngx-charts .line-series-range.inactive,.ngx-charts .polar-series-path.inactive,.ngx-charts .polar-series-area.inactive,.ngx-charts .area-series.inactive{transition:opacity .1s ease-in-out;opacity:.2}.ngx-charts .line-highlight{display:none}.ngx-charts .line-highlight.active{display:block}.ngx-charts .area{opacity:.6}.ngx-charts .circle:hover{cursor:pointer}.ngx-charts .label{font-size:12px;font-weight:400}.ngx-charts .tooltip-anchor{fill:#000}.ngx-charts .gridline-path{stroke:#ddd;stroke-width:1;fill:none}.ngx-charts .refline-path{stroke:#a8b2c7;stroke-width:1;stroke-dasharray:5;stroke-dashoffset:5}.ngx-charts .refline-label{font-size:9px}.ngx-charts .reference-area{fill-opacity:.05;fill:#000}.ngx-charts .gridline-path-dotted{stroke:#ddd;stroke-width:1;fill:none;stroke-dasharray:1,20;stroke-dashoffset:3}.ngx-charts .grid-panel rect{fill:none}.ngx-charts .grid-panel.odd rect{fill:#0000000d}\n"],
                        encapsulation: 2,
                        changeDetection: 0
                    }), t
                })(),
                Z5 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })();
            gre();
            let nle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                ile = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                sle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                K5 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })();
            Math;
            let E1 = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                ole = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma, E1, K5]
                        ]
                    }), t
                })(),
                cle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                ule = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                hle = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma, E1, Z5]
                        ]
                    }), t
                })(),
                ple = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [
                            [ma]
                        ]
                    }), t
                })(),
                gle = (() => {
                    class t {
                        constructor() {
                            ! function fle() {
                                typeof SVGElement < "u" && typeof SVGElement.prototype.contains > "u" && (SVGElement.prototype.contains = HTMLDivElement.prototype.contains)
                            }()
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [ma, Koe, Z5, nle, ile, sle, ple, K5, ole, cle, E1, ule, hle]
                    }), t
                })();
            var ut = I(9671);
            const xt = {
                production: !0,
                eth: {
                    chainId: "0x1",
                    chainIdInt: 1,
                    chainName: "Ethereum Mainnet",
                    gasFees: .015,
                    purchaseToken: "ETH",
                    presaleAddress: "0x5a65B0aA22f441Fd05eB0e81ff0dA6ecF07C8d8e",
                    usdTAddress: "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                    rpcURL: "https://smart-dark-butterfly.quiknode.pro/9574d89a998044a772c10d0248f63bcc2c5aafde/",
                    backupRPC: "https://smart-dark-butterfly.quiknode.pro/9574d89a998044a772c10d0248f63bcc2c5aafde/",
                    blockExplorerURL: "https://etherscan.io/tx/",
                    hasStaking: !0,
                    nativeFunction: "buyWithEth",
                    chainInfo: {
                        method: "wallet_addEthereumChain",
                        params: [{
                            chainId: "0x1",
                            chainName: "Ethereum Mainnet",
                            nativeCurrency: {
                                name: "ETH",
                                symbol: "ETH",
                                decimals: 18
                            },
                            rpcUrls: ["https://rpc.ankr.com/eth"],
                            blockExplorerUrls: ["https://etherscan.io/"]
                        }]
                    }
                },
                bsc: {
                    chainId: "0x38",
                    chainIdInt: 56,
                    chainName: "BSC Mainnet",
                    gasFees: .0025,
                    hasStaking: !1,
                    nativeFunction: "buyWithBNB",
                    purchaseToken: "BNB",
                    presaleAddress: "0x93fd6ecc814c7462a846202e55d9f008d41b91b1",
                    usdTAddress: "0x55d398326f99059fF775485246999027B3197955",
                    rpcURL: "https://ultra-lively-sponge.bsc.quiknode.pro/54b44a605b2e3ac2ee18bbd523d262479b5b3bb7/",
                    backupRPC: "https://ultra-lively-sponge.bsc.quiknode.pro/54b44a605b2e3ac2ee18bbd523d262479b5b3bb7/",
                    blockExplorerURL: "https://bscscan.com/tx/",
                    chainInfo: {
                        method: "wallet_addEthereumChain",
                        params: [{
                            chainId: "0x38",
                            chainName: "BSC Mainnet",
                            nativeCurrency: {
                                name: "BNB",
                                symbol: "BNB",
                                decimals: 18
                            },
                            rpcUrls: ["https://bsc-dataseed2.ninicoin.io/"],
                            blockExplorerUrls: ["https://bscscan.com/"]
                        }]
                    }
                },
                poly: {
                    chainId: "0x89",
                    chainIdInt: 137,
                    hasStaking: !1,
                    chainName: "Polygon",
                    nativeFunction: "buyWithMATIC",
                    gasFees: .0025,
                    purchaseToken: "MATIC",
                    presaleAddress: "0x93FD6ecc814c7462a846202e55d9f008D41B91b1",
                    usdTAddress: "0xc2132d05d31c914a87c6611c10748aeb04b58e8f",
                    rpcURL: "https://dark-indulgent-glitter.matic.quiknode.pro/4030d1be6832359f2bd28fc7711a4006f002b57a/",
                    backupRPC: "https://dark-indulgent-glitter.matic.quiknode.pro/4030d1be6832359f2bd28fc7711a4006f002b57a/",
                    blockExplorerURL: "htttps://polygonscan.com/tx/",
                    chainInfo: {
                        method: "wallet_addEthereumChain",
                        params: [{
                            chainId: "0x89",
                            chainName: "Polygon",
                            nativeCurrency: {
                                name: "MATIC",
                                symbol: "MATIC",
                                decimals: 18
                            },
                            rpcUrls: ["\tpolygon-rpc.com"],
                            blockExplorerUrls: ["https://polygonscan.com/"]
                        }]
                    }
                },
                minToken: 0,
                tokenAddress: "0xb11dB272EbfABEdf611a07684e82165dB60dC70E",
                tokenName: "BTCETF",
                iidDashFx: 1298,
                urlDashFx: "https://brb3wovopk4zw2lq7n2dzdmg3u0jhdnq.lambda-url.eu-west-2.on.aws/",
                wertOrigin: "https://widget.wert.io",
                partnerId: "01HE5VFKQKQKP0PTXJNFNCQJAN",
                wertUrl: "https://o63pocds2re3rdpoehajfc6mgy0gucma.lambda-url.eu-west-2.on.aws/",
                walletConnectId: "78a8e83c17ed915eba29682185d77148",
                stakingAddress: "0x2B8F74d8cD19be6a358424f984A6fBAAD4FbebfE",
                apyCalcConst: "416666667",
                referUrl: "https://joxprmelasrjxx73m5lgkoldaa0amjlv.lambda-url.eu-west-2.on.aws/",
                bwUniversalLink: "https://best-wallet-prod.web.app",
                bwDeepLink: "bw://app/connect?",
                bwApiUrl: "https://api.bestwallet.com/presale-transactions",
                showBestWallet: !0,
                newsUrl: "https://rss.app/feeds/v1.1/_Um4oANY7d0NlVezV.json"
            };
            var Vn = function(t) {
                return t[t.not_started = 0] = "not_started", t[t.in_progess = 1] = "in_progess", t[t.complete = 2] = "complete", t[t.failed = 3] = "failed", t[t.rejected = 4] = "rejected", t[t.approval_pending = 5] = "approval_pending", t[t.confirm_pending = 6] = "confirm_pending", t
            }(Vn || {});
            const Q5 = [{
                name: "Arabic",
                value: "ar",
                flag: "ar"
            }, {
                name: "Bulgarian",
                value: "bg",
                flag: "bg"
            }, {
                name: "English",
                value: "en",
                flag: "en"
            }, {
                name: "Chinese (simplified)",
                value: "zh-hans",
                flag: "cn"
            }, {
                name: "Chinese (traditional) ",
                value: "zh-hant",
                flag: "cn"
            }, {
                name: "Czech",
                value: "cz",
                flag: "cz"
            }, {
                name: "Dutch",
                value: "nl",
                flag: "nl"
            }, {
                name: "French",
                value: "fr",
                flag: "fr"
            }, {
                name: "German",
                value: "de",
                flag: "de"
            }, {
                name: "Greek",
                value: "el",
                flag: "el"
            }, {
                name: "Hungarian",
                value: "hu",
                flag: "hu"
            }, {
                name: "Indonesian",
                value: "id",
                flag: "id"
            }, {
                name: "Italian",
                value: "it",
                flag: "it"
            }, {
                name: "Japanese",
                value: "jp",
                flag: "jp"
            }, {
                name: "Korean",
                value: "kr",
                flag: "kr"
            }, {
                name: "Persian",
                value: "fa",
                flag: "fa"
            }, {
                name: "Polish",
                value: "pl",
                flag: "pl"
            }, {
                name: "Portuguese",
                value: "pt",
                flag: "pt"
            }, {
                name: "Romanian",
                value: "ro",
                flag: "ro"
            }, {
                name: "Russian",
                value: "ru",
                flag: "ru"
            }, {
                name: "Slovak",
                value: "sk",
                flag: "sk"
            }, {
                name: "Spanish",
                value: "es",
                flag: "es"
            }, {
                name: "Thai",
                value: "th",
                flag: "th"
            }, {
                name: "Turkish",
                value: "tr",
                flag: "tr"
            }, {
                name: "Vietnamese",
                value: "vn",
                flag: "vn"
            }];

            function Ty(t) {
                let e = new URLSearchParams(document.location.search),
                    i = (s => {
                        let r = document.cookie.match(new RegExp("(?:^|; )" + s.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") + "=([^;]*)"));
                        return r ? decodeURIComponent(r[1]) : void 0
                    })(t);
                return e.get(t) && (i = e.get(t), document.cookie = t + "=" + i + ";max-age=15778462"), i || ""
            }

            function M1(t) {
                return Q5.filter(e => e.value === t).length > 0
            }

            function P1(t, n = 2) {
                t = +(+t).toFixed(n);
                let e = new Intl.NumberFormat("en-US");
                return e.format(t), e.format(t)
            }

            function $d(t, n = {}) {
                const {
                    fees: e = t.fees,
                    formatters: i = t.formatters,
                    serializers: s = t.serializers
                } = n;
                return { ...t,
                    fees: e,
                    formatters: i,
                    serializers: s
                }
            }
            const J5 = $d({
                id: 1,
                network: "homestead",
                name: "Ethereum",
                nativeCurrency: {
                    name: "Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-mainnet.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-mainnet.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://mainnet.infura.io/v3"],
                        webSocket: ["wss://mainnet.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://cloudflare-eth.com"]
                    },
                    public: {
                        http: ["https://cloudflare-eth.com"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://etherscan.io"
                    }
                },
                contracts: {
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62",
                        blockCreated: 16966585
                    },
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 14353601
                    }
                }
            });
            var xle = class extends Error {
                    constructor({
                        chainId: t,
                        connectorId: n
                    }) {
                        super(`Chain "${t}" not configured for connector "${n}".`), this.name = "ChainNotConfiguredForConnectorError"
                    }
                },
                Lo = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorNotFoundError", this.message = "Connector not found"
                    }
                };

            function e3(t) {
                return "string" == typeof t ? Number.parseInt(t, "0x" === t.trim().substring(0, 2) ? 16 : 10) : "bigint" == typeof t ? Number(t) : t
            }
            var _le = I(1472);
            const t3 = $d({
                id: 5,
                network: "goerli",
                name: "Goerli",
                nativeCurrency: {
                    name: "Goerli Ether",
                    symbol: "ETH",
                    decimals: 18
                },
                rpcUrls: {
                    alchemy: {
                        http: ["https://eth-goerli.g.alchemy.com/v2"],
                        webSocket: ["wss://eth-goerli.g.alchemy.com/v2"]
                    },
                    infura: {
                        http: ["https://goerli.infura.io/v3"],
                        webSocket: ["wss://goerli.infura.io/ws/v3"]
                    },
                    default: {
                        http: ["https://rpc.ankr.com/eth_goerli"]
                    },
                    public: {
                        http: ["https://rpc.ankr.com/eth_goerli"]
                    }
                },
                blockExplorers: {
                    etherscan: {
                        name: "Etherscan",
                        url: "https://goerli.etherscan.io"
                    },
                    default: {
                        name: "Etherscan",
                        url: "https://goerli.etherscan.io"
                    }
                },
                contracts: {
                    ensRegistry: {
                        address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
                    },
                    ensUniversalResolver: {
                        address: "0x56522D00C410a43BFfDF00a9A569489297385790",
                        blockCreated: 8765204
                    },
                    multicall3: {
                        address: "0xca11bde05977b3631167028862be2a173976ca11",
                        blockCreated: 6507670
                    }
                },
                testnet: !0
            });
            var O1 = (t, n, e) => {
                    if (!n.has(t)) throw TypeError("Cannot " + e)
                },
                ss = (t, n, e) => (O1(t, n, "read from private field"), e ? e.call(t) : n.get(t)),
                va = (t, n, e) => {
                    if (n.has(t)) throw TypeError("Cannot add the same private member more than once");
                    n instanceof WeakSet ? n.add(t) : n.set(t, e)
                },
                Dy = (t, n, e, i) => (O1(t, n, "write to private field"), i ? i.call(t, e) : n.set(t, e), e),
                Gs = (t, n, e) => (O1(t, n, "access private method"), e),
                n3 = class extends _le {
                    constructor({
                        chains: t = [J5, t3],
                        options: n
                    }) {
                        super(), this.chains = t, this.options = n
                    }
                    getBlockExplorerUrls(t) {
                        const {
                            default: n,
                            ...e
                        } = t.blockExplorers ? ? {};
                        if (n) return [n.url, ...Object.values(e).map(i => i.url)]
                    }
                    isChainUnsupported(t) {
                        return !this.chains.some(n => n.id === t)
                    }
                    setStorage(t) {
                        this.storage = t
                    }
                },
                ml = I(6284),
                fn = I(9450),
                vl = I(277);
            const I1 = 256;
            let ky, Ay = I1;

            function wle(t = 11) {
                if (!ky || Ay + t > 2 * I1) {
                    ky = "", Ay = 0;
                    for (let n = 0; n < I1; n++) ky += (256 + 256 * Math.random() | 0).toString(16).substring(1)
                }
                return ky.substring(Ay, Ay++ + t)
            }

            function s3(t) {
                const {
                    batch: n,
                    cacheTime: e = t.pollingInterval ? ? 4e3,
                    key: i = "base",
                    name: s = "Base Client",
                    pollingInterval: r = 4e3,
                    type: l = "base"
                } = t, u = t.chain, h = t.account ? (0, vl.T)(t.account) : void 0, {
                    config: v,
                    request: _,
                    value: C
                } = t.transport({
                    chain: u,
                    pollingInterval: r
                }), L = {
                    account: h,
                    batch: n,
                    cacheTime: e,
                    chain: u,
                    key: i,
                    name: s,
                    pollingInterval: r,
                    request: _,
                    transport: { ...v,
                        ...C
                    },
                    type: l,
                    uid: wle()
                };
                return Object.assign(L, {
                    extend: function j(Z) {
                        return Q => {
                            const Ae = Q(Z);
                            for (const Ue in L) delete Ae[Ue];
                            const De = { ...Z,
                                ...Ae
                            };
                            return Object.assign(De, {
                                extend: j(De)
                            })
                        }
                    }(L)
                })
            }
            var to = I(9415);

            function gp(t) {
                return L1.apply(this, arguments)
            }

            function L1() {
                return (L1 = (0, ut.Z)(function*(t) {
                    const n = yield t.request({
                        method: "eth_chainId"
                    });
                    return (0, to.ly)(n)
                })).apply(this, arguments)
            }
            var ki = I(4439);

            function F1() {
                return (F1 = (0, ut.Z)(function*(t, {
                    chain: n
                }) {
                    const {
                        id: e,
                        name: i,
                        nativeCurrency: s,
                        rpcUrls: r,
                        blockExplorers: l
                    } = n;
                    yield t.request({
                        method: "wallet_addEthereumChain",
                        params: [{
                            chainId: (0, ki.eC)(e),
                            chainName: i,
                            nativeCurrency: s,
                            rpcUrls: r.default.http,
                            blockExplorerUrls: l ? Object.values(l).map(({
                                url: u
                            }) => u) : void 0
                        }]
                    })
                })).apply(this, arguments)
            }
            var ps = I(6577),
                N1 = I(770),
                Ey = I(2910);
            const R1 = "/docs/contract/encodeDeployData";

            function r3({
                abi: t,
                args: n,
                bytecode: e
            }) {
                if (!n || 0 === n.length) return e;
                const i = t.find(r => "type" in r && "constructor" === r.type);
                if (!i) throw new ps.fM({
                    docsPath: R1
                });
                if (!("inputs" in i)) throw new ps.cO({
                    docsPath: R1
                });
                if (!i.inputs || 0 === i.inputs.length) throw new ps.cO({
                    docsPath: R1
                });
                const s = (0, Ey.E)(i.inputs, n);
                return (0, N1.SM)([e, s])
            }
            var Fo = I(2618);
            class Ud extends Fo.G {
                constructor({
                    docsPath: n
                } = {}) {
                    super(["Could not find an Account to execute with this Action.", "Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient."].join("\n"), {
                        docsPath: n,
                        docsSlug: "account"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AccountNotFoundError"
                    })
                }
            }
            var a3 = I(8722);

            function o3({
                chain: t,
                currentChainId: n
            }) {
                if (!t) throw new a3.Bk;
                if (n !== t.id) throw new a3.Yl({
                    chain: t,
                    currentChainId: n
                })
            }
            var l3 = I(7354),
                ic = I(8284),
                c3 = I(2917),
                u3 = I(7603),
                B1 = I(7369),
                Xn = I(4637),
                My = I(9056),
                Py = I(9077);
            class Tle extends Fo.G {
                constructor() {
                    super("`baseFeeMultiplier` must be greater than 1."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BaseFeeScalarError"
                    })
                }
            }
            class V1 extends Fo.G {
                constructor() {
                    super("Chain does not support EIP-1559 fees."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "Eip1559FeesNotSupportedError"
                    })
                }
            }
            class Dle extends Fo.G {
                constructor({
                    maxPriorityFeePerGas: n
                }) {
                    super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,Py.o)(n)} gwei).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MaxFeePerGasTooLowError"
                    })
                }
            }
            class d3 extends Fo.G {
                constructor({
                    blockHash: n,
                    blockNumber: e
                }) {
                    let i = "Block";
                    n && (i = `Block at hash "${n}"`), e && (i = `Block at number "${e}"`), super(`${i} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BlockNotFoundError"
                    })
                }
            }
            const h3 = {
                "0x0": "legacy",
                "0x1": "eip2930",
                "0x2": "eip1559"
            };

            function f3(t) {
                const n = { ...t,
                    blockHash: t.blockHash ? t.blockHash : null,
                    blockNumber: t.blockNumber ? BigInt(t.blockNumber) : null,
                    chainId: t.chainId ? (0, to.ly)(t.chainId) : void 0,
                    gas: t.gas ? BigInt(t.gas) : void 0,
                    gasPrice: t.gasPrice ? BigInt(t.gasPrice) : void 0,
                    maxFeePerGas: t.maxFeePerGas ? BigInt(t.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: t.maxPriorityFeePerGas ? BigInt(t.maxPriorityFeePerGas) : void 0,
                    nonce: t.nonce ? (0, to.ly)(t.nonce) : void 0,
                    to: t.to ? t.to : null,
                    transactionIndex: t.transactionIndex ? Number(t.transactionIndex) : null,
                    type: t.type ? h3[t.type] : void 0,
                    typeHex: t.type ? t.type : void 0,
                    value: t.value ? BigInt(t.value) : void 0,
                    v: t.v ? BigInt(t.v) : void 0
                };
                return n.yParity = (() => {
                    if (t.yParity) return Number(t.yParity);
                    if ("bigint" == typeof n.v) {
                        if (0 n === n.v || 27 n === n.v) return 0;
                        if (1 n === n.v || 28 n === n.v) return 1;
                        if (n.v >= 35 n) return n.v % 2 n === 0 n ? 1 : 0
                    }
                })(), "legacy" === n.type && (delete n.accessList, delete n.maxFeePerGas, delete n.maxPriorityFeePerGas, delete n.yParity), "eip2930" === n.type && (delete n.maxFeePerGas, delete n.maxPriorityFeePerGas), n
            }

            function p3(t) {
                const n = t.transactions ? .map(e => "string" == typeof e ? e : f3(e));
                return { ...t,
                    baseFeePerGas: t.baseFeePerGas ? BigInt(t.baseFeePerGas) : null,
                    difficulty: t.difficulty ? BigInt(t.difficulty) : void 0,
                    gasLimit: t.gasLimit ? BigInt(t.gasLimit) : void 0,
                    gasUsed: t.gasUsed ? BigInt(t.gasUsed) : void 0,
                    hash: t.hash ? t.hash : null,
                    logsBloom: t.logsBloom ? t.logsBloom : null,
                    nonce: t.nonce ? t.nonce : null,
                    number: t.number ? BigInt(t.number) : null,
                    size: t.size ? BigInt(t.size) : void 0,
                    timestamp: t.timestamp ? BigInt(t.timestamp) : void 0,
                    transactions: n,
                    totalDifficulty: t.totalDifficulty ? BigInt(t.totalDifficulty) : null
                }
            }

            function sc(t) {
                return H1.apply(this, arguments)
            }

            function H1() {
                return (H1 = (0, ut.Z)(function*(t, {
                    blockHash: n,
                    blockNumber: e,
                    blockTag: i,
                    includeTransactions: s
                } = {}) {
                    const r = i ? ? "latest",
                        l = s ? ? !1,
                        u = void 0 !== e ? (0, ki.eC)(e) : void 0;
                    let h = null;
                    if (h = n ? yield t.request({
                            method: "eth_getBlockByHash",
                            params: [n, l]
                        }): yield t.request({
                            method: "eth_getBlockByNumber",
                            params: [u || r, l]
                        }), !h) throw new d3({
                        blockHash: n,
                        blockNumber: e
                    });
                    return (t.chain ? .formatters ? .block ? .format || p3)(h)
                })).apply(this, arguments)
            }

            function z1(t) {
                return j1.apply(this, arguments)
            }

            function j1() {
                return (j1 = (0, ut.Z)(function*(t) {
                    const n = yield t.request({
                        method: "eth_gasPrice"
                    });
                    return BigInt(n)
                })).apply(this, arguments)
            }

            function $1() {
                return ($1 = (0, ut.Z)(function*(t, n) {
                    return g3(t, n)
                })).apply(this, arguments)
            }

            function g3(t, n) {
                return U1.apply(this, arguments)
            }

            function U1() {
                return (U1 = (0, ut.Z)(function*(t, n) {
                    const {
                        block: e,
                        chain: i = t.chain,
                        request: s
                    } = n || {};
                    if ("function" == typeof i ? .fees ? .defaultPriorityFee) {
                        const r = e || (yield(0, Xn.s)(t, sc, "getBlock")({}));
                        return i.fees.defaultPriorityFee({
                            block: r,
                            client: t,
                            request: s
                        })
                    }
                    if (typeof i ? .fees ? .defaultPriorityFee < "u") return i ? .fees ? .defaultPriorityFee;
                    try {
                        const r = yield t.request({
                            method: "eth_maxPriorityFeePerGas"
                        });
                        return (0, to.y_)(r)
                    } catch {
                        const [r, l] = yield Promise.all([e ? Promise.resolve(e) : (0, Xn.s)(t, sc, "getBlock")({}), (0, Xn.s)(t, z1, "getGasPrice")({})]);
                        if ("bigint" != typeof r.baseFeePerGas) throw new V1;
                        const u = l - r.baseFeePerGas;
                        return u < 0 n ? 0 n : u
                    }
                })).apply(this, arguments)
            }

            function W1() {
                return (W1 = (0, ut.Z)(function*(t, n) {
                    return G1(t, n)
                })).apply(this, arguments)
            }

            function G1(t, n) {
                return X1.apply(this, arguments)
            }

            function X1() {
                return (X1 = (0, ut.Z)(function*(t, n) {
                    const {
                        block: e,
                        chain: i = t.chain,
                        request: s,
                        type: r = "eip1559"
                    } = n || {}, l = yield(0, ut.Z)(function*() {
                        return "function" == typeof i ? .fees ? .baseFeeMultiplier ? i.fees.baseFeeMultiplier({
                            block: e,
                            client: t,
                            request: s
                        }) : i ? .fees ? .baseFeeMultiplier ? ? 1.2
                    })();
                    if (l < 1) throw new Tle;
                    const h = 10 ** (l.toString().split(".")[1] ? .length ? ? 0),
                        v = M => M * BigInt(Math.ceil(l * h)) / BigInt(h),
                        _ = e || (yield(0, Xn.s)(t, sc, "getBlock")({}));
                    if ("function" == typeof i ? .fees ? .estimateFeesPerGas) return i.fees.estimateFeesPerGas({
                        block: e,
                        client: t,
                        multiply: v,
                        request: s,
                        type: r
                    });
                    if ("eip1559" === r) {
                        if ("bigint" != typeof _.baseFeePerGas) throw new V1;
                        const M = s ? .maxPriorityFeePerGas ? s.maxPriorityFeePerGas : yield g3(t, {
                            block: _,
                            chain: i,
                            request: s
                        }), L = v(_.baseFeePerGas);
                        return {
                            maxFeePerGas: s ? .maxFeePerGas ? ? L + M,
                            maxPriorityFeePerGas: M
                        }
                    }
                    return {
                        gasPrice: s ? .gasPrice ? ? v(yield(0, Xn.s)(t, z1, "getGasPrice")({}))
                    }
                })).apply(this, arguments)
            }
            var Xs = I(8004);
            class Ele extends Fo.G {
                constructor(n, {
                    account: e,
                    docsPath: i,
                    chain: s,
                    data: r,
                    gas: l,
                    gasPrice: u,
                    maxFeePerGas: h,
                    maxPriorityFeePerGas: v,
                    nonce: _,
                    to: C,
                    value: M
                }) {
                    const L = (0, ic.xr)({
                        from: e ? .address,
                        to: C,
                        value: typeof M < "u" && `${(0,Xs.d)(M)} ${s?.nativeCurrency?.symbol||"ETH"}`,
                        data: r,
                        gas: l,
                        gasPrice: typeof u < "u" && `${(0,Py.o)(u)} gwei`,
                        maxFeePerGas: typeof h < "u" && `${(0,Py.o)(h)} gwei`,
                        maxPriorityFeePerGas: typeof v < "u" && `${(0,Py.o)(v)} gwei`,
                        nonce: _
                    });
                    super(n.shortMessage, {
                        cause: n,
                        docsPath: i,
                        metaMessages: [...n.metaMessages ? [...n.metaMessages, " "] : [], "Estimate Gas Arguments:", L].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EstimateGasExecutionError"
                    }), this.cause = n
                }
            }

            function Y1(t, n) {
                return q1.apply(this, arguments)
            }

            function q1() {
                return (q1 = (0, ut.Z)(function*(t, n) {
                    const e = n.account ? ? t.account;
                    if (!e) throw new Ud({
                        docsPath: "/docs/actions/public/estimateGas"
                    });
                    const i = (0, vl.T)(e);
                    try {
                        const {
                            accessList: s,
                            blockNumber: r,
                            blockTag: l,
                            data: u,
                            gas: h,
                            gasPrice: v,
                            maxFeePerGas: _,
                            maxPriorityFeePerGas: C,
                            nonce: M,
                            to: L,
                            value: j,
                            ...Z
                        } = "local" === i.type ? yield Oy(t, n): n, Ae = (r ? (0, ki.eC)(r) : void 0) || l;
                        (0, My.F)(n);
                        const De = t.chain ? .formatters ? .transactionRequest ? .format,
                            it = (De || B1.tG)({ ...(0, u3.K)(Z, {
                                    format: De
                                }),
                                from: i.address,
                                accessList: s,
                                data: u,
                                gas: h,
                                gasPrice: v,
                                maxFeePerGas: _,
                                maxPriorityFeePerGas: C,
                                nonce: M,
                                to: L,
                                value: j
                            }),
                            lt = yield t.request({
                                method: "eth_estimateGas",
                                params: Ae ? [it, Ae] : [it]
                            });
                        return BigInt(lt)
                    } catch (s) {
                        throw function Mle(t, {
                            docsPath: n,
                            ...e
                        }) {
                            const i = (() => {
                                const s = (0, c3.k)(t, e);
                                return s instanceof l3.cj ? t : s
                            })();
                            return new Ele(i, {
                                docsPath: n,
                                ...e
                            })
                        }(s, { ...n,
                            account: i,
                            chain: t.chain
                        })
                    }
                })).apply(this, arguments)
            }

            function m3(t, n) {
                return Z1.apply(this, arguments)
            }

            function Z1() {
                return (Z1 = (0, ut.Z)(function*(t, {
                    address: n,
                    blockTag: e = "latest",
                    blockNumber: i
                }) {
                    const s = yield t.request({
                        method: "eth_getTransactionCount",
                        params: [n, i ? (0, ki.eC)(i) : e]
                    });
                    return (0, to.ly)(s)
                })).apply(this, arguments)
            }

            function Oy(t, n) {
                return K1.apply(this, arguments)
            }

            function K1() {
                return (K1 = (0, ut.Z)(function*(t, n) {
                    const {
                        account: e = t.account,
                        chain: i,
                        gas: s,
                        nonce: r,
                        type: l
                    } = n;
                    if (!e) throw new Ud;
                    const u = (0, vl.T)(e),
                        h = yield(0, Xn.s)(t, sc, "getBlock")({
                            blockTag: "latest"
                        }), v = { ...n,
                            from: u.address
                        };
                    if (typeof r > "u" && (v.nonce = yield(0, Xn.s)(t, m3, "getTransactionCount")({
                            address: u.address,
                            blockTag: "pending"
                        })), typeof l > "u") try {
                        v.type = function Ple(t) {
                            if (t.type) return t.type;
                            if (typeof t.maxFeePerGas < "u" || typeof t.maxPriorityFeePerGas < "u") return "eip1559";
                            if (typeof t.gasPrice < "u") return typeof t.accessList < "u" ? "eip2930" : "legacy";
                            throw new ic.j3({
                                transaction: t
                            })
                        }(v)
                    } catch {
                        v.type = "bigint" == typeof h.baseFeePerGas ? "eip1559" : "legacy"
                    }
                    if ("eip1559" === v.type) {
                        const {
                            maxFeePerGas: _,
                            maxPriorityFeePerGas: C
                        } = yield G1(t, {
                            block: h,
                            chain: i,
                            request: v
                        });
                        if (typeof n.maxPriorityFeePerGas > "u" && n.maxFeePerGas && n.maxFeePerGas < C) throw new Dle({
                            maxPriorityFeePerGas: C
                        });
                        v.maxPriorityFeePerGas = C, v.maxFeePerGas = _
                    } else {
                        if (typeof n.maxFeePerGas < "u" || typeof n.maxPriorityFeePerGas < "u") throw new V1;
                        const {
                            gasPrice: _
                        } = yield G1(t, {
                            block: h,
                            chain: i,
                            request: v,
                            type: "legacy"
                        });
                        v.gasPrice = _
                    }
                    return typeof s > "u" && (v.gas = yield(0, Xn.s)(t, Y1, "estimateGas")({ ...v,
                        account: {
                            address: u.address,
                            type: "json-rpc"
                        }
                    })), (0, My.F)(v), v
                })).apply(this, arguments)
            }

            function Q1(t, n) {
                return J1.apply(this, arguments)
            }

            function J1() {
                return (J1 = (0, ut.Z)(function*(t, {
                    serializedTransaction: n
                }) {
                    return t.request({
                        method: "eth_sendRawTransaction",
                        params: [n]
                    })
                })).apply(this, arguments)
            }

            function eS(t, n) {
                return tS.apply(this, arguments)
            }

            function tS() {
                return (tS = (0, ut.Z)(function*(t, n) {
                    const {
                        account: e = t.account,
                        chain: i = t.chain,
                        accessList: s,
                        data: r,
                        gas: l,
                        gasPrice: u,
                        maxFeePerGas: h,
                        maxPriorityFeePerGas: v,
                        nonce: _,
                        to: C,
                        value: M,
                        ...L
                    } = n;
                    if (!e) throw new Ud({
                        docsPath: "/docs/actions/wallet/sendTransaction"
                    });
                    const j = (0, vl.T)(e);
                    try {
                        let Z;
                        if ((0, My.F)(n), null !== i && (Z = yield(0, Xn.s)(t, gp, "getChainId")({}), o3({
                                currentChainId: Z,
                                chain: i
                            })), "local" === j.type) {
                            const Ue = yield(0, Xn.s)(t, Oy, "prepareTransactionRequest")({
                                account: j,
                                accessList: s,
                                chain: i,
                                data: r,
                                gas: l,
                                gasPrice: u,
                                maxFeePerGas: h,
                                maxPriorityFeePerGas: v,
                                nonce: _,
                                to: C,
                                value: M,
                                ...L
                            });
                            Z || (Z = yield(0, Xn.s)(t, gp, "getChainId")({}));
                            const it = i ? .serializers ? .transaction,
                                lt = yield j.signTransaction({ ...Ue,
                                    chainId: Z
                                }, {
                                    serializer: it
                                });
                            return yield(0, Xn.s)(t, Q1, "sendRawTransaction")({
                                serializedTransaction: lt
                            })
                        }
                        const Q = t.chain ? .formatters ? .transactionRequest ? .format,
                            De = (Q || B1.tG)({ ...(0, u3.K)(L, {
                                    format: Q
                                }),
                                accessList: s,
                                data: r,
                                from: j.address,
                                gas: l,
                                gasPrice: u,
                                maxFeePerGas: h,
                                maxPriorityFeePerGas: v,
                                nonce: _,
                                to: C,
                                value: M
                            });
                        return yield t.request({
                            method: "eth_sendTransaction",
                            params: [De]
                        })
                    } catch (Z) {
                        throw function Sle(t, {
                            docsPath: n,
                            ...e
                        }) {
                            const i = (() => {
                                const s = (0, c3.k)(t, e);
                                return s instanceof l3.cj ? t : s
                            })();
                            return new ic.mk(i, {
                                docsPath: n,
                                ...e
                            })
                        }(Z, { ...n,
                            account: j,
                            chain: n.chain || void 0
                        })
                    }
                })).apply(this, arguments)
            }

            function nS() {
                return (nS = (0, ut.Z)(function*(t) {
                    return "local" === t.account ? .type ? [t.account.address] : (yield t.request({
                        method: "eth_accounts"
                    })).map(e => (0, ml.x)(e))
                })).apply(this, arguments)
            }

            function iS() {
                return (iS = (0, ut.Z)(function*(t) {
                    return yield t.request({
                        method: "wallet_getPermissions"
                    })
                })).apply(this, arguments)
            }

            function sS() {
                return (sS = (0, ut.Z)(function*(t) {
                    return (yield t.request({
                        method: "eth_requestAccounts"
                    })).map(e => (0, ml.K)(e))
                })).apply(this, arguments)
            }

            function rS() {
                return (rS = (0, ut.Z)(function*(t, n) {
                    return t.request({
                        method: "wallet_requestPermissions",
                        params: [n]
                    })
                })).apply(this, arguments)
            }

            function aS() {
                return (aS = (0, ut.Z)(function*(t, {
                    account: n = t.account,
                    message: e
                }) {
                    if (!n) throw new Ud({
                        docsPath: "/docs/actions/wallet/signMessage"
                    });
                    const i = (0, vl.T)(n);
                    if ("local" === i.type) return i.signMessage({
                        message: e
                    });
                    const s = "string" == typeof e ? (0, ki.$G)(e) : e.raw instanceof Uint8Array ? (0, ki.NC)(e.raw) : e.raw;
                    return t.request({
                        method: "personal_sign",
                        params: [s, i.address]
                    })
                })).apply(this, arguments)
            }

            function oS() {
                return (oS = (0, ut.Z)(function*(t, n) {
                    const {
                        account: e = t.account,
                        chain: i = t.chain,
                        ...s
                    } = n;
                    if (!e) throw new Ud({
                        docsPath: "/docs/actions/wallet/signTransaction"
                    });
                    const r = (0, vl.T)(e);
                    (0, My.F)({
                        account: r,
                        ...n
                    });
                    const l = yield(0, Xn.s)(t, gp, "getChainId")({});
                    null !== i && o3({
                        currentChainId: l,
                        chain: i
                    });
                    const h = (i ? .formatters || t.chain ? .formatters) ? .transactionRequest ? .format || B1.tG;
                    return "local" === r.type ? r.signTransaction({ ...s,
                        chainId: l
                    }, {
                        serializer: t.chain ? .serializers ? .transaction
                    }) : yield t.request({
                        method: "eth_signTransaction",
                        params: [{ ...h(s),
                            chainId: (0, ki.eC)(l),
                            from: r.address
                        }]
                    })
                })).apply(this, arguments)
            }
            var Iy = I(7812),
                No = I(38),
                Vle = I(8355),
                Hle = I(2099),
                v3 = I(4018);
            const zle = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
                jle = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;

            function y3({
                domain: t,
                message: n,
                primaryType: e,
                types: i
            }) {
                const s = i,
                    r = (l, u) => {
                        for (const h of l) {
                            const {
                                name: v,
                                type: _
                            } = h, C = _, M = u[v], L = C.match(jle);
                            if (L && ("number" == typeof M || "bigint" == typeof M)) {
                                const [Q, Ae, De] = L;
                                (0, ki.eC)(M, {
                                    signed: "int" === Ae,
                                    size: parseInt(De) / 8
                                })
                            }
                            if ("address" === C && "string" == typeof M && !(0, Hle.U)(M)) throw new Vle.b({
                                address: M
                            });
                            const j = C.match(zle);
                            if (j) {
                                const [Q, Ae] = j;
                                if (Ae && (0, v3.d)(M) !== parseInt(Ae)) throw new ps.KY({
                                    expectedSize: parseInt(Ae),
                                    givenSize: (0, v3.d)(M)
                                })
                            }
                            const Z = s[C];
                            Z && r(Z, M)
                        }
                    };
                s.EIP712Domain && t && r(s.EIP712Domain, t), "EIP712Domain" !== e && r(s[e], n)
            }

            function lS({
                domain: t
            }) {
                return ["string" == typeof t ? .name && {
                    name: "name",
                    type: "string"
                }, t ? .version && {
                    name: "version",
                    type: "string"
                }, "number" == typeof t ? .chainId && {
                    name: "chainId",
                    type: "uint256"
                }, t ? .verifyingContract && {
                    name: "verifyingContract",
                    type: "address"
                }, t ? .salt && {
                    name: "salt",
                    type: "bytes32"
                }].filter(Boolean)
            }

            function cS() {
                return (cS = (0, ut.Z)(function*(t, {
                    account: n = t.account,
                    domain: e,
                    message: i,
                    primaryType: s,
                    types: r
                }) {
                    if (!n) throw new Ud({
                        docsPath: "/docs/actions/wallet/signTypedData"
                    });
                    const l = (0, vl.T)(n),
                        u = {
                            EIP712Domain: lS({
                                domain: e
                            }),
                            ...r
                        };
                    if (y3({
                            domain: e,
                            message: i,
                            primaryType: s,
                            types: u
                        }), "local" === l.type) return l.signTypedData({
                        domain: e,
                        primaryType: s,
                        types: u,
                        message: i
                    });
                    const h = (0, No.P)({
                        domain: e ? ? {},
                        primaryType: s,
                        types: u,
                        message: i
                    }, (v, _) => (0, Iy.v)(_) ? _.toLowerCase() : _);
                    return t.request({
                        method: "eth_signTypedData_v4",
                        params: [l.address, h]
                    })
                })).apply(this, arguments)
            }

            function uS() {
                return (uS = (0, ut.Z)(function*(t, {
                    id: n
                }) {
                    yield t.request({
                        method: "wallet_switchEthereumChain",
                        params: [{
                            chainId: (0, ki.eC)(n)
                        }]
                    })
                })).apply(this, arguments)
            }

            function dS() {
                return (dS = (0, ut.Z)(function*(t, n) {
                    return yield t.request({
                        method: "wallet_watchAsset",
                        params: n
                    })
                })).apply(this, arguments)
            }
            var mp = I(2490);

            function hS() {
                return (hS = (0, ut.Z)(function*(t, {
                    abi: n,
                    address: e,
                    args: i,
                    dataSuffix: s,
                    functionName: r,
                    ...l
                }) {
                    const u = (0, mp.R)({
                        abi: n,
                        args: i,
                        functionName: r
                    });
                    return yield(0, Xn.s)(t, eS, "sendTransaction")({
                        data: `${u}${s?s.replace("0x",""):""}`,
                        to: e,
                        ...l
                    })
                })).apply(this, arguments)
            }

            function Xle(t) {
                return {
                    addChain: n => function Cle(t, n) {
                        return F1.apply(this, arguments)
                    }(t, n),
                    deployContract: n => function Ole(t, {
                        abi: n,
                        args: e,
                        bytecode: i,
                        ...s
                    }) {
                        return eS(t, { ...s,
                            data: r3({
                                abi: n,
                                args: e,
                                bytecode: i
                            })
                        })
                    }(t, n),
                    getAddresses: () => function Ile(t) {
                        return nS.apply(this, arguments)
                    }(t),
                    getChainId: () => gp(t),
                    getPermissions: () => function Lle(t) {
                        return iS.apply(this, arguments)
                    }(t),
                    prepareTransactionRequest: n => Oy(t, n),
                    requestAddresses: () => function Fle(t) {
                        return sS.apply(this, arguments)
                    }(t),
                    requestPermissions: n => function Nle(t, n) {
                        return rS.apply(this, arguments)
                    }(t, n),
                    sendRawTransaction: n => Q1(t, n),
                    sendTransaction: n => eS(t, n),
                    signMessage: n => function Rle(t, n) {
                        return aS.apply(this, arguments)
                    }(t, n),
                    signTransaction: n => function Ble(t, n) {
                        return oS.apply(this, arguments)
                    }(t, n),
                    signTypedData: n => function $le(t, n) {
                        return cS.apply(this, arguments)
                    }(t, n),
                    switchChain: n => function Ule(t, n) {
                        return uS.apply(this, arguments)
                    }(t, n),
                    watchAsset: n => function Wle(t, n) {
                        return dS.apply(this, arguments)
                    }(t, n),
                    writeContract: n => function Gle(t, n) {
                        return hS.apply(this, arguments)
                    }(t, n)
                }
            }

            function b3(t) {
                const {
                    key: n = "wallet",
                    name: e = "Wallet Client",
                    transport: i
                } = t;
                return s3({ ...t,
                    key: n,
                    name: e,
                    transport: r => i({ ...r,
                        retryCount: 0
                    }),
                    type: "walletClient"
                }).extend(Xle)
            }
            var no = I(3979);

            function Ly(t) {
                return fS.apply(this, arguments)
            }

            function fS() {
                return (fS = (0, ut.Z)(function*(t) {
                    return new Promise(n => setTimeout(n, t))
                })).apply(this, arguments)
            }

            function pS(t, {
                delay: n = 100,
                retryCount: e = 2,
                shouldRetry: i = (() => !0)
            } = {}) {
                return new Promise((s, r) => {
                    const l = function() {
                        var u = (0, ut.Z)(function*({
                            count: h = 0
                        } = {}) {
                            const v = function() {
                                var _ = (0, ut.Z)(function*({
                                    error: C
                                }) {
                                    const M = "function" == typeof n ? n({
                                        count: h,
                                        error: C
                                    }) : n;
                                    M && (yield Ly(M)), l({
                                        count: h + 1
                                    })
                                });
                                return function(M) {
                                    return _.apply(this, arguments)
                                }
                            }();
                            try {
                                const _ = yield t();
                                s(_)
                            } catch (_) {
                                if (h < e && (yield i({
                                        count: h,
                                        error: _
                                    }))) return v({
                                    error: _
                                });
                                r(_)
                            }
                        });
                        return function() {
                            return u.apply(this, arguments)
                        }
                    }();
                    l()
                })
            }
            const x3 = t => "code" in t ? -1 !== t.code && -32004 !== t.code && -32005 !== t.code && -32042 !== t.code && -32603 !== t.code : !!(t instanceof no.Gg && t.status) && 403 !== t.status && 408 !== t.status && 413 !== t.status && 429 !== t.status && 500 !== t.status && 502 !== t.status && 503 !== t.status && 504 !== t.status;

            function Yle(t, {
                retryDelay: n = 150,
                retryCount: e = 3
            } = {}) {
                return function() {
                    var i = (0, ut.Z)(function*(s) {
                        return pS((0, ut.Z)(function*() {
                            try {
                                return yield t(s)
                            } catch (r) {
                                const l = r;
                                switch (l.code) {
                                    case fn.s7.code:
                                        throw new fn.s7(l);
                                    case fn.B.code:
                                        throw new fn.B(l);
                                    case fn.LX.code:
                                        throw new fn.LX(l);
                                    case fn.nY.code:
                                        throw new fn.nY(l);
                                    case fn.XS.code:
                                        throw new fn.XS(l);
                                    case fn.yR.code:
                                        throw new fn.yR(l);
                                    case fn.Og.code:
                                        throw new fn.Og(l);
                                    case fn.pT.code:
                                        throw new fn.pT(l);
                                    case fn.KB.code:
                                        throw new fn.KB(l);
                                    case fn.gS.code:
                                        throw new fn.gS(l);
                                    case fn.Pv.code:
                                        throw new fn.Pv(l);
                                    case fn.GD.code:
                                        throw new fn.GD(l);
                                    case fn.ab.code:
                                        throw new fn.ab(l);
                                    case fn.PE.code:
                                        throw new fn.PE(l);
                                    case fn.Ts.code:
                                        throw new fn.Ts(l);
                                    case fn.u5.code:
                                        throw new fn.u5(l);
                                    case fn.I0.code:
                                        throw new fn.I0(l);
                                    case fn.x3.code:
                                        throw new fn.x3(l);
                                    case 5e3:
                                        throw new fn.ab(l);
                                    default:
                                        throw r instanceof Fo.G ? r : new fn.ir(l)
                                }
                            }
                        }), {
                            delay: ({
                                count: r,
                                error: l
                            }) => {
                                if (l && l instanceof no.Gg) {
                                    const u = l ? .headers ? .get("Retry-After");
                                    if (u ? .match(/\d/)) return 1e3 * parseInt(u)
                                }
                                return ~~(1 << r) * n
                            },
                            retryCount: e,
                            shouldRetry: ({
                                error: r
                            }) => !x3(r)
                        })
                    });
                    return function(s) {
                        return i.apply(this, arguments)
                    }
                }()
            }

            function Fy({
                key: t,
                name: n,
                request: e,
                retryCount: i = 3,
                retryDelay: s = 150,
                timeout: r,
                type: l
            }, u) {
                return {
                    config: {
                        key: t,
                        name: n,
                        request: e,
                        retryCount: i,
                        retryDelay: s,
                        timeout: r,
                        type: l
                    },
                    request: Yle(e, {
                        retryCount: i,
                        retryDelay: s
                    }),
                    value: u
                }
            }

            function _3(t, n = {}) {
                const {
                    key: e = "custom",
                    name: i = "Custom Provider",
                    retryDelay: s
                } = n;
                return ({
                    retryCount: r
                }) => Fy({
                    key: e,
                    name: i,
                    request: t.request.bind(t),
                    retryCount: n.retryCount ? ? r,
                    retryDelay: s,
                    type: "custom"
                })
            }
            var Ny, w3 = class extends n3 {
                constructor({
                    chains: t,
                    options: n
                } = {}) {
                    var e;
                    const i = {
                        shimDisconnect: !0,
                        getProvider() {
                            if (typeof window > "u") return;
                            const r = window.ethereum;
                            return r ? .providers && r.providers.length > 0 ? r.providers[0] : r
                        },
                        ...n
                    };
                    super({
                        chains: t,
                        options: i
                    }), e = this, this.id = "injected", va(this, Ny, void 0), this.shimDisconnectKey = `${this.id}.shimDisconnect`, this.onAccountsChanged = r => {
                        0 === r.length ? this.emit("disconnect") : this.emit("change", {
                            account: (0, ml.K)(r[0])
                        })
                    }, this.onChainChanged = r => {
                        const l = e3(r),
                            u = this.isChainUnsupported(l);
                        this.emit("change", {
                            chain: {
                                id: l,
                                unsupported: u
                            }
                        })
                    }, this.onDisconnect = function() {
                        var r = (0, ut.Z)(function*(l) {
                            1013 === l.code && (yield e.getProvider()) && (yield e.getAccount()) || (e.emit("disconnect"), e.options.shimDisconnect && e.storage ? .removeItem(e.shimDisconnectKey))
                        });
                        return function(l) {
                            return r.apply(this, arguments)
                        }
                    }();
                    const s = i.getProvider();
                    if ("string" == typeof i.name) this.name = i.name;
                    else if (s) {
                        const r = function qle(t) {
                            if (!t) return "Injected";
                            const n = e => e.isApexWallet ? "Apex Wallet" : e.isAvalanche ? "Core Wallet" : e.isBackpack ? "Backpack" : e.isBifrost ? "Bifrost Wallet" : e.isBitKeep ? "BitKeep" : e.isBitski ? "Bitski" : e.isBlockWallet ? "BlockWallet" : e.isBraveWallet ? "Brave Wallet" : e.isCoin98 ? "Coin98 Wallet" : e.isCoinbaseWallet ? "Coinbase Wallet" : e.isDawn ? "Dawn Wallet" : e.isDefiant ? "Defiant" : e.isDesig ? "Desig Wallet" : e.isEnkrypt ? "Enkrypt" : e.isExodus ? "Exodus" : e.isFordefi ? "Fordefi" : e.isFrame ? "Frame" : e.isFrontier ? "Frontier Wallet" : e.isGamestop ? "GameStop Wallet" : e.isHaqqWallet ? "HAQQ Wallet" : e.isHyperPay ? "HyperPay Wallet" : e.isImToken ? "ImToken" : e.isHaloWallet ? "Halo Wallet" : e.isKuCoinWallet ? "KuCoin Wallet" : e.isMathWallet ? "MathWallet" : e.isNovaWallet ? "Nova Wallet" : e.isOkxWallet || e.isOKExWallet ? "OKX Wallet" : e.isOneInchIOSWallet || e.isOneInchAndroidWallet ? "1inch Wallet" : e.isOneKey ? "OneKey Wallet" : e.isOpera ? "Opera" : e.isPhantom ? "Phantom" : e.isPortal ? "Ripio Portal" : e.isRabby ? "Rabby Wallet" : e.isRainbow ? "Rainbow" : e.isSafePal ? "SafePal Wallet" : e.isStatus ? "Status" : e.isSubWallet ? "SubWallet" : e.isTalisman ? "Talisman" : e.isTally ? "Taho" : e.isTokenPocket ? "TokenPocket" : e.isTokenary ? "Tokenary" : e.isTrust || e.isTrustWallet ? "Trust Wallet" : e.isTTWallet ? "TTWallet" : e.isXDEFI ? "XDEFI Wallet" : e.isZeal ? "Zeal" : e.isZerion ? "Zerion" : e.isMetaMask ? "MetaMask" : void 0;
                            if (t.providers ? .length) {
                                const e = new Set;
                                let i = 1;
                                for (const r of t.providers) {
                                    let l = n(r);
                                    l || (l = `Unknown Wallet #${i}`, i += 1), e.add(l)
                                }
                                const s = [...e];
                                return s.length ? s : s[0] ? ? "Injected"
                            }
                            return n(t) ? ? "Injected"
                        }(s);
                        this.name = i.name ? i.name(r) : "string" == typeof r ? r : r[0]
                    } else this.name = "Injected";
                    this.ready = !!s
                }
                connect({
                    chainId: t
                } = {}) {
                    var n = this;
                    return (0, ut.Z)(function*() {
                        try {
                            const e = yield n.getProvider();
                            if (!e) throw new Lo;
                            e.on && (e.on("accountsChanged", n.onAccountsChanged), e.on("chainChanged", n.onChainChanged), e.on("disconnect", n.onDisconnect)), n.emit("message", {
                                type: "connecting"
                            });
                            const i = yield e.request({
                                method: "eth_requestAccounts"
                            }), s = (0, ml.K)(i[0]);
                            let r = yield n.getChainId(), l = n.isChainUnsupported(r);
                            return t && r !== t && (r = (yield n.switchChain(t)).id, l = n.isChainUnsupported(r)), n.options.shimDisconnect && n.storage ? .setItem(n.shimDisconnectKey, !0), {
                                account: s,
                                chain: {
                                    id: r,
                                    unsupported: l
                                }
                            }
                        } catch (e) {
                            throw n.isUserRejectedRequestError(e) ? new fn.ab(e) : -32002 === e.code ? new fn.pT(e) : e
                        }
                    })()
                }
                disconnect() {
                    var t = this;
                    return (0, ut.Z)(function*() {
                        const n = yield t.getProvider();
                        n ? .removeListener && (n.removeListener("accountsChanged", t.onAccountsChanged), n.removeListener("chainChanged", t.onChainChanged), n.removeListener("disconnect", t.onDisconnect), t.options.shimDisconnect && t.storage ? .removeItem(t.shimDisconnectKey))
                    })()
                }
                getAccount() {
                    var t = this;
                    return (0, ut.Z)(function*() {
                        const n = yield t.getProvider();
                        if (!n) throw new Lo;
                        const e = yield n.request({
                            method: "eth_accounts"
                        });
                        return (0, ml.K)(e[0])
                    })()
                }
                getChainId() {
                    var t = this;
                    return (0, ut.Z)(function*() {
                        const n = yield t.getProvider();
                        if (!n) throw new Lo;
                        return n.request({
                            method: "eth_chainId"
                        }).then(e3)
                    })()
                }
                getProvider() {
                    var t = this;
                    return (0, ut.Z)(function*() {
                        const n = t.options.getProvider();
                        return n && Dy(t, Ny, n), ss(t, Ny)
                    })()
                }
                getWalletClient({
                    chainId: t
                } = {}) {
                    var n = this;
                    return (0, ut.Z)(function*() {
                        const [e, i] = yield Promise.all([n.getProvider(), n.getAccount()]), s = n.chains.find(r => r.id === t);
                        if (!e) throw new Error("provider is required.");
                        return b3({
                            account: i,
                            chain: s,
                            transport: _3(e)
                        })
                    })()
                }
                isAuthorized() {
                    var t = this;
                    return (0, ut.Z)(function*() {
                        try {
                            if (t.options.shimDisconnect && !t.storage ? .getItem(t.shimDisconnectKey)) return !1;
                            if (!(yield t.getProvider())) throw new Lo;
                            return !!(yield t.getAccount())
                        } catch {
                            return !1
                        }
                    })()
                }
                switchChain(t) {
                    var n = this;
                    return (0, ut.Z)(function*() {
                        const e = yield n.getProvider();
                        if (!e) throw new Lo;
                        const i = (0, ki.eC)(t);
                        try {
                            return yield Promise.all([e.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: i
                                }]
                            }), new Promise(s => n.on("change", ({
                                chain: r
                            }) => {
                                r ? .id === t && s()
                            }))]), n.chains.find(s => s.id === t) ? ? {
                                id: t,
                                name: `Chain ${i}`,
                                network: `${i}`,
                                nativeCurrency: {
                                    name: "Ether",
                                    decimals: 18,
                                    symbol: "ETH"
                                },
                                rpcUrls: {
                                    default: {
                                        http: [""]
                                    },
                                    public: {
                                        http: [""]
                                    }
                                }
                            }
                        } catch (s) {
                            const r = n.chains.find(l => l.id === t);
                            if (!r) throw new xle({
                                chainId: t,
                                connectorId: n.id
                            });
                            if (4902 === s.code || 4902 === s ? .data ? .originalError ? .code) try {
                                if (yield e.request({
                                        method: "wallet_addEthereumChain",
                                        params: [{
                                            chainId: i,
                                            chainName: r.name,
                                            nativeCurrency: r.nativeCurrency,
                                            rpcUrls: [r.rpcUrls.public ? .http[0] ? ? ""],
                                            blockExplorerUrls: n.getBlockExplorerUrls(r)
                                        }]
                                    }), (yield n.getChainId()) !== t) throw new fn.ab(new Error("User rejected switch after adding network."));
                                return r
                            } catch (l) {
                                throw new fn.ab(l)
                            }
                            throw n.isUserRejectedRequestError(s) ? new fn.ab(s) : new fn.x3(s)
                        }
                    })()
                }
                watchAsset({
                    address: t,
                    decimals: n = 18,
                    image: e,
                    symbol: i
                }) {
                    var s = this;
                    return (0, ut.Z)(function*() {
                        const r = yield s.getProvider();
                        if (!r) throw new Lo;
                        return r.request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: t,
                                    decimals: n,
                                    image: e,
                                    symbol: i
                                }
                            }
                        })
                    })()
                }
                isUserRejectedRequestError(t) {
                    return 4001 === t.code
                }
            };
            Ny = new WeakMap;
            var gS = (t, n, e) => {
                    if (!n.has(t)) throw TypeError("Cannot " + e)
                },
                mS = (t, n, e) => (gS(t, n, "read from private field"), e ? e.call(t) : n.get(t)),
                vS = (t, n, e) => {
                    if (n.has(t)) throw TypeError("Cannot add the same private member more than once");
                    n instanceof WeakSet ? n.add(t) : n.set(t, e)
                },
                Ry = (t, n, e, i) => (gS(t, n, "write to private field"), i ? i.call(t, e) : n.set(t, e), e),
                Kle = I(4257),
                Qle = I(9632),
                Jle = I(8971),
                ece = I(3069),
                tce = I(1180),
                yS = I(9934);

            function By(t, {
                method: n
            }) {
                const e = {};
                return "fallback" === t.transport.type && t.transport.onResponse ? .(({
                    method: i,
                    response: s,
                    status: r,
                    transport: l
                }) => {
                    "success" === r && n === i && (e[s] = l.request)
                }), i => e[i] || t.request
            }

            function bS() {
                return (bS = (0, ut.Z)(function*(t) {
                    const n = By(t, {
                            method: "eth_newBlockFilter"
                        }),
                        e = yield t.request({
                            method: "eth_newBlockFilter"
                        });
                    return {
                        id: e,
                        request: n(e),
                        type: "block"
                    }
                })).apply(this, arguments)
            }
            class ice extends Fo.G {
                constructor(n) {
                    super(`Filter type "${n}" is not supported.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FilterTypeNotSupportedError"
                    })
                }
            }
            var Wd = I(9427),
                C3 = I(7467),
                yl = I(383),
                S3 = I(6537),
                T3 = I(930);

            function vp({
                abi: t,
                eventName: n,
                args: e
            }) {
                let i = t[0];
                if (n && (i = (0, T3.m)({
                        abi: t,
                        args: e,
                        name: n
                    }), !i)) throw new ps.mv(n, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                if ("event" !== i.type) throw new ps.mv(void 0, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                const s = (0, S3.t)(i),
                    r = (0, C3.e)(s);
                let l = [];
                if (e && "inputs" in i) {
                    const u = i.inputs ? .filter(v => "indexed" in v && v.indexed),
                        h = Array.isArray(e) ? e : Object.values(e).length > 0 ? u ? .map(v => e[v.name]) ? ? [] : [];
                    h.length > 0 && (l = u ? .map((v, _) => Array.isArray(h[_]) ? h[_].map((C, M) => D3({
                        param: v,
                        value: h[_][M]
                    })) : h[_] ? D3({
                        param: v,
                        value: h[_]
                    }) : null) ? ? [])
                }
                return [r, ...l]
            }

            function D3({
                param: t,
                value: n
            }) {
                if ("string" === t.type || "bytes" === t.type) return (0, yl.w)((0, Wd.O0)(n));
                if ("tuple" === t.type || t.type.match(/^(.*)\[(\d+)?\]$/)) throw new ice(t.type);
                return (0, Ey.E)([t], [n])
            }

            function A3(t, n) {
                return xS.apply(this, arguments)
            }

            function xS() {
                return (xS = (0, ut.Z)(function*(t, {
                    address: n,
                    abi: e,
                    args: i,
                    eventName: s,
                    fromBlock: r,
                    strict: l,
                    toBlock: u
                }) {
                    const h = By(t, {
                            method: "eth_newFilter"
                        }),
                        v = s ? vp({
                            abi: e,
                            args: i,
                            eventName: s
                        }) : void 0,
                        _ = yield t.request({
                            method: "eth_newFilter",
                            params: [{
                                address: n,
                                fromBlock: "bigint" == typeof r ? (0, ki.eC)(r) : r,
                                toBlock: "bigint" == typeof u ? (0, ki.eC)(u) : u,
                                topics: v
                            }]
                        });
                    return {
                        abi: e,
                        args: i,
                        eventName: s,
                        id: _,
                        request: h(_),
                        strict: l,
                        type: "event"
                    }
                })).apply(this, arguments)
            }

            function k3(t) {
                return _S.apply(this, arguments)
            }

            function _S() {
                return (_S = (0, ut.Z)(function*(t, {
                    address: n,
                    args: e,
                    event: i,
                    events: s,
                    fromBlock: r,
                    strict: l,
                    toBlock: u
                } = {}) {
                    const h = s ? ? (i ? [i] : void 0),
                        v = By(t, {
                            method: "eth_newFilter"
                        });
                    let _ = [];
                    h && (_ = [h.flatMap(M => vp({
                        abi: [M],
                        eventName: M.name,
                        args: e
                    }))], i && (_ = _[0]));
                    const C = yield t.request({
                        method: "eth_newFilter",
                        params: [{
                            address: n,
                            fromBlock: "bigint" == typeof r ? (0, ki.eC)(r) : r,
                            toBlock: "bigint" == typeof u ? (0, ki.eC)(u) : u,
                            ..._.length ? {
                                topics: _
                            } : {}
                        }]
                    });
                    return {
                        abi: h,
                        args: e,
                        eventName: i ? i.name : void 0,
                        fromBlock: r,
                        id: C,
                        request: v(C),
                        strict: l,
                        toBlock: u,
                        type: "event"
                    }
                })).apply(this, arguments)
            }

            function E3(t) {
                return wS.apply(this, arguments)
            }

            function wS() {
                return (wS = (0, ut.Z)(function*(t) {
                    const n = By(t, {
                            method: "eth_newPendingTransactionFilter"
                        }),
                        e = yield t.request({
                            method: "eth_newPendingTransactionFilter"
                        });
                    return {
                        id: e,
                        request: n(e),
                        type: "transaction"
                    }
                })).apply(this, arguments)
            }
            var Vy = I(660);

            function CS() {
                return (CS = (0, ut.Z)(function*(t, {
                    abi: n,
                    address: e,
                    args: i,
                    functionName: s,
                    ...r
                }) {
                    const l = (0, mp.R)({
                        abi: n,
                        args: i,
                        functionName: s
                    });
                    try {
                        return yield(0, Xn.s)(t, Y1, "estimateGas")({
                            data: l,
                            to: e,
                            ...r
                        })
                    } catch (u) {
                        const h = r.account ? (0, vl.T)(r.account) : void 0;
                        throw (0, Vy.S)(u, {
                            abi: n,
                            address: e,
                            args: i,
                            docsPath: "/docs/contract/estimateContractGas",
                            functionName: s,
                            sender: h ? .address
                        })
                    }
                })).apply(this, arguments)
            }

            function SS() {
                return (SS = (0, ut.Z)(function*(t, {
                    address: n,
                    blockNumber: e,
                    blockTag: i = "latest"
                }) {
                    const s = e ? (0, ki.eC)(e) : void 0,
                        r = yield t.request({
                            method: "eth_getBalance",
                            params: [n, s || i]
                        });
                    return BigInt(r)
                })).apply(this, arguments)
            }
            const ace = new Map,
                oce = new Map;

            function TS() {
                return (TS = (0, ut.Z)(function*(t, {
                    cacheKey: n,
                    cacheTime: e = 1 / 0
                }) {
                    const i = function lce(t) {
                            const n = (s, r) => ({
                                    clear: () => r.delete(s),
                                    get: () => r.get(s),
                                    set: l => r.set(s, l)
                                }),
                                e = n(t, ace),
                                i = n(t, oce);
                            return {
                                clear: () => {
                                    e.clear(), i.clear()
                                },
                                promise: e,
                                response: i
                            }
                        }(n),
                        s = i.response.get();
                    if (s && e > 0 && (new Date).getTime() - s.created.getTime() < e) return s.data;
                    let r = i.promise.get();
                    r || (r = t(), i.promise.set(r));
                    try {
                        const l = yield r;
                        return i.response.set({
                            created: new Date,
                            data: l
                        }), l
                    } finally {
                        i.promise.clear()
                    }
                })).apply(this, arguments)
            }
            const M3 = t => `blockNumber.${t}`;

            function yp(t) {
                return DS.apply(this, arguments)
            }

            function DS() {
                return DS = (0, ut.Z)(function*(t, {
                    cacheTime: n = t.cacheTime,
                    maxAge: e
                } = {}) {
                    const i = yield function cce(t, n) {
                        return TS.apply(this, arguments)
                    }(() => t.request({
                        method: "eth_blockNumber"
                    }), {
                        cacheKey: M3(t.uid),
                        cacheTime: e ? ? n
                    });
                    return BigInt(i)
                }), DS.apply(this, arguments)
            }

            function AS() {
                return (AS = (0, ut.Z)(function*(t, {
                    blockHash: n,
                    blockNumber: e,
                    blockTag: i = "latest"
                } = {}) {
                    const s = void 0 !== e ? (0, ki.eC)(e) : void 0;
                    let r;
                    return r = n ? yield t.request({
                        method: "eth_getBlockTransactionCountByHash",
                        params: [n]
                    }): yield t.request({
                        method: "eth_getBlockTransactionCountByNumber",
                        params: [s || i]
                    }), (0, to.ly)(r)
                })).apply(this, arguments)
            }

            function kS() {
                return (kS = (0, ut.Z)(function*(t, {
                    address: n,
                    blockNumber: e,
                    blockTag: i = "latest"
                }) {
                    const s = void 0 !== e ? (0, ki.eC)(e) : void 0,
                        r = yield t.request({
                            method: "eth_getCode",
                            params: [n, s || i]
                        });
                    if ("0x" !== r) return r
                })).apply(this, arguments)
            }
            var P3 = I(5777);
            const O3 = "/docs/contract/decodeEventLog";

            function bp({
                abi: t,
                data: n,
                strict: e,
                topics: i
            }) {
                const s = e ? ? !0,
                    [r, ...l] = i;
                if (!r) throw new ps.FM({
                    docsPath: O3
                });
                const u = t.find(j => "event" === j.type && r === (0, C3.e)((0, S3.t)(j)));
                if (!u || !("name" in u) || "event" !== u.type) throw new ps.lC(r, {
                    docsPath: O3
                });
                const {
                    name: h,
                    inputs: v
                } = u, _ = v ? .some(j => !("name" in j && j.name));
                let C = _ ? [] : {};
                const M = v.filter(j => "indexed" in j && j.indexed);
                for (let j = 0; j < M.length; j++) {
                    const Z = M[j],
                        Q = l[j];
                    if (!Q) throw new ps.Gy({
                        abiItem: u,
                        param: Z
                    });
                    C[Z.name || j] = hce({
                        param: Z,
                        value: Q
                    })
                }
                const L = v.filter(j => !("indexed" in j && j.indexed));
                if (L.length > 0)
                    if (n && "0x" !== n) try {
                        const j = (0, P3.r)(L, n);
                        if (j)
                            if (_) C = [...C, ...j];
                            else
                                for (let Z = 0; Z < L.length; Z++) C[L[Z].name] = j[Z]
                    } catch (j) {
                        if (s) throw j instanceof ps.xB ? new ps.SM({
                            abiItem: u,
                            data: j.data,
                            params: j.params,
                            size: j.size
                        }) : j
                    } else if (s) throw new ps.SM({
                        abiItem: u,
                        data: "0x",
                        params: L,
                        size: 0
                    });
                return {
                    eventName: h,
                    args: Object.values(C).length > 0 ? C : void 0
                }
            }

            function hce({
                param: t,
                value: n
            }) {
                return "string" === t.type || "bytes" === t.type || "tuple" === t.type || t.type.match(/^(.*)\[(\d+)?\]$/) ? n : ((0, P3.r)([t], n) || [])[0]
            }

            function io(t, {
                args: n,
                eventName: e
            } = {}) {
                return { ...t,
                    blockHash: t.blockHash ? t.blockHash : null,
                    blockNumber: t.blockNumber ? BigInt(t.blockNumber) : null,
                    logIndex: t.logIndex ? Number(t.logIndex) : null,
                    transactionHash: t.transactionHash ? t.transactionHash : null,
                    transactionIndex: t.transactionIndex ? Number(t.transactionIndex) : null,
                    ...e ? {
                        args: n,
                        eventName: e
                    } : {}
                }
            }

            function ES(t) {
                return MS.apply(this, arguments)
            }

            function MS() {
                return (MS = (0, ut.Z)(function*(t, {
                    address: n,
                    blockHash: e,
                    fromBlock: i,
                    toBlock: s,
                    event: r,
                    events: l,
                    args: u,
                    strict: h
                } = {}) {
                    const v = h ? ? !1,
                        _ = l ? ? (r ? [r] : void 0);
                    let M, C = [];
                    return _ && (C = [_.flatMap(L => vp({
                        abi: [L],
                        eventName: L.name,
                        args: u
                    }))], r && (C = C[0])), M = e ? yield t.request({
                        method: "eth_getLogs",
                        params: [{
                            address: n,
                            topics: C,
                            blockHash: e
                        }]
                    }): yield t.request({
                        method: "eth_getLogs",
                        params: [{
                            address: n,
                            topics: C,
                            fromBlock: "bigint" == typeof i ? (0, ki.eC)(i) : i,
                            toBlock: "bigint" == typeof s ? (0, ki.eC)(s) : s
                        }]
                    }), M.map(L => {
                        try {
                            const {
                                eventName: j,
                                args: Z
                            } = _ ? bp({
                                abi: _,
                                data: L.data,
                                topics: L.topics,
                                strict: v
                            }) : {
                                eventName: void 0,
                                args: void 0
                            };
                            return io(L, {
                                args: Z,
                                eventName: j
                            })
                        } catch (j) {
                            let Z, Q;
                            if (j instanceof ps.SM || j instanceof ps.Gy) {
                                if (v) return;
                                Z = j.abiItem.name, Q = j.abiItem.inputs ? .some(Ae => !("name" in Ae && Ae.name))
                            }
                            return io(L, {
                                args: Q ? [] : {},
                                eventName: Z
                            })
                        }
                    }).filter(Boolean)
                })).apply(this, arguments)
            }

            function I3(t, n) {
                return PS.apply(this, arguments)
            }

            function PS() {
                return (PS = (0, ut.Z)(function*(t, {
                    abi: n,
                    address: e,
                    args: i,
                    blockHash: s,
                    eventName: r,
                    fromBlock: l,
                    toBlock: u,
                    strict: h
                }) {
                    const v = r ? (0, T3.m)({
                            abi: n,
                            name: r
                        }) : void 0,
                        _ = v ? void 0 : n.filter(C => "event" === C.type);
                    return (0, Xn.s)(t, ES, "getLogs")({
                        address: e,
                        args: i,
                        blockHash: s,
                        event: v,
                        events: _,
                        fromBlock: l,
                        toBlock: u,
                        strict: h
                    })
                })).apply(this, arguments)
            }

            function OS() {
                return (OS = (0, ut.Z)(function*(t, {
                    blockCount: n,
                    blockNumber: e,
                    blockTag: i = "latest",
                    rewardPercentiles: s
                }) {
                    const r = e ? (0, ki.eC)(e) : void 0;
                    return function fce(t) {
                        return {
                            baseFeePerGas: t.baseFeePerGas.map(n => BigInt(n)),
                            gasUsedRatio: t.gasUsedRatio,
                            oldestBlock: BigInt(t.oldestBlock),
                            reward: t.reward ? .map(n => n.map(e => BigInt(e)))
                        }
                    }(yield t.request({
                        method: "eth_feeHistory",
                        params: [(0, ki.eC)(n), r || i, s]
                    }))
                })).apply(this, arguments)
            }

            function Hy(t, n) {
                return IS.apply(this, arguments)
            }

            function IS() {
                return (IS = (0, ut.Z)(function*(t, {
                    filter: n
                }) {
                    const e = "strict" in n && n.strict;
                    return (yield n.request({
                        method: "eth_getFilterChanges",
                        params: [n.id]
                    })).map(s => {
                        if ("string" == typeof s) return s;
                        try {
                            const {
                                eventName: r,
                                args: l
                            } = "abi" in n && n.abi ? bp({
                                abi: n.abi,
                                data: s.data,
                                topics: s.topics,
                                strict: e
                            }) : {
                                eventName: void 0,
                                args: void 0
                            };
                            return io(s, {
                                args: l,
                                eventName: r
                            })
                        } catch (r) {
                            let l, u;
                            if (r instanceof ps.SM || r instanceof ps.Gy) {
                                if ("strict" in n && n.strict) return;
                                l = r.abiItem.name, u = r.abiItem.inputs ? .some(h => !("name" in h && h.name))
                            }
                            return io(s, {
                                args: u ? [] : {},
                                eventName: l
                            })
                        }
                    }).filter(Boolean)
                })).apply(this, arguments)
            }

            function LS() {
                return (LS = (0, ut.Z)(function*(t, {
                    filter: n
                }) {
                    const e = n.strict ? ? !1;
                    return (yield n.request({
                        method: "eth_getFilterLogs",
                        params: [n.id]
                    })).map(s => {
                        try {
                            const {
                                eventName: r,
                                args: l
                            } = "abi" in n && n.abi ? bp({
                                abi: n.abi,
                                data: s.data,
                                topics: s.topics,
                                strict: e
                            }) : {
                                eventName: void 0,
                                args: void 0
                            };
                            return io(s, {
                                args: l,
                                eventName: r
                            })
                        } catch (r) {
                            let l, u;
                            if (r instanceof ps.SM || r instanceof ps.Gy) {
                                if ("strict" in n && n.strict) return;
                                l = r.abiItem.name, u = r.abiItem.inputs ? .some(h => !("name" in h && h.name))
                            }
                            return io(s, {
                                args: u ? [] : {},
                                eventName: l
                            })
                        }
                    }).filter(Boolean)
                })).apply(this, arguments)
            }

            function mce(t) {
                return t.map(n => ({ ...n,
                    value: BigInt(n.value)
                }))
            }

            function FS() {
                return (FS = (0, ut.Z)(function*(t, {
                    address: n,
                    blockNumber: e,
                    blockTag: i,
                    storageKeys: s
                }) {
                    const r = i ? ? "latest",
                        l = void 0 !== e ? (0, ki.eC)(e) : void 0;
                    return function vce(t) {
                        return { ...t,
                            balance: t.balance ? BigInt(t.balance) : void 0,
                            nonce: t.nonce ? (0, to.ly)(t.nonce) : void 0,
                            storageProof: t.storageProof ? mce(t.storageProof) : void 0
                        }
                    }(yield t.request({
                        method: "eth_getProof",
                        params: [n, s, l || r]
                    }))
                })).apply(this, arguments)
            }

            function NS() {
                return (NS = (0, ut.Z)(function*(t, {
                    address: n,
                    blockNumber: e,
                    blockTag: i = "latest",
                    slot: s
                }) {
                    const r = void 0 !== e ? (0, ki.eC)(e) : void 0;
                    return yield t.request({
                        method: "eth_getStorageAt",
                        params: [n, s, r || i]
                    })
                })).apply(this, arguments)
            }

            function RS(t, n) {
                return BS.apply(this, arguments)
            }

            function BS() {
                return (BS = (0, ut.Z)(function*(t, {
                    blockHash: n,
                    blockNumber: e,
                    blockTag: i,
                    hash: s,
                    index: r
                }) {
                    const l = i || "latest",
                        u = void 0 !== e ? (0, ki.eC)(e) : void 0;
                    let h = null;
                    if (s ? h = yield t.request({
                            method: "eth_getTransactionByHash",
                            params: [s]
                        }): n ? h = yield t.request({
                            method: "eth_getTransactionByBlockHashAndIndex",
                            params: [n, (0, ki.eC)(r)]
                        }): (u || l) && (h = yield t.request({
                            method: "eth_getTransactionByBlockNumberAndIndex",
                            params: [u || l, (0, ki.eC)(r)]
                        })), !h) throw new ic.Bh({
                        blockHash: n,
                        blockNumber: e,
                        blockTag: l,
                        hash: s,
                        index: r
                    });
                    return (t.chain ? .formatters ? .transaction ? .format || f3)(h)
                })).apply(this, arguments)
            }

            function VS() {
                return (VS = (0, ut.Z)(function*(t, {
                    hash: n,
                    transactionReceipt: e
                }) {
                    const [i, s] = yield Promise.all([(0, Xn.s)(t, yp, "getBlockNumber")({}), n ? (0, Xn.s)(t, RS, "getBlockNumber")({
                        hash: n
                    }) : void 0]), r = e ? .blockNumber || s ? .blockNumber;
                    return r ? i - r + 1 n : 0 n
                })).apply(this, arguments)
            }
            const _ce = {
                "0x0": "reverted",
                "0x1": "success"
            };

            function wce(t) {
                return { ...t,
                    blockNumber: t.blockNumber ? BigInt(t.blockNumber) : null,
                    contractAddress: t.contractAddress ? t.contractAddress : null,
                    cumulativeGasUsed: t.cumulativeGasUsed ? BigInt(t.cumulativeGasUsed) : null,
                    effectiveGasPrice: t.effectiveGasPrice ? BigInt(t.effectiveGasPrice) : null,
                    gasUsed: t.gasUsed ? BigInt(t.gasUsed) : null,
                    logs: t.logs ? t.logs.map(n => io(n)) : null,
                    to: t.to ? t.to : null,
                    transactionIndex: t.transactionIndex ? (0, to.ly)(t.transactionIndex) : null,
                    status: t.status ? _ce[t.status] : null,
                    type: t.type ? h3[t.type] || t.type : null
                }
            }

            function HS(t, n) {
                return zS.apply(this, arguments)
            }

            function zS() {
                return (zS = (0, ut.Z)(function*(t, {
                    hash: n
                }) {
                    const e = yield t.request({
                        method: "eth_getTransactionReceipt",
                        params: [n]
                    });
                    if (!e) throw new ic.Yb({
                        hash: n
                    });
                    return (t.chain ? .formatters ? .transactionReceipt ? .format || wce)(e)
                })).apply(this, arguments)
            }
            var L3 = I(7627),
                zy = I(8169),
                F3 = I(4963),
                Cce = I(1849),
                N3 = I(8347);

            function jS() {
                return (jS = (0, ut.Z)(function*(t, n) {
                    const {
                        allowFailure: e = !0,
                        batchSize: i,
                        blockNumber: s,
                        blockTag: r,
                        contracts: l,
                        multicallAddress: u
                    } = n, h = i ? ? ("object" == typeof t.batch ? .multicall && t.batch.multicall.batchSize || 1024);
                    let v = u;
                    if (!v) {
                        if (!t.chain) throw new Error("client chain not configured. multicallAddress is required.");
                        v = (0, Cce.L)({
                            blockNumber: s,
                            chain: t.chain,
                            contract: "multicall3"
                        })
                    }
                    const _ = [
                        []
                    ];
                    let C = 0,
                        M = 0;
                    for (let Z = 0; Z < l.length; Z++) {
                        const {
                            abi: Q,
                            address: Ae,
                            args: De,
                            functionName: Ue
                        } = l[Z];
                        try {
                            const it = (0, mp.R)({
                                abi: Q,
                                args: De,
                                functionName: Ue
                            });
                            M += (it.length - 2) / 2, h > 0 && M > h && _[C].length > 0 && (C++, M = (it.length - 2) / 2, _[C] = []), _[C] = [..._[C], {
                                allowFailure: !0,
                                callData: it,
                                target: Ae
                            }]
                        } catch (it) {
                            const lt = (0, Vy.S)(it, {
                                abi: Q,
                                address: Ae,
                                args: De,
                                docsPath: "/docs/contract/multicall",
                                functionName: Ue
                            });
                            if (!e) throw lt;
                            _[C] = [..._[C], {
                                allowFailure: !0,
                                callData: "0x",
                                target: Ae
                            }]
                        }
                    }
                    const L = yield Promise.allSettled(_.map(Z => (0, Xn.s)(t, N3.L, "readContract")({
                        abi: L3.F8,
                        address: v,
                        args: [Z],
                        blockNumber: s,
                        blockTag: r,
                        functionName: "aggregate3"
                    }))), j = [];
                    for (let Z = 0; Z < L.length; Z++) {
                        const Q = L[Z];
                        if ("rejected" === Q.status) {
                            if (!e) throw Q.reason;
                            for (let De = 0; De < _[Z].length; De++) j.push({
                                status: "failure",
                                error: Q.reason,
                                result: void 0
                            });
                            continue
                        }
                        const Ae = Q.value;
                        for (let De = 0; De < Ae.length; De++) {
                            const {
                                returnData: Ue,
                                success: it
                            } = Ae[De], {
                                callData: lt
                            } = _[Z][De], {
                                abi: ht,
                                address: Ht,
                                functionName: on,
                                args: hi
                            } = l[j.length];
                            try {
                                if ("0x" === lt) throw new ps.wb;
                                if (!it) throw new zy.VQ({
                                    data: Ue
                                });
                                const Ln = (0, F3.k)({
                                    abi: ht,
                                    args: hi,
                                    data: Ue,
                                    functionName: on
                                });
                                j.push(e ? {
                                    result: Ln,
                                    status: "success"
                                } : Ln)
                            } catch (Ln) {
                                const rn = (0, Vy.S)(Ln, {
                                    abi: ht,
                                    address: Ht,
                                    args: hi,
                                    docsPath: "/docs/contract/multicall",
                                    functionName: on
                                });
                                if (!e) throw rn;
                                j.push({
                                    error: rn,
                                    result: void 0,
                                    status: "failure"
                                })
                            }
                        }
                    }
                    if (j.length !== l.length) throw new Fo.G("multicall results mismatch");
                    return j
                })).apply(this, arguments)
            }

            function $S() {
                return ($S = (0, ut.Z)(function*(t, {
                    abi: n,
                    address: e,
                    args: i,
                    dataSuffix: s,
                    functionName: r,
                    ...l
                }) {
                    const u = l.account ? (0, vl.T)(l.account) : void 0,
                        h = (0, mp.R)({
                            abi: n,
                            args: i,
                            functionName: r
                        });
                    try {
                        const {
                            data: v
                        } = yield(0, Xn.s)(t, yS.R, "call")({
                            batch: !1,
                            data: `${h}${s?s.replace("0x",""):""}`,
                            to: e,
                            ...l
                        });
                        return {
                            result: (0, F3.k)({
                                abi: n,
                                args: i,
                                functionName: r,
                                data: v || "0x"
                            }),
                            request: {
                                abi: n,
                                address: e,
                                args: i,
                                dataSuffix: s,
                                functionName: r,
                                ...l
                            }
                        }
                    } catch (v) {
                        throw (0, Vy.S)(v, {
                            abi: n,
                            address: e,
                            args: i,
                            docsPath: "/docs/contract/simulateContract",
                            functionName: r,
                            sender: u ? .address
                        })
                    }
                })).apply(this, arguments)
            }

            function jy(t, n) {
                return US.apply(this, arguments)
            }

            function US() {
                return (US = (0, ut.Z)(function*(t, {
                    filter: n
                }) {
                    return n.request({
                        method: "eth_uninstallFilter",
                        params: [n.id]
                    })
                })).apply(this, arguments)
            }
            const Dce = "\x19Ethereum Signed Message:\n",
                kce = "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572";

            function z3(t, n) {
                return XS.apply(this, arguments)
            }

            function XS() {
                return (XS = (0, ut.Z)(function*(t, {
                    address: n,
                    hash: e,
                    signature: i,
                    ...s
                }) {
                    const r = (0, Iy.v)(i) ? i : (0, ki.NC)(i);
                    try {
                        const {
                            data: l
                        } = yield(0, Xn.s)(t, yS.R, "call")({
                            data: r3({
                                abi: L3.$o,
                                args: [n, e, r],
                                bytecode: kce
                            }),
                            ...s
                        });
                        return function Nce(t, n) {
                            return function Lce(t, n) {
                                if (t.length !== n.length) return !1;
                                for (let e = 0; e < t.length; e++)
                                    if (t[e] !== n[e]) return !1;
                                return !0
                            }((0, Iy.v)(t) ? (0, Wd.O0)(t) : t, (0, Iy.v)(n) ? (0, Wd.O0)(n) : n)
                        }(l ? ? "0x0", "0x1")
                    } catch (l) {
                        if (l instanceof zy.cg) return !1;
                        throw l
                    }
                })).apply(this, arguments)
            }

            function YS() {
                return (YS = (0, ut.Z)(function*(t, {
                    address: n,
                    message: e,
                    signature: i,
                    ...s
                }) {
                    const r = function Ace(t, n) {
                        const e = "string" == typeof t ? (0, Wd.qX)(t) : t.raw instanceof Uint8Array ? t.raw : (0, Wd.O0)(t.raw),
                            i = (0, Wd.qX)(`${Dce}${e.length}`);
                        return (0, yl.w)((0, N1.zo)([i, e]), n)
                    }(e);
                    return z3(t, {
                        address: n,
                        hash: r,
                        signature: i,
                        ...s
                    })
                })).apply(this, arguments)
            }

            function Bce({
                domain: t,
                message: n,
                primaryType: e,
                types: i
            }) {
                const s = typeof t > "u" ? {} : t,
                    r = {
                        EIP712Domain: lS({
                            domain: s
                        }),
                        ...i
                    };
                y3({
                    domain: s,
                    message: n,
                    primaryType: e,
                    types: r
                });
                const l = ["0x1901"];
                return s && l.push(function Vce({
                    domain: t,
                    types: n
                }) {
                    return j3({
                        data: t,
                        primaryType: "EIP712Domain",
                        types: n
                    })
                }({
                    domain: s,
                    types: r
                })), "EIP712Domain" !== e && l.push(j3({
                    data: n,
                    primaryType: e,
                    types: r
                })), (0, yl.w)((0, N1.zo)(l))
            }

            function j3({
                data: t,
                primaryType: n,
                types: e
            }) {
                const i = $3({
                    data: t,
                    primaryType: n,
                    types: e
                });
                return (0, yl.w)(i)
            }

            function $3({
                data: t,
                primaryType: n,
                types: e
            }) {
                const i = [{
                        type: "bytes32"
                    }],
                    s = [Hce({
                        primaryType: n,
                        types: e
                    })];
                for (const r of e[n]) {
                    const [l, u] = W3({
                        types: e,
                        name: r.name,
                        type: r.type,
                        value: t[r.name]
                    });
                    i.push(l), s.push(u)
                }
                return (0, Ey.E)(i, s)
            }

            function Hce({
                primaryType: t,
                types: n
            }) {
                const e = (0, ki.NC)(function zce({
                    primaryType: t,
                    types: n
                }) {
                    let e = "";
                    const i = U3({
                        primaryType: t,
                        types: n
                    });
                    i.delete(t);
                    const s = [t, ...Array.from(i).sort()];
                    for (const r of s) e += `${r}(${n[r].map(({name:l,type:u})=>`
                    $ {
                        u
                    }
                    $ {
                        l
                    }
                    `).join(",")})`;
                    return e
                }({
                    primaryType: t,
                    types: n
                }));
                return (0, yl.w)(e)
            }

            function U3({
                primaryType: t,
                types: n
            }, e = new Set) {
                const s = t.match(/^\w*/u) ? .[0];
                if (e.has(s) || void 0 === n[s]) return e;
                e.add(s);
                for (const r of n[s]) U3({
                    primaryType: r.type,
                    types: n
                }, e);
                return e
            }

            function W3({
                types: t,
                name: n,
                type: e,
                value: i
            }) {
                if (void 0 !== t[e]) return [{
                    type: "bytes32"
                }, (0, yl.w)($3({
                    data: i,
                    primaryType: e,
                    types: t
                }))];
                if ("bytes" === e) return i = "0x" + (i.length % 2 ? "0" : "") + i.slice(2), [{
                    type: "bytes32"
                }, (0, yl.w)(i)];
                if ("string" === e) return [{
                    type: "bytes32"
                }, (0, yl.w)((0, ki.NC)(i))];
                if (e.lastIndexOf("]") === e.length - 1) {
                    const s = e.slice(0, e.lastIndexOf("[")),
                        r = i.map(l => W3({
                            name: n,
                            type: s,
                            types: t,
                            value: l
                        }));
                    return [{
                        type: "bytes32"
                    }, (0, yl.w)((0, Ey.E)(r.map(([l]) => l), r.map(([, l]) => l)))]
                }
                return [{
                    type: e
                }, i]
            }

            function qS() {
                return (qS = (0, ut.Z)(function*(t, {
                    address: n,
                    signature: e,
                    message: i,
                    primaryType: s,
                    types: r,
                    domain: l,
                    ...u
                }) {
                    return z3(t, {
                        address: n,
                        hash: Bce({
                            message: i,
                            primaryType: s,
                            types: r,
                            domain: l
                        }),
                        signature: e,
                        ...u
                    })
                })).apply(this, arguments)
            }
            BigInt(0), BigInt(1), BigInt(2);
            const ZS = new Map,
                G3 = new Map;
            let $ce = 0;

            function Gd(t, n, e) {
                const i = ++$ce,
                    s = () => ZS.get(t) || [],
                    l = () => {
                        const _ = G3.get(t);
                        1 === s().length && _ && _(), (() => {
                            const _ = s();
                            ZS.set(t, _.filter(C => C.id !== i))
                        })()
                    },
                    u = s();
                if (ZS.set(t, [...u, {
                        id: i,
                        fns: n
                    }]), u && u.length > 0) return l;
                const h = {};
                for (const _ in n) h[_] = (...C) => {
                    const M = s();
                    if (0 !== M.length)
                        for (const L of M) L.fns[_] ? .(...C)
                };
                const v = e(h);
                return "function" == typeof v && G3.set(t, v), l
            }

            function xp(t, {
                emitOnBegin: n,
                initialWaitTime: e,
                interval: i
            }) {
                let s = !0;
                const r = () => s = !1;
                return function() {
                    var u = (0, ut.Z)(function*() {
                        let h;
                        n && (h = yield t({
                            unpoll: r
                        }));
                        const v = (yield e ? .(h)) ? ? i;
                        yield Ly(v);
                        const _ = function() {
                            var C = (0, ut.Z)(function*() {
                                s && (yield t({
                                    unpoll: r
                                }), yield Ly(i), _())
                            });
                            return function() {
                                return C.apply(this, arguments)
                            }
                        }();
                        _()
                    });
                    return function() {
                        return u.apply(this, arguments)
                    }
                }()(), r
            }

            function X3(t, {
                emitOnBegin: n = !1,
                emitMissed: e = !1,
                onBlockNumber: i,
                onError: s,
                poll: r,
                pollingInterval: l = t.pollingInterval
            }) {
                let h;
                return (typeof r < "u" ? r : "webSocket" !== t.transport.type) ? Gd((0, No.P)(["watchBlockNumber", t.uid, n, e, l]), {
                    onBlockNumber: i,
                    onError: s
                }, M => xp((0, ut.Z)(function*() {
                    try {
                        const L = yield(0, Xn.s)(t, yp, "getBlockNumber")({
                            cacheTime: 0
                        });
                        if (h) {
                            if (L === h) return;
                            if (L - h > 1 && e)
                                for (let j = h + 1 n; j < L; j++) M.onBlockNumber(j, h), h = j
                        }(!h || L > h) && (M.onBlockNumber(L, h), h = L)
                    } catch (L) {
                        M.onError ? .(L)
                    }
                }), {
                    emitOnBegin: n,
                    interval: l
                })) : (() => {
                    let C = !0,
                        M = () => C = !1;
                    return (0, ut.Z)(function*() {
                        try {
                            const {
                                unsubscribe: L
                            } = yield t.transport.subscribe({
                                params: ["newHeads"],
                                onData(j) {
                                    if (!C) return;
                                    const Z = (0, to.y_)(j.result ? .number);
                                    i(Z, h), h = Z
                                },
                                onError(j) {
                                    s ? .(j)
                                }
                            });
                            M = L, C || M()
                        } catch (L) {
                            s ? .(L)
                        }
                    })(), M
                })()
            }

            function KS() {
                return (KS = (0, ut.Z)(function*(t, {
                    confirmations: n = 1,
                    hash: e,
                    onReplaced: i,
                    pollingInterval: s = t.pollingInterval,
                    timeout: r
                }) {
                    const l = (0, No.P)(["waitForTransactionReceipt", t.uid, e]);
                    let u, h, v, _ = !1;
                    return new Promise((C, M) => {
                        r && setTimeout(() => M(new ic.mc({
                            hash: e
                        })), r);
                        const L = Gd(l, {
                            onReplaced: i,
                            resolve: C,
                            reject: M
                        }, j => {
                            const Z = (0, Xn.s)(t, X3, "watchBlockNumber")({
                                emitMissed: !0,
                                emitOnBegin: !0,
                                poll: !0,
                                pollingInterval: s,
                                onBlockNumber: Q => (0, ut.Z)(function*() {
                                    if (_) return;
                                    let Ae = Q;
                                    const De = Ue => {
                                        Z(), Ue(), L()
                                    };
                                    try {
                                        if (v) {
                                            if (n > 1 && (!v.blockNumber || Ae - v.blockNumber + 1 n < n)) return;
                                            return void De(() => j.resolve(v))
                                        }
                                        if (u || (_ = !0, yield pS((0, ut.Z)(function*() {
                                                u = yield(0, Xn.s)(t, RS, "getTransaction")({
                                                    hash: e
                                                }), u.blockNumber && (Ae = u.blockNumber)
                                            }), {
                                                delay: ({
                                                    count: Ue
                                                }) => 200 * ~~(1 << Ue),
                                                retryCount: 6
                                            }), _ = !1), v = yield(0, Xn.s)(t, HS, "getTransactionReceipt")({
                                                hash: e
                                            }), n > 1 && (!v.blockNumber || Ae - v.blockNumber + 1 n < n)) return;
                                        De(() => j.resolve(v))
                                    } catch (Ue) {
                                        if (u && (Ue instanceof ic.Bh || Ue instanceof ic.Yb)) try {
                                            h = u, _ = !0;
                                            const it = yield pS(() => (0, Xn.s)(t, sc, "getBlock")({
                                                blockNumber: Ae,
                                                includeTransactions: !0
                                            }), {
                                                delay: ({
                                                    count: Ht
                                                }) => 200 * ~~(1 << Ht),
                                                retryCount: 6,
                                                shouldRetry: ({
                                                    error: Ht
                                                }) => Ht instanceof d3
                                            });
                                            _ = !1;
                                            const lt = it.transactions.find(({
                                                from: Ht,
                                                nonce: on
                                            }) => Ht === h.from && on === h.nonce);
                                            if (!lt || (v = yield(0, Xn.s)(t, HS, "getTransactionReceipt")({
                                                    hash: lt.hash
                                                }), n > 1 && (!v.blockNumber || Ae - v.blockNumber + 1 n < n))) return;
                                            let ht = "replaced";
                                            lt.to === h.to && lt.value === h.value ? ht = "repriced" : lt.from === lt.to && 0 n === lt.value && (ht = "cancelled"), De(() => {
                                                j.onReplaced ? .({
                                                    reason: ht,
                                                    replacedTransaction: h,
                                                    transaction: lt,
                                                    transactionReceipt: v
                                                }), j.resolve(v)
                                            })
                                        } catch (it) {
                                            De(() => j.reject(it))
                                        } else De(() => j.reject(Ue))
                                    }
                                })()
                            })
                        })
                    })
                })).apply(this, arguments)
            }

            function qce(t) {
                return {
                    call: n => (0, yS.R)(t, n),
                    createBlockFilter: () => function nce(t) {
                        return bS.apply(this, arguments)
                    }(t),
                    createContractEventFilter: n => A3(t, n),
                    createEventFilter: n => k3(t, n),
                    createPendingTransactionFilter: () => E3(t),
                    estimateContractGas: n => function sce(t, n) {
                        return CS.apply(this, arguments)
                    }(t, n),
                    estimateGas: n => Y1(t, n),
                    getBalance: n => function rce(t, n) {
                        return SS.apply(this, arguments)
                    }(t, n),
                    getBlock: n => sc(t, n),
                    getBlockNumber: n => yp(t, n),
                    getBlockTransactionCount: n => function uce(t) {
                        return AS.apply(this, arguments)
                    }(t, n),
                    getBytecode: n => function dce(t, n) {
                        return kS.apply(this, arguments)
                    }(t, n),
                    getChainId: () => gp(t),
                    getContractEvents: n => I3(t, n),
                    getEnsAddress: n => (0, Kle.O)(t, n),
                    getEnsAvatar: n => (0, Qle.r)(t, n),
                    getEnsName: n => (0, Jle.w)(t, n),
                    getEnsResolver: n => (0, ece.S)(t, n),
                    getEnsText: n => (0, tce.g)(t, n),
                    getFeeHistory: n => function pce(t, n) {
                        return OS.apply(this, arguments)
                    }(t, n),
                    estimateFeesPerGas: n => function kle(t, n) {
                        return W1.apply(this, arguments)
                    }(t, n),
                    getFilterChanges: n => Hy(t, n),
                    getFilterLogs: n => function gce(t, n) {
                        return LS.apply(this, arguments)
                    }(t, n),
                    getGasPrice: () => z1(t),
                    getLogs: n => ES(t, n),
                    getProof: n => function yce(t, n) {
                        return FS.apply(this, arguments)
                    }(t, n),
                    estimateMaxPriorityFeePerGas: n => function Ale(t, n) {
                        return $1.apply(this, arguments)
                    }(t, n),
                    getStorageAt: n => function bce(t, n) {
                        return NS.apply(this, arguments)
                    }(t, n),
                    getTransaction: n => RS(t, n),
                    getTransactionConfirmations: n => function xce(t, n) {
                        return VS.apply(this, arguments)
                    }(t, n),
                    getTransactionCount: n => m3(t, n),
                    getTransactionReceipt: n => HS(t, n),
                    multicall: n => function Sce(t, n) {
                        return jS.apply(this, arguments)
                    }(t, n),
                    prepareTransactionRequest: n => Oy(t, n),
                    readContract: n => (0, N3.L)(t, n),
                    sendRawTransaction: n => Q1(t, n),
                    simulateContract: n => function Tce(t, n) {
                        return $S.apply(this, arguments)
                    }(t, n),
                    verifyMessage: n => function Rce(t, n) {
                        return YS.apply(this, arguments)
                    }(t, n),
                    verifyTypedData: n => function jce(t, n) {
                        return qS.apply(this, arguments)
                    }(t, n),
                    uninstallFilter: n => jy(t, n),
                    waitForTransactionReceipt: n => function Uce(t, n) {
                        return KS.apply(this, arguments)
                    }(t, n),
                    watchBlocks: n => function Wce(t, {
                        blockTag: n = "latest",
                        emitMissed: e = !1,
                        emitOnBegin: i = !1,
                        onBlock: s,
                        onError: r,
                        includeTransactions: l,
                        poll: u,
                        pollingInterval: h = t.pollingInterval
                    }) {
                        const _ = l ? ? !1;
                        let C;
                        return (typeof u < "u" ? u : "webSocket" !== t.transport.type) ? Gd((0, No.P)(["watchBlocks", t.uid, e, i, _, h]), {
                            onBlock: s,
                            onError: r
                        }, Z => xp((0, ut.Z)(function*() {
                            try {
                                const Q = yield(0, Xn.s)(t, sc, "getBlock")({
                                    blockTag: n,
                                    includeTransactions: _
                                });
                                if (Q.number && C ? .number) {
                                    if (Q.number === C.number) return;
                                    if (Q.number - C.number > 1 && e)
                                        for (let Ae = C ? .number + 1 n; Ae < Q.number; Ae++) {
                                            const De = yield(0, Xn.s)(t, sc, "getBlock")({
                                                blockNumber: Ae,
                                                includeTransactions: _
                                            });
                                            Z.onBlock(De, C), C = De
                                        }
                                }(!C ? .number || "pending" === n && !Q ? .number || Q.number && Q.number > C.number) && (Z.onBlock(Q, C), C = Q)
                            } catch (Q) {
                                Z.onError ? .(Q)
                            }
                        }), {
                            emitOnBegin: i,
                            interval: h
                        })) : (() => {
                            let j = !0,
                                Z = () => j = !1;
                            return (0, ut.Z)(function*() {
                                try {
                                    const {
                                        unsubscribe: Q
                                    } = yield t.transport.subscribe({
                                        params: ["newHeads"],
                                        onData(Ae) {
                                            if (!j) return;
                                            const Ue = (t.chain ? .formatters ? .block ? .format || p3)(Ae.result);
                                            s(Ue, C), C = Ue
                                        },
                                        onError(Ae) {
                                            r ? .(Ae)
                                        }
                                    });
                                    Z = Q, j || Z()
                                } catch (Q) {
                                    r ? .(Q)
                                }
                            })(), Z
                        })()
                    }(t, n),
                    watchBlockNumber: n => X3(t, n),
                    watchContractEvent: n => function Gce(t, {
                        abi: n,
                        address: e,
                        args: i,
                        batch: s = !0,
                        eventName: r,
                        onError: l,
                        onLogs: u,
                        poll: h,
                        pollingInterval: v = t.pollingInterval,
                        strict: _
                    }) {
                        return (typeof h < "u" ? h : "webSocket" !== t.transport.type) ? (() => {
                            const j = (0, No.P)(["watchContractEvent", e, i, s, t.uid, r, v]),
                                Z = _ ? ? !1;
                            return Gd(j, {
                                onLogs: u,
                                onError: l
                            }, Q => {
                                let Ae, De, Ue = !1;
                                const it = xp((0, ut.Z)(function*() {
                                    if (Ue) try {
                                        let lt;
                                        if (De) lt = yield(0, Xn.s)(t, Hy, "getFilterChanges")({
                                            filter: De
                                        });
                                        else {
                                            const ht = yield(0, Xn.s)(t, yp, "getBlockNumber")({});
                                            lt = Ae && Ae !== ht ? yield(0, Xn.s)(t, I3, "getContractEvents")({
                                                abi: n,
                                                address: e,
                                                args: i,
                                                eventName: r,
                                                fromBlock: Ae + 1 n,
                                                toBlock: ht,
                                                strict: Z
                                            }): [], Ae = ht
                                        }
                                        if (0 === lt.length) return;
                                        if (s) Q.onLogs(lt);
                                        else
                                            for (const ht of lt) Q.onLogs([ht])
                                    } catch (lt) {
                                        De && lt instanceof fn.yR && (Ue = !1), Q.onError ? .(lt)
                                    } else {
                                        try {
                                            De = yield(0, Xn.s)(t, A3, "createContractEventFilter")({
                                                abi: n,
                                                address: e,
                                                args: i,
                                                eventName: r,
                                                strict: Z
                                            })
                                        } catch {}
                                        Ue = !0
                                    }
                                }), {
                                    emitOnBegin: !0,
                                    interval: v
                                });
                                return (0, ut.Z)(function*() {
                                    De && (yield(0, Xn.s)(t, jy, "uninstallFilter")({
                                        filter: De
                                    })), it()
                                })
                            })
                        })() : (() => {
                            let j = !0,
                                Z = () => j = !1;
                            return (0, ut.Z)(function*() {
                                try {
                                    const Q = r ? vp({
                                            abi: n,
                                            eventName: r,
                                            args: i
                                        }) : [],
                                        {
                                            unsubscribe: Ae
                                        } = yield t.transport.subscribe({
                                            params: ["logs", {
                                                address: e,
                                                topics: Q
                                            }],
                                            onData(De) {
                                                if (!j) return;
                                                const Ue = De.result;
                                                try {
                                                    const {
                                                        eventName: it,
                                                        args: lt
                                                    } = bp({
                                                        abi: n,
                                                        data: Ue.data,
                                                        topics: Ue.topics,
                                                        strict: _
                                                    }), ht = io(Ue, {
                                                        args: lt,
                                                        eventName: it
                                                    });
                                                    u([ht])
                                                } catch (it) {
                                                    let lt, ht;
                                                    if (it instanceof ps.SM || it instanceof ps.Gy) {
                                                        if (_) return;
                                                        lt = it.abiItem.name, ht = it.abiItem.inputs ? .some(on => !("name" in on && on.name))
                                                    }
                                                    const Ht = io(Ue, {
                                                        args: ht ? [] : {},
                                                        eventName: lt
                                                    });
                                                    u([Ht])
                                                }
                                            },
                                            onError(De) {
                                                l ? .(De)
                                            }
                                        });
                                    Z = Ae, j || Z()
                                } catch (Q) {
                                    l ? .(Q)
                                }
                            })(), Z
                        })()
                    }(t, n),
                    watchEvent: n => function Xce(t, {
                        address: n,
                        args: e,
                        batch: i = !0,
                        event: s,
                        events: r,
                        onError: l,
                        onLogs: u,
                        poll: h,
                        pollingInterval: v = t.pollingInterval,
                        strict: _
                    }) {
                        const M = _ ? ? !1;
                        return (typeof h < "u" ? h : "webSocket" !== t.transport.type) ? Gd((0, No.P)(["watchEvent", n, e, i, t.uid, s, v]), {
                            onLogs: u,
                            onError: l
                        }, Q => {
                            let Ae, De, Ue = !1;
                            const it = xp((0, ut.Z)(function*() {
                                if (Ue) try {
                                    let lt;
                                    if (De) lt = yield(0, Xn.s)(t, Hy, "getFilterChanges")({
                                        filter: De
                                    });
                                    else {
                                        const ht = yield(0, Xn.s)(t, yp, "getBlockNumber")({});
                                        lt = Ae && Ae !== ht ? yield(0, Xn.s)(t, ES, "getLogs")({
                                            address: n,
                                            args: e,
                                            event: s,
                                            events: r,
                                            fromBlock: Ae + 1 n,
                                            toBlock: ht
                                        }): [], Ae = ht
                                    }
                                    if (0 === lt.length) return;
                                    if (i) Q.onLogs(lt);
                                    else
                                        for (const ht of lt) Q.onLogs([ht])
                                } catch (lt) {
                                    De && lt instanceof fn.yR && (Ue = !1), Q.onError ? .(lt)
                                } else {
                                    try {
                                        De = yield(0, Xn.s)(t, k3, "createEventFilter")({
                                            address: n,
                                            args: e,
                                            event: s,
                                            events: r,
                                            strict: M
                                        })
                                    } catch {}
                                    Ue = !0
                                }
                            }), {
                                emitOnBegin: !0,
                                interval: v
                            });
                            return (0, ut.Z)(function*() {
                                De && (yield(0, Xn.s)(t, jy, "uninstallFilter")({
                                    filter: De
                                })), it()
                            })
                        }) : (() => {
                            let Z = !0,
                                Q = () => Z = !1;
                            return (0, ut.Z)(function*() {
                                try {
                                    const Ae = r ? ? (s ? [s] : void 0);
                                    let De = [];
                                    Ae && (De = [Ae.flatMap(it => vp({
                                        abi: [it],
                                        eventName: it.name,
                                        args: e
                                    }))], s && (De = De[0]));
                                    const {
                                        unsubscribe: Ue
                                    } = yield t.transport.subscribe({
                                        params: ["logs", {
                                            address: n,
                                            topics: De
                                        }],
                                        onData(it) {
                                            if (!Z) return;
                                            const lt = it.result;
                                            try {
                                                const {
                                                    eventName: ht,
                                                    args: Ht
                                                } = bp({
                                                    abi: Ae,
                                                    data: lt.data,
                                                    topics: lt.topics,
                                                    strict: M
                                                }), on = io(lt, {
                                                    args: Ht,
                                                    eventName: ht
                                                });
                                                u([on])
                                            } catch (ht) {
                                                let Ht, on;
                                                if (ht instanceof ps.SM || ht instanceof ps.Gy) {
                                                    if (_) return;
                                                    Ht = ht.abiItem.name, on = ht.abiItem.inputs ? .some(Ln => !("name" in Ln && Ln.name))
                                                }
                                                const hi = io(lt, {
                                                    args: on ? [] : {},
                                                    eventName: Ht
                                                });
                                                u([hi])
                                            }
                                        },
                                        onError(it) {
                                            l ? .(it)
                                        }
                                    });
                                    Q = Ue, Z || Q()
                                } catch (Ae) {
                                    l ? .(Ae)
                                }
                            })(), Q
                        })()
                    }(t, n),
                    watchPendingTransactions: n => function Yce(t, {
                        batch: n = !0,
                        onError: e,
                        onTransactions: i,
                        poll: s,
                        pollingInterval: r = t.pollingInterval
                    }) {
                        return (typeof s < "u" ? s : "webSocket" !== t.transport.type) ? Gd((0, No.P)(["watchPendingTransactions", t.uid, n, r]), {
                            onTransactions: i,
                            onError: e
                        }, _ => {
                            let C;
                            const M = xp((0, ut.Z)(function*() {
                                try {
                                    if (!C) try {
                                        return void(C = yield(0, Xn.s)(t, E3, "createPendingTransactionFilter")({}))
                                    } catch (j) {
                                        throw M(), j
                                    }
                                    const L = yield(0, Xn.s)(t, Hy, "getFilterChanges")({
                                        filter: C
                                    });
                                    if (0 === L.length) return;
                                    if (n) _.onTransactions(L);
                                    else
                                        for (const j of L) _.onTransactions([j])
                                } catch (L) {
                                    _.onError ? .(L)
                                }
                            }), {
                                emitOnBegin: !0,
                                interval: r
                            });
                            return (0, ut.Z)(function*() {
                                C && (yield(0, Xn.s)(t, jy, "uninstallFilter")({
                                    filter: C
                                })), M()
                            })
                        }) : (() => {
                            let v = !0,
                                _ = () => v = !1;
                            return (0, ut.Z)(function*() {
                                try {
                                    const {
                                        unsubscribe: C
                                    } = yield t.transport.subscribe({
                                        params: ["newPendingTransactions"],
                                        onData(M) {
                                            v && i([M.result])
                                        },
                                        onError(M) {
                                            e ? .(M)
                                        }
                                    });
                                    _ = C, v || _()
                                } catch (C) {
                                    e ? .(C)
                                }
                            })(), _
                        })()
                    }(t, n)
                }
            }

            function Y3(t) {
                const {
                    key: n = "public",
                    name: e = "Public Client"
                } = t;
                return s3({ ...t,
                    key: n,
                    name: e,
                    type: "publicClient"
                }).extend(qce)
            }

            function q3(t, n = {}) {
                const {
                    key: e = "fallback",
                    name: i = "Fallback",
                    rank: s = !1,
                    retryCount: r,
                    retryDelay: l
                } = n;
                return ({
                    chain: u,
                    pollingInterval: h = 4e3,
                    timeout: v
                }) => {
                    let _ = t,
                        C = () => {};
                    const M = Fy({
                        key: e,
                        name: i,
                        request: ({
                            method: L,
                            params: j
                        }) => (0, ut.Z)(function*() {
                            const Z = function() {
                                var Q = (0, ut.Z)(function*(Ae = 0) {
                                    const De = _[Ae]({
                                        chain: u,
                                        retryCount: 0,
                                        timeout: v
                                    });
                                    try {
                                        const Ue = yield De.request({
                                            method: L,
                                            params: j
                                        });
                                        return C({
                                            method: L,
                                            params: j,
                                            response: Ue,
                                            transport: De,
                                            status: "success"
                                        }), Ue
                                    } catch (Ue) {
                                        if (C({
                                                error: Ue,
                                                method: L,
                                                params: j,
                                                transport: De,
                                                status: "error"
                                            }), x3(Ue) || Ae === _.length - 1) throw Ue;
                                        return Z(Ae + 1)
                                    }
                                });
                                return function() {
                                    return Q.apply(this, arguments)
                                }
                            }();
                            return Z()
                        })(),
                        retryCount: r,
                        retryDelay: l,
                        type: "fallback"
                    }, {
                        onResponse: L => C = L,
                        transports: _.map(L => L({
                            chain: u,
                            retryCount: 0
                        }))
                    });
                    if (s) {
                        const L = "object" == typeof s ? s : {};
                        ! function Zce({
                            chain: t,
                            interval: n = 4e3,
                            onTransports: e,
                            sampleCount: i = 10,
                            timeout: s = 1e3,
                            transports: r,
                            weights: l = {}
                        }) {
                            const {
                                stability: u = .7,
                                latency: h = .3
                            } = l, v = [], _ = function() {
                                var C = (0, ut.Z)(function*() {
                                    const M = yield Promise.all(r.map(function() {
                                        var Z = (0, ut.Z)(function*(Q) {
                                            const Ae = Q({
                                                    chain: t,
                                                    retryCount: 0,
                                                    timeout: s
                                                }),
                                                De = Date.now();
                                            let Ue, it;
                                            try {
                                                yield Ae.request({
                                                    method: "net_listening"
                                                }), it = 1
                                            } catch {
                                                it = 0
                                            } finally {
                                                Ue = Date.now()
                                            }
                                            return {
                                                latency: Ue - De,
                                                success: it
                                            }
                                        });
                                        return function(Q) {
                                            return Z.apply(this, arguments)
                                        }
                                    }()));
                                    v.push(M), v.length > i && v.shift();
                                    const L = Math.max(...v.map(Z => Math.max(...Z.map(({
                                            latency: Q
                                        }) => Q)))),
                                        j = r.map((Z, Q) => {
                                            const Ae = v.map(ht => ht[Q].latency),
                                                Ue = 1 - Ae.reduce((ht, Ht) => ht + Ht, 0) / Ae.length / L,
                                                it = v.map(ht => ht[Q].success),
                                                lt = it.reduce((ht, Ht) => ht + Ht, 0) / it.length;
                                            return 0 === lt ? [0, Q] : [h * Ue + u * lt, Q]
                                        }).sort((Z, Q) => Q[0] - Z[0]);
                                    e(j.map(([, Z]) => r[Z])), yield Ly(n), _()
                                });
                                return function() {
                                    return C.apply(this, arguments)
                                }
                            }();
                            _()
                        }({
                            chain: u,
                            interval: L.interval ? ? h,
                            onTransports: j => _ = j,
                            sampleCount: L.sampleCount,
                            timeout: L.timeout,
                            transports: _,
                            weights: L.weights
                        })
                    }
                    return M
                }
            }
            class Z3 extends Fo.G {
                constructor() {
                    super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.", {
                        docsPath: "/docs/clients/intro"
                    })
                }
            }
            var K3 = I(7447);
            const Q3 = function Kce() {
                if (typeof WebSocket < "u") return WebSocket;
                if (typeof global.WebSocket < "u") return global.WebSocket;
                if (typeof window.WebSocket < "u") return window.WebSocket;
                if (typeof self.WebSocket < "u") return self.WebSocket;
                throw new Error("`WebSocket` is not supported in this environment")
            }();

            function J3(t, {
                errorInstance: n = new Error("timed out"),
                timeout: e,
                signal: i
            }) {
                return new Promise((s, r) => {
                    (0, ut.Z)(function*() {
                        let l;
                        try {
                            const u = new AbortController;
                            e > 0 && (l = setTimeout(() => {
                                i ? u.abort() : r(n)
                            }, e)), s(yield t({
                                signal: u ? .signal
                            }))
                        } catch (u) {
                            "AbortError" === u.name && r(n), r(u)
                        } finally {
                            clearTimeout(l)
                        }
                    })()
                })
            }
            let QS = 0;

            function JS() {
                return JS = (0, ut.Z)(function*(t, {
                    body: n,
                    fetchOptions: e = {},
                    timeout: i = 1e4
                }) {
                    const {
                        headers: s,
                        method: r,
                        signal: l
                    } = e;
                    try {
                        const u = yield J3(function() {
                            var v = (0, ut.Z)(function*({
                                signal: _
                            }) {
                                return yield fetch(t, { ...e,
                                    body: Array.isArray(n) ? (0, No.P)(n.map(M => ({
                                        jsonrpc: "2.0",
                                        id: M.id ? ? QS++,
                                        ...M
                                    }))) : (0, No.P)({
                                        jsonrpc: "2.0",
                                        id: n.id ? ? QS++,
                                        ...n
                                    }),
                                    headers: { ...s,
                                        "Content-Type": "application/json"
                                    },
                                    method: r || "POST",
                                    signal: l || (i > 0 ? _ : void 0)
                                })
                            });
                            return function(_) {
                                return v.apply(this, arguments)
                            }
                        }(), {
                            errorInstance: new no.W5({
                                body: n,
                                url: t
                            }),
                            timeout: i,
                            signal: !0
                        });
                        let h;
                        if (h = u.headers.get("Content-Type") ? .startsWith("application/json") ? yield u.json(): yield u.text(), !u.ok) throw new no.Gg({
                            body: n,
                            details: (0, No.P)(h.error) || u.statusText,
                            headers: u.headers,
                            status: u.status,
                            url: t
                        });
                        return h
                    } catch (u) {
                        throw u instanceof no.Gg || u instanceof no.W5 ? u : new no.Gg({
                            body: n,
                            details: u.message,
                            url: t
                        })
                    }
                }), JS.apply(this, arguments)
            }
            const eT = new Map;

            function tT(t) {
                return nT.apply(this, arguments)
            }

            function nT() {
                return nT = (0, ut.Z)(function*(t) {
                    let n = eT.get(t);
                    if (n) return n;
                    const {
                        schedule: e
                    } = (0, K3.S)({
                        id: t,
                        fn: (r = (0, ut.Z)(function*() {
                            const l = new Q3(t),
                                u = new Map,
                                h = new Map,
                                v = ({
                                    data: C
                                }) => {
                                    const M = JSON.parse(C),
                                        L = "eth_subscription" === M.method,
                                        j = L ? M.params.subscription : M.id,
                                        Z = L ? h : u,
                                        Q = Z.get(j);
                                    Q && Q({
                                        data: C
                                    }), L || Z.delete(j)
                                },
                                _ = () => {
                                    eT.delete(t), l.removeEventListener("close", _), l.removeEventListener("message", v)
                                };
                            return l.addEventListener("close", _), l.addEventListener("message", v), l.readyState === Q3.CONNECTING && (yield new Promise((C, M) => {
                                l && (l.onopen = C, l.onerror = M)
                            })), n = Object.assign(l, {
                                requests: u,
                                subscriptions: h
                            }), eT.set(t, n), [n]
                        }), function() {
                            return r.apply(this, arguments)
                        })
                    }), [i, [s]] = yield e();
                    var r;
                    return s
                }), nT.apply(this, arguments)
            }

            function iT() {
                return (iT = (0, ut.Z)(function*(t, {
                    body: n,
                    timeout: e = 1e4
                }) {
                    return J3(() => new Promise(i => Xd.webSocket(t, {
                        body: n,
                        onResponse: i
                    })), {
                        errorInstance: new no.W5({
                            body: n,
                            url: t.url
                        }),
                        timeout: e
                    })
                })).apply(this, arguments)
            }
            const Xd = {
                http: function Qce(t, n) {
                    return JS.apply(this, arguments)
                },
                webSocket: function Jce(t, {
                    body: n,
                    onResponse: e
                }) {
                    if (t.readyState === t.CLOSED || t.readyState === t.CLOSING) throw new no.c9({
                        body: n,
                        url: t.url,
                        details: "Socket is closed."
                    });
                    const i = QS++,
                        s = ({
                            data: r
                        }) => {
                            const l = JSON.parse(r);
                            "number" == typeof l.id && i !== l.id || (e ? .(l), "eth_subscribe" === n.method && "string" == typeof l.result && t.subscriptions.set(l.result, s), "eth_unsubscribe" === n.method && t.subscriptions.delete(n.params ? .[0]))
                        };
                    return t.requests.set(i, s), t.send(JSON.stringify({
                        jsonrpc: "2.0",
                        ...n,
                        id: i
                    })), t
                },
                webSocketAsync: function eue(t, n) {
                    return iT.apply(this, arguments)
                }
            };
            var eB = I(9744);

            function rue(t, n) {
                let e;
                try {
                    e = t()
                } catch {
                    return
                }
                return {
                    getItem: s => {
                        var r;
                        const l = h => null === h ? null : JSON.parse(h, n ? .reviver),
                            u = null != (r = e.getItem(s)) ? r : null;
                        return u instanceof Promise ? u.then(l) : l(u)
                    },
                    setItem: (s, r) => e.setItem(s, JSON.stringify(r, n ? .replacer)),
                    removeItem: s => e.removeItem(s)
                }
            }
            const _p = t => n => {
                    try {
                        const e = t(n);
                        return e instanceof Promise ? e : {
                            then: i => _p(i)(e),
                            catch (i) {
                                return this
                            }
                        }
                    } catch (e) {
                        return {
                            then(i) {
                                return this
                            },
                            catch: i => _p(i)(e)
                        }
                    }
                },
                tB = t => {
                    let n;
                    const e = new Set,
                        i = (h, v) => {
                            const _ = "function" == typeof h ? h(n) : h;
                            if (!Object.is(_, n)) {
                                const C = n;
                                n = v ? ? ("object" != typeof _ || null === _) ? _ : Object.assign({}, n, _), e.forEach(M => M(n, C))
                            }
                        },
                        s = () => n,
                        u = {
                            setState: i,
                            getState: s,
                            subscribe: h => (e.add(h), () => e.delete(h)),
                            destroy: () => {
                                console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), e.clear()
                            }
                        };
                    return n = t(i, s, u), u
                };
            var iB = I(4102),
                cue = I(783);

            function aT(t, n) {
                if (Object.is(t, n)) return !0;
                if ("object" != typeof t || null === t || "object" != typeof n || null === n) return !1;
                if (t instanceof Map && n instanceof Map) {
                    if (t.size !== n.size) return !1;
                    for (const [i, s] of t)
                        if (!Object.is(s, n.get(i))) return !1;
                    return !0
                }
                if (t instanceof Set && n instanceof Set) {
                    if (t.size !== n.size) return !1;
                    for (const i of t)
                        if (!n.has(i)) return !1;
                    return !0
                }
                const e = Object.keys(t);
                if (e.length !== Object.keys(n).length) return !1;
                for (let i = 0; i < e.length; i++)
                    if (!Object.prototype.hasOwnProperty.call(n, e[i]) || !Object.is(t[e[i]], n[e[i]])) return !1;
                return !0
            }
            var due = class extends Error {
                    constructor({
                        activeChain: t,
                        targetChain: n
                    }) {
                        super(`Chain mismatch: Expected "${n}", received "${t}".`), this.name = "ChainMismatchError"
                    }
                },
                hue = class extends Error {
                    constructor({
                        chainId: t,
                        connectorId: n
                    }) {
                        super(`Chain "${t}" not configured${n?` for connector "${n}"`:""}.`), this.name = "ChainNotConfigured"
                    }
                },
                fue = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConnectorAlreadyConnectedError", this.message = "Connector already connected"
                    }
                },
                pue = class extends Error {
                    constructor() {
                        super(...arguments), this.name = "ConfigChainsNotFound", this.message = "No chains were found on the wagmi config. Some functions that require a chain may not work."
                    }
                },
                gue = class extends Error {
                    constructor({
                        connector: t
                    }) {
                        super(`"${t.name}" does not support programmatic chain switching.`), this.name = "SwitchChainNotSupportedError"
                    }
                },
                oT = (t, {
                    find: n,
                    replace: e
                }) => t && n(t) ? e(t) : "object" != typeof t ? t : Array.isArray(t) ? t.map(i => oT(i, {
                    find: n,
                    replace: e
                })) : t instanceof Object ? Object.entries(t).reduce((i, [s, r]) => ({ ...i,
                    [s]: oT(r, {
                        find: n,
                        replace: e
                    })
                }), {}) : t;

            function mue(t) {
                const n = JSON.parse(t);
                return oT(n, {
                    find: i => "string" == typeof i && i.startsWith("#bigint."),
                    replace: i => BigInt(i.replace("#bigint.", ""))
                })
            }

            function Gy(t) {
                return "number" == typeof t ? t : "wei" === t ? 0 : Math.abs(eB.Bd[t])
            }

            function rB(t, n) {
                return t.slice(0, n).join(".") || "."
            }

            function aB(t, n) {
                const {
                    length: e
                } = t;
                for (let i = 0; i < e; ++i)
                    if (t[i] === n) return i + 1;
                return 0
            }

            function bue(t, n, e, i) {
                return JSON.stringify(t, function yue(t, n) {
                    const e = "function" == typeof t,
                        i = "function" == typeof n,
                        s = [],
                        r = [];
                    return function(u, h) {
                        if ("object" == typeof h)
                            if (s.length) {
                                const v = aB(s, this);
                                0 === v ? s[s.length] = this : (s.splice(v), r.splice(v)), r[r.length] = u;
                                const _ = aB(s, h);
                                if (0 !== _) return i ? n.call(this, u, h, rB(r, _)) : `[ref=${rB(r,_)}]`
                            } else s[0] = h, r[0] = u;
                        return e ? t.call(this, u, h) : h
                    }
                }((s, r) => {
                    const l = "bigint" == typeof r ? `#bigint.${r.toString()}` : r;
                    return n ? .(s, l) || l
                }, i), e ? ? void 0)
            }
            var Yd, wp, lT, lB, cT, xue = {
                getItem: t => "",
                setItem: (t, n) => null,
                removeItem: t => null
            };

            function _ue({
                deserialize: t = mue,
                key: n = "wagmi",
                serialize: e = bue,
                storage: i
            }) {
                return { ...i,
                    getItem: (s, r = null) => {
                        const l = i.getItem(`${n}.${s}`);
                        try {
                            return l ? t(l) : r
                        } catch (u) {
                            return console.warn(u), r
                        }
                    },
                    setItem: (s, r) => {
                        if (null === r) i.removeItem(`${n}.${s}`);
                        else try {
                            i.setItem(`${n}.${s}`, e(r))
                        } catch (l) {
                            console.error(l)
                        }
                    },
                    removeItem: s => i.removeItem(`${n}.${s}`)
                }
            }

            function Cue(t) {
                const n = new class {
                    constructor({
                        autoConnect: t = !1,
                        connectors: n = [new w3],
                        publicClient: e,
                        storage: i = _ue({
                            storage: typeof window < "u" ? window.localStorage : xue
                        }),
                        logger: s = {
                            warn: console.warn
                        },
                        webSocketPublicClient: r
                    }) {
                        var l = this;
                        vS(this, lT), this.publicClients = new Map, this.webSocketPublicClients = new Map, vS(this, Yd, void 0), vS(this, wp, void 0), this.args = {
                            autoConnect: t,
                            connectors: n,
                            logger: s,
                            publicClient: e,
                            storage: i,
                            webSocketPublicClient: r
                        };
                        let h, u = "disconnected";
                        if (t) try {
                            const C = i.getItem("store") ? .state ? .data;
                            u = C ? .account ? "reconnecting" : "connecting", h = C ? .chain ? .id
                        } catch {}
                        const v = "function" == typeof n ? n() : n;
                        v.forEach(_ => _.setStorage(i)), this.store = (t => t ? tB(t) : tB)((t => (n, e, i) => {
                            const s = i.subscribe;
                            return i.subscribe = (l, u, h) => {
                                let v = l;
                                if (u) {
                                    const _ = h ? .equalityFn || Object.is;
                                    let C = l(i.getState());
                                    v = M => {
                                        const L = l(M);
                                        if (!_(C, L)) {
                                            const j = C;
                                            u(C = L, j)
                                        }
                                    }, h ? .fireImmediately && u(C, C)
                                }
                                return s(v)
                            }, t(n, e, i)
                        })(((t, n) => "getStorage" in n || "serialize" in n || "deserialize" in n ? (console.warn("[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead."), ((t, n) => (e, i, s) => {
                            let r = {
                                    getStorage: () => localStorage,
                                    serialize: JSON.stringify,
                                    deserialize: JSON.parse,
                                    partialize: Q => Q,
                                    version: 0,
                                    merge: (Q, Ae) => ({ ...Ae,
                                        ...Q
                                    }),
                                    ...n
                                },
                                l = !1;
                            const u = new Set,
                                h = new Set;
                            let v;
                            try {
                                v = r.getStorage()
                            } catch {}
                            if (!v) return t((...Q) => {
                                console.warn(`[zustand persist middleware] Unable to update item '${r.name}', the given storage is currently unavailable.`), e(...Q)
                            }, i, s);
                            const _ = _p(r.serialize),
                                C = () => {
                                    const Q = r.partialize({ ...i()
                                    });
                                    let Ae;
                                    const De = _({
                                        state: Q,
                                        version: r.version
                                    }).then(Ue => v.setItem(r.name, Ue)).catch(Ue => {
                                        Ae = Ue
                                    });
                                    if (Ae) throw Ae;
                                    return De
                                },
                                M = s.setState;
                            s.setState = (Q, Ae) => {
                                M(Q, Ae), C()
                            };
                            const L = t((...Q) => {
                                e(...Q), C()
                            }, i, s);
                            let j;
                            const Z = () => {
                                var Q;
                                if (!v) return;
                                l = !1, u.forEach(De => De(i()));
                                const Ae = (null == (Q = r.onRehydrateStorage) ? void 0 : Q.call(r, i())) || void 0;
                                return _p(v.getItem.bind(v))(r.name).then(De => {
                                    if (De) return r.deserialize(De)
                                }).then(De => {
                                    if (De) {
                                        if ("number" != typeof De.version || De.version === r.version) return De.state;
                                        if (r.migrate) return r.migrate(De.state, De.version);
                                        console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                                    }
                                }).then(De => {
                                    var Ue;
                                    return j = r.merge(De, null != (Ue = i()) ? Ue : L), e(j, !0), C()
                                }).then(() => {
                                    Ae ? .(j, void 0), l = !0, h.forEach(De => De(j))
                                }).catch(De => {
                                    Ae ? .(void 0, De)
                                })
                            };
                            return s.persist = {
                                setOptions: Q => {
                                    r = { ...r,
                                        ...Q
                                    }, Q.getStorage && (v = Q.getStorage())
                                },
                                clearStorage: () => {
                                    v ? .removeItem(r.name)
                                },
                                getOptions: () => r,
                                rehydrate: () => Z(),
                                hasHydrated: () => l,
                                onHydrate: Q => (u.add(Q), () => {
                                    u.delete(Q)
                                }),
                                onFinishHydration: Q => (h.add(Q), () => {
                                    h.delete(Q)
                                })
                            }, Z(), j || L
                        })(t, n)) : ((t, n) => (e, i, s) => {
                            let r = {
                                    storage: rue(() => localStorage),
                                    partialize: Z => Z,
                                    version: 0,
                                    merge: (Z, Q) => ({ ...Q,
                                        ...Z
                                    }),
                                    ...n
                                },
                                l = !1;
                            const u = new Set,
                                h = new Set;
                            let v = r.storage;
                            if (!v) return t((...Z) => {
                                console.warn(`[zustand persist middleware] Unable to update item '${r.name}', the given storage is currently unavailable.`), e(...Z)
                            }, i, s);
                            const _ = () => {
                                    const Z = r.partialize({ ...i()
                                    });
                                    return v.setItem(r.name, {
                                        state: Z,
                                        version: r.version
                                    })
                                },
                                C = s.setState;
                            s.setState = (Z, Q) => {
                                C(Z, Q), _()
                            };
                            const M = t((...Z) => {
                                e(...Z), _()
                            }, i, s);
                            let L;
                            const j = () => {
                                var Z, Q;
                                if (!v) return;
                                l = !1, u.forEach(De => {
                                    var Ue;
                                    return De(null != (Ue = i()) ? Ue : M)
                                });
                                const Ae = (null == (Q = r.onRehydrateStorage) ? void 0 : Q.call(r, null != (Z = i()) ? Z : M)) || void 0;
                                return _p(v.getItem.bind(v))(r.name).then(De => {
                                    if (De) {
                                        if ("number" != typeof De.version || De.version === r.version) return De.state;
                                        if (r.migrate) return r.migrate(De.state, De.version);
                                        console.error("State loaded from storage couldn't be migrated since no migrate function was provided")
                                    }
                                }).then(De => {
                                    var Ue;
                                    return L = r.merge(De, null != (Ue = i()) ? Ue : M), e(L, !0), _()
                                }).then(() => {
                                    Ae ? .(L, void 0), L = i(), l = !0, h.forEach(De => De(L))
                                }).catch(De => {
                                    Ae ? .(void 0, De)
                                })
                            };
                            return s.persist = {
                                setOptions: Z => {
                                    r = { ...r,
                                        ...Z
                                    }, Z.storage && (v = Z.storage)
                                },
                                clearStorage: () => {
                                    v ? .removeItem(r.name)
                                },
                                getOptions: () => r,
                                rehydrate: () => j(),
                                hasHydrated: () => l,
                                onHydrate: Z => (u.add(Z), () => {
                                    u.delete(Z)
                                }),
                                onFinishHydration: Z => (h.add(Z), () => {
                                    h.delete(Z)
                                })
                            }, r.skipHydration || j(), L || M
                        })(t, n))(() => ({
                            connectors: v,
                            publicClient: this.getPublicClient({
                                chainId: h
                            }),
                            status: u,
                            webSocketPublicClient: this.getWebSocketPublicClient({
                                chainId: h
                            })
                        }), {
                            name: "store",
                            storage: i,
                            partialize: _ => ({ ...t && {
                                    data: {
                                        account: _ ? .data ? .account,
                                        chain: _ ? .data ? .chain
                                    }
                                },
                                chains: _ ? .chains
                            }),
                            version: 2
                        }))), this.storage = i, Ry(this, wp, i ? .getItem("wallet")), ((t, n, e) => (gS(this, n, "access private method"), e))(0, lT, lB).call(this), t && typeof window < "u" && setTimeout((0, ut.Z)(function*() {
                            return yield l.autoConnect()
                        }), 0)
                    }
                    get chains() {
                        return this.store.getState().chains
                    }
                    get connectors() {
                        return this.store.getState().connectors
                    }
                    get connector() {
                        return this.store.getState().connector
                    }
                    get data() {
                        return this.store.getState().data
                    }
                    get error() {
                        return this.store.getState().error
                    }
                    get lastUsedChainId() {
                        return this.data ? .chain ? .id
                    }
                    get publicClient() {
                        return this.store.getState().publicClient
                    }
                    get status() {
                        return this.store.getState().status
                    }
                    get subscribe() {
                        return this.store.subscribe
                    }
                    get webSocketPublicClient() {
                        return this.store.getState().webSocketPublicClient
                    }
                    setState(t) {
                        const n = "function" == typeof t ? t(this.store.getState()) : t;
                        this.store.setState(n, !0)
                    }
                    clearState() {
                        this.setState(t => ({ ...t,
                            chains: void 0,
                            connector: void 0,
                            data: void 0,
                            error: void 0,
                            status: "disconnected"
                        }))
                    }
                    destroy() {
                        var t = this;
                        return (0, ut.Z)(function*() {
                            t.connector && (yield t.connector.disconnect ? .()), Ry(t, Yd, !1), t.clearState(), t.store.destroy()
                        })()
                    }
                    autoConnect() {
                        var t = this;
                        return (0, ut.Z)(function*() {
                            if (mS(t, Yd)) return;
                            Ry(t, Yd, !0), t.setState(i => ({ ...i,
                                status: i.data ? .account ? "reconnecting" : "connecting"
                            }));
                            const n = mS(t, wp) ? [...t.connectors].sort(i => i.id === mS(t, wp) ? -1 : 1) : t.connectors;
                            let e = !1;
                            for (const i of n) {
                                if (!i.ready || !i.isAuthorized || !(yield i.isAuthorized())) continue;
                                const r = yield i.connect();
                                t.setState(l => ({ ...l,
                                    connector: i,
                                    chains: i ? .chains,
                                    data: r,
                                    status: "connected"
                                })), e = !0;
                                break
                            }
                            return e || t.setState(i => ({ ...i,
                                data: void 0,
                                status: "disconnected"
                            })), Ry(t, Yd, !1), t.data
                        })()
                    }
                    setConnectors(t) {
                        this.args = { ...this.args,
                            connectors: t
                        };
                        const n = "function" == typeof t ? t() : t;
                        n.forEach(e => e.setStorage(this.args.storage)), this.setState(e => ({ ...e,
                            connectors: n
                        }))
                    }
                    getPublicClient({
                        chainId: t
                    } = {}) {
                        let n = this.publicClients.get(-1);
                        if (n && n ? .chain.id === t || (n = this.publicClients.get(t ? ? -1), n)) return n;
                        const {
                            publicClient: e
                        } = this.args;
                        return n = "function" == typeof e ? e({
                            chainId: t
                        }) : e, this.publicClients.set(t ? ? -1, n), n
                    }
                    setPublicClient(t) {
                        const n = this.data ? .chain ? .id;
                        this.args = { ...this.args,
                            publicClient: t
                        }, this.publicClients.clear(), this.setState(e => ({ ...e,
                            publicClient: this.getPublicClient({
                                chainId: n
                            })
                        }))
                    }
                    getWebSocketPublicClient({
                        chainId: t
                    } = {}) {
                        let n = this.webSocketPublicClients.get(-1);
                        if (n && n ? .chain.id === t || (n = this.webSocketPublicClients.get(t ? ? -1), n)) return n;
                        const {
                            webSocketPublicClient: e
                        } = this.args;
                        return n = "function" == typeof e ? e({
                            chainId: t
                        }) : e, n && this.webSocketPublicClients.set(t ? ? -1, n), n
                    }
                    setWebSocketPublicClient(t) {
                        const n = this.data ? .chain ? .id;
                        this.args = { ...this.args,
                            webSocketPublicClient: t
                        }, this.webSocketPublicClients.clear(), this.setState(e => ({ ...e,
                            webSocketPublicClient: this.getWebSocketPublicClient({
                                chainId: n
                            })
                        }))
                    }
                    setLastUsedConnector(t = null) {
                        this.storage ? .setItem("wallet", t)
                    }
                }(t);
                return cT = n, n
            }

            function Ss() {
                if (!cT) throw new Error("No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config");
                return cT
            }

            function uT() {
                return (uT = (0, ut.Z)(function*({
                    chainId: t,
                    connector: n
                }) {
                    const e = Ss(),
                        i = e.connector;
                    if (i && n.id === i.id) throw new fue;
                    try {
                        e.setState(r => ({ ...r,
                            status: "connecting"
                        }));
                        const s = yield n.connect({
                            chainId: t
                        });
                        return e.setLastUsedConnector(n.id), e.setState(r => ({ ...r,
                            connector: n,
                            chains: n ? .chains,
                            data: s,
                            status: "connected"
                        })), e.storage.setItem("connected", !0), { ...s,
                            connector: n
                        }
                    } catch (s) {
                        throw e.setState(r => ({ ...r,
                            status: r.connector ? "connected" : "disconnected"
                        })), s
                    }
                })).apply(this, arguments)
            }

            function dT() {
                return (dT = (0, ut.Z)(function*() {
                    const t = Ss();
                    t.connector && (yield t.connector.disconnect()), t.clearState(), t.storage.removeItem("connected")
                })).apply(this, arguments)
            }
            Yd = new WeakMap, wp = new WeakMap, lT = new WeakSet, lB = function() {
                const t = u => {
                        this.setState(h => ({ ...h,
                            data: { ...h.data,
                                ...u
                            }
                        }))
                    },
                    n = () => {
                        this.clearState()
                    },
                    e = u => {
                        this.setState(h => ({ ...h,
                            error: u
                        }))
                    };
                this.store.subscribe(({
                    connector: u
                }) => u, (u, h) => {
                    h ? .off ? .("change", t), h ? .off ? .("disconnect", n), h ? .off ? .("error", e), u && (u.on ? .("change", t), u.on ? .("disconnect", n), u.on ? .("error", e))
                });
                const {
                    publicClient: i,
                    webSocketPublicClient: s
                } = this.args;
                ("function" == typeof i || "function" == typeof s) && this.store.subscribe(({
                    data: u
                }) => u ? .chain ? .id, u => {
                    this.setState(h => ({ ...h,
                        publicClient: this.getPublicClient({
                            chainId: u
                        }),
                        webSocketPublicClient: this.getWebSocketPublicClient({
                            chainId: u
                        })
                    }))
                })
            };
            var cB = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }],
                uB = [{
                    type: "event",
                    name: "Approval",
                    inputs: [{
                        indexed: !0,
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "event",
                    name: "Transfer",
                    inputs: [{
                        indexed: !0,
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        name: "value",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "allowance",
                    stateMutability: "view",
                    inputs: [{
                        name: "owner",
                        type: "address"
                    }, {
                        name: "spender",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "approve",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "spender",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "balanceOf",
                    stateMutability: "view",
                    inputs: [{
                        name: "account",
                        type: "address"
                    }],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "decimals",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint8"
                    }]
                }, {
                    type: "function",
                    name: "name",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "symbol",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "bytes32"
                    }]
                }, {
                    type: "function",
                    name: "totalSupply",
                    stateMutability: "view",
                    inputs: [],
                    outputs: [{
                        name: "",
                        type: "uint256"
                    }]
                }, {
                    type: "function",
                    name: "transfer",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }, {
                    type: "function",
                    name: "transferFrom",
                    stateMutability: "nonpayable",
                    inputs: [{
                        name: "sender",
                        type: "address"
                    }, {
                        name: "recipient",
                        type: "address"
                    }, {
                        name: "amount",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bool"
                    }]
                }];

            function Bs({
                chainId: t
            } = {}) {
                const n = Ss();
                return t && n.getPublicClient({
                    chainId: t
                }) || n.publicClient
            }

            function su() {
                return fT.apply(this, arguments)
            }

            function fT() {
                return (fT = (0, ut.Z)(function*({
                    chainId: t
                } = {}) {
                    return (yield Ss().connector ? .getWalletClient ? .({
                        chainId: t
                    })) || null
                })).apply(this, arguments)
            }

            function so(t) {
                return pT.apply(this, arguments)
            }

            function pT() {
                return (pT = (0, ut.Z)(function*({
                    abi: t,
                    address: n,
                    args: e,
                    chainId: i,
                    dataSuffix: s,
                    functionName: r,
                    walletClient: l,
                    ...u
                }) {
                    const h = Bs({
                            chainId: i
                        }),
                        v = l ? ? (yield su({
                            chainId: i
                        }));
                    if (!v) throw new Lo;
                    i && Cp({
                        chainId: i
                    });
                    const {
                        account: _,
                        accessList: C,
                        blockNumber: M,
                        blockTag: L,
                        gas: j,
                        gasPrice: Z,
                        maxFeePerGas: Q,
                        maxPriorityFeePerGas: Ae,
                        nonce: De,
                        value: Ue
                    } = function vue(t) {
                        return {
                            accessList: t.accessList,
                            account: t.account,
                            blockNumber: t.blockNumber,
                            blockTag: t.blockTag,
                            data: t.data,
                            gas: t.gas,
                            gasPrice: t.gasPrice,
                            maxFeePerGas: t.maxFeePerGas,
                            maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                            nonce: t.nonce,
                            to: t.to,
                            value: t.value
                        }
                    }(u), {
                        result: it,
                        request: lt
                    } = yield h.simulateContract({
                        abi: t,
                        address: n,
                        functionName: r,
                        args: e,
                        account: _ || v.account,
                        accessList: C,
                        blockNumber: M,
                        blockTag: L,
                        dataSuffix: s,
                        gas: j,
                        gasPrice: Z,
                        maxFeePerGas: Q,
                        maxPriorityFeePerGas: Ae,
                        nonce: De,
                        value: Ue
                    });
                    return {
                        mode: "prepared",
                        request: { ...lt,
                            abi: t.filter(Ht => "name" in Ht && Ht.name === r),
                            chainId: i
                        },
                        result: it
                    }
                })).apply(this, arguments)
            }

            function gT() {
                return (gT = (0, ut.Z)(function*({
                    chainId: t,
                    contracts: n,
                    blockNumber: e,
                    blockTag: i,
                    ...s
                }) {
                    const r = Bs({
                        chainId: t
                    });
                    if (!r.chains) throw new pue;
                    if (t && r.chain.id !== t) throw new hue({
                        chainId: t
                    });
                    return r.multicall({
                        allowFailure: s.allowFailure ? ? !0,
                        blockNumber: e,
                        blockTag: i,
                        contracts: n
                    })
                })).apply(this, arguments)
            }

            function mT() {
                return (mT = (0, ut.Z)(function*({
                    address: t,
                    account: n,
                    chainId: e,
                    abi: i,
                    args: s,
                    functionName: r,
                    blockNumber: l,
                    blockTag: u
                }) {
                    return Bs({
                        chainId: e
                    }).readContract({
                        abi: i,
                        address: t,
                        account: n,
                        functionName: r,
                        args: s,
                        blockNumber: l,
                        blockTag: u
                    })
                })).apply(this, arguments)
            }

            function ru(t) {
                return vT.apply(this, arguments)
            }

            function vT() {
                return (vT = (0, ut.Z)(function*({
                    contracts: t,
                    blockNumber: n,
                    blockTag: e,
                    ...i
                }) {
                    const {
                        allowFailure: s = !0
                    } = i;
                    try {
                        const r = Bs(),
                            l = t.reduce((_, C, M) => {
                                const L = C.chainId ? ? r.chain.id;
                                return { ..._,
                                    [L]: [..._[L] || [], {
                                        contract: C,
                                        index: M
                                    }]
                                }
                            }, {}),
                            u = () => Object.entries(l).map(([_, C]) => function dB(t) {
                                return gT.apply(this, arguments)
                            }({
                                allowFailure: s,
                                chainId: parseInt(_),
                                contracts: C.map(({
                                    contract: M
                                }) => M),
                                blockNumber: n,
                                blockTag: e
                            })),
                            h = (yield Promise.all(u())).flat(),
                            v = Object.values(l).flatMap(_ => _.map(({
                                index: C
                            }) => C));
                        return h.reduce((_, C, M) => (_ && (_[v[M]] = C), _), [])
                    } catch (r) {
                        if (r instanceof zy.uq) throw r;
                        const l = () => t.map(u => function hB(t) {
                            return mT.apply(this, arguments)
                        }({ ...u,
                            blockNumber: n,
                            blockTag: e
                        }));
                        return s ? (yield Promise.allSettled(l())).map(u => "fulfilled" === u.status ? {
                            result: u.value,
                            status: "success"
                        } : {
                            error: u.reason,
                            result: void 0,
                            status: "failure"
                        }) : yield Promise.all(l())
                    }
                })).apply(this, arguments)
            }

            function Ro(t) {
                return bT.apply(this, arguments)
            }

            function bT() {
                return (bT = (0, ut.Z)(function*(t) {
                    const n = yield su({
                        chainId: t.chainId
                    });
                    if (!n) throw new Lo;
                    let e;
                    if (t.chainId && Cp({
                            chainId: t.chainId
                        }), "prepared" === t.mode) e = t.request;
                    else {
                        const {
                            chainId: s,
                            mode: r,
                            ...l
                        } = t;
                        e = (yield so(l)).request
                    }
                    return {
                        hash: yield n.writeContract({ ...e,
                            chain: t.chainId ? {
                                id: t.chainId
                            } : null
                        })
                    }
                })).apply(this, arguments)
            }

            function fB(t) {
                return xT.apply(this, arguments)
            }

            function xT() {
                return xT = (0, ut.Z)(function*({
                    address: t,
                    chainId: n,
                    formatUnits: e,
                    token: i
                }) {
                    const s = Ss(),
                        r = Bs({
                            chainId: n
                        });
                    if (i) {
                        const v = function() {
                            var _ = (0, ut.Z)(function*({
                                abi: C
                            }) {
                                const M = {
                                        abi: C,
                                        address: i,
                                        chainId: n
                                    },
                                    [L, j, Z] = yield ru({
                                        allowFailure: !1,
                                        contracts: [{ ...M,
                                            functionName: "balanceOf",
                                            args: [t]
                                        }, { ...M,
                                            functionName: "decimals"
                                        }, { ...M,
                                            functionName: "symbol"
                                        }]
                                    });
                                return {
                                    decimals: j,
                                    formatted: (0, iB.b)(L ? ? "0", Gy(e ? ? j)),
                                    symbol: Z,
                                    value: L
                                }
                            });
                            return function(M) {
                                return _.apply(this, arguments)
                            }
                        }();
                        try {
                            return yield v({
                                abi: cB
                            })
                        } catch (_) {
                            if (_ instanceof zy.uq) {
                                const {
                                    symbol: C,
                                    ...M
                                } = yield v({
                                    abi: uB
                                });
                                return {
                                    symbol: (0, to.rR)((0, cue.f)(C, {
                                        dir: "right"
                                    })),
                                    ...M
                                }
                            }
                            throw _
                        }
                    }
                    const l = [...s.publicClient.chains || [], ...s.chains ? ? []],
                        u = yield r.getBalance({
                            address: t
                        }), h = l.find(v => v.id === r.chain.id);
                    return {
                        decimals: h ? .nativeCurrency.decimals ? ? 18,
                        formatted: (0, iB.b)(u ? ? "0", Gy(e ? ? 18)),
                        symbol: h ? .nativeCurrency.symbol ? ? "ETH",
                        value: u
                    }
                }), xT.apply(this, arguments)
            }

            function pB() {
                const t = Ss(),
                    n = t.data ? .chain ? .id,
                    e = t.chains ? ? [],
                    i = [...t.publicClient ? .chains || [], ...e].find(s => s.id === n) ? ? {
                        id: n,
                        name: `Chain ${n}`,
                        network: `${n}`,
                        nativeCurrency: {
                            name: "Ether",
                            decimals: 18,
                            symbol: "ETH"
                        },
                        rpcUrls: {
                            default: {
                                http: [""]
                            },
                            public: {
                                http: [""]
                            }
                        }
                    };
                return {
                    chain: n ? { ...i,
                        ...t.data ? .chain,
                        id : n
                    } : void 0,
                    chains: e
                }
            }

            function CT() {
                return (CT = (0, ut.Z)(function*({
                    chainId: t
                }) {
                    const {
                        connector: n
                    } = Ss();
                    if (!n) throw new Lo;
                    if (!n.switchChain) throw new gue({
                        connector: n
                    });
                    return n.switchChain(t)
                })).apply(this, arguments)
            }

            function IT(t) {
                return LT.apply(this, arguments)
            }

            function LT() {
                return (LT = (0, ut.Z)(function*({
                    chainId: t,
                    confirmations: n = 1,
                    hash: e,
                    onReplaced: i,
                    timeout: s = 0
                }) {
                    const r = Bs({
                            chainId: t
                        }),
                        l = yield r.waitForTransactionReceipt({
                            hash: e,
                            confirmations: n,
                            onReplaced: i,
                            timeout: s
                        });
                    if ("reverted" === l.status) {
                        const u = yield r.getTransaction({
                            hash: l.transactionHash
                        }), h = yield r.call({ ...u,
                            gasPrice: "eip1559" !== u.type ? u.gasPrice : void 0,
                            maxFeePerGas: "eip1559" === u.type ? u.maxFeePerGas : void 0,
                            maxPriorityFeePerGas: "eip1559" === u.type ? u.maxPriorityFeePerGas : void 0
                        }), v = (0, to.rR)(`0x${h.substring(138)}`);
                        throw new Error(v)
                    }
                    return l
                })).apply(this, arguments)
            }

            function Cp({
                chainId: t
            }) {
                const {
                    chain: n,
                    chains: e
                } = pB(), i = n ? .id;
                if (i && t !== i) throw new due({
                    activeChain: e.find(s => s.id === i) ? .name ? ? `Chain ${i}`,
                    targetChain: e.find(s => s.id === t) ? .name ? ? `Chain ${t}`
                })
            }

            function gB({
                rpc: t
            }) {
                return function(n) {
                    const e = t(n);
                    return e && "" !== e.http ? {
                        chain: { ...n,
                            rpcUrls: { ...n.rpcUrls,
                                default: {
                                    http: [e.http]
                                }
                            }
                        },
                        rpcUrls: {
                            http: [e.http],
                            webSocket: e.webSocket ? [e.webSocket] : void 0
                        }
                    } : null
                }
            }
            var Yy, Iue = class extends w3 {
                constructor({
                    chains: t,
                    options: n
                } = {}) {
                    const e = {
                        name: "MetaMask",
                        shimDisconnect: !0,
                        getProvider() {
                            function i(r) {
                                if (r ? .isMetaMask && (!r.isBraveWallet || r._events || r._state) && !r.isApexWallet && !r.isAvalanche && !r.isBitKeep && !r.isBlockWallet && !r.isCoin98 && !r.isFordefi && !r.isMathWallet && !r.isOkxWallet && !r.isOKExWallet && !r.isOneInchIOSWallet && !r.isOneInchAndroidWallet && !r.isOpera && !r.isPortal && !r.isRabby && !r.isDefiant && !r.isTokenPocket && !r.isTokenary && !r.isZeal && !r.isZerion) return r
                            }
                            if (typeof window > "u") return;
                            const s = window.ethereum;
                            return s ? .providers ? s.providers.find(i) : i(s)
                        },
                        ...n
                    };
                    super({
                        chains: t,
                        options: e
                    }), this.id = "metaMask", this.shimDisconnectKey = `${this.id}.shimDisconnect`, va(this, Yy, void 0), Dy(this, Yy, e.UNSTABLE_shimOnConnectSelectAccount)
                }
                connect({
                    chainId: t
                } = {}) {
                    var n = this;
                    return (0, ut.Z)(function*() {
                        try {
                            const e = yield n.getProvider();
                            if (!e) throw new Lo;
                            e.on && (e.on("accountsChanged", n.onAccountsChanged), e.on("chainChanged", n.onChainChanged), e.on("disconnect", n.onDisconnect)), n.emit("message", {
                                type: "connecting"
                            });
                            let i = null;
                            if (ss(n, Yy) && n.options ? .shimDisconnect && !n.storage ? .getItem(n.shimDisconnectKey) && (i = yield n.getAccount().catch(() => null), i)) try {
                                yield e.request({
                                    method: "wallet_requestPermissions",
                                    params: [{
                                        eth_accounts: {}
                                    }]
                                }), i = yield n.getAccount()
                            } catch (u) {
                                if (n.isUserRejectedRequestError(u)) throw new fn.ab(u);
                                if (u.code === new fn.pT(u).code) throw u
                            }
                            if (!i) {
                                const l = yield e.request({
                                    method: "eth_requestAccounts"
                                });
                                i = (0, ml.K)(l[0])
                            }
                            let s = yield n.getChainId(), r = n.isChainUnsupported(s);
                            return t && s !== t && (s = (yield n.switchChain(t)).id, r = n.isChainUnsupported(s)), n.options ? .shimDisconnect && n.storage ? .setItem(n.shimDisconnectKey, !0), {
                                account: i,
                                chain: {
                                    id: s,
                                    unsupported: r
                                },
                                provider: e
                            }
                        } catch (e) {
                            throw n.isUserRejectedRequestError(e) ? new fn.ab(e) : -32002 === e.code ? new fn.pT(e) : e
                        }
                    })()
                }
            };

            function ou(t = [], n = []) {
                return [...new Set([...t, ...n])]
            }
            Yy = new WeakMap, I(9026), I(1028), I(5465), I(1033), I(8467), I(3544), I(5409), I(439), I(6534), I(8808), I(1634);
            var fde = Object.defineProperty,
                pde = Object.defineProperties,
                gde = Object.getOwnPropertyDescriptors,
                MB = Object.getOwnPropertySymbols,
                mde = Object.prototype.hasOwnProperty,
                vde = Object.prototype.propertyIsEnumerable,
                PB = (t, n, e) => n in t ? fde(t, n, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: e
                }) : t[n] = e,
                yde = (t, n) => {
                    for (var e in n || (n = {})) mde.call(n, e) && PB(t, e, n[e]);
                    if (MB)
                        for (var e of MB(n)) vde.call(n, e) && PB(t, e, n[e]);
                    return t
                },
                bde = (t, n) => pde(t, gde(n));

            function OB(t) {
                return t.includes(":")
            }

            function Cde(t) {
                return OB(t) ? t.split(":")[0] : t
            }

            function Qy(t) {
                var n, e, i;
                const s = {};
                if (! function UT(t) {
                        return Object.getPrototypeOf(t) === Object.prototype && Object.keys(t).length
                    }(t)) return s;
                for (const [r, l] of Object.entries(t)) {
                    const u = OB(r) ? [r] : l.chains,
                        h = l.methods || [],
                        v = l.events || [],
                        _ = Cde(r);
                    s[_] = bde(yde({}, s[_]), {
                        chains: ou(u, null == (n = s[_]) ? void 0 : n.chains),
                        methods: ou(h, null == (e = s[_]) ? void 0 : e.methods),
                        events: ou(v, null == (i = s[_]) ? void 0 : i.events)
                    })
                }
                return s
            }
            var gs, Tp, t0, qT, ZT, BB, n0, KT, QT, VB, s0, JT, Qd, Dp, r0, eD, a0, tD, o0, nD, RB = "requestedChains",
                YT = "wallet_addEthereumChain",
                iD = class extends n3 {
                    constructor(t) {
                        super({ ...t,
                            options: {
                                isNewChainsStale: !0,
                                ...t.options
                            }
                        }), va(this, t0), va(this, ZT), va(this, n0), va(this, QT), va(this, s0), va(this, Qd), va(this, r0), va(this, a0), va(this, o0), this.id = "walletConnect", this.name = "WalletConnect", this.ready = !0, va(this, gs, void 0), va(this, Tp, void 0), this.onAccountsChanged = n => {
                            0 === n.length ? this.emit("disconnect") : this.emit("change", {
                                account: (0, ml.K)(n[0])
                            })
                        }, this.onChainChanged = n => {
                            const e = Number(n),
                                i = this.isChainUnsupported(e);
                            this.emit("change", {
                                chain: {
                                    id: e,
                                    unsupported: i
                                }
                            })
                        }, this.onDisconnect = () => {
                            Gs(this, Qd, Dp).call(this, []), this.emit("disconnect")
                        }, this.onDisplayUri = n => {
                            this.emit("message", {
                                type: "display_uri",
                                data: n
                            })
                        }, this.onConnect = () => {
                            this.emit("connect", {})
                        }, Gs(this, t0, qT).call(this)
                    }
                    connect({
                        chainId: t,
                        pairingTopic: n
                    } = {}) {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            try {
                                let i = t;
                                if (!i) {
                                    const C = e.storage ? .getItem("store") ? .state ? .data ? .chain ? .id;
                                    i = C && !e.isChainUnsupported(C) ? C : e.chains[0] ? .id
                                }
                                if (!i) throw new Error("No chains found on connector.");
                                const s = yield e.getProvider();
                                Gs(e, QT, VB).call(e);
                                const r = Gs(e, n0, KT).call(e);
                                if (s.session && r && (yield s.disconnect()), !s.session || r) {
                                    const _ = e.chains.filter(C => C.id !== i).map(C => C.id);
                                    e.emit("message", {
                                        type: "connecting"
                                    }), yield s.connect({
                                        pairingTopic: n,
                                        optionalChains: [i, ..._]
                                    }), Gs(e, Qd, Dp).call(e, e.chains.map(({
                                        id: C
                                    }) => C))
                                }
                                const l = yield s.enable(), u = (0, ml.K)(l[0]), h = yield e.getChainId();
                                return {
                                    account: u,
                                    chain: {
                                        id: h,
                                        unsupported: e.isChainUnsupported(h)
                                    }
                                }
                            } catch (i) {
                                throw /user rejected/i.test(i ? .message) ? new fn.ab(i) : i
                            }
                        })()
                    }
                    disconnect() {
                        var t = this;
                        return (0, ut.Z)(function*() {
                            const n = yield t.getProvider();
                            try {
                                yield n.disconnect()
                            } catch (e) {
                                if (!/No matching key/i.test(e.message)) throw e
                            } finally {
                                Gs(t, s0, JT).call(t), Gs(t, Qd, Dp).call(t, [])
                            }
                        })()
                    }
                    getAccount() {
                        var t = this;
                        return (0, ut.Z)(function*() {
                            const {
                                accounts: n
                            } = yield t.getProvider();
                            return (0, ml.K)(n[0])
                        })()
                    }
                    getChainId() {
                        var t = this;
                        return (0, ut.Z)(function*() {
                            const {
                                chainId: n
                            } = yield t.getProvider();
                            return n
                        })()
                    }
                    getProvider({
                        chainId: t
                    } = {}) {
                        var n = this;
                        return (0, ut.Z)(function*() {
                            return ss(n, gs) || (yield Gs(n, t0, qT).call(n)), t && (yield n.switchChain(t)), ss(n, gs)
                        })()
                    }
                    getWalletClient({
                        chainId: t
                    } = {}) {
                        var n = this;
                        return (0, ut.Z)(function*() {
                            const [e, i] = yield Promise.all([n.getProvider({
                                chainId: t
                            }), n.getAccount()]), s = n.chains.find(r => r.id === t);
                            if (!e) throw new Error("provider is required.");
                            return b3({
                                account: i,
                                chain: s,
                                transport: _3(e)
                            })
                        })()
                    }
                    isAuthorized() {
                        var t = this;
                        return (0, ut.Z)(function*() {
                            try {
                                const [n, e] = yield Promise.all([t.getAccount(), t.getProvider()]), i = Gs(t, n0, KT).call(t);
                                if (!n) return !1;
                                if (i && e.session) {
                                    try {
                                        yield e.disconnect()
                                    } catch {}
                                    return !1
                                }
                                return !0
                            } catch {
                                return !1
                            }
                        })()
                    }
                    switchChain(t) {
                        var n = this;
                        return (0, ut.Z)(function*() {
                            const e = n.chains.find(i => i.id === t);
                            if (!e) throw new fn.x3(new Error("chain not found on connector."));
                            try {
                                const i = yield n.getProvider(), s = Gs(n, a0, tD).call(n), r = Gs(n, o0, nD).call(n);
                                if (!s.includes(t) && r.includes(YT)) {
                                    yield i.request({
                                        method: YT,
                                        params: [{
                                            chainId: (0, ki.eC)(e.id),
                                            blockExplorerUrls: [e.blockExplorers ? .default ? .url],
                                            chainName: e.name,
                                            nativeCurrency: e.nativeCurrency,
                                            rpcUrls: [...e.rpcUrls.default.http]
                                        }]
                                    });
                                    const u = Gs(n, r0, eD).call(n);
                                    u.push(t), Gs(n, Qd, Dp).call(n, u)
                                }
                                return yield i.request({
                                    method: "wallet_switchEthereumChain",
                                    params: [{
                                        chainId: (0, ki.eC)(t)
                                    }]
                                }), e
                            } catch (i) {
                                throw /user rejected request/i.test("string" == typeof i ? i : i ? .message) ? new fn.ab(i) : new fn.x3(i)
                            }
                        })()
                    }
                };

            function HB(t, n = "wei") {
                return function $de(t, n) {
                    let [e, i = "0"] = t.split(".");
                    const s = e.startsWith("-");
                    if (s && (e = e.slice(1)), i = i.replace(/(0+)$/, ""), 0 === n) 1 === Math.round(+`.${i}`) && (e = `${BigInt(e)+1n}`), i = "";
                    else if (i.length > n) {
                        const [r, l, u] = [i.slice(0, n - 1), i.slice(n - 1, n), i.slice(n)], h = Math.round(+`${l}.${u}`);
                        i = h > 9 ? `${BigInt(r)+BigInt(1)}0`.padStart(r.length + 1, "0") : `${r}${h}`, i.length > n && (i = i.slice(1), e = `${BigInt(e)+1n}`), i = i.slice(0, n)
                    } else i = i.padEnd(n, "0");
                    return BigInt(`${s?"-":""}${e}${i}`)
                }(t, eB.ez[n])
            }
            gs = new WeakMap, Tp = new WeakMap, t0 = new WeakSet, qT = function() {
                var t = (0, ut.Z)(function*() {
                    return !ss(this, Tp) && typeof window < "u" && Dy(this, Tp, Gs(this, ZT, BB).call(this)), ss(this, Tp)
                });
                return function() {
                    return t.apply(this, arguments)
                }
            }(), ZT = new WeakSet, BB = function() {
                var t = (0, ut.Z)(function*() {
                    const {
                        EthereumProvider: n
                    } = yield I.e(234).then(I.bind(I, 9234)), e = this.chains.map(({
                        id: i
                    }) => i);
                    if (e.length) {
                        const {
                            projectId: i,
                            showQrModal: s = !0,
                            qrModalOptions: r,
                            metadata: l,
                            relayUrl: u
                        } = this.options;
                        Dy(this, gs, yield n.init({
                            showQrModal: s,
                            qrModalOptions: r,
                            projectId: i,
                            optionalChains: e,
                            rpcMap: Object.fromEntries(this.chains.map(h => [h.id, h.rpcUrls.default.http[0]])),
                            metadata: l,
                            relayUrl: u
                        }))
                    }
                });
                return function() {
                    return t.apply(this, arguments)
                }
            }(), n0 = new WeakSet, KT = function() {
                if (Gs(this, o0, nD).call(this).includes(YT) || !this.options.isNewChainsStale) return !1;
                const n = Gs(this, r0, eD).call(this),
                    e = this.chains.map(({
                        id: s
                    }) => s),
                    i = Gs(this, a0, tD).call(this);
                return !(i.length && !i.some(s => e.includes(s)) || e.every(s => n.includes(s)))
            }, QT = new WeakSet, VB = function() {
                ss(this, gs) && (Gs(this, s0, JT).call(this), ss(this, gs).on("accountsChanged", this.onAccountsChanged), ss(this, gs).on("chainChanged", this.onChainChanged), ss(this, gs).on("disconnect", this.onDisconnect), ss(this, gs).on("session_delete", this.onDisconnect), ss(this, gs).on("display_uri", this.onDisplayUri), ss(this, gs).on("connect", this.onConnect))
            }, s0 = new WeakSet, JT = function() {
                ss(this, gs) && (ss(this, gs).removeListener("accountsChanged", this.onAccountsChanged), ss(this, gs).removeListener("chainChanged", this.onChainChanged), ss(this, gs).removeListener("disconnect", this.onDisconnect), ss(this, gs).removeListener("session_delete", this.onDisconnect), ss(this, gs).removeListener("display_uri", this.onDisplayUri), ss(this, gs).removeListener("connect", this.onConnect))
            }, Qd = new WeakSet, Dp = function(t) {
                this.storage ? .setItem(RB, t)
            }, r0 = new WeakSet, eD = function() {
                return this.storage ? .getItem(RB) ? ? []
            }, a0 = new WeakSet, tD = function() {
                if (!ss(this, gs)) return [];
                const t = ss(this, gs).session ? .namespaces;
                return t ? Qy(t).eip155 ? .chains ? .map(i => parseInt(i.split(":")[1] || "")) ? ? [] : []
            }, o0 = new WeakSet, nD = function() {
                if (!ss(this, gs)) return [];
                const t = ss(this, gs).session ? .namespaces;
                return t ? Qy(t).eip155 ? .methods ? ? [] : []
            };
            const Ude = $d({
                    id: 56,
                    name: "BNB Smart Chain",
                    network: "bsc",
                    nativeCurrency: {
                        decimals: 18,
                        name: "BNB",
                        symbol: "BNB"
                    },
                    rpcUrls: {
                        default: {
                            http: ["https://rpc.ankr.com/bsc"]
                        },
                        public: {
                            http: ["https://rpc.ankr.com/bsc"]
                        }
                    },
                    blockExplorers: {
                        etherscan: {
                            name: "BscScan",
                            url: "https://bscscan.com"
                        },
                        default: {
                            name: "BscScan",
                            url: "https://bscscan.com"
                        }
                    },
                    contracts: {
                        multicall3: {
                            address: "0xca11bde05977b3631167028862be2a173976ca11",
                            blockCreated: 15921452
                        }
                    }
                }),
                Wde = $d({
                    id: 137,
                    name: "Polygon",
                    network: "matic",
                    nativeCurrency: {
                        name: "MATIC",
                        symbol: "MATIC",
                        decimals: 18
                    },
                    rpcUrls: {
                        alchemy: {
                            http: ["https://polygon-mainnet.g.alchemy.com/v2"],
                            webSocket: ["wss://polygon-mainnet.g.alchemy.com/v2"]
                        },
                        infura: {
                            http: ["https://polygon-mainnet.infura.io/v3"],
                            webSocket: ["wss://polygon-mainnet.infura.io/ws/v3"]
                        },
                        default: {
                            http: ["https://polygon-rpc.com"]
                        },
                        public: {
                            http: ["https://polygon-rpc.com"]
                        }
                    },
                    blockExplorers: {
                        etherscan: {
                            name: "PolygonScan",
                            url: "https://polygonscan.com"
                        },
                        default: {
                            name: "PolygonScan",
                            url: "https://polygonscan.com"
                        }
                    },
                    contracts: {
                        multicall3: {
                            address: "0xca11bde05977b3631167028862be2a173976ca11",
                            blockCreated: 25770160
                        }
                    }
                }),
                Gde = $d({
                    id: 97,
                    name: "Binance Smart Chain Testnet",
                    network: "bsc-testnet",
                    nativeCurrency: {
                        decimals: 18,
                        name: "BNB",
                        symbol: "tBNB"
                    },
                    rpcUrls: {
                        default: {
                            http: ["https://data-seed-prebsc-1-s1.bnbchain.org:8545"]
                        },
                        public: {
                            http: ["https://data-seed-prebsc-1-s1.bnbchain.org:8545"]
                        }
                    },
                    blockExplorers: {
                        etherscan: {
                            name: "BscScan",
                            url: "https://testnet.bscscan.com"
                        },
                        default: {
                            name: "BscScan",
                            url: "https://testnet.bscscan.com"
                        }
                    },
                    contracts: {
                        multicall3: {
                            address: "0xca11bde05977b3631167028862be2a173976ca11",
                            blockCreated: 17422483
                        }
                    },
                    testnet: !0
                }),
                Xde = $d({
                    id: 80001,
                    name: "Polygon Mumbai",
                    network: "maticmum",
                    nativeCurrency: {
                        name: "MATIC",
                        symbol: "MATIC",
                        decimals: 18
                    },
                    rpcUrls: {
                        alchemy: {
                            http: ["https://polygon-mumbai.g.alchemy.com/v2"],
                            webSocket: ["wss://polygon-mumbai.g.alchemy.com/v2"]
                        },
                        infura: {
                            http: ["https://polygon-mumbai.infura.io/v3"],
                            webSocket: ["wss://polygon-mumbai.infura.io/ws/v3"]
                        },
                        default: {
                            http: ["https://rpc.ankr.com/polygon_mumbai"]
                        },
                        public: {
                            http: ["https://rpc.ankr.com/polygon_mumbai"]
                        }
                    },
                    blockExplorers: {
                        etherscan: {
                            name: "PolygonScan",
                            url: "https://mumbai.polygonscan.com"
                        },
                        default: {
                            name: "PolygonScan",
                            url: "https://mumbai.polygonscan.com"
                        }
                    },
                    contracts: {
                        multicall3: {
                            address: "0xca11bde05977b3631167028862be2a173976ca11",
                            blockCreated: 25770160
                        }
                    },
                    testnet: !0
                });
            let bl = (() => {
                class t {
                    translate;
                    modalService;
                    isConnected = !1;
                    eventsSubject = new He;
                    sessionCounter;
                    count = 0;
                    endValue = 900;
                    langUpdated = new He;
                    netWork = new re(!0);
                    selectedLanguage = "en";
                    currentLanguage;
                    ignoreList = ["api.moonpay", "ramp_transaction", "coingecko"];
                    daysCounter = new re({
                        _days: 0,
                        _hours: 0,
                        _minutes: 0,
                        _seconds: 0,
                        _diff: 0
                    });
                    stopper = new He;
                    constructor(e, i) {
                        this.translate = e, this.modalService = i
                    }
                    broadcastEvent(e, i) {
                        this.eventsSubject.next({
                            key: e,
                            value: i
                        })
                    }
                    getEvent(e) {
                        return this.eventsSubject.asObservable().pipe(hr(i => i.key === e), kt(i => i.value))
                    }
                    checkList(e) {
                        return !(this.ignoreList.filter(s => e.includes(s)).length > 0)
                    }
                    setNetwork() {
                        this.netWork.next(!0)
                    }
                    getNetwork() {
                        return this.netWork.asObservable()
                    }
                    getLang() {
                        return this.langUpdated.asObservable()
                    }
                    setLang(e) {
                        localStorage.setItem("currentlang", e), this.currentLanguage = e, this.langUpdated.next(e || "en")
                    }
                    setCounter(e) {
                        let i;
                        (function Yde(t = 0, n = Tv) {
                            return t < 0 && (t = 0), fF(t, t, n)
                        })(1e3).pipe(mF(this.stopper), kt(s => {
                            i = e - Date.parse((new Date).toString())
                        })).subscribe(s => {
                            if (i <= 0) this.broadcastEvent("PRESALE-END", !0), this.stopper.next(!1);
                            else {
                                const r = {
                                    _days: this.getDays(i) < 10 ? "0" + this.getDays(i) : this.getDays(i),
                                    _hours: this.getHours(i) < 10 ? "0" + this.getHours(i) : this.getHours(i),
                                    _minutes: this.getMinutes(i) < 10 ? "0" + this.getMinutes(i) : this.getMinutes(i),
                                    _seconds: this.getSeconds(i) < 10 ? "0" + this.getSeconds(i) : this.getSeconds(i),
                                    _diff: i
                                };
                                this.daysCounter.next(r)
                            }
                        })
                    }
                    getCounter() {
                        return this.daysCounter.asObservable()
                    }
                    getDays(e) {
                        return Math.floor(e / 864e5)
                    }
                    getHours(e) {
                        return Math.floor(e / 36e5 % 24)
                    }
                    getMinutes(e) {
                        return Math.floor(e / 1e3 / 60 % 60)
                    }
                    getSeconds(e) {
                        return Math.floor(e / 1e3 % 60)
                    }
                    scrollToFn(e) {
                        window.location.hash = e, console.log(window.location.hash, "window.location.hash"), window.location.pathname = "/" + this.currentLanguage
                    }
                    showBuyWidget(e = "") {
                        e && !this.isConnected ? (this.scrollToFn(e), setTimeout(() => {
                            this.modalService.show(l0, {
                                class: "modal-min modal-dialog-centered",
                                backdrop: "static"
                            })
                        }, 1e3)) : this.scrollToFn(e)
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)(vt(Fa), vt(Yl))
                    };
                    static\ u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            var qde = I(3519),
                sD = I.n(qde);
            let Ap = (() => {
                class t {
                    constructor() {}
                    messsageAlert(e, i) {
                        let s;
                        s = "error" === e ? "bg-danger" : "success" === e ? "bg-success" : "info" === e ? "bg-info" : "warning" === e ? "bg-warning" : "bg-light";
                        const r = {
                            position: "bottom-end",
                            timer: 4e7,
                            toast: !0,
                            timerProgressBar: !0,
                            showConfirmButton: !1,
                            iconColor: "#fff",
                            icon: e,
                            text: i,
                            customClass: {
                                popup: "d-flex align-items-center rounded-sm " + s,
                                htmlContainer: "fw-semibold fs-5 text-white"
                            }
                        };
                        return sD().fire(r)
                    }
                    messagePopup(e, i, s, r, l, u) {
                        const h = {
                            iconHtml: '<img src="./assets/images/popup-icons/' + e + '.svg" alt="' + e + '" height="90">',
                            titleText: s || void 0,
                            text: i,
                            showDenyButton: !!l,
                            showCancelButton: !!u,
                            confirmButtonText: r || "OK",
                            denyButtonText: l,
                            cancelButtonText: u,
                            buttonsStyling: !1,
                            customClass: {
                                icon: "border-0",
                                popup: "rounded-4 shadow-md",
                                title: "fs-2 fw-semibold pt-4",
                                htmlContainer: "fw-regular fs-5 my-3",
                                confirmButton: "btn btn-sm btn-success w-100 py-2 px-3 rounded-1 border-0",
                                denyButton: "btn btn-sm py-2 w-100 px-3 btn-tertiary mt-2",
                                cancelButton: "btn btn-sm py-2 w-100 px-3 btn-warning"
                            }
                        };
                        return sD().fire(h)
                    }
                    close() {
                        return sD().close()
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)
                    };
                    static\ u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            const Zde = I(3997),
                zB = I(949),
                Kde = I(1887),
                Qde = I(7008),
                Jde = I(6530),
                ehe = I(625),
                the = I(3447),
                nhe = I(5525),
                Bo = {
                    address: xt.stakingAddress,
                    abi: Zde.abi
                },
                Qr = {
                    address: xt.eth.presaleAddress,
                    abi: zB.abi
                },
                cu = {
                    address: xt.bsc.presaleAddress,
                    abi: Qde.abi
                },
                uu = {
                    address: xt.poly.presaleAddress,
                    abi: Kde.abi
                },
                ihe = {
                    address: xt.poly.usdTAddress,
                    abi: the.abi
                },
                jB = {
                    address: xt.eth.usdTAddress,
                    abi: Jde.abi
                },
                she = {
                    address: xt.bsc.usdTAddress,
                    abi: ehe.abi
                },
                $B = {
                    address: xt.tokenAddress,
                    abi: nhe.abi
                };
            let du = (() => {
                class t {
                    http;
                    appRef;
                    eventService;
                    popupService;
                    transletService;
                    swapStatus = Vn.not_started;
                    walletAddress = "";
                    referUrl = "";
                    client;
                    wagmiData;
                    chainId;
                    mode;
                    presaleData;
                    swapHash = "";
                    refreshId;
                    refreshRate = 5e3;
                    metaMaskConnector;
                    walletConnector;
                    walletConnectorBW;
                    uriConnector;
                    balanceData = {
                        nativeBal: 0,
                        usdtBal: 0,
                        ethTokenSold: 0,
                        bscTokenSold: 0,
                        totalTokensSold: 0,
                        ethClaimable: 0,
                        bscClaimable: 0,
                        userClaimable: 0,
                        polyTokenSold: 0,
                        polyClaimable: 0,
                        startTime: "",
                        endTime: "",
                        paused: !1,
                        currentStep: 0,
                        usdRaised: 0,
                        maxTokensToBuy: 0,
                        oneEth: 0,
                        oneBnb: 0,
                        ethUsdt: 0,
                        bnbUsdt: 0,
                        polyUsdt: 0,
                        onePoly: 0
                    };
                    stakeData = {
                        userStaked: 0,
                        totalStaked: 0,
                        rewardPerRound: 0,
                        userPoolPercent: 0,
                        apy: 0,
                        unlockTime: 0,
                        userReward: 0,
                        userBal: 0,
                        isClaimEnabled: !1,
                        userCount: 0,
                        tokenPrice: 0,
                        planId: 0
                    };
                    tokenomics = [{
                        minToken: 0,
                        maxToken: 84e6,
                        maxAmount: 42e4,
                        tokenUSDT: .005,
                        title: "until_soft_cap",
                        endDate: 1699693199e3
                    }, {
                        minToken: 84e6,
                        maxToken: 168e6,
                        maxAmount: 856800,
                        tokenUSDT: .0052,
                        title: "until_soft_cap",
                        endDate: 1700125199e3
                    }, {
                        minToken: 168e6,
                        maxToken: 252e6,
                        maxAmount: 1310400,
                        tokenUSDT: .0054,
                        title: "until_soft_cap",
                        endDate: 1700470823e3
                    }, {
                        minToken: 252e6,
                        maxToken: 336e6,
                        maxAmount: 1780800,
                        tokenUSDT: .0056,
                        title: "until_soft_cap",
                        endDate: 1700902823e3
                    }, {
                        minToken: 336e6,
                        maxToken: 42e7,
                        maxAmount: 2268e3,
                        tokenUSDT: .0058,
                        title: "until_soft_cap",
                        endDate: 1701334823e3
                    }, {
                        minToken: 42e7,
                        maxToken: 504e6,
                        maxAmount: 2772e3,
                        tokenUSDT: .006,
                        title: "until_soft_cap",
                        endDate: 1701766823e3
                    }, {
                        minToken: 504e6,
                        maxToken: 588e6,
                        maxAmount: 3292800,
                        tokenUSDT: .0062,
                        title: "until_soft_cap",
                        endDate: 1702198823e3
                    }, {
                        minToken: 588e6,
                        maxToken: 672e6,
                        maxAmount: 3830400,
                        tokenUSDT: .0064,
                        title: "until_soft_cap",
                        endDate: 1702630823e3
                    }, {
                        minToken: 672e6,
                        maxToken: 756e6,
                        maxAmount: 4384800,
                        tokenUSDT: .0066,
                        title: "until_soft_cap",
                        endDate: 1703062823e3
                    }, {
                        minToken: 756e6,
                        maxToken: 84e7,
                        maxAmount: 4956e3,
                        tokenUSDT: .0068,
                        title: "until_soft_cap",
                        endDate: 1703494823e3
                    }];
                    tokenomics2;
                    constructor(e, i, s, r, l) {
                        this.http = e, this.appRef = i, this.eventService = s, this.popupService = r, this.transletService = l;
                        let u = JSON.stringify(this.tokenomics);
                        this.tokenomics2 = JSON.parse(u);
                        const h = xt.production ? [Ude, J5, Wde] : [Gde, t3, Xde],
                            {
                                chains: v,
                                publicClient: _,
                                webSocketPublicClient: C
                            } = function uue(t, n, {
                                batch: e = {
                                    multicall: {
                                        wait: 32
                                    }
                                },
                                pollingInterval: i = 4e3,
                                rank: s,
                                retryCount: r,
                                retryDelay: l,
                                stallTimeout: u
                            } = {}) {
                                if (!t.length) throw new Error("must have at least one chain");
                                let h = [];
                                const v = {},
                                    _ = {};
                                for (const C of t) {
                                    let M = !1;
                                    for (const L of n) {
                                        const j = L(C);
                                        j && (M = !0, h.some(({
                                            id: Z
                                        }) => Z === C.id) || (h = [...h, j.chain]), v[C.id] = [...v[C.id] || [], ...j.rpcUrls.http], j.rpcUrls.webSocket && (_[C.id] = [..._[C.id] || [], ...j.rpcUrls.webSocket]))
                                    }
                                    if (!M) throw new Error([`Could not find valid provider configuration for chain "${C.name}".\n`, "You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.", "Read more: https://wagmi.sh/core/providers/jsonRpc"].join("\n"))
                                }
                                return {
                                    chains: h,
                                    publicClient: ({
                                        chainId: C
                                    }) => {
                                        const M = h.find(Z => Z.id === C) ? ? t[0],
                                            L = v[M.id];
                                        if (!L || !L[0]) throw new Error(`No providers configured for chain "${M.id}"`);
                                        const j = Y3({
                                            batch: e,
                                            chain: M,
                                            transport: q3(L.map(Z => function tue(t, n = {}) {
                                                const {
                                                    batch: e,
                                                    fetchOptions: i,
                                                    key: s = "http",
                                                    name: r = "HTTP JSON-RPC",
                                                    retryDelay: l
                                                } = n;
                                                return ({
                                                    chain: u,
                                                    retryCount: h,
                                                    timeout: v
                                                }) => {
                                                    const {
                                                        batchSize: _ = 1e3,
                                                        wait: C = 0
                                                    } = "object" == typeof e ? e : {}, M = n.retryCount ? ? h, L = v ? ? n.timeout ? ? 1e4, j = t || u ? .rpcUrls.default.http[0];
                                                    if (!j) throw new Z3;
                                                    return Fy({
                                                        key: s,
                                                        name: r,
                                                        request: ({
                                                            method: Z,
                                                            params: Q
                                                        }) => (0, ut.Z)(function*() {
                                                            const Ae = {
                                                                    method: Z,
                                                                    params: Q
                                                                },
                                                                {
                                                                    schedule: De
                                                                } = (0, K3.S)({
                                                                    id: `${t}`,
                                                                    wait: C,
                                                                    shouldSplitBatch: ht => ht.length > _,
                                                                    fn: ht => Xd.http(j, {
                                                                        body: ht,
                                                                        fetchOptions: i,
                                                                        timeout: L
                                                                    }),
                                                                    sort: (ht, Ht) => ht.id - Ht.id
                                                                }),
                                                                Ue = function() {
                                                                    var ht = (0, ut.Z)(function*(Ht) {
                                                                        return e ? De(Ht) : [yield Xd.http(j, {
                                                                            body: Ht,
                                                                            fetchOptions: i,
                                                                            timeout: L
                                                                        })]
                                                                    });
                                                                    return function(on) {
                                                                        return ht.apply(this, arguments)
                                                                    }
                                                                }(),
                                                                [{
                                                                    error: it,
                                                                    result: lt
                                                                }] = yield Ue(Ae);
                                                            if (it) throw new no.bs({
                                                                body: Ae,
                                                                error: it,
                                                                url: j
                                                            });
                                                            return lt
                                                        })(),
                                                        retryCount: M,
                                                        retryDelay: l,
                                                        timeout: L,
                                                        type: "http"
                                                    }, {
                                                        fetchOptions: i,
                                                        url: t
                                                    })
                                                }
                                            }(Z, {
                                                timeout: u
                                            })), {
                                                rank: s,
                                                retryCount: r,
                                                retryDelay: l
                                            }),
                                            pollingInterval: i
                                        });
                                        return Object.assign(j, {
                                            chains: h
                                        })
                                    },
                                    webSocketPublicClient: ({
                                        chainId: C
                                    }) => {
                                        const M = h.find(Z => Z.id === C) ? ? t[0],
                                            L = _[M.id];
                                        if (!L || !L[0]) return;
                                        const j = Y3({
                                            batch: e,
                                            chain: M,
                                            transport: q3(L.map(Z => function nue(t, n = {}) {
                                                const {
                                                    key: e = "webSocket",
                                                    name: i = "WebSocket JSON-RPC",
                                                    retryDelay: s
                                                } = n;
                                                return ({
                                                    chain: r,
                                                    retryCount: l,
                                                    timeout: u
                                                }) => {
                                                    const h = n.retryCount ? ? l,
                                                        v = u ? ? n.timeout ? ? 1e4,
                                                        _ = t || r ? .rpcUrls.default.webSocket ? .[0];
                                                    if (!_) throw new Z3;
                                                    return Fy({
                                                        key: e,
                                                        name: i,
                                                        request: ({
                                                            method: C,
                                                            params: M
                                                        }) => (0, ut.Z)(function*() {
                                                            const L = {
                                                                    method: C,
                                                                    params: M
                                                                },
                                                                j = yield tT(_), {
                                                                    error: Z,
                                                                    result: Q
                                                                } = yield Xd.webSocketAsync(j, {
                                                                    body: L,
                                                                    timeout: v
                                                                });
                                                            if (Z) throw new no.bs({
                                                                body: L,
                                                                error: Z,
                                                                url: _
                                                            });
                                                            return Q
                                                        })(),
                                                        retryCount: h,
                                                        retryDelay: s,
                                                        timeout: v,
                                                        type: "webSocket"
                                                    }, {
                                                        getSocket: () => tT(_),
                                                        subscribe: ({
                                                            params: C,
                                                            onData: M,
                                                            onError: L
                                                        }) => (0, ut.Z)(function*() {
                                                            const j = yield tT(_), {
                                                                result: Z
                                                            } = yield new Promise((Q, Ae) => Xd.webSocket(j, {
                                                                body: {
                                                                    method: "eth_subscribe",
                                                                    params: C
                                                                },
                                                                onResponse(De) {
                                                                    if (De.error) return Ae(De.error), void L ? .(De.error);
                                                                    "number" != typeof De.id ? "eth_subscription" === De.method && M(De.params) : Q(De)
                                                                }
                                                            }));
                                                            return {
                                                                subscriptionId: Z,
                                                                unsubscribe: () => (0, ut.Z)(function*() {
                                                                    return new Promise(Q => Xd.webSocket(j, {
                                                                        body: {
                                                                            method: "eth_unsubscribe",
                                                                            params: [Z]
                                                                        },
                                                                        onResponse: Q
                                                                    }))
                                                                })()
                                                            }
                                                        })()
                                                    })
                                                }
                                            }(Z, {
                                                timeout: u
                                            })), {
                                                rank: s,
                                                retryCount: r,
                                                retryDelay: l
                                            }),
                                            pollingInterval: i
                                        });
                                        return Object.assign(j, {
                                            chains: h
                                        })
                                    }
                                }
                            }(h, xt.production ? [gB({
                                rpc: M => ({
                                    http: M.id === xt.eth.chainIdInt ? xt.eth.rpcURL : M.id === xt.bsc.chainIdInt ? xt.bsc.rpcURL : xt.poly.rpcURL
                                })
                            }), gB({
                                rpc: M => ({
                                    http: M.id === xt.eth.chainIdInt ? xt.eth.backupRPC : M.id === xt.bsc.chainIdInt ? xt.bsc.backupRPC : xt.poly.backupRPC
                                })
                            })] : [function(t) {
                                return t.rpcUrls.public.http[0] ? {
                                    chain: t,
                                    rpcUrls: t.rpcUrls.public
                                } : null
                            }]);
                        this.metaMaskConnector = new Iue({
                                chains: v
                            }), this.walletConnector = new iD({
                                chains: v,
                                options: {
                                    projectId: xt.walletConnectId,
                                    qrModalOptions: {
                                        explorerRecommendedWalletIds: ["fe68cea63541aa53ce020de7398968566dfe8f3725663a564cac89490247ed49", "c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96", "4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0"]
                                    }
                                }
                            }), this.walletConnectorBW = new iD({
                                chains: v,
                                options: {
                                    projectId: xt.walletConnectId,
                                    qrModalOptions: {
                                        explorerRecommendedWalletIds: ["fe68cea63541aa53ce020de7398968566dfe8f3725663a564cac89490247ed49"]
                                    }
                                }
                            }), this.uriConnector = new iD({
                                chains: v,
                                options: {
                                    showQrModal: !1,
                                    projectId: "09ebdc51e59baedfa3c41f71529fff9c",
                                    qrModalOptions: {
                                        explorerRecommendedWalletIds: ["fe68cea63541aa53ce020de7398968566dfe8f3725663a564cac89490247ed49"]
                                    }
                                }
                            }), this.uriConnector.addListener("message", M => {
                                if ("display_uri" === M.type) {
                                    const L = window.navigator.userAgent.toLowerCase(),
                                        j = /iphone|ipod|ipad/.test(L),
                                        Z = function vle(t) {
                                            let e, n = new URLSearchParams(document.location.search);
                                            return n.get(t) && (e = n.get(t)), e || ""
                                        }("bwUrl");
                                    console.log("bwUrl=========>", Z);
                                    let Q = M.data + "&callbackUrl=" + window.location.href + "&browser=" + function yle() {
                                        const t = window.navigator.userAgent.toLowerCase();
                                        switch (!0) {
                                            case t.indexOf("edge") > -1:
                                                return "edge";
                                            case t.indexOf("opr") > -1 && !!window.opr:
                                                return "opera";
                                            case t.indexOf("chrome") > -1 && !!window.chrome:
                                                return "chrome";
                                            case t.indexOf("trident") > -1:
                                                return "ie";
                                            case t.indexOf("firefox") > -1:
                                                return "firefox";
                                            case t.indexOf("safari") > -1:
                                                return "safari";
                                            default:
                                                return "other"
                                        }
                                    }();
                                    if (console.log("url params=========>", Q), console.log("wondow log params=========>", window.location.href), j) {
                                        const Ae = document.createElement("a");
                                        Z && "" != Z ? (Ae.href = Z + Q, Ae.click()) : (Ae.href = xt.bwUniversalLink + "/connect?" + Q, Ae.target = "_blank", Ae.click())
                                    } else if (Z && "" != Z) {
                                        const Ae = document.createElement("a");
                                        Ae.href = Z + Q, Ae.click()
                                    } else {
                                        const Ae = document.createElement("a");
                                        Ae.href = xt.bwUniversalLink + "/connect?" + Q, Ae.target = "_blank", Ae.click()
                                    }
                                }
                            }), this.client = Cue({
                                autoConnect: !0,
                                connectors: [this.metaMaskConnector, this.walletConnector, this.walletConnectorBW, this.uriConnector],
                                publicClient: _,
                                webSocketPublicClient: C
                            }),
                            function Eue(t, {
                                selector: n = (e => e)
                            } = {}) {
                                Ss().subscribe(({
                                    data: r,
                                    chains: l
                                }) => n({
                                    chainId: r ? .chain ? .id,
                                    chains: l
                                }), () => t(pB()), {
                                    equalityFn: aT
                                })
                            }(M => {
                                this.chainId = M ? .chain ? .id, this.getPresalesData(), setTimeout(() => this.eventService.setNetwork(), 2e3), this.appRef.tick(), console.log("watchNetwork =", M)
                            }),
                            function kue(t, {
                                selector: n = (e => e)
                            } = {}) {
                                return Ss().subscribe(({
                                    data: r,
                                    connector: l,
                                    status: u
                                }) => n({
                                    address: r ? .account,
                                    connector: l,
                                    status: u
                                }), () => t(function Due() {
                                    const {
                                        data: t,
                                        connector: n,
                                        status: e
                                    } = Ss();
                                    switch (e) {
                                        case "connected":
                                            return {
                                                address: t ? .account,
                                                connector: n,
                                                isConnected: !0,
                                                isConnecting: !1,
                                                isDisconnected: !1,
                                                isReconnecting: !1,
                                                status: e
                                            };
                                        case "reconnecting":
                                            return {
                                                address: t ? .account,
                                                connector: n,
                                                isConnected: !!t ? .account,
                                                isConnecting: !1,
                                                isDisconnected: !1,
                                                isReconnecting: !0,
                                                status: e
                                            };
                                        case "connecting":
                                            return {
                                                address: t ? .account,
                                                connector: n,
                                                isConnected: !1,
                                                isConnecting: !0,
                                                isDisconnected: !1,
                                                isReconnecting: !1,
                                                status: e
                                            };
                                        case "disconnected":
                                            return {
                                                address: void 0,
                                                connector: void 0,
                                                isConnected: !1,
                                                isConnecting: !1,
                                                isDisconnected: !0,
                                                isReconnecting: !1,
                                                status: e
                                            }
                                    }
                                }()), {
                                    equalityFn: aT
                                })
                            }(M => this.setData(M))
                    }
                    connectWallet(e, i = !1) {
                        var s = this;
                        return (0, ut.Z)(function*() {
                            s.mode = e, s.windowDataLayer("connectWallet", "start", 1, 1, 0, "", "", 0, 0), yield function Sue(t) {
                                return uT.apply(this, arguments)
                            }({
                                connector: "metamask" === e ? s.metaMaskConnector : "wallet" === e ? s.walletConnector : "walletBW" === e ? s.walletConnectorBW : "bw" === e ? s.uriConnector : s.walletConnector,
                                chainId: i ? xt.bsc.chainIdInt : xt.eth.chainIdInt
                            }).then(r => {
                                console.log("\n==== wallet connected ====\n", s.client, "\n===="), setTimeout(() => {
                                    s.sendDashFx("", 0, 0, !0), s.windowDataLayer("connectWallet", "successful", 2, 1, 0, "", "", 0, 0)
                                }, 2e3)
                            }, r => {
                                console.log("\n==== wallet connection issue ====\n", r, "\n====")
                            })
                        })()
                    }
                    disConnectWallet() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            yield function Tue() {
                                return dT.apply(this, arguments)
                            }().then(i => {
                                console.log("\n==== wallet disconnected ====\n", e.client), localStorage.clear(), e.chainId = null, e.walletAddress = "", e.referUrl = "", e.balanceData.nativeBal = 0, e.balanceData.usdtBal = 0, e.eventService.setNetwork(), e.eventService.isConnected = !1
                            }, i => {
                                console.log("\n==== wallet disconnect issue ====\n"), console.log("disconnect issue =", i)
                            })
                        })()
                    }
                    setData(e) {
                        this.wagmiData = e, this.walletAddress = this.wagmiData.address ? .toLowerCase(), this.refreshRate = e.address ? 5e3 : 2e4, this.eventService.isConnected = !!e.address, this.appRef.tick(), this.getPresalesData(), console.log("wagmiData", this.wagmiData)
                    }
                    getPresalesData() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            e.walletAddress && "" == e.referUrl && e.refer();
                            const i = {
                                contracts: [{ ...Qr,
                                    functionName: "totalTokensSold",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...Qr,
                                    functionName: "ethBuyHelper",
                                    chainId: xt.eth.chainIdInt,
                                    args: [1]
                                }, { ...Qr,
                                    functionName: "usdtBuyHelper",
                                    chainId: xt.eth.chainIdInt,
                                    args: [1]
                                }, { ...Qr,
                                    functionName: "usdRaised",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...Qr,
                                    functionName: "maxTokensToBuy",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...cu,
                                    functionName: "totalTokensSold",
                                    chainId: xt.bsc.chainIdInt,
                                    args: []
                                }, { ...cu,
                                    functionName: "bnbBuyHelper",
                                    chainId: xt.bsc.chainIdInt,
                                    args: [1]
                                }, { ...cu,
                                    functionName: "usdtBuyHelper",
                                    chainId: xt.bsc.chainIdInt,
                                    args: [1]
                                }, { ...cu,
                                    functionName: "usdRaised",
                                    chainId: xt.bsc.chainIdInt,
                                    args: []
                                }, { ...Bo,
                                    functionName: "poolStakers",
                                    chainId: xt.eth.chainIdInt,
                                    args: [e.walletAddress || "0x0000000000000000000000000000000000000000"]
                                }, { ...Bo,
                                    functionName: "getRewards",
                                    chainId: xt.eth.chainIdInt,
                                    args: [e.walletAddress || "0x0000000000000000000000000000000000000000"]
                                }, { ...Bo,
                                    functionName: "actualTokensStaked",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...Bo,
                                    functionName: "rewardTokensPerBlock",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...Bo,
                                    functionName: "tokensStaked",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...Bo,
                                    functionName: "harvestLock",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...Qr,
                                    functionName: "currentStep",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...Qr,
                                    functionName: "roundDetails",
                                    chainId: xt.eth.chainIdInt,
                                    args: [2]
                                }, { ...Qr,
                                    functionName: "trackRemainingTokens",
                                    chainId: xt.eth.chainIdInt,
                                    args: []
                                }, { ...cu,
                                    functionName: "trackRemainingTokens",
                                    chainId: xt.bsc.chainIdInt,
                                    args: []
                                }, { ...uu,
                                    functionName: "totalTokensSold",
                                    chainId: xt.poly.chainIdInt,
                                    args: []
                                }, { ...uu,
                                    functionName: "maticBuyHelper",
                                    chainId: xt.poly.chainIdInt,
                                    args: [1]
                                }, { ...uu,
                                    functionName: "usdtBuyHelper",
                                    chainId: xt.poly.chainIdInt,
                                    args: [1]
                                }, { ...uu,
                                    functionName: "usdRaised",
                                    chainId: xt.poly.chainIdInt,
                                    args: []
                                }, { ...Qr,
                                    functionName: "userDeposits",
                                    chainId: xt.eth.chainIdInt,
                                    args: [e.walletAddress]
                                }, { ...cu,
                                    functionName: "userDeposits",
                                    chainId: xt.bsc.chainIdInt,
                                    args: [e.walletAddress]
                                }, { ...uu,
                                    functionName: "userDeposits",
                                    chainId: xt.poly.chainIdInt,
                                    args: [e.walletAddress]
                                }, { ...uu,
                                    functionName: "trackRemainingTokens",
                                    chainId: xt.poly.chainIdInt,
                                    args: []
                                }]
                            };
                            e.presaleData = yield ru(i), console.log("\n******presaleData =", e.presaleData, "\n******\n");
                            try {
                                e.stakeData.userStaked = +(0, Xs.d)(e.presaleData[9].result[0] || 0), e.stakeData.unlockTime = Number(e.presaleData[9].result[3]), e.stakeData.planId = Number(e.presaleData[9].result[4]), e.stakeData.userReward = +(0, Xs.d)(e.presaleData[10] ? .result || 0), e.stakeData.rewardPerRound = +(0, Xs.d)(e.presaleData[12].result || 0), e.stakeData.totalStaked = +(0, Xs.d)(e.presaleData[11].result || 0), e.stakeData.isClaimEnabled = !e.presaleData[14].result || !1, e.stakeData.apy = +(+xt.apyCalcConst / +(0, Xs.d)(e.presaleData[13].result || 0) * 100).toFixed(0)
                            } catch (h) {
                                console.log("Presale over.", h)
                            }
                            e.balanceData.currentStep = Number(e.presaleData[15].result), e.balanceData.ethTokenSold = Number(e.presaleData[0].result), e.balanceData.bscTokenSold = Number(e.presaleData[5].result), e.balanceData.polyTokenSold = Number(e.presaleData[19].result), e.balanceData.totalTokensSold = e.balanceData.ethTokenSold + e.balanceData.bscTokenSold + e.balanceData.polyTokenSold;
                            try {
                                e.balanceData.oneEth = +(0, Xs.d)(e.presaleData[1].result), e.balanceData.ethUsdt = Number(e.presaleData[2].result), e.balanceData.oneBnb = +(0, Xs.d)(e.presaleData[6].result), e.balanceData.bnbUsdt = Number(e.presaleData[7].result), e.balanceData.onePoly = +(0, Xs.d)(e.presaleData[20].result), e.balanceData.polyUsdt = Number(e.presaleData[21].result)
                            } catch (h) {
                                console.log("Presale over.", h)
                            }
                            e.balanceData.usdRaised = +(0, Xs.d)(e.presaleData[3].result || 0) + +(0, Xs.d)(e.presaleData[8].result || 0) + +(0, Xs.d)(e.presaleData[22].result || 0), e.balanceData.ethClaimable = +(0, Xs.d)(e.presaleData[23].result || 0), e.balanceData.bscClaimable = +(0, Xs.d)(e.presaleData[24].result || 0), e.balanceData.polyClaimable = +(0, Xs.d)(e.presaleData[25].result || 0), e.balanceData.userClaimable = e.balanceData.ethClaimable + e.balanceData.bscClaimable + e.balanceData.polyClaimable;
                            let s = 0,
                                r = 0;
                            for (let h of e.presaleData[16].result) {
                                let v = e.tokenomics[s];
                                if (e.tokenomics[s].endDate = 1e3 * Number(h), s < 1) r = -46477;
                                else {
                                    const _ = Number(e.presaleData[18].result[s]) || 0,
                                        C = Number(e.presaleData[26].result[s]) || 0,
                                        M = Number(e.presaleData[17].result[s]) || 0;
                                    if (s < e.balanceData.currentStep) {
                                        let L = 2 * (v.maxToken - v.minToken) - (M + _ + C);
                                        console.log(L, r), L *= v.tokenUSDT, r += L, e.tokenomics[s + 1].maxAmount = Math.ceil(e.tokenomics2[s + 1].maxAmount + r)
                                    }
                                }
                                s++
                            }
                            console.log(e.tokenomics);
                            const l = Number(e.presaleData[4].result);
                            e.balanceData.maxTokensToBuy = l, console.log("\n******\n RPC balanceData =", e.tokenomics, "\n******\n"), e.wagmiData ? .isConnected && e.getMetaData(), e.refreshId && clearTimeout(e.refreshId), e.refreshId = setTimeout(() => e.getPresalesData(), e.refreshRate)
                        })()
                    }
                    getMetaData() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            const i = yield fB({
                                address: e.walletAddress,
                                formatUnits: "ether"
                            }), s = yield fB({
                                address: e.walletAddress,
                                token: e.getChainData().usdTAddress,
                                chainId: e.getChainData().chainIdInt
                            });
                            e.balanceData.nativeBal = +i.formatted, e.balanceData.usdtBal = +s.formatted
                        })()
                    }
                    get soldToken() {
                        return this.balanceData.totalTokensSold
                    }
                    isEthChain() {
                        return this.chainId === xt.eth.chainIdInt
                    }
                    switchNetwork(e) {
                        var i = this;
                        return (0, ut.Z)(function*() {
                            yield function Aue(t) {
                                return CT.apply(this, arguments)
                            }({
                                chainId: e
                            }).then(s => {
                                i.appRef.tick()
                            }, s => {
                                i.popupService.messagePopup("info", i.transletService.instant("switchNetwork", {
                                    chain_name: (e == xt.eth.chainIdInt ? xt.eth : e == xt.bsc.chainIdInt ? xt.bsc : xt.poly).chainInfo.params[0].chainName
                                }))
                            })
                        })()
                    }
                    getNativeAmount = (() => {
                        var i, e = this;
                        return i = (0, ut.Z)(function*(s) {
                                let r = 0;
                                switch (e.getChainData().chainIdInt) {
                                    case xt.eth.chainIdInt:
                                        r = e.balanceData.oneEth;
                                        break;
                                    case xt.bsc.chainIdInt:
                                        r = e.balanceData.oneBnb;
                                        break;
                                    case xt.poly.chainIdInt:
                                        r = e.balanceData.onePoly;
                                        break;
                                    default:
                                        r = e.balanceData.oneEth
                                }
                                return Math.floor(+s / +r)
                            }),
                            function(s) {
                                return i.apply(this, arguments)
                            }
                    })();
                    getUSDTAmount = (() => {
                        var i, e = this;
                        return i = (0, ut.Z)(function*(s) {
                                let r = 0;
                                switch (e.getChainData().chainIdInt) {
                                    case xt.eth.chainIdInt:
                                        r = e.balanceData.ethUsdt / Math.pow(10, 6);
                                        break;
                                    case xt.bsc.chainIdInt:
                                        r = e.balanceData.bnbUsdt / Math.pow(10, 18);
                                        break;
                                    default:
                                        r = e.balanceData.ethUsdt / Math.pow(10, 6)
                                }
                                return Math.floor(+s / +r)
                            }),
                            function(s) {
                                return i.apply(this, arguments)
                            }
                    })();
                    getDynamicAmount = (() => {
                        var i, e = this;
                        return i = (0, ut.Z)(function*(s, r) {
                                let l = 0;
                                switch (e.getChainData().chainIdInt) {
                                    case xt.eth.chainIdInt:
                                        l = "getNativeAmount" === r ? e.balanceData.oneEth : e.balanceData.ethUsdt / Math.pow(10, 6);
                                        break;
                                    case xt.bsc.chainIdInt:
                                        l = "getNativeAmount" === r ? e.balanceData.oneBnb : e.balanceData.bnbUsdt / Math.pow(10, 18);
                                        break;
                                    case xt.poly.chainIdInt:
                                        l = "getNativeAmount" === r ? e.balanceData.onePoly : e.balanceData.polyUsdt / Math.pow(10, 6);
                                        break;
                                    default:
                                        l = "getNativeAmount" === r ? e.balanceData.oneEth : e.balanceData.ethUsdt / Math.pow(10, 6)
                                }
                                return +s * l
                            }),
                            function(s, r) {
                                return i.apply(this, arguments)
                            }
                    })();
                    swapNativeTokens(e, i, s = !1) {
                        var r = this;
                        return (0, ut.Z)(function*() {
                            r.swapStatus = Vn.not_started;
                            const {
                                request: l
                            } = yield so({ ...r.getPresaleContract(),
                                functionName: r.getChainData().nativeFunction,
                                chainId: r.getChainData().chainIdInt,
                                args: r.getChainData().hasStaking ? [e, s] : [e],
                                value: HB(`${i}`),
                                account: r.walletAddress
                            });
                            r.swapStatus = Vn.confirm_pending, yield Ro(l).then(u => {
                                console.log("Eth write Contract success", u), r.swapStatus = Vn.in_progess, r.windowDataLayer("swap", "confirmTransaction", 2, 0, 0), r.sendDashFx(r.getChainData().purchaseToken, e, i), r.checkTRansaction(u.hash, r.getChainData().purchaseToken, e, i)
                            }, u => {
                                console.log("swapNativeTokens Error =", u), r.swapStatus = 4001 === u.code ? Vn.rejected : Vn.failed
                            })
                        })()
                    }
                    swapCryptoForUSDT(e, i, s = !1, r = !1) {
                        var l = this;
                        return (0, ut.Z)(function*() {
                            const u = l.getUSDTContract(),
                                h = l.getChainData().presaleAddress,
                                v = yield ru({
                                    contracts: [{ ...u,
                                        functionName: "allowance",
                                        chainId: l.chainId,
                                        args: [l.walletAddress, h]
                                    }]
                                });
                            let _;
                            if (_ = l.getChainData() == xt.bsc ? +(0, Xs.d)(v[0].result) : Number(v[0].result) / Math.pow(10, 6), console.log("allowanceValue =", i, _), +i > +_) {
                                const {
                                    request: C
                                } = yield so({ ...u,
                                    chainId: l.chainId,
                                    functionName: "approve",
                                    args: [h, s || 0 == _ ? "100000000000000000000000000" : "0"],
                                    account: l.walletAddress
                                });
                                l.swapStatus = Vn.approval_pending;
                                const {
                                    hash: M
                                } = yield Ro(C);
                                console.log("approve allowence hash key =", M), yield IT({
                                    hash: M
                                }).then(L => {
                                    console.log("approve Config success", L), s ? l.buyUSDT(e, i, r) : l.swapCryptoForUSDT(e, i, !0, r)
                                }, L => {
                                    console.log("approve Config error", L), l.swapStatus = Vn.rejected
                                })
                            } else l.buyUSDT(e, i, r)
                        })()
                    }
                    buyUSDT(e, i, s = !1) {
                        var r = this;
                        return (0, ut.Z)(function*() {
                            const l = r.getPresaleContract();
                            yield so({ ...l,
                                functionName: "buyWithUSDT",
                                chainId: r.chainId,
                                args: r.getChainData().hasStaking ? [e, s] : [e],
                                account: r.walletAddress
                            }).then(function() {
                                var u = (0, ut.Z)(function*(h) {
                                    console.log("usdtBuyHelper =", h), r.swapStatus = Vn.confirm_pending, yield Ro(h.request).then(v => {
                                        console.log("Eth writeContract success", v), r.windowDataLayer("swap", "confirmTransaction", 2, 0, 0), r.sendDashFx("usdt", e, i), r.swapStatus = Vn.in_progess, r.checkTRansaction(v.hash, "usdt", e, i)
                                    }, v => {
                                        console.log("Eth writeContract error", v), r.swapStatus = Vn.failed
                                    })
                                });
                                return function(h) {
                                    return u.apply(this, arguments)
                                }
                            }(), u => {
                                r.popupService.messagePopup("warning", r.transletService.instant("max_token_exceed", {
                                    maxTokensToBuy: r.balanceData.maxTokensToBuy
                                }), r.transletService.instant("max_token_title")), r.swapStatus = Vn.rejected, console.log(u.message)
                            })
                        })()
                    }
                    checkTRansaction(e, i, s, r) {
                        var l = this;
                        return (0, ut.Z)(function*() {
                            yield IT({
                                hash: e
                            }).then(u => {
                                console.log("checkTansaction success", u), l.getMetaData(), l.swapStatus = Vn.complete, l.swapHash = u.transactionHash, l.sendBWData(i, s, r), l.windowDataLayer("swap", "swapSuccessful", 3, 1, 0, i, xt.tokenName, r, s)
                            }, u => {
                                console.log("checkTansaction error", u), l.getMetaData(), l.swapStatus = Vn.failed
                            })
                        })()
                    }
                    windowDataLayer(e, i, s, r, l, u = "", h = "", v = 0, _ = 0) {
                        var C = this;
                        return (0, ut.Z)(function*() {
                            window.dataLayer = window.dataLayer || [], window.dataLayer.push({
                                event: "workflowStep",
                                walletAddress: C.walletAddress,
                                workflowName: e,
                                workflowStepNumber: s,
                                workflowStepName: i,
                                workflowCompleteFlag: r,
                                workflowErrorCode: l,
                                transactionId: 0 === r ? void 0 : C.swapHash,
                                swapFromValue: 0 === r ? void 0 : v,
                                swapToValue: 0 === r ? void 0 : _,
                                swapFromCurrency: 0 === r ? void 0 : u,
                                swapToCurrency: 0 === r ? void 0 : h,
                                presaleStage: 0 === r ? void 0 : C.balanceData.currentStep,
                                stageTokenValue: 0 === r ? void 0 : C.tokenomics[C.balanceData.currentStep].tokenUSDT,
                                swapFromValueUsd: 0 === r ? void 0 : yield C.getDynamicAmount(_, "getUSDTAmount")
                            })
                        })()
                    }
                    sendDashFx = (e, i, s, r = !1) => {
                        if (xt.production) {
                            const l = this.balanceData.userClaimable || 0,
                                u = {
                                    walletAddress: this.walletAddress,
                                    iid: xt.iidDashFx,
                                    event: r ? "lead_success" : l > i ? "revenue" : "conversion",
                                    purchaseType: r ? null : e,
                                    purchaseTokens: +i,
                                    purchaseTypeAmount: +s,
                                    purchaseUsdAmount: "usdt" === e ? +s : + +(i * this.tokenomics[this.balanceData.currentStep].tokenUSDT).toFixed(2),
                                    ipAddress: "",
                                    clickId: Ty("clickId"),
                                    source: Ty("source")
                                };
                            console.log("DashFx data =", l, u), this.http.post(xt.urlDashFx, u).subscribe(h => {
                                console.log("DashFx success response", h)
                            }, h => {
                                console.log("DashFx error response", h)
                            })
                        }
                    };
                    claim() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            console.log("Claim called");
                            const {
                                request: i
                            } = yield so({ ...Qr,
                                functionName: "claim",
                                chainId: xt.eth.chainIdInt,
                                args: [],
                                account: e.walletAddress
                            });
                            yield Ro(i).then(s => {
                                console.log("Claim success", s)
                            }, s => {
                                console.log("Claim error", s)
                            })
                        })()
                    }
                    refer() {
                        this.walletAddress && "" != this.walletAddress && this.http.post(xt.referUrl, {
                            walletAddress: this.walletAddress,
                            iid: xt.iidDashFx
                        }).subscribe(i => {
                            console.log("ReferURL success response", i), this.referUrl = i.data.url
                        }, i => {
                            console.log("ReferURL error response", i)
                        })
                    }
                    claimStake() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            console.log("Claim called"), e.swapStatus = Vn.in_progess;
                            const {
                                request: i
                            } = yield so({ ...Qr,
                                functionName: "claimAndStake",
                                chainId: xt.eth.chainIdInt,
                                args: [],
                                account: e.walletAddress
                            });
                            yield Ro(i).then(s => {
                                console.log("claimStake success", s), e.checkTRansaction(s.hash, "claimstake", 0, 0)
                            }, s => {
                                console.log("claimStake error", s), e.swapStatus = Vn.failed
                            })
                        })()
                    }
                    claimStakeRewards() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            console.log("Claim called");
                            const {
                                request: i
                            } = yield so({ ...Bo,
                                functionName: "harvestRewards",
                                chainId: xt.eth.chainIdInt,
                                args: [],
                                account: e.walletAddress
                            });
                            yield Ro(i).then(s => {
                                console.log("claimStake success", s)
                            }, s => {
                                console.log("claimStake error", s)
                            })
                        })()
                    }
                    withdrawStake() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            console.log("Claim called");
                            const {
                                request: i
                            } = yield so({ ...Bo,
                                functionName: "withdraw",
                                chainId: xt.bsc.chainIdInt,
                                args: [],
                                account: e.walletAddress
                            });
                            yield Ro(i).then(s => {
                                console.log("claimStake success", s)
                            }, s => {
                                console.log("claimStake error", s)
                            })
                        })()
                    }
                    createStake(e) {
                        var i = this;
                        return (0, ut.Z)(function*() {
                            const s = yield ru({
                                contracts: [{ ...$B,
                                    functionName: "allowance",
                                    chainId: i.chainId,
                                    args: [i.walletAddress, xt.stakingAddress]
                                }]
                            });
                            console.log("createStake allowanceData =", s);
                            const r = +(0, Xs.d)(s[0].result),
                                l = +e;
                            if (console.log(l, r, e), l > +r) {
                                const {
                                    request: u
                                } = yield so({ ...$B,
                                    chainId: i.chainId,
                                    functionName: "approve",
                                    args: [xt.stakingAddress, "100000000000000000000000000"],
                                    account: i.walletAddress
                                });
                                console.log("approveConfig =", u), i.swapStatus = Vn.approval_pending;
                                const {
                                    hash: h
                                } = yield Ro(u);
                                console.log("createStake approveConfig hash =", h), yield IT({
                                    hash: h
                                }).then(v => {
                                    console.log("approveConfig approve Config success", v), i.swapStatus = Vn.confirm_pending, i.proceedCreateStake(e)
                                }, v => {
                                    console.log("approve Config error", v), i.swapStatus = Vn.rejected
                                })
                            } else i.proceedCreateStake(e)
                        })()
                    }
                    proceedCreateStake(e) {
                        var i = this;
                        return (0, ut.Z)(function*() {
                            const {
                                request: s
                            } = yield so({ ...Bo,
                                functionName: "deposit",
                                chainId: xt.eth.chainIdInt,
                                args: [HB(e.toString())]
                            });
                            i.swapStatus = Vn.confirm_pending, yield Ro(s).then(r => {
                                console.log("proceedCreateStake success", r), i.swapStatus = Vn.in_progess, i.checkTRansaction(r.hash, "", e, 0)
                            }, r => {
                                console.log("Eth createStake error", r), i.swapStatus = Vn.rejected
                            })
                        })()
                    }
                    extendStake(e) {
                        var i = this;
                        return (0, ut.Z)(function*() {
                            const {
                                request: s
                            } = yield so({ ...Bo,
                                functionName: "deposit",
                                chainId: xt.eth.chainIdInt,
                                args: [0, e]
                            });
                            i.swapStatus = Vn.confirm_pending, yield Ro(s).then(r => {
                                console.log("proceedCreateStake success", r), i.swapStatus = Vn.in_progess, i.checkTRansaction(r.hash, "", 0, 0)
                            }, r => {
                                console.log("Eth createStake error", r), i.swapStatus = Vn.rejected
                            })
                        })()
                    }
                    getABI(e, i = !1) {
                        var s = this;
                        return (0, ut.Z)(function*() {
                            return (0, mp.R)({
                                abi: zB.abi,
                                functionName: "buyWithETHWert",
                                args: [s.walletAddress, e, i]
                            })
                        })()
                    }
                    getDynamicAmountWert = (() => {
                        return e = (0, ut.Z)(function*(i) {
                                console.log("getDynamicAmountWert", i);
                                const s = yield ru({
                                    contracts: [{ ...Qr,
                                        functionName: "ethBuyHelper",
                                        chainId: xt.eth.chainIdInt,
                                        args: [i]
                                    }]
                                });
                                let r = +(0, Xs.d)(s[0].result);
                                return console.log("return DynamicAmountWert", r), +r
                            }),
                            function(i) {
                                return e.apply(this, arguments)
                            };
                        var e
                    })();
                    sendBWData = (e, i, s) => {};
                    getChainData() {
                        switch (this.chainId) {
                            case xt.eth.chainIdInt:
                                return xt.eth;
                            case xt.bsc.chainIdInt:
                                return xt.bsc;
                            case xt.poly.chainIdInt:
                                return xt.poly;
                            default:
                                return xt.eth
                        }
                    }
                    getPresaleContract() {
                        switch (this.chainId) {
                            case xt.eth.chainIdInt:
                                return Qr;
                            case xt.bsc.chainIdInt:
                                return cu;
                            case xt.poly.chainIdInt:
                                return uu;
                            default:
                                return Qr
                        }
                    }
                    getUSDTContract() {
                        switch (this.chainId) {
                            case xt.eth.chainIdInt:
                                return jB;
                            case xt.bsc.chainIdInt:
                                return she;
                            case xt.poly.chainIdInt:
                                return ihe;
                            default:
                                return jB
                        }
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)(vt(Ul), vt(So), vt(bl), vt(Ap), vt(Fa))
                    };
                    static\ u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    })
                }
                return t
            })();
            const rD = function() {
                return {
                    "width.px": 14,
                    "height.px": 14
                }
            };

            function rhe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 4), ot(1, "div"), N(2, "h4", 5), ae(3, "connect_wallet"), H(), N(4, "svg-icon", 6), bt("click", function() {
                        return Ot(e), It(Qe().modalRef.hide())
                    }), H()()
                }
                2 & t && (xe(4), Fe("svgStyle", ds(1, rD)))
            }
            const UB = function() {
                    return {
                        "width.px": 32,
                        "height.px": 32
                    }
                },
                ahe = function() {
                    return {
                        "width.px": 20,
                        "height.px": 19,
                        "margin-right.px": 5
                    }
                };

            function ohe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 7)(1, "button", 8), bt("click", function() {
                        return Ot(e), It(Qe().connectWallet("metamask"))
                    }), N(2, "span", 9), ae(3, "metamask"), H(), ot(4, "svg-icon", 10), H(), N(5, "button", 11), bt("click", function() {
                        return Ot(e), It(Qe().connectWallet("wallet"))
                    }), N(6, "span", 9), ae(7, "wallet_connect"), H(), ot(8, "svg-icon", 12), H(), N(9, "button", 13), bt("click", function() {
                        return Ot(e), It(Qe().connectWallet("bw"))
                    }), N(10, "span", 9), ae(11, "Best wallet"), H(), ot(12, "img", 14), H(), N(13, "button", 8), bt("click", function() {
                        Ot(e);
                        const s = Qe(),
                            r = Ta(6);
                        return It(s.openBestWallet(r))
                    }), N(14, "span", 9), ae(15, "Best wallet"), H(), ot(16, "img", 14), H(), N(17, "button", 15), bt("click", function() {
                        return Ot(e), It(Qe().step = 1)
                    }), ot(18, "svg-icon", 16), N(19, "span", 17), ae(20, "no_wallet"), H()()()
                }
                2 & t && (xe(4), Fe("svgStyle", ds(3, UB)), xe(4), Fe("svgStyle", ds(4, UB)), xe(10), Fe("svgStyle", ds(5, ahe)))
            }
            const lhe = function() {
                return {
                    "width.px": 9,
                    "height.px": 16
                }
            };

            function che(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 4)(1, "svg-icon", 18), bt("click", function() {
                        return Ot(e), It(Qe().step = 0)
                    }), H(), N(2, "h4", 5), ae(3, "get_wallet"), H(), N(4, "svg-icon", 19), bt("click", function() {
                        return Ot(e), It(Qe().modalRef.hide())
                    }), H()()
                }
                2 & t && (xe(1), Fe("svgStyle", ds(2, lhe)), xe(3), Fe("svgStyle", ds(3, rD)))
            }
            const uhe = function() {
                return {
                    "width.px": 13,
                    "height.px": 12
                }
            };

            function dhe(t, n) {
                1 & t && (N(0, "div", 7)(1, "div", 20)(2, "div", 21)(3, "div", 22)(4, "div", 23)(5, "div", 24)(6, "div", 25)(7, "div", 26)(8, "div", 27), ot(9, "svg-icon", 28), H()()()()()(), N(10, "div", 22)(11, "div", 29)(12, "div", 30)(13, "div", 31)(14, "div", 32)(15, "div", 33), ot(16, "svg-icon", 34), H()()()()()(), N(17, "div", 22)(18, "div", 35)(19, "div", 36)(20, "div", 37)(21, "div", 38)(22, "div", 39), ot(23, "svg-icon", 40), H()()()()()(), N(24, "div", 22)(25, "div", 41)(26, "div", 42)(27, "div", 43)(28, "div", 44)(29, "div", 45), ot(30, "svg-icon", 46), H()()()()()(), N(31, "div", 22)(32, "div", 47)(33, "div", 48)(34, "div", 49)(35, "div", 50)(36, "div", 51), ot(37, "svg-icon", 52), H()()()()()()(), N(38, "div", 53), ot(39, "svg-icon", 54), H()(), N(40, "div", 55)(41, "h5", 56), ae(42, "exploring_web"), H(), N(43, "p", 57), ae(44, "exploring_des"), H(), N(45, "a", 58)(46, "span", 59), ae(47, "choose_first_wallet"), H(), ot(48, "svg-icon", 60), H()()()), 2 & t && (xe(48), Fe("svgStyle", ds(1, uhe)))
            }

            function hhe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 0)(1, "div", 4), ot(2, "div"), N(3, "h4", 61), ae(4, "download_best_wallet"), H(), N(5, "svg-icon", 6), bt("click", function() {
                        return Ot(e), It(Qe().modalRef.hide())
                    }), H()(), N(6, "div", 62)(7, "div", 63), ae(8, "install_app"), H(), N(9, "div", 64)(10, "div", 65)(11, "div", 66), ae(12, "iOS"), H(), ot(13, "img", 67), N(14, "a", 68), ot(15, "img", 69), H()(), N(16, "div", 70)(17, "div", 66), ae(18, "Android"), H(), ot(19, "img", 71), N(20, "a", 72), ot(21, "img", 73), H()()(), N(22, "div", 74), ae(23, "already_have"), H(), N(24, "div", 75), ae(25, "hit_btn_connect"), H(), N(26, "button", 76), bt("click", function() {
                        return Ot(e), It(Qe().connectWallet("walletBW"))
                    }), N(27, "span", 9), ae(28, "connect_Wallet"), H()()()()
                }
                2 & t && (xe(5), Fe("svgStyle", ds(1, rD)))
            }
            let l0 = (() => {
                class t {
                    modalService;
                    modalRef;
                    walletConnectService;
                    step = 0;
                    isBsNetwork = !1;
                    constructor(e, i, s) {
                        this.modalService = e, this.modalRef = i, this.walletConnectService = s
                    }
                    ngOnInit() {}
                    connectWallet(e) {
                        this.walletConnectService.connectWallet(e, this.isBsNetwork), this.modalRef.hide()
                    }
                    openBestWallet(e) {
                        this.modalRef.hide(), setTimeout(() => {
                            this.modalRef = this.modalService.show(e, {
                                class: "modal-md modal-dialog-centered",
                                backdrop: "static"
                            })
                        }, 500)
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(Yl), $e(bd), $e(du))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-connect"]
                        ],
                        decls: 7,
                        vars: 4,
                        consts: [
                            [1, "p-4", "connect"],
                            ["class", "d-flex justify-content-between align-items-center", 4, "ngIf"],
                            ["class", "mt-4 content", 4, "ngIf"],
                            ["bestwallet", ""],
                            [1, "d-flex", "justify-content-between", "align-items-center"],
                            ["translate", "", 1, "text-center", "fw-semibold", "fs-5", "m-0"],
                            ["src", "./assets/images/svg-icons/close.svg", 1, "cursor-pointer", 3, "svgStyle", "click"],
                            [1, "mt-4", "content"],
                            ["type", "button", 1, "btn", "btn-sm", "border-0", "rounded-1", "bg-primary", "py-2", "px-3", "btn-light", "w-100", "d-none", "d-md-flex", "justify-content-between", "align-items-center", "mb-3", 3, "click"],
                            ["translate", "", 1, "d-inline-block", "text-white"],
                            ["src", "./assets/images/svg-icons/metamask.svg", 3, "svgStyle"],
                            ["type", "button", 1, "btn", "btn-sm", "border-0", "rounded-1", "bg-primary", "py-2", "px-3", "btn-light", "w-100", "d-flex", "justify-content-between", "align-items-center", "mb-3", 3, "click"],
                            ["src", "./assets/images/svg-icons/wallet.svg", 3, "svgStyle"],
                            ["type", "button", 1, "btn", "btn-sm", "border-0", "rounded-1", "bg-primary", "py-2", "px-3", "btn-light", "w-100", "d-flex", "d-md-none", "justify-content-between", "align-items-center", "mb-3", 3, "click"],
                            ["src", "./assets/images/bw.png", "height", "32", "width", "32"],
                            ["type", "button", 1, "btn", "btn-clear", "w-100", "d-flex", "justify-content-center", "align-items-center", "aniBtn", 3, "click"],
                            ["src", "./assets/images/svg-icons/ani-wallet.svg", 3, "svgStyle"],
                            ["translate", "", 1, "d-inline-block"],
                            ["src", "./assets/images/svg-icons/back.svg", 1, "cursor-pointer", "white", 3, "svgStyle", "click"],
                            ["src", "./assets/images/svg-icons/close.svg", 1, "cursor-pointer", "white", 3, "svgStyle", "click"],
                            [1, "hoHHXf"],
                            [1, "sc-fLcnxK", "fWzKsv"],
                            [1, "sc-ezOQGI", "cSaAIp"],
                            ["data-projection-id", "1250", 1, "sc-iveFHk", "jBAplQ"],
                            ["data-projection-id", "1251", 1, "sc-cwSeag", "fsywKZ"],
                            ["data-projection-id", "1252", 1, "sc-iJnaPW", "iUmxfL"],
                            ["data-projection-id", "1253", 1, "sc-gikAfH", "evkwbC"],
                            ["data-projection-id", "1254", 1, "sc-lllmON", "bPXKDV"],
                            ["src", "./assets/images/svg-icons/animated/1.svg"],
                            ["data-projection-id", "1256", 1, "sc-iveFHk", "jBAplQ"],
                            ["data-projection-id", "1257", 1, "sc-cwSeag", "fsywKZ"],
                            ["data-projection-id", "1258", 1, "sc-iJnaPW", "iUmxfL"],
                            ["data-projection-id", "1259", 1, "sc-gikAfH", "evkwbC"],
                            ["data-projection-id", "1260", 1, "sc-lllmON", "bPXKDV"],
                            ["src", "./assets/images/svg-icons/animated/2.svg"],
                            ["data-projection-id", "1262", 1, "sc-iveFHk", "jBAplQ"],
                            ["data-projection-id", "1263", 1, "sc-cwSeag", "fsywKZ"],
                            ["data-projection-id", "1264", 1, "sc-iJnaPW", "iUmxfL"],
                            ["data-projection-id", "1265", 1, "sc-gikAfH", "evkwbC"],
                            ["data-projection-id", "1266", 1, "sc-lllmON", "bPXKDV"],
                            ["src", "./assets/images/svg-icons/animated/3.svg"],
                            ["data-projection-id", "1268", 1, "sc-iveFHk", "jBAplQ"],
                            ["data-projection-id", "1269", 1, "sc-cwSeag", "fsywKZ"],
                            ["data-projection-id", "1270", 1, "sc-iJnaPW", "iUmxfL"],
                            ["data-projection-id", "1271", 1, "sc-gikAfH", "evkwbC"],
                            ["data-projection-id", "1272", 1, "sc-lllmON", "bPXKDV"],
                            ["src", "./assets/images/svg-icons/animated/4.svg"],
                            ["data-projection-id", "1274", 1, "sc-iveFHk", "jBAplQ"],
                            ["data-projection-id", "1275", 1, "sc-cwSeag", "fsywKZ"],
                            ["data-projection-id", "1276", 1, "sc-iJnaPW", "iUmxfL"],
                            ["data-projection-id", "1277", 1, "sc-gikAfH", "evkwbC"],
                            ["data-projection-id", "1278", 1, "sc-lllmON", "bPXKDV"],
                            ["src", "./assets/images/svg-icons/animated/5.svg"],
                            [1, "sc-bBABsx", "jLseHP"],
                            ["src", "./assets/images/svg-icons/animated/bg.svg"],
                            [1, "text-center"],
                            ["translate", "", 1, ""],
                            ["translate", "", 1, "mt-3"],
                            ["type", "button", "href", "https://ethereum.org/en/wallets/find-wallet/", "target", "_blank", 1, "btn", "btn-sm", "py-2", "px-3", "btn-secondary", "w-100", "d-flex", "justify-content-center", "align-items-center", "mt-4"],
                            ["translate", "", 1, "d-inline-block", "me-2"],
                            ["src", "./assets/images/svg-icons/ani-arrow.svg", 1, "arrow", 3, "svgStyle"],
                            ["translate", "", 1, "text-center", "fw-semibold", "fs-4", "m-0"],
                            [1, "mt-4", "content", "d-flex", "flex-column", "align-items-center", "justify-content-between"],
                            ["translate", "", 1, "text-center"],
                            [1, "d-flex", "align-items-center", "justify-content-around"],
                            [1, "d-flex", "flex-column", "align-items-center", "me-3"],
                            ["translate", "", 1, "fw-bold", "fs-4"],
                            ["src", "./assets/images/qr-ios.svg", "alt", ""],
                            ["href", "https://apps.apple.com/gb/app/best-wallet/id6451312105", "target", "_blank"],
                            ["src", "./assets/images/ios.svg", "alt", ""],
                            [1, "d-flex", "flex-column", "align-items-center", "ms-3"],
                            ["src", "./assets/images/qr-and.svg", "alt", ""],
                            ["href", "https://play.google.com/store/apps/details?id=com.bestwallet.mobile", "target", "_blank"],
                            ["src", "./assets/images/and.svg", "alt", ""],
                            ["translate", "", 1, "fw-semibold", "my-3", "fs-4"],
                            ["translate", "", 1, "text-center", "mb-3"],
                            ["type", "button", 1, "btn", "btn-sm", "border-0", "rounded-1", "bg-primary", "py-2", "px-3", "btn-light", "w-50", "d-flex", "justify-content-center", "align-items-center", "mb-3", 3, "click"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "div", 0), rt(1, rhe, 5, 2, "div", 1), rt(2, ohe, 21, 6, "div", 2), rt(3, che, 5, 4, "div", 1), rt(4, dhe, 49, 2, "div", 2), H(), rt(5, hhe, 29, 2, "ng-template", null, 3, Ea)), 2 & i && (xe(1), Fe("ngIf", 0 === s.step), xe(1), Fe("ngIf", 0 === s.step), xe(1), Fe("ngIf", 1 === s.step), xe(1), Fe("ngIf", 1 === s.step))
                        },
                        dependencies: [Ji, Xl, Ir],
                        styles: ['@keyframes _ngcontent-%COMP%_iJJxDF{0%{opacity:0;transform:scale(0) translateY(40%)}to{opacity:1;transform:none}}@keyframes _ngcontent-%COMP%_fFCEAC{0%,to{transform:none}50%{transform:translateY(-10%)}}@keyframes _ngcontent-%COMP%_hfwTSV{0%,to{transform:rotate(-3deg)}50%{transform:rotate(3deg)}}@keyframes _ngcontent-%COMP%_FUkhV{0%{opacity:0;transform:scale(.9)}to{opacity:1;transform:none}}.content[_ngcontent-%COMP%]{transition:all .6s ease-out}.content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]{transition:color .2s ease-out 0s,transform .2s ease-out 0s}.content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{transition:all .1s ease-out 0s;display:block;position:relative;top:2px;left:-1px;transform:translateZ(0)}.content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]   path[_ngcontent-%COMP%]:last-of-type{transform-origin:0px 0px;transform:scaleX(1.3) skewY(-12deg);opacity:0}.content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]   path[_ngcontent-%COMP%], .content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%]{transition:all .1s ease-out 0s}.content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%]{transform:translate(20%,-15%)}.content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]:hover   svg[_ngcontent-%COMP%]   path[_ngcontent-%COMP%], .content[_ngcontent-%COMP%]   .aniBtn[_ngcontent-%COMP%]:hover   svg[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%]{opacity:1;transform:none}.content[_ngcontent-%COMP%]   .white[_ngcontent-%COMP%], .content[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%]{color:#fff}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]{position:relative;margin:16px auto 20px;height:190px;max-width:295px;pointer-events:none;-webkit-user-select:none;user-select:none}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]{position:absolute;inset:0;z-index:2}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]{position:absolute;inset:0;animation:.75s cubic-bezier(.19,1,.22,1) 0s 1 normal both running _ngcontent-%COMP%_iJJxDF}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]   .sc-cwSeag[_ngcontent-%COMP%]{transform:translate(-50%,-50%)}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]   .fsywKZ[_ngcontent-%COMP%]{position:absolute}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]   .jBAplQ[_ngcontent-%COMP%]{position:absolute;inset:0;animation-duration:0s;animation-timing-function:cubic-bezier(.455,.03,.515,.955);animation-iteration-count:infinite;animation-direction:normal;animation-fill-mode:both;animation-play-state:running;animation-name:none;animation-delay:inherit}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]   .iUmxfL[_ngcontent-%COMP%]{position:relative;animation:3.6s cubic-bezier(.455,.03,.515,.955) 0s infinite normal both running _ngcontent-%COMP%_fFCEAC}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]   .evkwbC[_ngcontent-%COMP%]{position:relative;animation:3.2s cubic-bezier(.455,.03,.515,.955) 0s infinite normal both running _ngcontent-%COMP%_hfwTSV}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]   .bPXKDV[_ngcontent-%COMP%]{position:relative;overflow:hidden;height:58px;width:58px;border-radius:13.84px;box-shadow:#0000000d 0 0 0 1px,#00000008 0 2px 20px}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]   .bPXKDV[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{display:block;width:100%;height:100%}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(1){z-index:2;animation-delay:0ms}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(1)   .sc-iveFHk[_ngcontent-%COMP%]{transform:translate(50%,50%)}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(1)   .sc-iveFHk[_ngcontent-%COMP%]   .sc-lllmON[_ngcontent-%COMP%]{border-radius:17.2px;width:72px;height:72px}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(1)   .sc-iJnaPW[_ngcontent-%COMP%]{animation-delay:-.2s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(1)   .sc-gikAfH[_ngcontent-%COMP%]{animation-delay:0ms}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(2){z-index:1;animation-delay:60ms}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(2)   .sc-iveFHk[_ngcontent-%COMP%]{transform:translate(21%,21.5%)}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(2)   .sc-iJnaPW[_ngcontent-%COMP%]{animation-delay:-.6s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(2)   .sc-gikAfH[_ngcontent-%COMP%]{animation-delay:-.6s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(3){z-index:1;animation-delay:30ms}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(3)   .sc-iveFHk[_ngcontent-%COMP%]{transform:translate(78%,14%)}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(3)   .sc-iJnaPW[_ngcontent-%COMP%]{animation-delay:-.8s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(3)   .sc-gikAfH[_ngcontent-%COMP%]{animation-delay:-1.2s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(4){z-index:1;animation-delay:90ms}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(4)   .sc-iveFHk[_ngcontent-%COMP%]{transform:translate(22.5%,76%)}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(4)   .sc-iJnaPW[_ngcontent-%COMP%]{animation-delay:-.3s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(4)   .sc-gikAfH[_ngcontent-%COMP%]{animation-delay:-1.8s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(5){z-index:1;animation-delay:.12s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(5)   .sc-iveFHk[_ngcontent-%COMP%]{transform:translate(76%,80%)}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(5)   .sc-iJnaPW[_ngcontent-%COMP%]{animation-delay:-3.2s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .fWzKsv[_ngcontent-%COMP%]   .cSaAIp[_ngcontent-%COMP%]:nth-child(5)   .sc-gikAfH[_ngcontent-%COMP%]{animation-delay:-2.4s}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .jLseHP[_ngcontent-%COMP%]{z-index:1;position:absolute;inset:-2px 0 0;overflow:hidden;animation:1s ease .1s 1 normal both running _ngcontent-%COMP%_FUkhV}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .jLseHP[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{display:block;width:100%;height:auto}.content[_ngcontent-%COMP%]   .hoHHXf[_ngcontent-%COMP%]   .jLseHP[_ngcontent-%COMP%]:before{content:"";position:absolute;background:url(/assets/images/svg-icons/animated/cover.png) 0 0/cover;background-size:100%;inset:0}.connect[_ngcontent-%COMP%]{border-radius:10px}']
                    })
                }
                return t
            })();
            const fhe = function() {
                return {
                    "width.px": 20,
                    "height.px": 20
                }
            };
            let phe = (() => {
                class t {
                    modalRef;
                    popupService;
                    translateService;
                    url = "";
                    constructor(e, i, s) {
                        this.modalRef = e, this.popupService = i, this.translateService = s
                    }
                    ngOnInit() {}
                    copy() {
                        this.popupService.messsageAlert("success", this.translateService.instant("successCopy"))
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(bd), $e(Ap), $e(Fa))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-refer"]
                        ],
                        decls: 14,
                        vars: 4,
                        consts: [
                            [1, "modal-header"],
                            ["translate", "", 1, "modal-title", "text-center"],
                            [1, "modal-body"],
                            ["translate", "", 1, "fw-medium", "font-15", "text-center"],
                            ["type", "button", "ngxClipboard", "", 1, "btn", "btn-sm", "btn-outline-primary", "my-3", "d-block", "refer-btn", "wx-250", "mx-auto", 3, "cbContent", "click"],
                            [1, "d-flex", "align-items-center", "justify-content-center"],
                            [1, "d-inline-block", "hide-overflow", "font-13", "text-primary"],
                            ["src", "./assets/images/svg-icons/copy.svg", 1, "", 3, "svgStyle"],
                            [1, "footer"],
                            ["type", "button", "translate", "", 1, "btn", "btn-sm", "btn-primary", "w-100", "mt-3", "icon-btn", "d-block", 3, "click"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "div", 0)(1, "h4", 1), ae(2, "ref_link"), H()(), N(3, "div", 2)(4, "div", 3), ae(5, "ref_text"), H(), N(6, "button", 4), bt("click", function() {
                                return s.copy()
                            }), N(7, "div", 5)(8, "span", 6), ae(9), H(), ot(10, "svg-icon", 7), H()(), N(11, "div", 8)(12, "button", 9), bt("click", function() {
                                return s.modalRef.hide()
                            }), ae(13, "close"), H()()()), 2 & i && (xe(6), Fe("cbContent", s.url), xe(3), qt(s.url), xe(1), Fe("svgStyle", ds(3, fhe)))
                        },
                        dependencies: [MZ, Xl, Ir],
                        styles: [".hide-overflow[_ngcontent-%COMP%]{text-overflow:ellipsis;white-space:nowrap;word-break:break-all;overflow:hidden}"]
                    })
                }
                return t
            })();

            function ghe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 3)(1, "p", 4), ae(2), Yt(3, "translate"), H(), N(4, "div", 5)(5, "button", 6), bt("click", function() {
                        return Ot(e), It(Qe().modalRef.hide())
                    }), ae(6, "ok"), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(2), qt(xn(3, 1, e.isStake ? "claim_stale_help" : "claim_help"))
                }
            }

            function mhe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 3), ot(1, "img", 7), N(2, "div", 4), ae(3), Yt(4, "translate"), H(), N(5, "a", 8), bt("click", function() {
                        return Ot(e), It(Qe().modalRef.hide())
                    }), ae(6, "Dashboard"), H()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(3), qt(xn(4, 2, "stake_claim_success")), xe(2), Dr("href", "", e.lang, "/dashboard", jr)
                }
            }
            let kp = (() => {
                class t {
                    eventService;
                    modalRef;
                    walletConnect;
                    SwapStatus = Vn;
                    isStake = !1;
                    lang = "en";
                    isWithdraw = !1;
                    constructor(e, i, s) {
                        this.eventService = e, this.modalRef = i, this.walletConnect = s, this.eventService.getLang().subscribe(r => {
                            this.lang = r || "en"
                        })
                    }
                    get status() {
                        return this.walletConnect.swapStatus
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(bl), $e(bd), $e(du))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-claim"]
                        ],
                        decls: 6,
                        vars: 5,
                        consts: [
                            [1, "modal-header"],
                            [1, "modal-title", "text-center"],
                            ["class", "modal-body text-center", 4, "ngIf"],
                            [1, "modal-body", "text-center"],
                            [1, "text-black", "text-center", "mb-3", "font-sm-15", "fw-semibold"],
                            [1, "footer"],
                            ["type", "button", "translate", "", 1, "btn", "btn-primary", "w-100", 3, "click"],
                            ["src", "./assets/images/popup-icons/success.svg", "alt", "complete", 1, "statusIcon"],
                            ["type", "button", "translate", "", 1, "btn", "btn-primary", "w-100", 3, "href", "click"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "div", 0)(1, "h4", 1), ae(2), Yt(3, "translate"), H()(), rt(4, ghe, 7, 3, "div", 2), rt(5, mhe, 7, 4, "div", 2)), 2 & i && (xe(2), qt(xn(3, 3, s.isStake ? "claim_stake_title" : s.isWithdraw ? "withdraw_title" : "claim_title")), xe(2), Fe("ngIf", s.status != s.SwapStatus.complete), xe(1), Fe("ngIf", s.status == s.SwapStatus.complete))
                        },
                        dependencies: [Ji, Ir, Vc],
                        styles: [".modal-body[_ngcontent-%COMP%]{min-height:auto!important}"]
                    })
                }
                return t
            })();
            const WB = {
                randomUUID: typeof crypto < "u" && crypto.randomUUID && crypto.randomUUID.bind(crypto)
            };
            let c0;
            const vhe = new Uint8Array(16);

            function yhe() {
                if (!c0 && (c0 = typeof crypto < "u" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto), !c0)) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
                return c0(vhe)
            }
            const nr = [];
            for (let t = 0; t < 256; ++t) nr.push((t + 256).toString(16).slice(1));
            const XB = function bhe(t, n, e) {
                if (WB.randomUUID && !n && !t) return WB.randomUUID();
                const i = (t = t || {}).random || (t.rng || yhe)();
                if (i[6] = 15 & i[6] | 64, i[8] = 63 & i[8] | 128, n) {
                    e = e || 0;
                    for (let s = 0; s < 16; ++s) n[e + s] = i[s];
                    return n
                }
                return function GB(t, n = 0) {
                    return nr[t[n + 0]] + nr[t[n + 1]] + nr[t[n + 2]] + nr[t[n + 3]] + "-" + nr[t[n + 4]] + nr[t[n + 5]] + "-" + nr[t[n + 6]] + nr[t[n + 7]] + "-" + nr[t[n + 8]] + nr[t[n + 9]] + "-" + nr[t[n + 10]] + nr[t[n + 11]] + nr[t[n + 12]] + nr[t[n + 13]] + nr[t[n + 14]] + nr[t[n + 15]]
                }(i)
            };
            var xhe = I(3703),
                _he = I.n(xhe);

            function whe(t, n) {
                1 & t && (N(0, "h4", 5), ae(1, "buy_now"), H())
            }

            function Che(t, n) {
                1 & t && (N(0, "h4", 5), ae(1, "wert_mount_title"), H())
            }
            const She = function(t) {
                return {
                    token: t
                }
            };

            function The(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 6)(1, "p", 7), ae(2), Yt(3, "translate"), H(), N(4, "p", 8), ae(5, "meme_token"), H(), N(6, "button", 9), bt("click", function() {
                        return Ot(e), It(Qe().showWidget())
                    }), ae(7, "continue"), H()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(2), qt(hs(3, 1, "wert_disclaimer", hn(4, She, e.token)))
                }
            }

            function Dhe(t, n) {
                1 & t && (N(0, "div", 6), ot(1, "img", 10), N(2, "p", 11), ae(3, "wert_mount_desc"), H()())
            }
            const Ahe = function() {
                return {
                    "width.px": 14,
                    "height.px": 14
                }
            };
            let khe = (() => {
                    class t {
                        modalRef;
                        http;
                        walletConnect;
                        token = xt.tokenName;
                        baseToken;
                        swapToken;
                        isStake = !1;
                        walletAddress;
                        wertWidget;
                        wertOptions = {
                            partner_id: xt.partnerId,
                            origin: xt.wertOrigin,
                            click_id: XB(),
                            lang: "en",
                            theme: "light",
                            currency: "USD",
                            commodity: xt.production ? "ETH:ethereum" : "ETH:Ethereum-Goerli",
                            height: 506
                        };
                        SwapStatus = Vn;
                        mountError = !1;
                        wertIframe;
                        closeBtn;
                        currentStep = 0;
                        constructor(e, i, s) {
                            this.modalRef = e, this.http = i, this.walletConnect = s
                        }
                        ngOnInit() {}
                        showWidget() {
                            var e = this;
                            return (0, ut.Z)(function*() {
                                e.currentStep = 1;
                                const i = yield e.walletConnect.getDynamicAmountWert(e.baseToken);
                                let s = {
                                    address: e.walletAddress,
                                    commodity: "ETH",
                                    commodity_amount: +(1.02 * i).toFixed(8),
                                    pk_id: "key1",
                                    sc_address: xt.eth.presaleAddress,
                                    sc_id: XB(),
                                    sc_input_data: yield e.walletConnect.getABI(e.baseToken, e.isStake)
                                };
                                e.http.post(xt.wertUrl, s).subscribe(r => {
                                    const l = r.data;
                                    let u = !1;
                                    console.log("wertOptions =", l, e.wertOptions), e.wertWidget = new(_he())({ ...l,
                                        ...e.wertOptions,
                                        listeners: {
                                            loaded: () => {
                                                console.log("widget loaded:"), e.walletConnect.swapStatus = Vn.confirm_pending;
                                                const h = window.parent.document.getElementsByTagName("iframe");
                                                e.wertIframe = h[h.length - 1], e.modalRef.hide()
                                            },
                                            close: () => {
                                                console.log("widget closed:"), e.walletConnect.swapStatus = Vn.rejected
                                            },
                                            position: h => console.log("step:", h.step),
                                            "payment-status": h => {
                                                console.log("payment-status:", h), ("progress" == h.status || "pending" == h.status) && (e.walletConnect.swapStatus = Vn.in_progess), ("progress" == h.status || "success" == h.status) && !u && (e.walletConnect.sendDashFx("eth", e.baseToken, +i.toFixed(8)), u = !0), "success" == h.status && (e.walletConnect.checkTRansaction(h.tx_id, "ETH", e.baseToken, e.swapToken), e.wertWidget.destroy(), e.wertIframe.remove()), "canceled" == h.status && (e.walletConnect.swapStatus = Vn.rejected)
                                            },
                                            error: h => {
                                                console.log("error:", h), e.walletConnect.swapStatus = Vn.failed
                                            }
                                        }
                                    }), e.wertWidget.mount()
                                }, r => {
                                    console.log("wert error response", r), e.mountError = !0, e.walletConnect.swapStatus = Vn.not_started
                                })
                            })()
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(bd), $e(Ul), $e(du))
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["app-wert"]
                            ],
                            decls: 9,
                            vars: 6,
                            consts: [
                                [1, "p-4"],
                                [1, "d-flex", "justify-content-between", "align-items-center"],
                                ["class", "text-center fw-semibold fs-5 m-0", "translate", "", 4, "ngIf"],
                                ["src", "./assets/images/svg-icons/close.svg", 1, "cursor-pointer", 3, "svgStyle", "click"],
                                ["class", "mt-4 content text-center", 4, "ngIf"],
                                ["translate", "", 1, "text-center", "fw-semibold", "fs-5", "m-0"],
                                [1, "mt-4", "content", "text-center"],
                                ["translate", "", 1, ""],
                                ["translate", ""],
                                ["translate", "", 1, "btn", "btn-primary", "font-14", "mt-2", "mx-auto", 3, "click"],
                                ["src", "./assets/images/svg-icons/loading.png", "alt", "loading", 1, "worker"],
                                ["translate", "", "translate", "", 1, ""]
                            ],
                            template: function(i, s) {
                                1 & i && (N(0, "div", 0)(1, "div", 1)(2, "div"), ae(3, "\xa0\xa0\xa0"), H(), rt(4, whe, 2, 0, "h4", 2), rt(5, Che, 2, 0, "h4", 2), N(6, "svg-icon", 3), bt("click", function() {
                                    return s.modalRef.hide()
                                }), H()(), rt(7, The, 8, 6, "div", 4), rt(8, Dhe, 4, 0, "div", 4), H()), 2 & i && (xe(4), Fe("ngIf", 0 === s.currentStep), xe(1), Fe("ngIf", 1 === s.currentStep), xe(1), Fe("svgStyle", ds(5, Ahe)), xe(1), Fe("ngIf", 0 === s.currentStep), xe(1), Fe("ngIf", 1 === s.currentStep))
                            },
                            dependencies: [Ji, Xl, Ir, Vc],
                            styles: [".worker[_ngcontent-%COMP%]{display:block;margin:20px auto;max-width:270px}"]
                        })
                    }
                    return t
                })(),
                Ehe = (() => {
                    class t {
                        el;
                        noDecimal = 10;
                        regex = new RegExp(/^\d*\.?\d{0,2}$/g);
                        specialKeys = ["Backspace", "Tab", "End", "Home", "-", "ArrowLeft", "ArrowRight", "Del", "Delete"];
                        constructor(e) {
                            this.el = e
                        }
                        ngOnChanges(e) {
                            this.setRegex()
                        }
                        ngOnInit() {
                            this.setRegex()
                        }
                        setRegex() {
                            0 !== this.noDecimal && this.noDecimal ? 6 === this.noDecimal ? this.regex = new RegExp(/^\d*\.?\d{0,6}$/g) : 10 === this.noDecimal && (this.regex = new RegExp(/^\d*\.?\d{0,10}$/g)) : this.regex = new RegExp(/^[\d]*$/g)
                        }
                        onPaste(e) {
                            return !1
                        }
                        onKeyDown(e) {
                            if (-1 !== this.specialKeys.indexOf(e.key)) return;
                            let i = this.el.nativeElement.value;
                            const s = this.el.nativeElement.selectionStart,
                                r = [i.slice(0, s), "Decimal" == e.key ? "." : e.key, i.slice(s)].join("");
                            r && !String(r).match(this.regex) && e.preventDefault()
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(ii))
                        };
                        static\ u0275dir = tn({
                            type: t,
                            selectors: [
                                ["", "appTwoDigitDecimalNumber", ""]
                            ],
                            hostBindings: function(i, s) {
                                1 & i && bt("paste", function(l) {
                                    return s.onPaste(l)
                                })("keydown", function(l) {
                                    return s.onKeyDown(l)
                                })
                            },
                            inputs: {
                                noDecimal: "noDecimal"
                            },
                            features: [ni]
                        })
                    }
                    return t
                })();
            const Mhe = ["swapIn"],
                YB = function(t) {
                    return {
                        selected: t
                    }
                };

            function Phe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 5)(1, "button", 6), bt("click", function() {
                        return Ot(e), It(Qe().changeTab(!0))
                    }), ot(2, "img", 7), N(3, "span", 8), ae(4), H()(), N(5, "button", 6), bt("click", function() {
                        return Ot(e), It(Qe().changeTab(!1))
                    }), ot(6, "img", 9), N(7, "span", 10), ae(8, "USDT"), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngClass", hn(4, YB, e.isNative)), xe(1), Dr("src", "/assets/images/svg-icons/", e.modeName, ".svg", jr), xe(2), qt(e.modeName), xe(1), Fe("ngClass", hn(6, YB, !e.isNative))
                }
            }

            function Ohe(t, n) {
                if (1 & t && (N(0, "div", 13), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), nm("", e.modeName, " ", xn(2, 3, "balance"), " ", e.convertNum(e.nativeBal, 4), "")
                }
            }

            function Ihe(t, n) {
                if (1 & t && (N(0, "div", 13), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), Mc("USDT ", xn(2, 2, "balance"), " ", e.convertNum(e.usdtBal, 4), "")
                }
            }

            function Lhe(t, n) {
                if (1 & t && (N(0, "div", 11), rt(1, Ohe, 3, 5, "div", 12), rt(2, Ihe, 3, 4, "div", 12), H()), 2 & t) {
                    const e = Qe();
                    xe(1), Fe("ngIf", e.isNative && !e.isWert), xe(1), Fe("ngIf", !e.isNative && !e.isWert)
                }
            }
            const Fhe = function(t, n) {
                return {
                    gasFees: t,
                    modeName: n
                }
            };

            function Nhe(t, n) {
                if (1 & t && (N(0, "div", 34), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(hs(2, 1, "gas_fees", Da(4, Fhe, e.gasFees, e.modeName)))
                }
            }
            const qB = function(t) {
                return {
                    modeName: t
                }
            };

            function Rhe(t, n) {
                if (1 & t && (N(0, "div", 34), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(hs(2, 1, "low_gas_fees", hn(4, qB, e.modeName)))
                }
            }

            function Bhe(t, n) {
                if (1 & t && (N(0, "div", 34), ae(1), Yt(2, "translate"), Yt(3, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(e.lowGas ? hs(2, 1, "low_gas_fees", hn(6, qB, e.modeName)) : xn(3, 4, "low_usdt"))
                }
            }
            const Vhe = function(t, n) {
                return {
                    minAmount: t,
                    cryptoName: n
                }
            };

            function Hhe(t, n) {
                if (1 & t && (N(0, "div", 35), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), dn(" ", hs(2, 1, "min_crypto", Da(4, Vhe, e.minAmount, e.cryptoName)), " ")
                }
            }
            const zhe = function(t, n, e) {
                return {
                    gasFees: t,
                    modeName: n,
                    tokenName: e
                }
            };

            function jhe(t, n) {
                if (1 & t && (N(0, "div", 35), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), dn(" ", hs(2, 1, "swap_error", pM(4, zhe, e.gasFees, e.modeName, e.tokenName)), " ")
                }
            }

            function $he(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "button", 39), bt("click", function() {
                        return Ot(e), It(Qe(3).confirm(!0))
                    }), ae(1), Yt(2, "translate"), Yt(3, "translate"), H()
                }
                if (2 & t) {
                    const e = Qe(3);
                    Fe("disabled", e.isLowBalance && !e.isWert || !e.swapToken || 0 == e.swapToken), xe(1), nm("", xn(2, 4, "buy_stake_for"), " ", e.stakeData.apy, "% ", xn(3, 6, "rewards"), " ")
                }
            }

            function Uhe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 50), bt("click", function() {
                        return Ot(e), It(Qe(5).changeChain("ETH"))
                    }), N(1, "div", 51), ot(2, "img", 52), N(3, "a", 45), ae(4), Yt(5, "translate"), H()()()
                }
                2 & t && (xe(4), dn("", xn(5, 1, "switch_to"), " ETH"))
            }

            function Whe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 50), bt("click", function() {
                        return Ot(e), It(Qe(5).changeChain("BNB"))
                    }), N(1, "div", 51), ot(2, "img", 53), N(3, "a", 45), ae(4), Yt(5, "translate"), H()()()
                }
                2 & t && (xe(4), dn("", xn(5, 1, "switch_to"), " BNB"))
            }

            function Ghe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 50), bt("click", function() {
                        return Ot(e), It(Qe(5).changeChain("MATIC"))
                    }), N(1, "div", 51), ot(2, "img", 54), N(3, "a", 45), ae(4), Yt(5, "translate"), H()()()
                }
                2 & t && (xe(4), dn("", xn(5, 1, "switch_to"), " MATIC"))
            }

            function Xhe(t, n) {
                if (1 & t && (N(0, "ul", 48), rt(1, Uhe, 6, 3, "li", 49), rt(2, Whe, 6, 3, "li", 49), rt(3, Ghe, 6, 3, "li", 49), H()), 2 & t) {
                    const e = Qe(4);
                    xe(1), Fe("ngIf", "ETH" != e.modeName), xe(1), Fe("ngIf", "BNB" != e.modeName), xe(1), Fe("ngIf", "MATIC" != e.modeName)
                }
            }
            const Yhe = function() {
                return {
                    "width.px": "12",
                    "height.px": 12
                }
            };

            function qhe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 40)(1, "button", 41), bt("click", function() {
                        return Ot(e), It(Qe(3).confirm())
                    }), ae(2, "buy_now"), H(), N(3, "div", 42)(4, "div", 43), ot(5, "img", 44), N(6, "a", 45), ae(7), Yt(8, "translate"), H(), ot(9, "svg-icon", 46), H(), rt(10, Xhe, 4, 3, "ul", 47), H()()
                }
                if (2 & t) {
                    const e = Qe(3);
                    xe(1), Fe("disabled", e.isLowBalance && !e.isWert || !e.swapToken || 0 == e.swapToken), xe(2), Fe("dropup", !0), xe(2), Dr("src", "/assets/images/svg-icons/", e.modeName, ".svg", jr), xe(2), Mc("", xn(8, 6, "switch_to"), " ", e.modeName, ""), xe(2), Fe("svgStyle", ds(8, Yhe))
                }
            }

            function Zhe(t, n) {
                if (1 & t && (N(0, "div", 36), rt(1, $he, 4, 8, "button", 37), rt(2, qhe, 11, 9, "div", 38), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), Fe("ngIf", "ETH" == e.modeName), xe(1), Fe("ngIf", !e.isModal)
                }
            }
            const hu = function(t) {
                    return {
                        "mt-0": t
                    }
                },
                Khe = function(t) {
                    return {
                        tokenName: t
                    }
                },
                ZB = function() {
                    return {
                        "width.px": 28,
                        "height.px": 28
                    }
                },
                KB = function(t) {
                    return {
                        cryptoName: t
                    }
                };

            function Qhe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 14)(1, "div", 15)(2, "div", 16)(3, "div", 17)(4, "label", 18), ae(5), Yt(6, "translate"), H(), N(7, "div", 19), bt("click", function() {
                        return Ot(e), It(Qe().max())
                    }), ae(8), Yt(9, "translate"), H()(), N(10, "div", 20)(11, "input", 21, 22), bt("ngModelChange", function(s) {
                        return Ot(e), It(Qe().swapToken = s)
                    })("ngModelChange", function(s) {
                        return Ot(e), It(Qe().swapTokenUpdate.next(s))
                    }), H(), N(13, "div", 23), ot(14, "svg-icon", 24), H()()(), N(15, "div", 25)(16, "div", 17)(17, "label", 26), ae(18), Yt(19, "translate"), H()(), N(20, "div", 27)(21, "input", 28), bt("ngModelChange", function(s) {
                        return Ot(e), It(Qe().baseToken = s)
                    })("ngModelChange", function(s) {
                        return Ot(e), It(Qe().baseTokenUpdate.next(s))
                    }), H(), N(22, "div", 23), ot(23, "svg-icon", 29), H()()(), N(24, "div", 30), rt(25, Nhe, 3, 7, "div", 31), rt(26, Rhe, 3, 6, "div", 31), rt(27, Bhe, 4, 8, "div", 31), rt(28, Hhe, 3, 7, "div", 32), rt(29, jhe, 3, 8, "div", 32), H()(), rt(30, Zhe, 3, 2, "div", 33), H()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(25, hu, e.isModal)), xe(5), dn("", hs(6, 17, "pay_with", hn(27, Khe, e.tokenName)), " "), xe(3), dn("", xn(9, 20, "max"), " "), xe(3), Fe("noDecimal", e.isNative ? 10 : 6)("ngModel", e.swapToken), xe(3), Dr("src", "./assets/images/svg-icons/", e.isNative ? e.modeName : e.isWert ? "usd" : "usdt", ".svg"), Fe("svgStyle", ds(29, ZB)), xe(4), qt(hs(19, 22, "amount_in", hn(30, KB, e.cryptoName))), xe(3), Fe("noDecimal", 0)("ngModel", e.baseToken), xe(2), Fe("svgStyle", ds(32, ZB)), xe(2), Fe("ngIf", !e.isLowBalance && !e.isWert && e.walletAddress), xe(1), Fe("ngIf", e.isNative && e.isLowBalance && !e.isWert && e.walletAddress), xe(1), Fe("ngIf", !e.isNative && e.isLowBalance && !e.isWert && e.walletAddress), xe(1), Fe("ngIf", e.baseToken && e.baseToken < e.minAmount && !e.isWert && e.walletAddress), xe(1), Fe("ngIf", e.baseToken && e.baseToken >= e.minAmount && e.isLowBalance && !e.isWert && e.walletAddress), xe(1), Fe("ngIf", e.walletAddress)
                }
            }
            const QB = function(t, n) {
                return {
                    baseToken: t,
                    cryptoName: n
                }
            };

            function Jhe(t, n) {
                if (1 & t && (N(0, "p", 59), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(hs(2, 1, "transction_info", Da(4, QB, e.baseToken, e.cryptoName)))
                }
            }
            const JB = function(t) {
                return {
                    baseToken: t
                }
            };

            function efe(t, n) {
                if (1 & t && (N(0, "p", 59), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(hs(2, 1, "transction_info_stake", hn(4, JB, e.baseToken)))
                }
            }

            function tfe(t, n) {
                if (1 & t && (N(0, "div", 55), ot(1, "img", 56), N(2, "div", 57), ae(3), Yt(4, "translate"), H(), rt(5, Jhe, 3, 7, "p", 58), rt(6, efe, 3, 6, "p", 58), H()), 2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(6, hu, e.isModal)), xe(3), dn(" ", xn(4, 4, "transaction_in_progress"), ""), xe(2), Fe("ngIf", !e.isStake), xe(1), Fe("ngIf", e.isStake)
                }
            }
            const nfe = function(t, n) {
                return {
                    cryptoName: t,
                    tokenName: n
                }
            };

            function ife(t, n) {
                if (1 & t && (N(0, "p", 59), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(hs(2, 1, "waiting_confirm", Da(4, nfe, e.cryptoName, e.tokenName)))
                }
            }

            function sfe(t, n) {
                1 & t && (N(0, "p", 59), ae(1), Yt(2, "translate"), H()), 2 & t && (xe(1), qt(xn(2, 1, "waiting_confirm_stake")))
            }

            function rfe(t, n) {
                1 & t && (N(0, "p", 59), ae(1), Yt(2, "translate"), H()), 2 & t && (xe(1), qt(xn(2, 1, "waiting_confirm_stake_2")))
            }

            function afe(t, n) {
                if (1 & t && (N(0, "div", 55), ot(1, "img", 56), N(2, "div", 60), ae(3), Yt(4, "translate"), H(), rt(5, ife, 3, 7, "p", 58), rt(6, sfe, 3, 3, "p", 58), rt(7, rfe, 3, 3, "p", 58), H()), 2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(7, hu, e.isModal)), xe(3), qt(xn(4, 5, "confirm")), xe(2), Fe("ngIf", !e.isStake), xe(1), Fe("ngIf", e.isStake), xe(1), Fe("ngIf", e.isStake)
                }
            }

            function ofe(t, n) {
                if (1 & t && (N(0, "div", 55), ot(1, "img", 56), N(2, "div", 61), ae(3), Yt(4, "translate"), H(), N(5, "p", 59), ae(6), Yt(7, "translate"), H()()), 2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(8, hu, e.isModal)), xe(3), qt(xn(4, 3, "authorise")), xe(3), qt(hs(7, 5, "waiting_approve", hn(10, KB, e.cryptoName)))
                }
            }

            function lfe(t, n) {
                if (1 & t && (N(0, "p", 68), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(hs(2, 1, "transction_info_stake_success", hn(4, JB, e.baseToken)))
                }
            }

            function cfe(t, n) {
                if (1 & t && (N(0, "p", 68), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), qt(hs(2, 1, "transction_info", Da(4, QB, e.baseToken, e.cryptoName)))
                }
            }

            function ufe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 69)(1, "button", 70), bt("click", function() {
                        return Ot(e), It(Qe(2).stakeNow())
                    }), ae(2), Yt(3, "translate"), H()()
                }
                2 & t && (xe(2), qt(xn(3, 1, "stake_now")))
            }

            function dfe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 55), ot(1, "img", 62), N(2, "div", 63), ae(3), Yt(4, "translate"), H(), rt(5, lfe, 3, 6, "p", 64), rt(6, cfe, 3, 7, "p", 64), rt(7, ufe, 4, 3, "div", 65), N(8, "div", 66)(9, "button", 67), bt("click", function() {
                        return Ot(e), It(Qe().viewUrl())
                    }), ae(10), Yt(11, "translate"), H(), N(12, "button", 67), bt("click", function() {
                        return Ot(e), It(Qe().startAgain())
                    }), ae(13), Yt(14, "translate"), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(13, hu, e.isModal)), xe(3), qt(xn(4, 7, "transaction_success")), xe(2), Fe("ngIf", e.isStake), xe(1), Fe("ngIf", !e.isStake), xe(1), Fe("ngIf", "ETH" == e.modeName && !e.isModal && !e.isStake), xe(3), qt(xn(11, 9, "view_transaction")), xe(3), qt(xn(14, 11, "start_again"))
                }
            }

            function hfe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 55), ot(1, "img", 71), N(2, "div", 72), ae(3), Yt(4, "translate"), H(), N(5, "p", 73), ae(6), Yt(7, "translate"), H(), N(8, "div", 66)(9, "button", 74), bt("click", function() {
                        return Ot(e), It(Qe().viewUrl())
                    }), ae(10), Yt(11, "translate"), H(), N(12, "button", 74), bt("click", function() {
                        return Ot(e), It(Qe().startAgain())
                    }), ae(13), Yt(14, "translate"), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(13, hu, e.isModal)), xe(3), qt(xn(4, 5, "transaction_failed")), xe(3), qt(xn(7, 7, "view_transaction_info")), xe(4), qt(xn(11, 9, "view_transaction")), xe(3), qt(xn(14, 11, "start_again"))
                }
            }

            function ffe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 55), ot(1, "img", 71), N(2, "div", 75), ae(3), Yt(4, "translate"), H(), N(5, "div", 76)(6, "button", 77), bt("click", function() {
                        return Ot(e), It(Qe().startAgain())
                    }), ae(7), Yt(8, "translate"), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(7, hu, e.isModal)), xe(3), dn("", xn(4, 3, "transaction_rejected"), " "), xe(4), qt(xn(8, 5, "start_again"))
                }
            }
            const pfe = function(t) {
                return {
                    "mt-3 mb-2": t
                }
            };
            let aD = (() => {
                class t {
                    walletConnectService;
                    http;
                    eventService;
                    modalService;
                    translate;
                    popupService;
                    router;
                    isNative = !1;
                    isWert = !1;
                    isModal = !1;
                    messageEvent = new Pt;
                    swapIn = null;
                    subscriptions = [];
                    environtment = xt;
                    baseToken;
                    swapToken;
                    baseCurrencyValue;
                    swapTokenUpdate = new He;
                    baseTokenUpdate = new He;
                    contractData;
                    currentLang;
                    SwapStatus = Vn;
                    lblockPrice = 0;
                    isLowBalance = !1;
                    inProgress = !1;
                    isStake = !1;
                    usdtBal = 0;
                    nativeBal = 0;
                    minAmount = xt.minToken;
                    gasFeesETH = xt.eth.gasFees;
                    modalRef;
                    lowGas = !1;
                    wertMode = !1;
                    constructor(e, i, s, r, l, u, h) {
                        this.walletConnectService = e, this.http = i, this.eventService = s, this.modalService = r, this.translate = l, this.popupService = u, this.router = h, this.currentLang = this.translate.currentLang, this.translate.onLangChange.subscribe(v => {
                            this.currentLang = v.lang || "en"
                        }), this.eventService.getNetwork().subscribe(v => {
                            this.getBal(), this.isWert || this.max()
                        }), this.subscriptions.push(this.swapTokenUpdate.pipe(AC(500)).subscribe(v => {
                            this.swapToken >= 0 ? this.calculateSwap() : this.baseToken = 0
                        })), this.subscriptions.push(this.baseTokenUpdate.pipe(AC(500)).subscribe(v => {
                            this.baseToken >= 0 ? this.calculateSwapReverse() : this.swapToken = 0
                        }))
                    }
                    ngOnChanges() {
                        setTimeout(() => {
                            this.swapToken = void 0, this.baseToken = void 0, this.walletConnectService.swapStatus = Vn.not_started, this.isLowBalance = !1, this.lowGas = !1, this.getBal(), this.checkLowBalance(), this.isWert || this.max()
                        }, 600)
                    }
                    ngOnInit() {
                        this.walletConnectService.swapStatus = Vn.not_started, this.isLowBalance = !1, setInterval(() => this.getBal(), 500)
                    }
                    max() {
                        this.swapToken = +this.floorString((this.isNative ? this.nativeBal - this.gasFees > 0 ? this.nativeBal - this.gasFees : 0 : this.usdtBal).toString()), this.isWert && (this.swapToken = 0), 0 == this.swapToken && (this.swapToken = void 0, this.baseToken = 0), this.swapTokenUpdate.next(this.swapToken), setTimeout(() => this.swapTokenUpdate.next(this.swapToken), 200)
                    }
                    getBal() {
                        this.nativeBal = this.allBalance.native, this.usdtBal = this.allBalance.usdt
                    }
                    get walletAddress() {
                        return this.walletConnectService.walletAddress
                    }
                    get status() {
                        return this.walletConnectService.swapStatus
                    }
                    get hash() {
                        return this.walletConnectService.swapHash
                    }
                    get tokenName() {
                        return this.isNative ? this.modeName : this.isWert ? "USD" : "USDT"
                    }
                    get modeName() {
                        return this.walletConnectService.getChainData().purchaseToken
                    }
                    get chainData() {
                        return this.walletConnectService.getChainData()
                    }
                    get gasFees() {
                        return this.gasFeesETH
                    }
                    get allBalance() {
                        return {
                            native: +this.walletConnectService.balanceData.nativeBal.toFixed(10).replace(/0{0,10}$/, ""),
                            usdt: this.walletConnectService.balanceData.usdtBal
                        }
                    }
                    get maxTokensToBuy() {
                        return this.walletConnectService.balanceData.maxTokensToBuy
                    }
                    ngOnDestroy() {
                        for (const e of this.subscriptions) e.unsubscribe()
                    }
                    startAgain() {
                        this.getBal(), this.max(), this.walletConnectService.swapStatus = Vn.not_started
                    }
                    confirm(e = !1) {
                        this.isStake = e, this.checkChain() && (this.isWert ? this.modalRef = this.modalService.show(khe, {
                            class: "modal-xs modal-dialog-centered transak",
                            backdrop: "static",
                            initialState: {
                                walletAddress: this.walletAddress,
                                baseToken: this.baseToken,
                                swapToken: this.swapToken,
                                isStake: this.isStake
                            }
                        }) : 0 !== this.swapToken && this.baseToken >= this.minAmount && this.createSwap(e))
                    }
                    calculateSwap = (() => {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            e.checkLowBalance(), e.baseToken = e.isNative ? yield e.walletConnectService.getNativeAmount(.98 * e.swapToken): yield e.walletConnectService.getUSDTAmount(e.swapToken), e.baseToken = +e.baseToken.toFixed(0).replace(/0{0,0}$/, ""), console.log("calculateSwap here", e.isNative, e.swapToken, e.baseToken)
                        })
                    })();
                    calculateSwapReverse = (() => {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            e.isNative ? (e.swapToken = yield e.walletConnectService.getDynamicAmount(1.02 * e.baseToken, "getNativeAmount"), e.swapToken = +(1.001 * e.swapToken).toFixed(10).replace(/0{0,10}$/, "")) : e.swapToken = yield e.walletConnectService.getDynamicAmount(e.baseToken, "getUSDTAmount"), e.checkLowBalance(), console.log("calculateSwapReverse here", e.swapToken, e.baseToken)
                        })
                    })();
                    createSwap(e = !1) {
                        var i = this;
                        return (0, ut.Z)(function*() {
                            if (!i.inProgress)
                                if (i.inProgress = !0, console.log("createSwap called", i.isNative, i.maxTokensToBuy), i.baseToken <= i.maxTokensToBuy) {
                                    i.walletConnectService.swapStatus = Vn.not_started;
                                    try {
                                        i.isNative ? i.nativeBal - i.gasFees >= i.swapToken ? (i.isLowBalance = !1, yield i.walletConnectService.swapNativeTokens(i.baseToken, i.swapToken, e)) : i.isLowBalance = !0 : i.usdtBal >= i.swapToken && i.nativeBal >= i.gasFees ? (i.isLowBalance = !1, yield i.walletConnectService.swapCryptoForUSDT(i.baseToken, i.swapToken, !1, e)) : (i.isLowBalance = !0, i.nativeBal < i.gasFees && (i.lowGas = !0)), i.inProgress = !1
                                    } catch (s) {
                                        console.log("createSwap", s), i.walletConnectService.swapStatus = s && 4001 == s.code ? Vn.rejected : Vn.failed, i.inProgress = !1
                                    }
                                } else i.popupService.messagePopup("warning", i.translate.instant("max_token_exceed", {
                                    maxTokensToBuy: i.maxTokensToBuy
                                }), i.translate.instant("max_token_title")), i.walletConnectService.swapStatus = Vn.not_started, i.inProgress = !1
                        })()
                    }
                    viewUrl() {
                        window.open(this.chainData.blockExplorerURL + this.hash, "_blank")
                    }
                    get cryptoName() {
                        return xt.tokenName
                    }
                    get stakeData() {
                        return this.walletConnectService.stakeData
                    }
                    checkLowBalance() {
                        this.isNative ? this.isLowBalance = !(this.nativeBal - this.gasFees >= this.swapToken) : +this.usdtBal >= +this.swapToken && +this.nativeBal >= this.gasFees ? (this.isLowBalance = !1, this.lowGas = !1) : (this.isLowBalance = !0, this.nativeBal < this.gasFees && (this.lowGas = !0))
                    }
                    openWert() {
                        this.eventService.broadcastEvent("OPEN_WERT", !0)
                    }
                    checkChain() {
                        return this.walletConnectService.chainId == this.chainData.chainIdInt || ("wallet" == this.walletConnectService.mode ? (this.walletConnectService.switchNetwork(this.chainData.chainIdInt).then(() => !0), !0) : (this.popupService.messagePopup("info", this.translate.instant("wrong_chain", {
                            chainName: this.chainData.chainName
                        }), this.translate.instant("change_network")).then(e => {
                            e.isConfirmed && this.walletConnectService.switchNetwork(this.chainData.chainIdInt)
                        }), !1))
                    }
                    convertNum(e, i = 2) {
                        return P1(e, i)
                    }
                    floorString(e) {
                        let i = e.indexOf(".");
                        return i >= 0 ? (e + "00").slice(0, i + 6) : e + ".00"
                    }
                    changeChain(e) {
                        if (e == this.modeName) return;
                        let i = "ETH" == e ? xt.eth : "BNB" == e ? xt.bsc : xt.poly;
                        "ETH" == this.modeName ? this.popupService.messagePopup("info", this.translate.instant("change_swap_text", {
                            apy: this.stakeData.apy,
                            mode: "BNB" == e ? "BSC" : "POLYGON"
                        }), this.translate.instant("are_you_sure"), this.translate.instant("buy_with_mode", {
                            mode: e
                        }), this.translate.instant("cancel")).then(s => {
                            s.isConfirmed && (this.walletAddress ? (this.walletConnectService.switchNetwork(i.chainIdInt), this.calculateSwap()) : (this.walletConnectService.chainId = i.chainIdInt, this.calculateSwap()))
                        }) : this.walletAddress ? (this.walletConnectService.switchNetwork(i.chainIdInt), this.calculateSwap()) : (this.walletConnectService.chainId = i.chainIdInt, this.calculateSwap())
                    }
                    changeTab(e = !0) {
                        this.isNative = e, setTimeout(() => this.max(), 1e3)
                    }
                    stakeNow() {
                        this.walletConnectService.switchNetwork(xt.eth.chainIdInt), this.router.navigateByUrl(this.currentLang + "/dashboard", {})
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(du), $e(Ul), $e(bl), $e(Yl), $e(Fa), $e(Ap), $e(Yr))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-swap"]
                        ],
                        viewQuery: function(i, s) {
                            if (1 & i && ka(Mhe, 5), 2 & i) {
                                let r;
                                kr(r = Er()) && (s.swapIn = r.first)
                            }
                        },
                        inputs: {
                            isNative: "isNative",
                            isWert: "isWert",
                            isModal: "isModal"
                        },
                        outputs: {
                            messageEvent: "messageEvent"
                        },
                        features: [ni],
                        decls: 10,
                        vars: 12,
                        consts: [
                            [1, "swapSection", 3, "ngClass"],
                            ["class", "tab-container gap-2 mb-3", 4, "ngIf"],
                            ["class", "text-center pb-2", 4, "ngIf"],
                            ["class", "body-section mt-1", 3, "ngClass", 4, "ngIf"],
                            ["class", "body-section mt-1 text-center", 3, "ngClass", 4, "ngIf"],
                            [1, "tab-container", "gap-2", "mb-3"],
                            [1, "btn", "btn-light", "font-14", "text-uppercase", "d-flex", "align-items-center", "justify-content-center", 3, "ngClass", "click"],
                            ["height", "22", "alt", "", 3, "src"],
                            [1, "px-2", "font-14"],
                            ["src", "/assets/images/svg-icons/usdt.svg", "height", "22", "alt", ""],
                            [1, "ps-2", "font-14"],
                            [1, "text-center", "pb-2"],
                            ["class", "ms-2 font-14 fw-semibold dashTitle text-white", 4, "ngIf"],
                            [1, "ms-2", "font-14", "fw-semibold", "dashTitle", "text-white"],
                            [1, "body-section", "mt-1", 3, "ngClass"],
                            [1, "row", "my-2"],
                            [1, "col-md-6", "pe-md-2"],
                            [1, "d-flex", "align-items-center", "justify-content-between", "mb-2"],
                            [1, "d-block", "font-12", "fw-normal", "text-lighter"],
                            [1, "fw-bold", "text-secondary", "cursor-pointer", "font-12", 3, "click"],
                            [1, "amountField", "d-flex", "align-items-start"],
                            ["type", "text", "appTwoDigitDecimalNumber", "", "placeholder", "0", 1, "form-control", "text-truncate", 3, "noDecimal", "ngModel", "ngModelChange"],
                            ["swapIn", ""],
                            [1, "amountType"],
                            [3, "src", "svgStyle"],
                            [1, "col-md-6", "ps-md-2", "mt-3", "mt-md-0"],
                            [1, "d-block", "font-12", "fw-normal", "text-truncate", "text-lighter"],
                            [1, "amountField"],
                            ["type", "text", "appTwoDigitDecimalNumber", "", "min", "minAmount", "pattern", "\\d*", "placeholder", "0", 1, "form-control", "text-truncate", 3, "noDecimal", "ngModel", "ngModelChange"],
                            ["src", "./assets/images/svg-icons/token.svg", 3, "svgStyle"],
                            [1, "col-12", "text-center"],
                            ["class", "lowBalance fs-7 m-2 text-white", 4, "ngIf"],
                            ["class", "text-center fs-7 mt-2 w-100 text-danger", 4, "ngIf"],
                            ["class", "d-flex flex-column align-items-center my-2", 4, "ngIf"],
                            [1, "lowBalance", "fs-7", "m-2", "text-white"],
                            [1, "text-center", "fs-7", "mt-2", "w-100", "text-danger"],
                            [1, "d-flex", "flex-column", "align-items-center", "my-2"],
                            ["type", "button", "class", "btn btn-primary w-100 bg-secondary text-primary fs-7 fw-semibold", 3, "disabled", "click", 4, "ngIf"],
                            ["class", "d-flex flex-column flex-md-row align-items-center justify-content-between my-2 w-100 gap-2", 4, "ngIf"],
                            ["type", "button", 1, "btn", "btn-primary", "w-100", "bg-secondary", "text-primary", "fs-7", "fw-semibold", 3, "disabled", "click"],
                            [1, "d-flex", "flex-column", "flex-md-row", "align-items-center", "justify-content-between", "my-2", "w-100", "gap-2"],
                            ["type", "button", "translate", "", 1, "btn", "btn-primary", "w-100", "fs-7", "fw-semibold", "bg-secondary", "text-primary", 3, "disabled", "click"],
                            ["dropdown", "", "dropdownToggle", "", 1, "btn", "btn-outline-primary", "bg-tertiary", "text-white", "fs-7", "w-100", "buyWith", "btn-group", "dropup", 3, "dropup"],
                            ["type", "button", 1, "dropdown-toggle", "d-flex", "align-items-center", "justify-content-between", "w-100"],
                            ["height", "22", "alt", "", 1, "me-2", 3, "src"],
                            [1, "text-black", "text-decoration-none", "selectedMenu", "me-2", "text-white"],
                            ["src", "./assets/images/svg-icons/down-arrow.svg", 1, "dropdown", 3, "svgStyle"],
                            ["class", "py-2 dropdown-menu dropdown-menu-right px-3 ", "role", "menu", 4, "dropdownMenu"],
                            ["role", "menu", 1, "py-2", "dropdown-menu", "dropdown-menu-right", "px-3"],
                            ["class", "cursor-pointer", 3, "click", 4, "ngIf"],
                            [1, "cursor-pointer", 3, "click"],
                            ["type", "button", 1, "dropdown-toggle", "d-flex", "align-items-center", "w-100"],
                            ["src", "/assets/images/svg-icons/ETH.svg", "height", "22", "alt", ""],
                            ["src", "/assets/images/svg-icons/BNB.svg", "height", "22", "alt", ""],
                            ["src", "/assets/images/svg-icons/MATIC.svg", "height", "22", "alt", ""],
                            [1, "body-section", "mt-1", "text-center", 3, "ngClass"],
                            ["src", "./assets/images/svg-icons/token.svg", "alt", "loading", 1, "statusIcon", "loading"],
                            [1, "fw-normal", "fw-bold", "font-16", "px-2", "my-3", "text-uppercase", "text-secondary", "text-center"],
                            ["class", "fs-7 mb-3 text-white", 4, "ngIf"],
                            [1, "fs-7", "mb-3", "text-white"],
                            [1, "fw-semibold", "fs-6", "my-3", "text-uppercase", "text-center", "text-secondary"],
                            [1, "fw-semibold", "fs-6", "my-3", "text-uppercase", "text-secondary"],
                            ["src", "./assets/images/popup-icons/success.svg", "alt", "complete", 1, "statusIcon"],
                            [1, "fw-semibold", "fs-6", "my-3", "text-uppercase", "text-success", "text-center"],
                            ["class", "fs-7 mb-3 text-white mb-lg-4", 4, "ngIf"],
                            ["class", "d-flex align-items-center justify-content-center", 4, "ngIf"],
                            [1, "d-flex", "align-items-center", "justify-content-center", "gap-2"],
                            [1, "btn", "btn-primary", "w-50", "fs-7", "text-uppercase", "bg-secondary", "text-primary", 3, "click"],
                            [1, "fs-7", "mb-3", "text-white", "mb-lg-4"],
                            [1, "d-flex", "align-items-center", "justify-content-center"],
                            [1, "btn", "btn-md", "mb-2", "btn-primary", "w-100", "fs-7", "text-uppercase", "bg-secondary", "text-primary", 3, "click"],
                            ["src", "./assets/images/popup-icons/warning.svg", "alt", "failed", 1, "statusIcon"],
                            [1, "fw-semibold", "fs-6", "my-3", "text-uppercase", "text-danger", "text-center"],
                            [1, "fs-7", "mb-3", "mb-lg-4", "text-danger"],
                            [1, "btn", "btn-md", "btn-primary", "w-50", "fs-7", "text-uppercase", "bg-secondary", "text-primary", 3, "click"],
                            [1, "fw-semibold", "fs-6", "text-uppercase", "text-danger", "my-3", "text-center"],
                            [1, "d-flex", "align-items-center", "justify-content-center", "gap-2", "mt-4"],
                            [1, "btn", "btn-md", "btn-primary", "w-100", "fs-7", "bg-secondary", "text-primary", "text-uppercase", 3, "click"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "div", 0), rt(1, Phe, 9, 8, "div", 1), rt(2, Lhe, 3, 2, "div", 2), rt(3, Qhe, 31, 33, "div", 3), rt(4, tfe, 7, 8, "div", 4), rt(5, afe, 8, 9, "div", 4), rt(6, ofe, 8, 12, "div", 4), rt(7, dfe, 15, 15, "div", 4), rt(8, hfe, 15, 15, "div", 4), rt(9, ffe, 9, 9, "div", 4), H()), 2 & i && (Fe("ngClass", hn(10, pfe, !s.isModal)), xe(1), Fe("ngIf", s.isModal), xe(1), Fe("ngIf", s.walletAddress), xe(1), Fe("ngIf", s.status === s.SwapStatus.not_started), xe(1), Fe("ngIf", s.status === s.SwapStatus.in_progess), xe(1), Fe("ngIf", s.status === s.SwapStatus.confirm_pending), xe(1), Fe("ngIf", s.status === s.SwapStatus.approval_pending), xe(1), Fe("ngIf", s.status === s.SwapStatus.complete), xe(1), Fe("ngIf", s.status === s.SwapStatus.failed), xe(1), Fe("ngIf", s.status === s.SwapStatus.rejected))
                        },
                        dependencies: [Qo, Ji, Df, Ow, qw, _v, Tw, Dw, cv, Xl, Ehe, Ir, Vc],
                        styles: [".swapSection[_ngcontent-%COMP%]   .tab-container[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;align-items:center}.swapSection[_ngcontent-%COMP%]   .tab-container[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:50%;height:42px;padding:6px;border-radius:5px;border:1px solid #C2C2C2;color:#2d3439;background:#ffffff}.swapSection[_ngcontent-%COMP%]   .tab-container[_ngcontent-%COMP%]   .btn.selected[_ngcontent-%COMP%]{border:1px solid #1EF93B;background:#1EF93B;color:#fff}.swapSection[_ngcontent-%COMP%]   .body-section[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{letter-spacing:1px;color:#2d3439}.swapSection[_ngcontent-%COMP%]   .body-section[_ngcontent-%COMP%]   .amountField[_ngcontent-%COMP%]{position:relative}.swapSection[_ngcontent-%COMP%]   .body-section[_ngcontent-%COMP%]   .amountField[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{min-height:50px;padding:8px 15px;font-size:1rem;font-weight:400;border-radius:50px;border:1px solid #20262B;background-color:#2d3439;color:#fff}.swapSection[_ngcontent-%COMP%]   .body-section[_ngcontent-%COMP%]   .amountField[_ngcontent-%COMP%]   .amountType[_ngcontent-%COMP%]{position:absolute;top:27px;right:1rem;transform:translateY(-50%);display:flex;align-items:center}.swapSection[_ngcontent-%COMP%]   .body-section[_ngcontent-%COMP%]   .lowBalance[_ngcontent-%COMP%]{line-height:20px;font-weight:400}.swapSection[_ngcontent-%COMP%]   .body-section[_ngcontent-%COMP%]   .statusIcon[_ngcontent-%COMP%]{height:55px}.dropdown-toggle[_ngcontent-%COMP%]{width:100%}.dropdown-toggle[_ngcontent-%COMP%]:after{position:absolute;right:12px;opacity:0}.dropdown-toggle[_ngcontent-%COMP%]   .flag-icon[_ngcontent-%COMP%]{border-radius:50%;overflow:hidden;margin-right:3px;min-width:20px;width:20px;height:20px;object-fit:cover}.dropdown-toggle[_ngcontent-%COMP%]   .dropdown[_ngcontent-%COMP%]{cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]{width:100%;overflow-y:auto;padding:0;border:2px solid rgba(128,128,128,.1098039216);background-color:#2d3439!important}.dropdown-menu[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover{background-color:#2d3439!important}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{height:40px}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover   a[_ngcontent-%COMP%]{color:#1ef93b!important}@media screen and (max-width: 576px){.dropdown-menu[_ngcontent-%COMP%]{max-height:210px}}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;align-items:center}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:50%;border:1px solid #ffffff;overflow:hidden;margin-right:10px;min-width:20px;height:20px;width:20px;object-fit:cover}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff}.dropup[_ngcontent-%COMP%]:hover{opacity:1!important}"]
                    })
                }
                return t
            })();

            function gfe(t, n) {
                1 & t && (N(0, "div", 60)(1, "div", 61), ot(2, "img", 62), H()())
            }

            function mfe(t, n) {
                1 & t && ot(0, "img", 63)
            }

            function vfe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "button", 64), bt("click", function() {
                        return Ot(e), It(Qe().referAndEarn())
                    }), ae(1, "refer_and_earn "), H()
                }
            }

            function yfe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 75), bt("click", function() {
                        return Ot(e), It(Qe(3).changeChain("ETH"))
                    }), N(1, "div", 76), ot(2, "img", 77), N(3, "a", 78), ae(4), Yt(5, "translate"), H()()()
                }
                2 & t && (xe(4), dn("", xn(5, 1, "switch_to"), " ETH"))
            }

            function bfe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 75), bt("click", function() {
                        return Ot(e), It(Qe(3).changeChain("BNB"))
                    }), N(1, "div", 76), ot(2, "img", 79), N(3, "a", 78), ae(4), Yt(5, "translate"), H()()()
                }
                2 & t && (xe(4), dn("", xn(5, 1, "switch_to"), " BNB"))
            }

            function xfe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 75), bt("click", function() {
                        return Ot(e), It(Qe(3).changeChain("MATIC"))
                    }), N(1, "div", 76), ot(2, "img", 80), N(3, "a", 78), ae(4), Yt(5, "translate"), H()()()
                }
                2 & t && (xe(4), dn("", xn(5, 1, "switch_to"), " MATIC"))
            }

            function _fe(t, n) {
                if (1 & t && (N(0, "ul", 73), rt(1, yfe, 6, 3, "li", 74), rt(2, bfe, 6, 3, "li", 74), rt(3, xfe, 6, 3, "li", 74), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), Fe("ngIf", "ETH" != e.modeName), xe(1), Fe("ngIf", "BNB" != e.modeName), xe(1), Fe("ngIf", "MATIC" != e.modeName)
                }
            }
            const wfe = function() {
                return {
                    "width.px": "12",
                    "height.px": 12
                }
            };

            function Cfe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 65)(1, "button", 66), bt("click", function() {
                        return Ot(e), It(Qe().connectModal())
                    }), ot(2, "img", 67), ae(3, " connect_Wallet"), H(), N(4, "div", 68)(5, "div", 69), ot(6, "img", 44), N(7, "a", 70), ae(8), Yt(9, "translate"), H(), ot(10, "svg-icon", 71), H(), rt(11, _fe, 4, 3, "ul", 72), H()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(4), Fe("dropup", !0), xe(2), Dr("src", "/assets/images/svg-icons/", e.modeName, ".svg", jr), xe(2), Mc("", xn(9, 5, "switch_to"), " ", e.modeName, ""), xe(2), Fe("svgStyle", ds(7, wfe))
                }
            }

            function Sfe(t, n) {
                1 & t && (N(0, "a", 81), ae(1, "not_enough_eth "), H())
            }

            function Tfe(t, n) {
                1 & t && ot(0, "img", 82)
            }
            const Dfe = function(t, n) {
                    return {
                        arabic: t,
                        connected: n
                    }
                },
                ac = function(t) {
                    return {
                        shimmer: t
                    }
                },
                e6 = function(t) {
                    return {
                        tokenName: t
                    }
                },
                Afe = function(t, n) {
                    return [t, n]
                },
                kfe = function(t) {
                    return {
                        cover: t
                    }
                },
                Efe = function(t) {
                    return {
                        "shimmer light": t
                    }
                },
                oD = function(t) {
                    return {
                        selected: t
                    }
                };
            let Mfe = (() => {
                class t {
                    http;
                    translate;
                    popupService;
                    modalService;
                    walletConnectService;
                    eventService;
                    lang = localStorage.getItem("currentlang");
                    isMobile = window.matchMedia && window.matchMedia("(max-device-width: 1024px)").matches || screen.width <= 1024;
                    preSubscriptions = [];
                    subscriptions = [];
                    modalRef;
                    emailId = "";
                    tokenSold = 0;
                    totalTokens = 0;
                    hashKey = "";
                    windowSize = 0;
                    usdRaised = 0;
                    currentStep = 0;
                    selectedLanguage;
                    userStaked = 0;
                    currentLanguage;
                    connectInterval;
                    usdtBal = 0;
                    ethBal = 0;
                    userClaimable = 0;
                    userEthClaimable = 0;
                    userBscClaimable = 0;
                    refreshId;
                    refreshRate = 1e3;
                    dataLoaded = !1;
                    isSoldOut = !1;
                    futureToken = 0;
                    salePrice = .0337;
                    listPrice = .0337;
                    liveCounter;
                    isLive = !0;
                    claimMode = !1;
                    swapMode = "native";
                    isNative = !0;
                    isWert = !1;
                    SwapStatus = Vn;
                    timeInterval;
                    swapComp;
                    constructor(e, i, s, r, l, u) {
                        this.http = e, this.translate = i, this.popupService = s, this.modalService = r, this.walletConnectService = l, this.eventService = u, this.eventService.getLang().subscribe(h => {
                            this.lang = h || "en"
                        })
                    }
                    ngOnInit() {
                        this.timeInterval = setInterval(() => this.setTimer(), this.refreshRate), this.preSubscriptions.push(this.eventService.getCounter().subscribe(e => {
                            this.liveCounter = e
                        })), this.preSubscriptions.push(this.eventService.getEvent("PRESALE-END").subscribe(e => {
                            this.isLive = !0, setTimeout(() => {
                                this.isLive && this.getBalanceData(), this.eventService.setCounter(this.currentStoreData.endDate)
                            }, this.refreshRate)
                        })), setTimeout(() => {
                            this.isLive && this.getBalanceData()
                        }, this.refreshRate)
                    }
                    getBalanceData() {
                        const e = this.walletConnectService.balanceData;
                        this.currentStep = e.currentStep, this.tokenSold = e.totalTokensSold, this.totalTokens = this.currentStoreData.maxAmount, this.ethBal = e.nativeBal, this.usdtBal = e.usdtBal, this.usdRaised = e.usdRaised, this.userStaked = this.walletConnectService.stakeData.userStaked, this.userClaimable = e.userClaimable, this.userEthClaimable = e.ethClaimable, this.userBscClaimable = e.bscClaimable, this.isSoldOut = this.tokenSold > this.walletConnectService.tokenomics[this.walletConnectService.tokenomics.length - 1].maxToken, this.dataLoaded = !0, this.getFutureToken(), this.refreshId && clearTimeout(this.refreshId), this.refreshId = setTimeout(() => this.getBalanceData(), this.refreshRate)
                    }
                    connectModal() {
                        this.modalRef = this.modalService.show(l0, {
                            class: "modal-min modal-dialog-centered",
                            backdrop: "static"
                        })
                    }
                    referAndEarn() {
                        this.modalRef = this.modalService.show(phe, {
                            class: "modal-min modal-dialog-centered",
                            backdrop: "static",
                            initialState: {
                                url: this.referUrl
                            }
                        })
                    }
                    get tokenLeft() {
                        let e = this.currentStoreData.maxToken - this.tokenSold;
                        e = +(+e).toFixed(3);
                        let i = new Intl.NumberFormat("en-US");
                        return i.format(e), i.format(e > 0 ? e : 0)
                    }
                    convertNum(e) {
                        return P1(e)
                    }
                    openSwap(e = !0, i = !1) {
                        this.swapComp.wertMode ? this.popupService.messagePopup("warning", "", this.translate.instant("are_you_sure"), this.translate.instant("Confirm"), this.translate.instant("Cancel")).then(s => {
                            s.isConfirmed && (this.swapComp.wertMode = !1, this.swapMode = e ? "native" : i ? "card" : "usdt", this.isNative = e, this.isWert = i)
                        }) : (this.swapMode = e ? "native" : i ? "card" : "usdt", this.isNative = e, this.isWert = i), setTimeout(() => this.swapComp.max(), 1e3)
                    }
                    checkBscChaim() {
                        return !this.walletConnectService.isEthChain() || (this.popupService.messagePopup("info", this.translate.instant("wrong_chain", {
                            chainName: xt.bsc.chainName
                        }), this.translate.instant("change_network")).then(e => {
                            e.isConfirmed && this.walletConnectService.switchNetwork(xt.bsc.chainIdInt)
                        }), !1)
                    }
                    changeChain(e) {
                        if (e == this.modeName) return;
                        let i = "ETH" == e ? xt.eth : "BNB" == e ? xt.bsc : xt.poly;
                        "ETH" == this.modeName ? this.popupService.messagePopup("info", this.translate.instant("change_swap_text", {
                            apy: this.stakeData.apy,
                            mode: "BNB" == e ? "BNB Smart Chain" : "Polygon"
                        }), this.translate.instant("are_you_sure"), this.translate.instant("buy_with_mode", {
                            mode: e
                        }), this.translate.instant("cancel")).then(s => {
                            s.isConfirmed && (this.walletAddress ? this.walletConnectService.switchNetwork(i.chainIdInt) : this.walletConnectService.chainId = i.chainIdInt)
                        }) : this.walletAddress ? this.walletConnectService.switchNetwork(i.chainIdInt) : this.walletConnectService.chainId = i.chainIdInt
                    }
                    getFutureToken() {
                        let e = +this.currentStep;
                        this.futureToken = e != this.walletConnectService.tokenomics.length - 1 ? this.walletConnectService.tokenomics[e + 1].tokenUSDT : this.currentStoreData.tokenUSDT, this.salePrice = this.currentStoreData.tokenUSDT
                    }
                    get raisedPercent() {
                        let e = this.usdRaised / this.currentStoreData.maxAmount * 100;
                        return (e >= 100 ? 100 : e) + "%"
                    }
                    get currentStoreData() {
                        return this.walletConnectService.tokenomics[this.currentStep]
                    }
                    get walletAddress() {
                        return this.walletConnectService.walletAddress
                    }
                    get tokenPercent() {
                        let e = (this.tokenSold - this.currentStoreData.minToken) / (this.currentStoreData.maxToken - this.currentStoreData.minToken) * 100;
                        return (e >= 100 ? 100 : +e.toFixed(2)) + "%"
                    }
                    get tokenRemain() {
                        return this.currentStoreData.maxToken - this.tokenSold
                    }
                    get tokenName() {
                        return xt.tokenName
                    }
                    ngOnDestroy() {
                        for (const e of this.preSubscriptions) e.unsubscribe();
                        for (const e of this.subscriptions) e.unsubscribe()
                    }
                    claim() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            (0 !== e.userClaimable || e.checkBscChaim()) && (yield e.walletConnectService.claim(), e.modalRef = e.modalService.show(kp, {
                                class: "modal-xs modal-dialog-centered",
                                backdrop: "static"
                            }))
                        })()
                    }
                    get status() {
                        return this.walletConnectService.swapStatus
                    }
                    setTimer() {
                        this.tokenSold && this.tokenSold > 0 && (this.currentStoreData.endDate < Date.parse((new Date).toString()) && this.currentStep < this.walletConnectService.tokenomics.length - 1 ? this.eventService.setCounter(this.walletConnectService.tokenomics[this.currentStep + 1].endDate) : this.eventService.setCounter(this.currentStoreData.endDate), clearInterval(this.timeInterval))
                    }
                    get modeName() {
                        return this.walletConnectService.getChainData().purchaseToken
                    }
                    copy() {
                        var e = this;
                        return (0, ut.Z)(function*() {
                            yield e.popupService.messsageAlert("success", e.translate.instant("successCopy"))
                        })()
                    }
                    get referUrl() {
                        return this.walletConnectService.referUrl
                    }
                    wertWidget(e) {
                        this.modalRef = this.modalService.show(e, {
                            class: "modal-dialog-centered",
                            backdrop: "static"
                        })
                    }
                    yourPurchasedInfo() {
                        this.popupService.messagePopup("info", this.translate.instant("your_purchased_popup_info"))
                    }
                    changeToChain() {
                        this.popupService.messagePopup("info", this.translate.instant("change_chain_info"))
                    }
                    navigateToSection(e) {
                        this.hashKey = e, e && (window.location.hash = e)
                    }
                    stakeInfo() {
                        this.popupService.messagePopup("info", this.translate.instant("stake_popup_info"))
                    }
                    claimStake() {
                        0 == this.userClaimable || !this.checkBscChaim() || (this.walletConnectService.claimStake(), this.modalRef = this.modalService.show(kp, {
                            class: "modal-xs modal-dialog-centered",
                            backdrop: "static",
                            initialState: {
                                isStake: !0
                            }
                        }))
                    }
                    get stakeData() {
                        return this.walletConnectService.stakeData
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(Ul), $e(Fa), $e(Ap), $e(Yl), $e(du), $e(bl))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-banner"]
                        ],
                        viewQuery: function(i, s) {
                            if (1 & i && ka(aD, 5), 2 & i) {
                                let r;
                                kr(r = Er()) && (s.swapComp = r.first)
                            }
                        },
                        decls: 105,
                        vars: 88,
                        consts: [
                            ["id", "home", 1, "banner", 3, "ngClass"],
                            [1, "container"],
                            [1, "bannerSec", "row", 3, "ngClass"],
                            [1, "col-12", "col-lg-7", "col-xl-7", "leftSec", "d-flex", "flex-column"],
                            [1, "banner-content", "mb-md-5", "flex-grow-1"],
                            ["translate", "", 1, "text-primary", "font-42", "mt-3", "mt-md-0", "font-md-70", "fw-normal"],
                            ["translate", "", 1, "me-2"],
                            ["translate", "", 1, "fw-bold", "me-2"],
                            ["translate", "", 1, "font-30"],
                            ["translate", "", 1, "text-primary", "font-30", "font-sm-40", "fw-medium", "banner-desc"],
                            ["translate", ""],
                            ["src", "/assets/images/svg-icons/wallet-icon.svg", "alt", "", "height", "50", "width", "50", 1, "img-fluid", "mx-2"],
                            [1, "d-flex", "justify-content-start", "mb-3", "pt-4"],
                            ["target", "_blank", "href", "/assets/documents/whitepaper.pdf", 1, "px-4", "btn", "btn-outline-primary", "font-20", "me-3", "text-primary", "text-uppercase"],
                            ["src", "/assets/images/svg-icons/paper-icon.svg", "alt", "", 1, "img-fluid", "me-2"],
                            ["href", "/assets/documents/audit.pdf", "target", "_blank", "translate", "", 1, "btn", "btn-primary", "font-20", "audit", "text-uppercase", "px-4"],
                            ["src", "/assets/images/svg-icons/audit-icon.svg", "alt", "", 1, "img-fluid", "me-2"],
                            ["class", "text-end pe-lg-5 mt-4", 4, "ngIf"],
                            [1, "col-12", "col-lg-5", "col-xl-5", "rightSec"],
                            [1, "walletBox"],
                            ["src", "/assets/images/svg-icons/wallet-floating-1.svg", "class", "img-fluid wallet-floating", "alt", "", 4, "ngIf"],
                            [1, "w-100", "d-flex", "flex-column", "align-items-center", "justify-content-start", "text-center"],
                            ["translate", "", 1, "text-white", "font-16", "fw-regular", "mb-0", "py-2"],
                            [1, "px-4", "bg-wrapper", "w-100"],
                            [1, "d-flex", "align-items-center", "justify-content-center", "w-100", "gap-2", "fw-regular", "py-3", "counter"],
                            [1, "rounded-3", "time-card", "text-center", "d-flex", 3, "ngClass"],
                            [1, "value"],
                            [1, "rounded-3", "time-card", "text-center", 3, "ngClass"],
                            ["data-percent", "0", 1, "progress", "mt-4", 3, "ngClass"],
                            [1, "bar"],
                            [1, "status", 3, "ngClass"],
                            [1, "mt-3", "mb-2", "font-13", "px-3", "text-center", 3, "ngClass"],
                            [1, "fw-bold", "text-uppercase", "text-white"],
                            [1, "fw-regular", "text-lighter"],
                            [1, "d-flex", "justify-content-center", "align-items-center", "text-center", "mb-2", "font-13", "px-3", 3, "ngClass"],
                            [1, "fw-regular", "text-uppercase", "text-white"],
                            [1, "text-lighter"],
                            ["src", "/assets/images/svg-icons/info-icon.svg", "alt", "", 1, "img-fluid", "ms-2", "cursor-pointer", 3, "click"],
                            [1, "d-flex", "justify-content-center", "align-items-center", "text-center", "font-13", "px-3", 3, "ngClass"],
                            ["type", "button", "class", "btn btn-sm btn-outline-secondary mb-4 mt-2 d-block refer-btn fs-6", "translate", "", 3, "click", 4, "ngIf"],
                            [1, "swapArea", "px-4", 3, "ngClass"],
                            [1, "text-center", "mb-3", "font-14", "text-white", "dashTitle", "fw-medium", 3, "ngClass"],
                            [1, "tab-container", "gap-2"],
                            [1, "btn", "btn-light", "font-14", "text-uppercase", "d-flex", "align-items-center", "justify-content-center", 3, "ngClass", "click"],
                            ["height", "22", "alt", "", 3, "src"],
                            [1, "px-2", "font-14"],
                            ["src", "/assets/images/svg-icons/usdt.svg", "height", "22", "alt", ""],
                            [1, "ps-2", "font-14"],
                            ["src", "/assets/images/svg-icons/card.svg", "height", "22", "alt", ""],
                            ["translate", "", 1, "ps-2", "font-14"],
                            [3, "isNative", "isWert"],
                            ["swap", ""],
                            ["class", "d-flex align-items-center justify-content-center gap-2 flex-wrap flex-sm-nowrap mt-3", 4, "ngIf"],
                            [1, "mt-3"],
                            [1, "font-13", "text-center", "mb-2"],
                            ["class", "text-decoration-underline cursor-pointer text-white", "href", "https://widget.wert.io/default/widget/?commodity=ETH%3AEthereum", "target", "_blank", "translate", "", 4, "ngIf"],
                            ["translate", "", 1, "font-13", "text-center", "text-lighter", "pb-4", "mb-0", "mt-4"],
                            ["href", "https://web3paymentsolutions.io/", "target", "_blank"],
                            ["src", "/assets/images/svg-icons/W3P_Black.svg", "alt", "", 1, "poweredByIcon", "text-tertiary"],
                            ["src", "./assets/images/svg-icons/banner-illustration-mob.svg", "alt", "", "class", "img-fluid mt-4 w-100", 4, "ngIf"],
                            [1, "text-end", "pe-lg-5", "mt-4"],
                            [1, "mt-sm-4"],
                            ["src", "./assets/images/svg-icons/banner-illustration.svg", "alt", "", 1, "img-fluid"],
                            ["src", "/assets/images/svg-icons/wallet-floating-1.svg", "alt", "", 1, "img-fluid", "wallet-floating"],
                            ["type", "button", "translate", "", 1, "btn", "btn-sm", "btn-outline-secondary", "mb-4", "mt-2", "d-block", "refer-btn", "fs-6", 3, "click"],
                            [1, "d-flex", "align-items-center", "justify-content-center", "gap-2", "flex-wrap", "flex-sm-nowrap", "mt-3"],
                            ["translate", "", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "connect-btn", "fs-7", "w-50", 3, "click"],
                            ["src", "/assets/images/svg-icons/wallet-check.svg", "alt", "", 1, "img-fluid", "me-2"],
                            ["dropdown", "", "dropdownToggle", "", 1, "btn", "btn-outline-primary", "bg-tertiary", "text-white", "fs-7", "w-50", "buyWith", "btn-group", "dropup", 3, "dropup"],
                            ["type", "button", 1, "dropdown-toggle", "text-white", "d-flex", "align-items-center", "justify-content-between", "w-100"],
                            [1, "text-white", "text-decoration-none", "selectedMenu", "me-2"],
                            ["src", "./assets/images/svg-icons/down-arrow.svg", 1, "dropdown", 3, "svgStyle"],
                            ["class", "py-2 dropdown-menu text-white  dropdown-menu-right px-3 ", "role", "menu", 4, "dropdownMenu"],
                            ["role", "menu", 1, "py-2", "dropdown-menu", "text-white", "dropdown-menu-right", "px-3"],
                            ["class", "cursor-pointer", 3, "click", 4, "ngIf"],
                            [1, "cursor-pointer", 3, "click"],
                            ["type", "button", 1, "dropdown-toggle", "d-flex", "align-items-center", "w-100"],
                            ["src", "/assets/images/svg-icons/ETH.svg", "height", "22", "alt", ""],
                            [1, "text-black", "text-decoration-none", "selectedMenu", "me-2", "text-white"],
                            ["src", "/assets/images/svg-icons/BNB.svg", "height", "22", "alt", ""],
                            ["src", "/assets/images/svg-icons/MATIC.svg", "height", "22", "alt", ""],
                            ["href", "https://widget.wert.io/default/widget/?commodity=ETH%3AEthereum", "target", "_blank", "translate", "", 1, "text-decoration-underline", "cursor-pointer", "text-white"],
                            ["src", "./assets/images/svg-icons/banner-illustration-mob.svg", "alt", "", 1, "img-fluid", "mt-4", "w-100"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "div", 4)(5, "h1", 5)(6, "span", 6), ae(7, "BITCOIN"), H(), N(8, "span", 7), ae(9, "ETF"), H(), N(10, "span", 8), ae(11, "TOKEN"), H()(), N(12, "h2", 9)(13, "span", 10), ae(14, "banner_text_1"), H(), ot(15, "img", 11), H(), N(16, "div", 12)(17, "a", 13), ot(18, "img", 14), ae(19, "whitepaper "), H(), N(20, "a", 15), ot(21, "img", 16), ae(22, "audit"), H()()(), rt(23, gfe, 3, 0, "div", 17), H(), N(24, "div", 18)(25, "div", 19), rt(26, mfe, 1, 0, "img", 20), N(27, "div", 21)(28, "p", 22), ae(29, "wallet_title"), H(), N(30, "div", 23)(31, "div", 24)(32, "div", 25)(33, "div", 26), ae(34), N(35, "span", 10), ae(36, "days"), H()()(), N(37, "div", 27)(38, "div", 26), ae(39), N(40, "span", 10), ae(41, "hours"), H()()(), N(42, "div", 27)(43, "div", 26), ae(44), N(45, "span", 10), ae(46, "minutes"), H()()(), N(47, "div", 27)(48, "div", 26), ae(49), N(50, "span", 10), ae(51, "seconds"), H()()()()(), N(52, "div", 28), ot(53, "div", 29), N(54, "div", 30), ae(55), Yt(56, "translate"), H()(), N(57, "p", 31)(58, "span", 32), ae(59), Yt(60, "translate"), H(), N(61, "span", 33), ae(62), H()(), N(63, "div", 34)(64, "span", 35), ae(65), Yt(66, "translate"), H(), N(67, "span", 36), ae(68), H(), N(69, "img", 37), bt("click", function() {
                                return s.yourPurchasedInfo()
                            }), H()(), N(70, "div", 38)(71, "span", 35), ae(72), Yt(73, "translate"), H(), N(74, "span", 33), ae(75), H(), N(76, "img", 37), bt("click", function() {
                                return s.stakeInfo()
                            }), H()(), rt(77, vfe, 2, 0, "button", 39), H(), N(78, "div", 40)(79, "p", 41), ae(80), H(), N(81, "div", 42)(82, "button", 43), bt("click", function() {
                                return s.openSwap(!0)
                            }), ot(83, "img", 44), N(84, "span", 45), ae(85), H()(), N(86, "button", 43), bt("click", function() {
                                return s.openSwap(!1)
                            }), ot(87, "img", 46), N(88, "span", 47), ae(89, "USDT"), H()(), N(90, "button", 43), bt("click", function() {
                                return s.openSwap(!1, !0)
                            }), ot(91, "img", 48), N(92, "span", 49), ae(93, "card"), H()()(), ot(94, "app-swap", 50, 51), rt(96, Cfe, 12, 8, "div", 52), N(97, "div", 53)(98, "p", 54), rt(99, Sfe, 2, 0, "a", 55), H(), N(100, "p", 56), ae(101, "powered_by "), N(102, "a", 57), ot(103, "img", 58), H()()()()()()()(), rt(104, Tfe, 1, 0, "img", 59), H()), 2 & i && (Fe("ngClass", Da(52, Dfe, "ar" === s.lang, s.walletAddress)), xe(2), Fe("ngClass", s.walletAddress ? "align-items-streatch" : "align-items-end"), xe(21), Fe("ngIf", !s.isMobile), xe(3), Fe("ngIf", !s.isMobile), xe(6), Fe("ngClass", hn(55, ac, 0 == s.liveCounter._diff)), xe(2), dn("", s.liveCounter._days, " "), xe(3), Fe("ngClass", hn(57, ac, 0 == s.liveCounter._diff)), xe(2), dn("", s.liveCounter._hours, " "), xe(3), Fe("ngClass", hn(59, ac, 0 == s.liveCounter._diff)), xe(2), dn("", s.liveCounter._minutes, " "), xe(3), Fe("ngClass", hn(61, ac, 0 == s.liveCounter._diff)), xe(2), dn("", s.liveCounter._seconds, " "), xe(3), Fe("ngClass", hn(63, ac, !s.dataLoaded)), xe(1), er("width", s.raisedPercent), xe(1), Fe("ngClass", hn(65, ac, !s.dataLoaded)), xe(1), qt(xn(56, 42, s.currentStoreData.title)), xe(2), Fe("ngClass", hn(67, ac, !s.dataLoaded)), xe(2), dn(" ", xn(60, 44, "usdt_raised"), " "), xe(3), Mc("$", s.convertNum(s.usdRaised), " / $", s.convertNum(s.currentStoreData.maxAmount), ""), xe(1), Fe("ngClass", hn(69, ac, !s.dataLoaded)), xe(2), qt(hs(66, 46, "your_eth_claimable", hn(71, e6, s.tokenName))), xe(3), dn("= ", s.convertNum(s.userStaked + s.userClaimable), ""), xe(2), Fe("ngClass", Da(73, Afe, s.dataLoaded ? "" : "shimmer", s.walletAddress ? "mb-2" : "mb-3")), xe(2), qt(hs(73, 49, "your_bsc_claimable", hn(76, e6, s.tokenName))), xe(3), dn(" = ", s.convertNum(s.userEthClaimable), ""), xe(2), Fe("ngIf", s.walletAddress && "" != s.referUrl), xe(1), Fe("ngClass", hn(78, kfe, s.status === s.SwapStatus.in_progess || s.status === s.SwapStatus.confirm_pending || s.status === s.SwapStatus.approval_pending)), xe(1), Fe("ngClass", hn(80, Efe, !s.dataLoaded)), xe(1), Mc("1 ", s.tokenName, " = $", s.salePrice, ""), xe(2), Fe("ngClass", hn(82, oD, "native" === s.swapMode)), xe(1), Dr("src", "/assets/images/svg-icons/", s.modeName, ".svg", jr), xe(2), qt(s.modeName), xe(1), Fe("ngClass", hn(84, oD, "usdt" === s.swapMode)), xe(4), Fe("ngClass", hn(86, oD, "card" === s.swapMode)), xe(4), Fe("isNative", s.isNative)("isWert", s.isWert), xe(2), Fe("ngIf", !s.walletAddress), xe(3), Fe("ngIf", "ETH" == s.modeName && s.walletAddress), xe(5), Fe("ngIf", s.isMobile))
                        },
                        dependencies: [Qo, Ji, Tw, Dw, cv, Xl, Ir, aD, Vc],
                        styles: ['.banner[_ngcontent-%COMP%]{background:#F5F5F7 url(/assets/images/svg-icons/banner-chart.svg) no-repeat 50% 50%;background-size:100%;position:relative;padding:170px 50px 50px}.banner.connected[_ngcontent-%COMP%]{background-position-y:100%}@media screen and (max-width: 1600px){.banner[_ngcontent-%COMP%]{background-position:50% 100%}}@media screen and (max-width: 1399px){.banner[_ngcontent-%COMP%]{background-position-y:90%}}@media screen and (max-width: 576px){.banner[_ngcontent-%COMP%]{padding:116px 0 0;background:none}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .banner-content[_ngcontent-%COMP%]{max-width:630px}@media screen and (max-width: 576px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .banner-content[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{line-height:1.5}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .banner-content[_ngcontent-%COMP%]   .banner-desc[_ngcontent-%COMP%]{letter-spacing:-2px}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]{position:relative}@media screen and (max-width: 576px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]{margin-top:20px}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]{width:100%;max-width:540px;z-index:1;margin-left:auto;border-radius:25px;background:#20262B;position:relative}@media screen and (max-width: 1024px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]{margin:0 auto}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .bg-wrapper[_ngcontent-%COMP%]{background:#262C31;border-top-right-radius:25px;border-top-left-radius:25px}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .wallet-floating[_ngcontent-%COMP%]{position:absolute;bottom:0;left:0;z-index:1;max-width:80px}@media screen and (max-width: 1024px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .wallet-floating[_ngcontent-%COMP%]{width:50px;bottom:-1px}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .counter[_ngcontent-%COMP%]   .time-card[_ngcontent-%COMP%]{min-width:60px;width:25%;padding:6px 12px;display:flex;justify-content:center;flex-direction:column;align-items:center;position:relative;color:#fff;background:#2D3439;border-radius:30px!important}@media screen and (max-width: 1024px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .counter[_ngcontent-%COMP%]   .time-card[_ngcontent-%COMP%]{border-radius:17px!important}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .counter[_ngcontent-%COMP%]   .time-card[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{font-size:13px;line-height:38px;font-weight:400;color:#dce2e7}@media screen and (max-width: 1024px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .counter[_ngcontent-%COMP%]   .time-card[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{line-height:18px}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .counter[_ngcontent-%COMP%]   .time-card[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:block}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .counter[_ngcontent-%COMP%]   .time-card[_ngcontent-%COMP%]   .indicator[_ngcontent-%COMP%]{font-size:12px;font-weight:600}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .counter[_ngcontent-%COMP%]   .time-card[_ngcontent-%COMP%]:last-child:after{content:none}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]{width:90%;border-radius:30px;height:25px;background:#f4f7f9;margin:0 auto;overflow:hidden;position:relative;background:url(/assets/images/svg-icons/bar.svg) no-repeat 0 0/cover}@media screen and (max-width: 576px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]{width:100%}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]   .status[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;font-size:12px;text-align:center;line-height:25px;z-index:1;color:#20262b}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .progress[_ngcontent-%COMP%]   .bar[_ngcontent-%COMP%]{background:#ffffff}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .swapArea[_ngcontent-%COMP%]{position:relative}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .swapArea.cover[_ngcontent-%COMP%]:after{content:"";position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(255,255,255,0);z-index:1;cursor:busy}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .swapArea[_ngcontent-%COMP%]   .tab-container[_ngcontent-%COMP%]{width:100%;display:flex;justify-content:center;align-items:center}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .swapArea[_ngcontent-%COMP%]   .tab-container[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:50%;height:50px;padding:6px;border-radius:50px;border:1px solid #2D3439;color:#fff;background:#2D3439}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .swapArea[_ngcontent-%COMP%]   .tab-container[_ngcontent-%COMP%]   .btn.selected[_ngcontent-%COMP%]{border:1px solid rgba(84,119,255,.61);background:#2D3439;color:#fff}@media screen and (max-width: 576px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .connect-btn[_ngcontent-%COMP%]{width:100%!important}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .buyWith[_ngcontent-%COMP%]{border:1px solid #20262B!important;background-color:#fff}@media screen and (max-width: 576px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .buyWith[_ngcontent-%COMP%]{width:100%!important}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]   .poweredByIcon[_ngcontent-%COMP%]{height:15px}@media screen and (max-width: 576px){.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   .walletBox[_ngcontent-%COMP%]:after{left:unset;right:-17px;top:-22px;width:37px;height:44px}}.banner[_ngcontent-%COMP%]   .container[_ngcontent-%COMP%]   .bannerSec[_ngcontent-%COMP%]   .rightSec[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#e4e4e4;max-width:220px}.dropdown-toggle[_ngcontent-%COMP%]{width:100%}.dropdown-toggle[_ngcontent-%COMP%]:after{position:absolute;right:12px;opacity:0}.dropdown-toggle[_ngcontent-%COMP%]   .flag-icon[_ngcontent-%COMP%]{border-radius:50%;overflow:hidden;margin-right:3px;min-width:20px;width:20px;height:20px;object-fit:cover}.dropdown-toggle[_ngcontent-%COMP%]   .dropdown[_ngcontent-%COMP%]{cursor:pointer}.dropdown-menu[_ngcontent-%COMP%]{width:100%;overflow-y:auto;padding:0;border:2px solid rgba(128,128,128,.1098039216);background-color:#2d3439!important}.dropdown-menu[_ngcontent-%COMP%]   [_ngcontent-%COMP%]:hover{background-color:inherit!important}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{height:40px}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover   a[_ngcontent-%COMP%]{color:#1ef93b!important}@media screen and (max-width: 576px){.dropdown-menu[_ngcontent-%COMP%]{max-height:210px}}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;align-items:center}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:50%;border:1px solid #ffffff;overflow:hidden;margin-right:10px;min-width:20px;height:20px;width:20px;object-fit:cover}.dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff}.dropup[_ngcontent-%COMP%]:hover{opacity:1}']
                    })
                }
                return t
            })();
            const t6 = "400ms cubic-bezier(0.4,0.0,0.2,1)",
                Pfe = [Us({
                    height: 0,
                    visibility: "hidden"
                }), el(t6, Us({
                    height: "*",
                    visibility: "visible"
                }))],
                Ofe = [Us({
                    height: "*",
                    visibility: "visible"
                }), el(t6, Us({
                    height: 0,
                    visibility: "hidden"
                }))];
            let Ife = (() => {
                    class t {
                        constructor(e, i, s) {
                            this._el = e, this._renderer = i, this.collapsed = new Pt, this.collapses = new Pt, this.expanded = new Pt, this.expands = new Pt, this.isExpanded = !0, this.collapseNewValue = !0, this.isCollapsed = !1, this.isCollapse = !0, this.isCollapsing = !1, this.isAnimated = !1, this._display = "block", this._stylesLoaded = !1, this._COLLAPSE_ACTION_NAME = "collapse", this._EXPAND_ACTION_NAME = "expand", this._factoryCollapseAnimation = s.build(Ofe), this._factoryExpandAnimation = s.build(Pfe)
                        }
                        set display(e) {
                            this._display = e, "none" !== e ? this.isAnimated ? this.toggle() : this.show() : this.hide()
                        }
                        set collapse(e) {
                            this.collapseNewValue = e, (!this._player || this._isAnimationDone) && (this.isExpanded = e, this.toggle())
                        }
                        get collapse() {
                            return this.isExpanded
                        }
                        ngAfterViewChecked() {
                            this._stylesLoaded = !0, this._player && this._isAnimationDone && (this._player.reset(), this._renderer.setStyle(this._el.nativeElement, "height", "*"))
                        }
                        toggle() {
                            this.isExpanded ? this.hide() : this.show()
                        }
                        hide() {
                            this.isCollapsing = !0, this.isExpanded = !1, this.isCollapsed = !0, this.isCollapsing = !1, this.collapses.emit(this), this._isAnimationDone = !1, this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)(() => {
                                this._isAnimationDone = !0, this.collapseNewValue !== this.isCollapsed && this.isAnimated ? this.show() : (this.collapsed.emit(this), this._renderer.setStyle(this._el.nativeElement, "display", "none"))
                            })
                        }
                        show() {
                            this._renderer.setStyle(this._el.nativeElement, "display", this._display), this.isCollapsing = !0, this.isExpanded = !0, this.isCollapsed = !1, this.isCollapsing = !1, this.expands.emit(this), this._isAnimationDone = !1, this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)(() => {
                                this._isAnimationDone = !0, this.collapseNewValue !== this.isCollapsed && this.isAnimated ? this.hide() : (this.expanded.emit(this), this._renderer.removeStyle(this._el.nativeElement, "overflow"))
                            })
                        }
                        animationRun(e, i) {
                            if (!e || !this._stylesLoaded) return r => r();
                            this._renderer.setStyle(this._el.nativeElement, "overflow", "hidden"), this._renderer.addClass(this._el.nativeElement, "collapse");
                            const s = i === this._EXPAND_ACTION_NAME ? this._factoryExpandAnimation : this._factoryCollapseAnimation;
                            return this._player && this._player.reset(), this._player = s.create(this._el.nativeElement), this._player.play(), r => this._player ? .onDone(r)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(ii), $e(Ts), $e(uf))
                    }, t.\u0275dir = tn({
                        type: t,
                        selectors: [
                            ["", "collapse", ""]
                        ],
                        hostVars: 9,
                        hostBindings: function(e, i) {
                            2 & e && (mn("aria-hidden", i.isCollapsed), $r("collapse", i.isCollapse)("in", i.isExpanded)("show", i.isExpanded)("collapsing", i.isCollapsing))
                        },
                        inputs: {
                            display: "display",
                            isAnimated: "isAnimated",
                            collapse: "collapse"
                        },
                        outputs: {
                            collapsed: "collapsed",
                            collapses: "collapses",
                            expanded: "expanded",
                            expands: "expands"
                        },
                        exportAs: ["bs-collapse"]
                    }), t
                })(),
                Lfe = (() => {
                    class t {
                        static forRoot() {
                            return {
                                ngModule: t,
                                providers: []
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({}), t
                })();
            const Ffe = ["*"],
                Nfe = function(t) {
                    return {
                        "text-muted": t
                    }
                };

            function Rfe(t, n) {
                if (1 & t && (N(0, "button", 7), ae(1), H()), 2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(2, Nfe, e.isDisabled)), xe(1), dn(" ", e.heading, " ")
                }
            }
            const Bfe = [
                    [
                        ["", "accordion-heading", ""]
                    ], "*"
                ],
                Vfe = ["[accordion-heading]", "*"];
            let Hfe = (() => {
                    class t {
                        constructor() {
                            this.closeOthers = !1, this.isAnimated = !1
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275prov = Et({
                        token: t,
                        factory: t.\u0275fac,
                        providedIn: "root"
                    }), t
                })(),
                n6 = (() => {
                    class t {
                        constructor(e) {
                            this.isAnimated = !1, this.closeOthers = !1, this.groups = [], Object.assign(this, e)
                        }
                        closeOtherPanels(e) {
                            this.closeOthers && this.groups.forEach(i => {
                                i !== e && (i.isOpen = !1)
                            })
                        }
                        addGroup(e) {
                            e.isAnimated = this.isAnimated, this.groups.push(e)
                        }
                        removeGroup(e) {
                            const i = this.groups.indexOf(e); - 1 !== i && this.groups.splice(i, 1)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(Hfe))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["accordion"]
                        ],
                        hostAttrs: ["role", "tablist", 1, "panel-group", 2, "display", "block"],
                        hostVars: 1,
                        hostBindings: function(e, i) {
                            2 & e && mn("aria-multiselectable", i.closeOthers)
                        },
                        inputs: {
                            isAnimated: "isAnimated",
                            closeOthers: "closeOthers"
                        },
                        ngContentSelectors: Ffe,
                        decls: 1,
                        vars: 0,
                        template: function(e, i) {
                            1 & e && (Rl(), Go(0))
                        },
                        encapsulation: 2
                    }), t
                })(),
                zfe = (() => {
                    class t {
                        constructor(e) {
                            this.isAnimated = !1, this.panelClass = "panel-default", this.isDisabled = !1, this.isOpenChange = new Pt, this._isOpen = !1, this.accordion = e
                        }
                        get isOpen() {
                            return this._isOpen
                        }
                        set isOpen(e) {
                            e !== this.isOpen && (e && this.accordion.closeOtherPanels(this), this._isOpen = e, Promise.resolve(null).then(() => {
                                this.isOpenChange.emit(e)
                            }))
                        }
                        ngOnInit() {
                            this.accordion.addGroup(this)
                        }
                        ngOnDestroy() {
                            this.accordion.removeGroup(this)
                        }
                        toggleOpen() {
                            this.isDisabled || (this.isOpen = !this.isOpen)
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)($e(n6))
                    }, t.\u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["accordion-group"],
                            ["accordion-panel"]
                        ],
                        hostAttrs: [1, "panel", 2, "display", "block"],
                        hostVars: 2,
                        hostBindings: function(e, i) {
                            2 & e && $r("panel-open", i.isOpen)
                        },
                        inputs: {
                            heading: "heading",
                            panelClass: "panelClass",
                            isDisabled: "isDisabled",
                            isOpen: "isOpen"
                        },
                        outputs: {
                            isOpenChange: "isOpenChange"
                        },
                        ngContentSelectors: Vfe,
                        decls: 9,
                        vars: 6,
                        consts: [
                            [1, "panel", "card", 3, "ngClass"],
                            ["role", "tab", 1, "panel-heading", "card-header", 3, "ngClass", "click"],
                            [1, "panel-title"],
                            ["role", "button", 1, "accordion-toggle"],
                            ["class", "btn btn-link", "type", "button", 3, "ngClass", 4, "ngIf"],
                            ["role", "tabpanel", 1, "panel-collapse", "collapse", 3, "collapse", "isAnimated"],
                            [1, "panel-body", "card-block", "card-body"],
                            ["type", "button", 1, "btn", "btn-link", 3, "ngClass"]
                        ],
                        template: function(e, i) {
                            1 & e && (Rl(Bfe), N(0, "div", 0)(1, "div", 1), bt("click", function() {
                                return i.toggleOpen()
                            }), N(2, "div", 2)(3, "div", 3), rt(4, Rfe, 2, 4, "button", 4), Go(5), H()()(), N(6, "div", 5)(7, "div", 6), Go(8, 1), H()()()), 2 & e && (Fe("ngClass", i.panelClass), xe(1), Fe("ngClass", i.isDisabled ? "panel-disabled" : "panel-enabled"), xe(2), mn("aria-expanded", i.isOpen), xe(1), Fe("ngIf", i.heading), xe(2), Fe("collapse", !i.isOpen)("isAnimated", i.isAnimated))
                        },
                        dependencies: [Qo, Ji, Ife],
                        styles: ["[_nghost-%COMP%]   .card-header.panel-enabled[_ngcontent-%COMP%]{cursor:pointer}[_nghost-%COMP%]   .card-header.panel-disabled[_ngcontent-%COMP%]   .btn.btn-link[_ngcontent-%COMP%]{cursor:default;text-decoration:none}"]
                    }), t
                })(),
                jfe = (() => {
                    class t {
                        static forRoot() {
                            return {
                                ngModule: t,
                                providers: []
                            }
                        }
                    }
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({
                        imports: [Oa, Lfe]
                    }), t
                })();

            function $fe(t, n) {
                if (1 & t && (N(0, "li", 24), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = n.$implicit;
                    xe(1), dn(" ", xn(2, 1, e), " ")
                }
            }

            function Ufe(t, n) {
                if (1 & t && (N(0, "accordion-group")(1, "div", 17), ot(2, "span", 18), N(3, "span", 19), ae(4), Yt(5, "translate"), H()(), N(6, "div", 20)(7, "span", 21), ae(8), Yt(9, "translate"), H(), ot(10, "br"), N(11, "ul", 22), rt(12, $fe, 3, 3, "li", 23), H()()()), 2 & t) {
                    const e = n.$implicit;
                    xe(4), dn(" ", xn(5, 3, e.heading), " "), xe(4), dn(" ", xn(9, 5, e.content), ""), xe(4), Fe("ngForOf", e.lists)
                }
            }
            let Wfe = (() => {
                    class t {
                        isMobile = window.matchMedia && window.matchMedia("(max-device-width: 1024px)").matches || screen.width <= 1024;
                        items = [{
                            heading: "faq_head_1",
                            content: "faq_cont_1",
                            lists: []
                        }, {
                            heading: "faq_head_2",
                            content: "faq_cont_2",
                            lists: []
                        }, {
                            heading: "faq_head_3",
                            content: "",
                            lists: ["faq_cont_5_1", "faq_cont_5_2", "faq_cont_5_3", "faq_cont_5_4", "faq_cont_5_5", "faq_cont_5_6", "faq_cont_5_7", "faq_cont_5_8"]
                        }, {
                            heading: "faq_head_4",
                            content: "faq_cont_3",
                            lists: []
                        }, {
                            heading: "faq_head_5",
                            content: "faq_cont_4",
                            lists: []
                        }];
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["app-faq"]
                            ],
                            decls: 86,
                            vars: 2,
                            consts: [
                                [1, "marquee-wrapper"],
                                [1, "marquee", "p-3"],
                                [1, "track"],
                                [1, "content"],
                                ["src", "./assets/images/svg-icons/star.svg", "alt", "", 1, "px-2"],
                                ["translate", ""],
                                ["src", "./assets/images/svg-icons/wallet-black.svg", "alt", "", 1, "px-2"],
                                ["src", "./assets/images/svg-icons/logo-white.svg", "alt", "", 1, "px-2"],
                                ["src", "./assets/images/svg-icons/wallet-white.svg", "alt", "", 1, "px-2"],
                                ["id", "faq", 1, "faq"],
                                [1, "container"],
                                [1, "row"],
                                [1, "col-12", "col-lg-12"],
                                [1, "faq-wrapper"],
                                ["translate", "", 1, "font-35", "text-capitalize", "mb-5"],
                                [3, "closeOthers"],
                                [4, "ngFor", "ngForOf"],
                                ["accordion-heading", "", 1, "text-primary", "font-16", "font-md-18", "fw-medium", "position-relative", "w-100"],
                                [1, "icon"],
                                [1, "pe-5", "d-flex", "font-18"],
                                ["accordion-panel", ""],
                                [1, "text-tertiary", "font-16"],
                                [1, "p-0"],
                                ["class", "font-18 m-0 p-0", 4, "ngFor", "ngForOf"],
                                [1, "font-18", "m-0", "p-0"]
                            ],
                            template: function(i, s) {
                                1 & i && (N(0, "section", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3), ae(4, "\xa0 "), ot(5, "img", 4), N(6, "p", 5), ae(7, "fill_your"), H(), N(8, "p"), ot(9, "img", 6), H(), N(10, "p", 5), ae(11, "with"), H(), N(12, "p"), ot(13, "img", 7)(14, "img", 4), H(), N(15, "p", 5), ae(16, "fill_your"), H(), N(17, "p"), ot(18, "img", 8), H(), N(19, "p", 5), ae(20, "with"), H(), N(21, "p"), ot(22, "img", 7)(23, "img", 4), H(), N(24, "p", 5), ae(25, "fill_your"), H(), N(26, "p"), ot(27, "img", 6), H(), N(28, "p", 5), ae(29, "with"), H(), N(30, "p"), ot(31, "img", 7)(32, "img", 4), H(), N(33, "p", 5), ae(34, "fill_your"), H(), N(35, "p"), ot(36, "img", 8), H(), N(37, "p", 5), ae(38, "with"), H(), N(39, "p"), ot(40, "img", 7)(41, "img", 4), H(), N(42, "p", 5), ae(43, "fill_your"), H(), N(44, "p"), ot(45, "img", 6), H(), N(46, "p", 5), ae(47, "with"), H(), N(48, "p"), ot(49, "img", 7)(50, "img", 4), H(), N(51, "p", 5), ae(52, "fill_your"), H(), N(53, "p"), ot(54, "img", 8), H(), N(55, "p", 5), ae(56, "with"), H(), N(57, "p"), ot(58, "img", 7)(59, "img", 4), H(), N(60, "p", 5), ae(61, "fill_your"), H(), N(62, "p"), ot(63, "img", 6), H(), N(64, "p", 5), ae(65, "with"), H(), N(66, "p"), ot(67, "img", 7)(68, "img", 4), H(), N(69, "p", 5), ae(70, "fill_your"), H(), N(71, "p"), ot(72, "img", 8), H(), N(73, "p", 5), ae(74, "with"), H(), N(75, "p"), ot(76, "img", 7), H()()()()(), N(77, "section", 9)(78, "div", 10)(79, "div", 11)(80, "div", 12)(81, "div", 13)(82, "h1", 14), ae(83, "faq_head"), H()(), N(84, "accordion", 15), rt(85, Ufe, 13, 7, "accordion-group", 16), H()()()()()), 2 & i && (xe(84), Fe("closeOthers", !0), xe(1), Fe("ngForOf", s.items))
                            },
                            dependencies: [$s, n6, zfe, Ir, Vc],
                            styles: [".faq[_ngcontent-%COMP%]{position:relative;padding:150px 0 40px;margin-top:-150px}@media screen and (max-width: 576px){.faq[_ngcontent-%COMP%]{padding:140px 0 40px;margin-top:-170px}}@media screen and (max-width: 576px){.faq[_ngcontent-%COMP%]   .faq-wrapper[_ngcontent-%COMP%]{margin-top:20px}}.faq[_ngcontent-%COMP%]   .width[_ngcontent-%COMP%]{max-width:400px}.faq[_ngcontent-%COMP%]     .panel{max-width:100%;background:#ffffff;border-radius:16px;padding:5px;margin-bottom:18px}.faq[_ngcontent-%COMP%]     .panel.panel-open .card-header{color:#fff!important}.faq[_ngcontent-%COMP%]     .panel.panel-open .card{background:#ffffff!important}.faq[_ngcontent-%COMP%]     .panel .card{border-radius:16px;background-color:transparent;border:none;margin-bottom:0;padding:32px 32px 32px 50px}.faq[_ngcontent-%COMP%]     .panel .card .card-header{background-color:transparent;padding:8px 0;color:#20262b;border-bottom:0}.faq[_ngcontent-%COMP%]     .panel .card .card-header .icon{position:absolute;height:25px;width:25px;left:-35px;background:url(plus.8b5f60d41d4d89e6.svg) no-repeat;transition:.4s}.faq[_ngcontent-%COMP%]     .panel .card .card-header img{position:absolute;right:20px;top:22px}.faq[_ngcontent-%COMP%]     .panel .card .card-body{padding:10px 0}.faq[_ngcontent-%COMP%]     .panel .card .card-body span{display:inline-block}.faq[_ngcontent-%COMP%]     .panel-open{transition:.5s}.faq[_ngcontent-%COMP%]     .panel-open .icon{background:url(minus.cfbb0bcea3a2229e.svg) no-repeat!important}.faq[_ngcontent-%COMP%]     .panel-open ul li{list-style-type:none}.faq[_ngcontent-%COMP%]     .panel-open ul li:last-of-type{margin-top:20px!important}.marquee-wrapper[_ngcontent-%COMP%]{margin:75px 0 135px}@media screen and (max-width: 576px){.marquee-wrapper[_ngcontent-%COMP%]{margin:0 0 50px}}.marquee-wrapper[_ngcontent-%COMP%]   .marquee[_ngcontent-%COMP%]{position:relative;width:100vw;max-width:100%;height:105px;overflow-x:hidden;background:#20262B;transform:skewY(-3deg)}.marquee-wrapper[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]{position:absolute;white-space:nowrap;will-change:transform;animation:_ngcontent-%COMP%_marquee 32s linear infinite;top:0;bottom:0;margin:auto}.marquee-wrapper[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{height:100%;display:flex;align-items:center;justify-content:center}.marquee-wrapper[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#f5f5f7;font-size:55px;font-style:normal;font-weight:400;line-height:120%;letter-spacing:-2.75px;margin:0 8px}.marquee-wrapper[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin:0 8px}@keyframes _ngcontent-%COMP%_marquee{0%{transform:translate(0)}to{transform:translate(-50%)}}"]
                        })
                    }
                    return t
                })(),
                Gfe = (() => {
                    class t {
                        items = [{
                            head: "about_head_1",
                            para: "about_para_1",
                            link: "about_btn_1",
                            image: "./assets/images/svg-icons/bitcoin_etf_token.svg"
                        }, {
                            head: "about_head_2",
                            para: "about_para_2",
                            link: "about_btn_2",
                            image: "./assets/images/svg-icons/bitcoin_etf_signal.svg"
                        }];
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["app-about"]
                            ],
                            decls: 259,
                            vars: 0,
                            consts: [
                                ["id", "about", 1, "about"],
                                [1, "container"],
                                [1, "row", "mt-sm-5", "align-items-center"],
                                ["translate", "", 1, "font-35", "text-center", "pb-4"],
                                [1, "col-12", "col-lg-6", "mb-4"],
                                [1, "about_card", "light"],
                                ["src", "/assets/images/svg-icons/new_bitcoin.svg", "alt", ""],
                                ["translate", "", 1, "font-25", "fw-semibold", "text-uppercase", "pt-4"],
                                ["translate", "", 1, "font-16", "pt-2"],
                                [1, "about_card"],
                                ["src", "/assets/images/svg-icons/alert_bitcoin.svg", "alt", ""],
                                [1, "marquee", "p-3"],
                                [1, "track"],
                                [1, "content"],
                                [1, "text-red", "mb-0"],
                                [1, "mb-0"],
                                [1, "text-green", "mb-0"]
                            ],
                            template: function(i, s) {
                                1 & i && (N(0, "section", 0)(1, "div", 1)(2, "div", 2)(3, "h1", 3), ae(4, "about_head"), H(), N(5, "div", 4)(6, "div", 5), ot(7, "img", 6), N(8, "h1", 7), ae(9, "about_head_1"), H(), N(10, "p", 8), ae(11, "about_para_1"), H()()(), N(12, "div", 4)(13, "div", 9), ot(14, "img", 10), N(15, "h1", 7), ae(16, "about_head_2"), H(), N(17, "p", 8), ae(18, "about_para_2"), H()()()()()(), N(19, "section")(20, "div", 11)(21, "div", 12)(22, "div", 13), ae(23, "\xa0 "), N(24, "p", 14), ae(25, "-0.06%"), H(), N(26, "p", 15), ae(27, "BTC"), H(), N(28, "p", 16), ae(29, "$34,5647.71"), H(), N(30, "p", 16), ae(31, "+0.31%"), H(), N(32, "p", 15), ae(33, "ETH"), H(), N(34, "p", 16), ae(35, "$1,799.13"), H(), N(36, "p", 16), ae(37, "+0.89%"), H(), N(38, "p", 15), ae(39, "USDT"), H(), N(40, "p", 14), ae(41, "$1.00"), H(), N(42, "p", 14), ae(43, "-0.01%"), H(), N(44, "p", 15), ae(45, "BNB"), H(), N(46, "p", 16), ae(47, "$224.79"), H(), N(48, "p", 16), ae(49, "+0.12%"), H(), N(50, "p", 15), ae(51, "XRP"), H(), N(52, "p", 16), ae(53, "$0.6014"), H(), N(54, "p", 16), ae(55, "+1.06%"), H(), N(56, "p", 15), ae(57, "USDC"), H(), N(58, "p", 14), ae(59, "$0.999"), H(), N(60, "p", 14), ae(61, "-0.01%"), H(), N(62, "p", 15), ae(63, "SOL"), H(), N(64, "p", 16), ae(65, "$40.79"), H(), N(66, "p", 16), ae(67, "+3.7%"), H(), N(68, "p", 15), ae(69, "ADA"), H(), N(70, "p", 14), ae(71, "$0.2891"), H(), N(72, "p", 14), ae(73, "-0.06%"), H(), N(74, "p", 15), ae(75, "DOGE"), H(), N(76, "p", 16), ae(77, "$0.0669"), H(), N(78, "p", 16), ae(79, "+2.48%"), H(), N(80, "p", 14), ae(81, "-0.06%"), H(), N(82, "p", 15), ae(83, "BTC"), H(), N(84, "p", 16), ae(85, "$34,5647.71"), H(), N(86, "p", 16), ae(87, "+0.31%"), H(), N(88, "p", 15), ae(89, "ETH"), H(), N(90, "p", 16), ae(91, "$1,799.13"), H(), N(92, "p", 16), ae(93, "+0.89%"), H(), N(94, "p", 15), ae(95, "USDT"), H(), N(96, "p", 14), ae(97, "$1.00"), H(), N(98, "p", 14), ae(99, "-0.01%"), H(), N(100, "p", 15), ae(101, "BNB"), H(), N(102, "p", 16), ae(103, "$224.79"), H(), N(104, "p", 16), ae(105, "+0.12%"), H(), N(106, "p", 15), ae(107, "XRP"), H(), N(108, "p", 16), ae(109, "$0.6014"), H(), N(110, "p", 16), ae(111, "+1.06%"), H(), N(112, "p", 15), ae(113, "USDC"), H(), N(114, "p", 14), ae(115, "$0.999"), H(), N(116, "p", 14), ae(117, "-0.01%"), H(), N(118, "p", 15), ae(119, "SOL"), H(), N(120, "p", 16), ae(121, "$40.79"), H(), N(122, "p", 16), ae(123, "+3.7%"), H(), N(124, "p", 15), ae(125, "ADA"), H(), N(126, "p", 14), ae(127, "$0.2891"), H(), N(128, "p", 14), ae(129, "-0.06%"), H(), N(130, "p", 15), ae(131, "DOGE"), H(), N(132, "p", 16), ae(133, "$0.0669"), H(), N(134, "p", 16), ae(135, "+2.48%"), H()()(), N(136, "div", 12)(137, "div", 13), ae(138, "\xa0 "), N(139, "p", 16), ae(140, "+1.11"), H(), N(141, "p", 15), ae(142, "TRON"), H(), N(143, "p", 16), ae(144, "$0.09933"), H(), N(145, "p", 16), ae(146, "+0.16%"), H(), N(147, "p", 15), ae(148, "TON"), H(), N(149, "p", 14), ae(150, "\xa32.15"), H(), N(151, "p", 14), ae(152, "-0.65%"), H(), N(153, "p", 15), ae(154, "LINK"), H(), N(155, "p", 16), ae(156, "$10.89"), H(), N(157, "p", 16), ae(158, "+1.25%"), H(), N(159, "p", 15), ae(160, "MATIC"), H(), N(161, "p", 16), ae(162, "$0.6266"), H(), N(163, "p", 16), ae(164, "+0.98%"), H(), N(165, "p", 15), ae(166, "DOT"), H(), N(167, "p", 16), ae(168, "$4.38"), H(), N(169, "p", 16), ae(170, "+0.48%"), H(), N(171, "p", 15), ae(172, "LTC"), H(), N(173, "p", 16), ae(174, "$67.01"), H(), N(175, "p", 16), ae(176, "+1.4%"), H(), N(177, "p", 15), ae(178, "AVAX"), H(), N(179, "p", 16), ae(180, "$11.09"), H(), N(181, "p", 16), ae(182, "+0.57%"), H(), N(183, "p", 15), ae(184, "UNI"), H(), N(185, "p", 16), ae(186, "$4.27"), H(), N(187, "p", 16), ae(188, "+4.56%"), H(), N(189, "p", 15), ae(190, "APT"), H(), N(191, "p", 14), ae(192, "$6.80"), H(), N(193, "p", 14), ae(194, "-0.13%"), H(), N(195, "p", 15), ae(196, "OP"), H(), N(197, "p", 16), ae(198, "$1.36"), H(), N(199, "p", 16), ae(200, "+1.11"), H(), N(201, "p", 15), ae(202, "TRON"), H(), N(203, "p", 16), ae(204, "$0.09933"), H(), N(205, "p", 16), ae(206, "+0.16%"), H(), N(207, "p", 15), ae(208, "TON"), H(), N(209, "p", 14), ae(210, "\xa32.15"), H(), N(211, "p", 14), ae(212, "-0.65%"), H(), N(213, "p", 15), ae(214, "LINK"), H(), N(215, "p", 16), ae(216, "$10.89"), H(), N(217, "p", 16), ae(218, "+1.25%"), H(), N(219, "p", 15), ae(220, "MATIC"), H(), N(221, "p", 16), ae(222, "$0.6266"), H(), N(223, "p", 16), ae(224, "+0.98%"), H(), N(225, "p", 15), ae(226, "DOT"), H(), N(227, "p", 16), ae(228, "$4.38"), H(), N(229, "p", 16), ae(230, "+0.48%"), H(), N(231, "p", 15), ae(232, "LTC"), H(), N(233, "p", 16), ae(234, "$67.01"), H(), N(235, "p", 16), ae(236, "+1.4%"), H(), N(237, "p", 15), ae(238, "AVAX"), H(), N(239, "p", 16), ae(240, "$11.09"), H(), N(241, "p", 16), ae(242, "+0.57%"), H(), N(243, "p", 15), ae(244, "UNI"), H(), N(245, "p", 16), ae(246, "$4.27"), H(), N(247, "p", 16), ae(248, "+4.56%"), H(), N(249, "p", 15), ae(250, "APT"), H(), N(251, "p", 14), ae(252, "$6.80"), H(), N(253, "p", 14), ae(254, "-0.13%"), H(), N(255, "p", 15), ae(256, "OP"), H(), N(257, "p", 16), ae(258, "$1.36"), H()()()()())
                            },
                            dependencies: [Ir],
                            styles: [".about[_ngcontent-%COMP%]{padding:100px 0 50px}@media screen and (max-width: 576px){.about[_ngcontent-%COMP%]{padding:140px 0 50px;margin-top:-80px}}.about[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#4d5060}.about[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]{width:270px}.about_card[_ngcontent-%COMP%]{box-shadow:2px 4px 12px #00000014;border-radius:40px;background:#f7f7fa;padding:52px 46px 52px 52px;min-height:400px}@media screen and (max-width: 576px){.about_card[_ngcontent-%COMP%]{padding:40px 30px}}.about[_ngcontent-%COMP%]   .light[_ngcontent-%COMP%]{background:#DAFEDE}.marquee[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px;background-color:#000511;position:relative;z-index:0;overflow:hidden;height:70px;width:100vw;max-width:100%}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]{position:absolute;animation:_ngcontent-%COMP%_marquee 12s linear infinite;white-space:nowrap;will-change:transform;animation-play-state:running;top:15px}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{height:100%;display:flex;align-items:center;justify-content:center}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#eb807e;font-size:14px;font-style:normal;font-weight:500;line-height:160%;letter-spacing:-.28px;margin:0 4px}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   p.text-red[_ngcontent-%COMP%]{color:#ff0300}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]   p.text-green[_ngcontent-%COMP%]{color:#1ef93b}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]:nth-child(2){top:35px}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{margin-bottom:3px}@keyframes _ngcontent-%COMP%_marquee{0%{transform:translate(0)}to{transform:translate(-30%)}}"]
                        })
                    }
                    return t
                })();

            function Xfe(t, n) {
                if (1 & t && (N(0, "div", 12), ot(1, "img", 13), N(2, "h1", 14), ae(3), H(), N(4, "p", 15), ae(5), H()()), 2 & t) {
                    const e = Qe().$implicit;
                    xe(1), Fe("src", e.image, jr), xe(2), qt(e.head), xe(2), qt(e.para)
                }
            }

            function Yfe(t, n) {
                1 & t && rt(0, Xfe, 6, 3, "ng-template", 11)
            }

            function qfe(t, n) {
                1 & t && ot(0, "img", 16)
            }
            let Zfe = (() => {
                class t {
                    eventService;
                    constructor(e) {
                        this.eventService = e
                    }
                    isMobile = window.matchMedia && window.matchMedia("(max-device-width: 1024px)").matches || screen.width <= 1024;
                    items = [{
                        head: "use_eth",
                        image: "./assets/images/svg-icons/how_eth.svg",
                        para: "use_eth_para"
                    }, {
                        head: "use_usdt",
                        image: "./assets/images/svg-icons/how_usdt.svg",
                        para: "use_usdt_para"
                    }, {
                        head: "use_card",
                        image: "./assets/images/svg-icons/how_card.svg",
                        para: "use_card_para"
                    }];
                    slideOption = {
                        loop: !1,
                        autoplay: !1,
                        mouseDrag: !0,
                        touchDrag: !0,
                        dots: !0,
                        autoWidth: !0,
                        center: !1,
                        navText: ["<img src='/assets/images/svg-icons/buy-left.svg' class='icon-left' alt=''>", "<img src='/assets/images/svg-icons/buy-arrow.svg' class='icon-right' alt=''>"],
                        responsive: {
                            0: {
                                items: 1,
                                nav: !1,
                                margin: 10
                            },
                            400: {
                                items: 1
                            },
                            766: {
                                items: 3,
                                nav: !1,
                                margin: 30
                            }
                        }
                    };
                    showWidget(e) {
                        this.eventService.showBuyWidget(e)
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(bl))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-how-to-buy"]
                        ],
                        decls: 14,
                        vars: 3,
                        consts: [
                            ["id", "howtobuy", 1, "container"],
                            [1, "howtobuy", "px-3"],
                            [1, "row"],
                            ["translate", "", 1, "font-35", "mb-3", "font-regular", "text-white", "text-center"],
                            ["translate", "", 1, "font-18", "text-center", "mwx-750", "mx-auto"],
                            ["dir", "ltr", 1, "d-flex", "howto", "pt-4", 3, "options"],
                            [4, "ngFor", "ngForOf"],
                            [1, "text-center"],
                            ["translate", "", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "connect-btn", "fs-7", "mt-3", "mt-md-5", "mb-0", "mb-md-3", 3, "click"],
                            ["src", "/assets/images/svg-icons/wallet-check.svg", "alt", "", 1, "img-fluid", "me-2"],
                            ["src", "/assets/images/svg-icons/buy-floating.svg", "alt", "", "class", "img-fluid buy-floating", 4, "ngIf"],
                            ["carouselSlide", ""],
                            [1, "card", "mt-sm-4"],
                            ["alt", "", 1, "", 3, "src"],
                            ["translate", "", 1, "font-25", "text-white", "fw-regular", "pt-4"],
                            ["translate", "", 1, "font-16", "text-white", "fw-regular"],
                            ["src", "/assets/images/svg-icons/buy-floating.svg", "alt", "", 1, "img-fluid", "buy-floating"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "section", 0)(1, "div", 1)(2, "div", 2)(3, "h1", 3), ae(4, "how_to_head"), H(), N(5, "p", 4), ae(6, "how_to_para"), H(), N(7, "owl-carousel-o", 5), rt(8, Yfe, 1, 0, null, 6), H(), N(9, "div", 7)(10, "button", 8), bt("click", function() {
                                return s.showWidget("home")
                            }), ot(11, "img", 9), ae(12, "buy_now"), H()()(), rt(13, qfe, 1, 0, "img", 10), H()()), 2 & i && (xe(7), Fe("options", s.slideOption), xe(1), Fe("ngForOf", s.items), xe(5), Fe("ngIf", !s.isMobile))
                        },
                        dependencies: [$s, Ji, TC, Gv, Ir],
                        styles: [".container[_ngcontent-%COMP%]{padding:80px 25px 0;margin-top:-70px}.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]{background:url(/assets/images/svg-icons/bitcoin_buy.svg) no-repeat 100% 0;background-size:cover;position:relative;padding:60px 0 70px;margin-top:60px;border-radius:30px;background-position:100% 100%}@media screen and (max-width: 576px){.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]{padding:50px 0;background:url(/assets/images/svg-icons/bitcoin_buy_mob.svg) no-repeat 0 0/cover}}.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#818c95}@media screen and (max-width: 768px){.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#fff}}.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   .buy-floating[_ngcontent-%COMP%]{position:absolute;left:0;right:0;margin:0 auto;bottom:-34px}.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{border-radius:40px;background:rgba(38,43,47,.65);-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);padding:30px 25px;border:2px solid #20262B;min-height:235px}.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:hover{transition:.8s}@media screen and (max-width: 576px){.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{padding:30px 20px}}.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   .top[_ngcontent-%COMP%]{border-bottom:1px solid rgba(230,233,235,.5);padding-bottom:10px}.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]{width:384px;margin:15px auto}@media screen and (max-width: 576px){.container[_ngcontent-%COMP%]   .howtobuy[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]{width:100%}}  .howto .owl-carousel .owl-item img{height:50px!important;width:50px!important}  .howto .owl-prev,   .howto .owl-next{background:#20262B!important;width:55px;height:55px;line-height:2.9;border-radius:100%!important}  .howto .owl-prev{left:-7%!important;position:absolute}@media screen and (max-width: 576px){  .howto .owl-prev{position:unset}}  .howto .owl-next{right:-7%!important;position:absolute}@media screen and (max-width: 576px){  .howto .owl-next{position:unset}}  .howto .owl-prev.disabled,   .howto .owl-next.disabled{opacity:1;background:#FFFFFF!important}  .howto .owl-prev.disabled img,   .howto .owl-next.disabled img{filter:brightness(0) saturate(100%) invert(60%) sepia(4%) saturate(195%) hue-rotate(187deg) brightness(92%) contrast(92%)}  .howto .owl-nav{width:100%;justify-content:space-between;display:flex;position:absolute;top:25%}@media screen and (max-width: 576px){  .howto .owl-nav{position:unset;justify-content:flex-start}}  .howto .owl-theme .owl-dots{margin-top:20px!important}"]
                    })
                }
                return t
            })();

            function Kfe(t, n) {
                1 & t && (N(0, "section")(1, "div", 2)(2, "div", 3)(3, "p", 4), ae(4, "feature_head"), H(), N(5, "div", 5), ot(6, "img", 6)(7, "img", 7)(8, "img", 8)(9, "img", 9)(10, "img", 10)(11, "img", 11)(12, "img", 12)(13, "img", 6)(14, "img", 7)(15, "img", 8)(16, "img", 9)(17, "img", 10)(18, "img", 11)(19, "img", 12), H()()()())
            }

            function Qfe(t, n) {
                1 & t && (N(0, "section", 13)(1, "p", 4), ae(2, "feature_head"), H(), N(3, "div", 14), ot(4, "img", 15)(5, "img", 16)(6, "img", 17)(7, "img", 18)(8, "img", 19)(9, "img", 20)(10, "img", 21), H()())
            }
            let Jfe = (() => {
                class t {
                    isMobile = window.matchMedia && window.matchMedia("(max-device-width: 1024px)").matches || screen.width <= 1024;
                    static\ u0275fac = function(i) {
                        return new(i || t)
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-featured"]
                        ],
                        decls: 2,
                        vars: 2,
                        consts: [
                            [4, "ngIf"],
                            ["class", "wrap", 4, "ngIf"],
                            [1, "container"],
                            [1, "marquee", "p-3", "mt-4"],
                            ["translate", "", 1, "text-center", "text-uppercase", "font-18"],
                            [1, "track"],
                            ["src", "./assets/images/featured/feature (1).svg", "alt", "", 1, "px-5"],
                            ["src", "./assets/images/featured/feature (2).svg", "alt", "", 1, "px-5"],
                            ["src", "./assets/images/featured/feature (3).svg", "alt", "", 1, "px-5"],
                            ["src", "./assets/images/featured/feature (4).svg", "alt", "", 1, "px-5"],
                            ["src", "./assets/images/featured/feature (5).svg", "alt", "", 1, "px-5"],
                            ["src", "./assets/images/featured/feature (6).svg", "alt", "", 1, "px-5"],
                            ["src", "./assets/images/featured/feature (7).svg", "alt", "", 1, "px-5"],
                            [1, "wrap"],
                            [1, "img-wrapper", "container", "mx-auto"],
                            ["src", "./assets/images/featured/feature (1).svg", "alt", "", 1, "px-3"],
                            ["src", "./assets/images/featured/feature (7).svg", "alt", "", 1, "px-3"],
                            ["src", "./assets/images/featured/feature (6).svg", "alt", "", 1, "px-3"],
                            ["src", "./assets/images/featured/feature (5).svg", "alt", "", 1, "px-3"],
                            ["src", "./assets/images/featured/feature (3).svg", "alt", "", 1, "px-3"],
                            ["src", "./assets/images/featured/feature (4).svg", "alt", "", 1, "px-3"],
                            ["src", "./assets/images/featured/feature (2).svg", "alt", "", 1, "px-3"]
                        ],
                        template: function(i, s) {
                            1 & i && (rt(0, Kfe, 20, 0, "section", 0), rt(1, Qfe, 11, 0, "section", 1)), 2 & i && (Fe("ngIf", s.isMobile), xe(1), Fe("ngIf", !s.isMobile))
                        },
                        dependencies: [Ji, Ir],
                        styles: [".marquee[_ngcontent-%COMP%]{padding-top:8px;padding-bottom:8px;position:relative;z-index:4;overflow:hidden}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_marquee 24s linear infinite;white-space:nowrap}@media screen and (max-width: 576px){.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]{animation:marquee 7s linear infinite}}.marquee[_ngcontent-%COMP%]   .track[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{margin-bottom:3px}@keyframes _ngcontent-%COMP%_marquee{to{transform:translate(-80%)}0%{transform:translate(0)}}p[_ngcontent-%COMP%]{color:#79797980}.img-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin:0 auto}@media screen and (max-width: 576px){.img-wrapper[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr)}}.wrap[_ngcontent-%COMP%]{padding-top:120px}"]
                    })
                }
                return t
            })();

            function epe(t, n) {
                1 & t && (N(0, "div", 8)(1, "div", 9)(2, "div")(3, "h1", 10), ae(4, " roadmap_1_title_head"), H(), N(5, "h1", 11), ae(6, " roadmap_1_head"), H()(), ot(7, "img", 12), H(), N(8, "p", 13), ae(9, "roadmap_1_para"), H()())
            }

            function tpe(t, n) {
                1 & t && (N(0, "div", 8)(1, "div", 9)(2, "div")(3, "h1", 10), ae(4, " roadmap_2_title_head"), H(), N(5, "h1", 11), ae(6, " roadmap_2_head"), H()(), ot(7, "img", 12), H(), N(8, "p", 13), ae(9, "roadmap_2_para"), H()())
            }

            function npe(t, n) {
                1 & t && (N(0, "div", 8)(1, "div", 9)(2, "div")(3, "h1", 10), ae(4, " roadmap_3_title_head"), H(), N(5, "h1", 11), ae(6, " roadmap_3_head"), H()(), ot(7, "img", 12), H(), N(8, "p", 13), ae(9, "roadmap_3_para"), H()())
            }

            function ipe(t, n) {
                1 & t && (N(0, "div", 8)(1, "div", 9)(2, "div")(3, "h1", 10), ae(4, " roadmap_4_title_head"), H(), N(5, "h1", 11), ae(6, " roadmap_4_head"), H()(), ot(7, "img", 14), H(), N(8, "p", 13), ae(9, "roadmap_4_para"), H()())
            }

            function spe(t, n) {
                if (1 & t && (N(0, "li", 21), ot(1, "img", 22), N(2, "span", 23), ae(3), Yt(4, "translate"), H()()), 2 & t) {
                    const e = n.$implicit;
                    xe(3), dn(" ", xn(4, 1, e), " ")
                }
            }

            function rpe(t, n) {
                if (1 & t && (N(0, "div", 15), ot(1, "img", 16), N(2, "h1", 17), ae(3), H(), N(4, "h5", 18), ae(5), H(), N(6, "ul", 19), rt(7, spe, 5, 3, "li", 20), H()()), 2 & t) {
                    const e = Qe().$implicit;
                    xe(1), Fe("src", e.image, jr), xe(2), qt(e.title), xe(2), qt(e.pophead), xe(2), Fe("ngForOf", e.lists)
                }
            }

            function ape(t, n) {
                1 & t && rt(0, rpe, 8, 4, "ng-template", 6)
            }
            let ope = (() => {
                class t {
                    isMobile = window.matchMedia && window.matchMedia("(max-device-width: 1024px)").matches || screen.width <= 1024;
                    items = [{
                        image: "/assets/images/svg-icons/etf_volume.svg",
                        title: "etf_volume",
                        pophead: "popover_head_1",
                        lists: ["pop_cont1_1", "pop_cont1_2", "pop_cont1_3"]
                    }, {
                        image: "/assets/images/svg-icons/etf_approval.svg",
                        title: "etf_approval",
                        pophead: "popover_head_2",
                        lists: ["pop_cont2_1", "pop_cont2_2", "pop_cont2_3"]
                    }, {
                        image: "/assets/images/svg-icons/etf_launch.svg",
                        title: "etf_launch",
                        pophead: "popover_head_3",
                        lists: ["pop_cont3_1", "pop_cont3_2", "pop_cont3_3"]
                    }, {
                        image: "/assets/images/svg-icons/etf_aum.svg",
                        title: "etf_aum",
                        pophead: "popover_head_4",
                        lists: ["pop_cont4_1", "pop_cont4_2", "pop_cont4_3"]
                    }, {
                        image: "/assets/images/svg-icons/etf_bitcoin.svg",
                        title: "etf_bitcoin",
                        pophead: "popover_head_5",
                        lists: ["pop_cont5_1", "pop_cont5_2", "pop_cont5_3"]
                    }];
                    slideOption = {
                        loop: !1,
                        autoplay: !1,
                        mouseDrag: !0,
                        touchDrag: !0,
                        dots: !1,
                        nav: !0,
                        autoWidth: !0,
                        margin: 25,
                        navText: ["<img src='/assets/images/svg-icons/icon-left.svg' class='icon-left' alt=''>", "<img src='/assets/images/svg-icons/icon-right.svg' class='icon-right' alt=''>"],
                        responsive: {
                            0: {
                                items: 1
                            },
                            400: {
                                items: 1
                            },
                            766: {
                                items: 3.5
                            },
                            1024: {
                                items: 3.5
                            },
                            1450: {
                                items: 4.5
                            },
                            1800: {
                                items: 5
                            }
                        }
                    };
                    static\ u0275fac = function(i) {
                        return new(i || t)
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-roadmap"]
                        ],
                        decls: 15,
                        vars: 3,
                        consts: [
                            ["id", "roadmap", 1, "roadmap"],
                            [1, "container-fluid"],
                            ["translate", "", 1, "font-35", "fw-semibold", "text-center"],
                            ["translate", "", 1, "font-18", "w-50", "pt-2", "mx-auto", "text-center"],
                            [1, "caroContainer", "justify-content-center"],
                            ["dir", "ltr", 1, "d-flex", "owl-wrapper", 3, "options"],
                            ["carouselSlide", ""],
                            [4, "ngFor", "ngForOf"],
                            [1, "card"],
                            [1, "d-flex", "justify-content-between", "align-items-center"],
                            ["translate", "", 1, "font-23", "m-0", "p-0", "fw-semibold"],
                            ["translate", "", 1, "font-18", "m-0", "pt-2"],
                            ["src", "/assets/images/svg-icons/roadmap_arrow.svg", "alt", ""],
                            ["translate", "", 1, "font-16", "pt-3"],
                            ["src", "./assets/images/svg-icons/roadmap_arrow.svg", "alt", "", 1, "arrow"],
                            [1, "card", "bg-tertiary"],
                            ["alt", "", 1, "title_image", 3, "src"],
                            ["translate", "", 1, "text-white", "font-25", "pt-3"],
                            ["translate", "", 1, "font-20", "text-white", "pt-3", "fw-regular", "pb-3"],
                            [1, "m-0", "p-0"],
                            ["class", "font-16  m-0 p-0 d-flex ", 4, "ngFor", "ngForOf"],
                            [1, "font-16", "m-0", "p-0", "d-flex"],
                            ["src", "./assets/images/svg-icons/roadmap-arrow.svg", "alt", "", 1, "list-icon"],
                            [1, "ps-2"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "section", 0)(1, "div", 1)(2, "h1", 2), ae(3, "roadmap_head"), H(), N(4, "p", 3), ae(5, "roadmap_para"), H(), N(6, "div", 4)(7, "owl-carousel-o", 5), rt(8, epe, 10, 0, "ng-template", 6), rt(9, tpe, 10, 0, "ng-template", 6), rt(10, npe, 10, 0, "ng-template", 6), rt(11, ipe, 10, 0, "ng-template", 6), H()(), N(12, "div", 4)(13, "owl-carousel-o", 5), rt(14, ape, 1, 0, null, 7), H()()()()), 2 & i && (xe(7), Fe("options", s.slideOption), xe(6), Fe("options", s.slideOption), xe(1), Fe("ngForOf", s.items))
                        },
                        dependencies: [$s, TC, Gv, Ir, Vc],
                        styles: [".roadmap[_ngcontent-%COMP%]{padding:150px 0 110px;margin-top:-70px;margin-bottom:-50px}@media screen and (max-width: 1024px){.roadmap[_ngcontent-%COMP%]{padding:130px 0;margin-top:-70px}}.roadmap[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{line-height:25.6px}@media screen and (max-width: 576px){.roadmap[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{width:100%!important}}.roadmap[_ngcontent-%COMP%]   .caroContainer[_ngcontent-%COMP%]{max-width:99%;margin:0 auto}.roadmap[_ngcontent-%COMP%]   .caroContainer[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{border-radius:40px;background:#ffffff;box-shadow:2px 4px 12px #00000014;display:flex;padding:35px 30px 30px;flex-direction:column;min-height:275px;border:none}@media screen and (max-width: 576px){.roadmap[_ngcontent-%COMP%]   .caroContainer[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{opacity:1}}.roadmap[_ngcontent-%COMP%]   .caroContainer[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#20262b;font-weight:500}.roadmap[_ngcontent-%COMP%]   .caroContainer[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#818c95;font-weight:400}.roadmap[_ngcontent-%COMP%]   .caroContainer[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#c2ccd3;padding-bottom:7px}  .roadmap .owl-prev,   .roadmap .owl-next{background:#9fffaa!important;width:55px;height:55px;line-height:3.3;border-radius:100%!important;margin:15px 10px!important}  .roadmap .owl-prev.disabled,   .roadmap .owl-next.disabled{opacity:1;background:#FFFFFF!important}  .roadmap .owl-prev.disabled img,   .roadmap .owl-next.disabled img{filter:brightness(0) saturate(100%) invert(60%) sepia(4%) saturate(195%) hue-rotate(187deg) brightness(92%) contrast(92%)}  .roadmap .owl-carousel .owl-item img{height:50px!important;width:50px!important}  .roadmap .owl-nav{width:100%;justify-content:center;display:flex;position:absolute;font-size:16px;left:0}@media screen and (max-width: 576px){  .roadmap .owl-nav{position:unset;justify-content:flex-start}}  .roadmap .owl-carousel .owl-item .list-icon{height:17px!important;width:17px!important}  .roadmap .owl-carousel .owl-stage{display:flex}  .roadmap .owl-carousel .owl-stage .owl-item{display:flex}  .roadmap .owl-stage-outer{padding:25px 0}  .owl-wrapper{margin:100px 0}@media screen and (max-width: 576px){  .owl-wrapper{margin:20px 0}}"]
                    })
                }
                return t
            })();
            const u0 = function(t) {
                return {
                    shimmer: t
                }
            };

            function lpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 7), bt("click", function() {
                        Ot(e);
                        const s = Qe().$implicit;
                        return It(Qe().openUrl(s.url))
                    }), N(1, "h3", 8), ae(2), H(), ot(3, "img", 9), N(4, "p", 10), ae(5), H(), N(6, "p", 11), ae(7), ot(8, "br"), ae(9), H()()
                }
                if (2 & t) {
                    const e = Qe().$implicit,
                        i = Qe();
                    xe(1), Fe("ngClass", hn(9, u0, !i.isLoaded)), xe(1), dn(" ", e.title, " "), xe(1), Fe("src", e.image, jr)("ngClass", hn(11, u0, !i.isLoaded)), xe(1), Fe("ngClass", hn(13, u0, !i.isLoaded)), xe(1), qt(e.content_text), xe(1), Fe("ngClass", hn(15, u0, !i.isLoaded)), xe(1), qt(e.authors ? null == e.authors[0] ? null : e.authors[0].name : ""), xe(2), qt(i.timeSince(e.date_published))
                }
            }

            function cpe(t, n) {
                1 & t && rt(0, lpe, 10, 17, "ng-template", 6)
            }
            let upe = (() => {
                    class t {
                        http;
                        isLoaded = !1;
                        items = [{
                            title: "blog_title_1",
                            content_text: "blog_subtitle_1",
                            image: "./assets/images/svg-icons/loading.svg",
                            date_published: "blog_time_1",
                            url: ""
                        }, {
                            title: "blog_title_1",
                            content_text: "blog_subtitle_1",
                            image: "./assets/images/svg-icons/loading.svg",
                            date_published: "blog_time_1",
                            url: ""
                        }, {
                            title: "blog_title_1",
                            content_text: "blog_subtitle_1",
                            image: "./assets/images/svg-icons/loading.svg",
                            date_published: "blog_time_1",
                            url: ""
                        }, {
                            title: "blog_title_1",
                            content_text: "blog_subtitle_1",
                            image: "./assets/images/svg-icons/loading.svg",
                            date_published: "blog_time_1",
                            url: ""
                        }];
                        slideOption = {
                            loop: !1,
                            autoplay: !1,
                            mouseDrag: !0,
                            touchDrag: !0,
                            dots: !1,
                            nav: !0,
                            autoWidth: !0,
                            center: !1,
                            margin: 20,
                            navText: ["<img src='/assets/images/svg-icons/icon-left.svg' class='icon-left' alt=''>", "<img src='/assets/images/svg-icons/icon-right.svg' class='icon-right' alt=''>"],
                            responsive: {
                                0: {
                                    items: 1.5
                                },
                                400: {
                                    items: 1.3
                                },
                                766: {
                                    items: 4
                                }
                            }
                        };
                        constructor(e) {
                            this.http = e, this.http.get(xt.newsUrl).subscribe(i => {
                                console.log("NewsURL success response", i), this.items = i.items, this.isLoaded = !0
                            }, i => {
                                console.log("NewsURL error response", i)
                            })
                        }
                        openUrl(e) {
                            window.open(e, "_blank")
                        }
                        timeSince(e) {
                            return function ble(t) {
                                var n = Math.floor(+(Date.parse((new Date).toString()) - Date.parse(t)) / 1e3),
                                    e = n / 31536e3;
                                return e > 1 ? Math.floor(e) + " year" + (1 == Math.floor(e) ? " ago" : "s ago") : (e = n / 2592e3) > 1 ? Math.floor(e) + " month" + (1 == Math.floor(e) ? " ago" : "s ago") : (e = n / 86400) > 1 ? Math.floor(e) + " day" + (1 == Math.floor(e) ? " ago" : "s ago") : (e = n / 3600) > 1 ? Math.floor(e) + " hour" + (1 == Math.floor(e) ? " ago" : "s ago") : (e = n / 60) > 1 ? Math.floor(e) + " minute" + (1 == Math.floor(e) ? " ago" : "s ago") : Math.floor(n) + " second" + (1 == Math.floor(e) ? " ago" : "s ago")
                            }(e)
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(Ul))
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["app-news"]
                            ],
                            decls: 7,
                            vars: 2,
                            consts: [
                                ["id", "blog", 1, "blog"],
                                [1, "container"],
                                ["translate", "", 1, "font-20", "mt-5", "mt-md-2", "font-sm-25", "mb-0", "text-primary", "fw-medium"],
                                [1, "pt-2"],
                                ["dir", "ltr", 1, "d-flex", "blog-slider", 3, "options"],
                                [4, "ngFor", "ngForOf"],
                                ["carouselSlide", ""],
                                [1, "blog-box", "w-100", "cursor-pointer", 3, "click"],
                                ["translate", "", 1, "title", "font-16", "fw-bold", "heading", "mb-2", "text-grey", 3, "ngClass"],
                                ["alt", "", 1, "img-fluid", 3, "src", "ngClass"],
                                ["translate", "", 1, "pt-3", "mb-1", "font-16", "text-grey", "description", 3, "ngClass"],
                                [1, "m-0", "pt-2", "font-10", "fw-bold", "time", 3, "ngClass"]
                            ],
                            template: function(i, s) {
                                1 & i && (N(0, "section", 0)(1, "div", 1)(2, "h3", 2), ae(3, "news_head"), H(), N(4, "div", 3)(5, "owl-carousel-o", 4), rt(6, cpe, 1, 0, null, 5), H()()()()), 2 & i && (xe(5), Fe("options", s.slideOption), xe(1), Fe("ngForOf", s.items))
                            },
                            dependencies: [Qo, $s, TC, Gv, Ir],
                            styles: [".blog[_ngcontent-%COMP%]{position:relative}.blog[_ngcontent-%COMP%]   .blog-box[_ngcontent-%COMP%]{border-radius:40px;box-shadow:2px 4px 12px #00000014;background:#ffffff;padding:20px;min-height:308px;display:flex;flex-direction:column;align-items:stretch}.blog[_ngcontent-%COMP%]   .blog-box[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{color:#4d5060a8}.blog[_ngcontent-%COMP%]   .blog-box[_ngcontent-%COMP%]   .content[_ngcontent-%COMP%]{line-height:24px}.blog[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{width:100%;margin:40px auto 0}  .blog .owl-prev,   .blog .owl-next{background:#9fffaa!important;width:55px;height:55px;line-height:3.3;border-radius:100%!important;margin:15px 10px!important}  .blog .owl-carousel .owl-item img{border-radius:20px;object-fit:cover}  .blog .owl-prev.disabled,   .blog .owl-next.disabled{opacity:1;background:rgba(255,255,255,.5019607843)!important}  .blog .owl-prev.disabled img,   .blog .owl-next.disabled img{filter:brightness(0) saturate(100%) invert(60%) sepia(4%) saturate(195%) hue-rotate(187deg) brightness(92%) contrast(92%)}  .blog .owl-nav{width:100%;justify-content:flex-start;display:flex;position:absolute;font-size:16px;left:0}@media screen and (max-width: 576px){  .blog .owl-nav{position:unset;justify-content:flex-start}}  .blog .owl-carousel .owl-stage{display:flex}  .blog .owl-carousel .owl-stage .owl-item{display:flex;flex:1 0 auto}  .blog .owl-stage-outer{padding:25px 0}.description[_ngcontent-%COMP%]{display:-webkit-box;max-width:200px;-webkit-line-clamp:4;-webkit-box-orient:vertical;overflow:hidden;min-height:106px}.title[_ngcontent-%COMP%]{display:-webkit-box;max-width:200px;-webkit-line-clamp:4;-webkit-box-orient:vertical;overflow:hidden;min-height:78px}img[_ngcontent-%COMP%]{min-height:150px;max-height:150px}"]
                        })
                    }
                    return t
                })(),
                dpe = (() => {
                    class t {
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["app-home"]
                            ],
                            decls: 7,
                            vars: 0,
                            template: function(i, s) {
                                1 & i && ot(0, "app-banner")(1, "app-news")(2, "app-about")(3, "app-how-to-buy")(4, "app-featured")(5, "app-roadmap")(6, "app-faq")
                            },
                            dependencies: [Mfe, Wfe, Gfe, Zfe, Jfe, ope, upe]
                        })
                    }
                    return t
                })();
            var i6;
            let hpe = (() => {
                    class t {
                        meta;
                        title;
                        eventService;
                        lang;
                        constructor(e, i, s) {
                            this.meta = e, this.title = i, this.eventService = s, Ty("clickId"), Ty("source"), this.meta.updateTag({
                                name: "description",
                                content: "Welcome to Bitcoin ETF Token, a cryptocurrency tied to the fate of Bitcoin (BTC) and the expected exchange-traded fund (ETF) approvals coming from the SEC. Fill your bags before launch!"
                            }), this.title.setTitle("Bitcoin ETF Token | Fill Your Bags Before SEC Approval"), this.eventService.getLang().subscribe(r => {
                                i6 = r || "en"
                            })
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(yO), $e(P_), $e(bl))
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["app-root"]
                            ],
                            decls: 2,
                            vars: 1,
                            consts: [
                                [3, "dir"]
                            ],
                            template: function(i, s) {
                                1 & i && (N(0, "div", 0), ot(1, "router-outlet"), H()), 2 & i && Fe("dir", "ar" !== s.lang ? "ltr" : "rtl")
                            },
                            dependencies: [Fv]
                        })
                    }
                    return t
                })(),
                fpe = (() => {
                    class t {
                        transform(e, ...i) {
                            return e ? e.slice(0, 6) + "..." + e.slice(e.length - 5, e.length) : "--"
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275pipe = Es({
                            name: "trimAddress",
                            type: t,
                            pure: !0
                        })
                    }
                    return t
                })();
            const ppe = ["navigation"];

            function gpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "a", 28), bt("click", function() {
                        const r = Ot(e).$implicit;
                        return It(Qe(2).navigateToSection(r.routeName))
                    }), ae(1), H()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    id("title", e.routeName), xe(1), qt(e.navName)
                }
            }

            function mpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 31), bt("click", function() {
                        const r = Ot(e).$implicit;
                        return It(Qe(3).changeLanguage(r.value))
                    }), ot(1, "img", 32), N(2, "span"), ae(3), H()()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    xe(1), Dr("src", "./assets/images/flags/", e.flag, ".svg", jr), xe(2), qt(e.name)
                }
            }

            function vpe(t, n) {
                if (1 & t && (N(0, "ul", 29), rt(1, mpe, 4, 2, "li", 30), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), Fe("ngForOf", e.languagesList)
                }
            }

            function ype(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 33), bt("click", function() {
                        return Ot(e), It(Qe(2).disconnect())
                    }), N(1, "div", 34), ae(2), Yt(3, "trimAddress"), H()()
                }
                if (2 & t) {
                    const e = Qe(2);
                    xe(2), qt(xn(3, 1, e.walletAddress))
                }
            }
            const s6 = function(t) {
                    return {
                        scrolled: t
                    }
                },
                bpe = function() {
                    return {
                        "width.px": "14",
                        "height.px": "22"
                    }
                };

            function xpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 5)(1, "div", 6)(2, "div", 7)(3, "div", 8)(4, "div", 9, 10), bt("click", function(s) {
                        Ot(e);
                        const r = Qe();
                        return r.navigateToSection("home"), It(r.addActive(s))
                    }), ot(6, "svg-icon", 11), H(), N(7, "div", 12)(8, "a", 13), ae(9, "nav_stake"), H(), rt(10, gpe, 2, 2, "a", 14), N(11, "div", 15)(12, "a", 16), ot(13, "img", 17), H(), N(14, "a", 18), ot(15, "img", 19), H()(), N(16, "div", 20)(17, "div", 21)(18, "span", 22), ae(19), H(), ot(20, "svg-icon", 23), H(), rt(21, vpe, 2, 1, "ul", 24), H(), N(22, "div", 25)(23, "div", 26), rt(24, ype, 4, 3, "div", 27), H()()()()()()()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(6, s6, e.isScrolled)), xe(8), Dr("routerLink", "/", e.currentLanguage, "/dashboard"), xe(2), Fe("ngForOf", e.navigations), xe(9), qt(null == e.selectedLanguage ? null : e.selectedLanguage.value), xe(1), Fe("svgStyle", ds(8, bpe)), xe(4), Fe("ngIf", e.walletAddress)
                }
            }

            function _pe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "a", 56), bt("click", function(s) {
                        const l = Ot(e).$implicit,
                            u = Qe(3);
                        return u.navigateToSection(l.routeName), u.addActive(s), It(u.openCloseMenu())
                    }), ae(1), H()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    id("title", e.routeName), xe(1), dn("", e.navName, " ")
                }
            }

            function wpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 57), bt("click", function() {
                        Ot(e);
                        const s = Qe(3);
                        return s.showWidgetMob("home"), It(s.openCloseMenu())
                    }), N(1, "div", 58), ae(2, "buy_token"), H()()
                }
            }

            function Cpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 57), bt("click", function() {
                        Ot(e);
                        const s = Qe(3);
                        return s.disconnect(), It(s.openCloseMenu())
                    }), N(1, "div", 59), ae(2), Yt(3, "trimAddress"), H()()
                }
                if (2 & t) {
                    const e = Qe(3);
                    xe(2), qt(xn(3, 1, e.walletAddress))
                }
            }

            function Spe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "li", 31), bt("click", function() {
                        const r = Ot(e).$implicit,
                            l = Qe(4);
                        return l.changeLanguage(r.value), It(l.openCloseMenu())
                    }), ot(1, "img", 32), N(2, "span"), ae(3), H()()
                }
                if (2 & t) {
                    const e = n.$implicit;
                    xe(1), Dr("src", "./assets/images/flags/", e.flag, ".svg", jr), xe(2), qt(e.name)
                }
            }

            function Tpe(t, n) {
                if (1 & t && (N(0, "ul", 29), rt(1, Spe, 4, 2, "li", 30), H()), 2 & t) {
                    const e = Qe(3);
                    xe(1), Fe("ngForOf", e.languagesList)
                }
            }
            const Dpe = function(t) {
                    return {
                        open: t
                    }
                },
                Ape = function() {
                    return {
                        "width.px": "20",
                        "height.px": "20"
                    }
                };

            function kpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 43)(1, "div", 44)(2, "div", 45)(3, "a", 46), bt("click", function() {
                        return Ot(e), It(Qe(2).openCloseMenu())
                    }), ae(4, "nav_stake"), H(), rt(5, _pe, 2, 2, "a", 47), H(), rt(6, wpe, 3, 0, "div", 48), rt(7, Cpe, 4, 3, "div", 48), N(8, "div", 49)(9, "a", 50), ot(10, "img", 17), H(), N(11, "a", 51), ot(12, "img", 19), H()(), N(13, "div", 52)(14, "div", 21), ot(15, "img", 53), N(16, "span", 54), ae(17), H(), ot(18, "svg-icon", 55), H(), rt(19, Tpe, 2, 1, "ul", 24), H()()()
                }
                if (2 & t) {
                    const e = Qe(2);
                    xe(1), Fe("ngClass", hn(8, Dpe, e.openMenu)), xe(2), Dr("routerLink", "/", e.currentLanguage, "/dashboard"), xe(2), Fe("ngForOf", e.navigations), xe(1), Fe("ngIf", !e.walletAddress), xe(1), Fe("ngIf", e.walletAddress), xe(8), Dr("src", "./assets/images/flags/", null == e.selectedLanguage ? null : e.selectedLanguage.flag, ".svg", jr), xe(2), qt(null == e.selectedLanguage ? null : e.selectedLanguage.name), xe(1), Fe("svgStyle", ds(10, Ape))
                }
            }
            const Epe = function() {
                    return {
                        "width.px": "51",
                        "height.px": 51
                    }
                },
                Mpe = function() {
                    return {
                        "width.px": 28,
                        "height.px": 28
                    }
                };

            function Ppe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 35)(1, "div", 36)(2, "div", 37)(3, "div", 38, 10), bt("click", function(s) {
                        Ot(e);
                        const r = Qe();
                        return r.navigateToSection("home"), It(r.addActive(s))
                    }), ot(5, "svg-icon", 39), H()(), N(6, "div", 40), bt("click", function() {
                        return Ot(e), It(Qe().openCloseMenu())
                    }), ot(7, "svg-icon", 41), H()(), rt(8, kpe, 20, 11, "div", 42), H()
                }
                if (2 & t) {
                    const e = Qe();
                    Fe("ngClass", hn(5, s6, e.isScrolled)), xe(5), Fe("svgStyle", ds(7, Epe)), xe(2), Dr("src", "./assets/images/svg-icons/", e.showMenu ? "burger-close" : "burger-icon", ".svg"), Fe("svgStyle", ds(8, Mpe)), xe(1), Fe("ngIf", e.showMenu)
                }
            }
            let Ope = (() => {
                class t {
                    location;
                    eventService;
                    translate;
                    modalService;
                    route;
                    walletConnectService;
                    navigation;
                    isScrolled = !1;
                    showMenu = !1;
                    openMenu = !1;
                    modalRef;
                    hashKey = "";
                    windowSize;
                    currentLanguage;
                    languagesList = Q5;
                    selectedLanguage;
                    isShimmer = !0;
                    onWindowScroll() {
                        document.body.scrollTop > 100 || document.documentElement.scrollTop > 100 ? document.getElementsByClassName("header")[0].classList.add("scrolled") : document.getElementsByClassName("header")[0].classList.remove("scrolled")
                    }
                    name = "Angular";
                    navigations = [{
                        routeName: "about",
                        navName: "nav_about"
                    }, {
                        routeName: "howtobuy",
                        navName: "nav_howtobuy"
                    }, {
                        routeName: "roadmap",
                        navName: "nav_roadmap"
                    }, {
                        routeName: "faq",
                        navName: "nav_faq"
                    }];
                    constructor(e, i, s, r, l, u) {
                        this.location = e, this.eventService = i, this.translate = s, this.modalService = r, this.route = l, this.walletConnectService = u, this.windowSize = window.screen.width, this.eventService.getLang().subscribe(h => {
                            this.currentLanguage = h || "en", this.selectedLanguage = this.languagesList.filter(v => v.value === this.currentLanguage)[0]
                        }), this.selectedLanguage = this.languagesList.filter(h => h.value === this.currentLanguage)[0], setTimeout(() => this.isShimmer = !1, 2e3)
                    }
                    ngOnInit() {
                        this.currentLanguage || (this.currentLanguage = i6, this.selectedLanguage = this.languagesList.filter(e => e.value === this.currentLanguage)[0])
                    }
                    checkScroll() {
                        this.isScrolled = window.pageYOffset >= 50
                    }
                    onResize(e) {
                        this.windowSize = e.target.innerWidth
                    }
                    ngAfterViewInit() {
                        window.location.hash && setTimeout(() => {
                            this.hashKey = window.location.hash.substring(1, window.location.hash.length), this.navigateToSection(this.hashKey), this.addActive(this.navigation.nativeElement)
                        }, this.isShimmer ? 2500 : 500)
                    }
                    changeLanguage(e) {
                        this.currentLanguage = e, this.translate.use(this.currentLanguage), this.eventService.setLang(this.currentLanguage), this.selectedLanguage = this.languagesList.filter(i => i.value === this.currentLanguage)[0], this.replaceURL()
                    }
                    replaceURL() {
                        const e = this.location.path().split("/");
                        e.shift(), e.splice(0, 1, this.currentLanguage);
                        const i = e.join("/");
                        this.location.replaceState("/" + i), window.location.hash = this.hashKey, console.log("current_url =", e), console.log("new_url =", i, this.hashKey)
                    }
                    navigateToSection(e) {
                        this.hashKey = e, e && (window.location.hash = e, window.location.pathname = "/" + this.currentLanguage)
                    }
                    addActive(e) {
                        (e.currentTarget ? e.currentTarget : e).parentNode.querySelectorAll("a").forEach(r => {
                            r === e.target || r.title === this.hashKey ? r.classList.add("active") : r.classList.remove("active")
                        })
                    }
                    get walletAddress() {
                        return this.walletConnectService.walletAddress
                    }
                    showWidget(e) {
                        this.eventService.showBuyWidget(e)
                    }
                    connectModal(e) {
                        this.modalRef = this.modalService.show(l0, {
                            class: "modal-xs modal-dialog-centered",
                            backdrop: "static"
                        })
                    }
                    disconnect() {
                        this.walletConnectService.disConnectWallet()
                    }
                    openCloseMenu() {
                        this.showMenu ? (this.openMenu = !this.openMenu, setTimeout(() => this.showMenu = !this.showMenu, 200)) : (this.showMenu = !this.showMenu, setTimeout(() => this.openMenu = !this.openMenu, 200))
                    }
                    showWidgetMob(e) {
                        this.eventService.showBuyWidget(e), window.scroll({
                            top: 180,
                            left: 0,
                            behavior: "smooth"
                        })
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(bm), $e(bl), $e(Fa), $e(Yl), $e(rl), $e(du))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-header"]
                        ],
                        viewQuery: function(i, s) {
                            if (1 & i && ka(ppe, 5), 2 & i) {
                                let r;
                                kr(r = Er()) && (s.navigation = r.first)
                            }
                        },
                        hostBindings: function(i, s) {
                            1 & i && bt("scroll", function(l) {
                                return s.checkScroll(l)
                            }, 0, Nl)("resize", function(l) {
                                return s.onResize(l)
                            }, !1, Nl)
                        },
                        decls: 5,
                        vars: 2,
                        consts: [
                            ["class", "header desktop", 3, "ngClass", 4, "ngIf"],
                            ["class", "header mobile", 3, "ngClass", 4, "ngIf"],
                            [1, "sticky", "font-16", "text-center", "w-100"],
                            [1, "w-100", "mx-auto"],
                            ["width", "100%", "height", "55", "src", "https://rss.app/embed/v1/ticker/_Um4oANY7d0NlVezV", "frameborder", "0"],
                            [1, "header", "desktop", 3, "ngClass"],
                            [1, "d-flex", "justify-content-between", "align-items-center", "w-100", "menu-header"],
                            [1, "container"],
                            [1, "d-flex", "justify-content-between", "align-items-center", "w-100"],
                            [1, "cursor-pointer", "d-flex", "align-items-center", "me-lg-3", 3, "click"],
                            ["navigation", ""],
                            ["src", "./assets/images/svg-icons/logo.svg"],
                            [1, "menu-item", "d-flex", "align-items-center"],
                            ["routerLinkActive", "active", "title", "staking", "translate", "", 1, "text-primary", 3, "routerLink"],
                            ["class", "mx-0 ps-5", "href", "javascript:void(0)", "translate", "", 3, "title", "click", 4, "ngFor", "ngForOf"],
                            [1, "social-icon", "d-flex", "align-items-center", "ms-4"],
                            ["href", "https://twitter.com/BTCETF_Token", "target", "_blank", 1, "mx-3"],
                            ["src", "/assets/images/svg-icons/x.svg", "alt", "twitter", "height", "25"],
                            ["href", "https://t.me/BTCETF_Token", "target", "_blank", 1, "mx-1"],
                            ["src", "/assets/images/svg-icons/telegram.svg", "alt", "telegram", "height", "25"],
                            ["dropdown", "", 1, "btn-group", "language", "ms-4"],
                            ["dropdownToggle", "", "type", "button", 1, "dropdown-toggle", "amountType", "d-flex", "align-items-center"],
                            [1, "ms-1", "font-13", "text-uppercase", "fw-regular"],
                            ["src", "./assets/images/svg-icons/angle-down.svg", 1, "dropdown", "ps-2", 3, "svgStyle"],
                            ["class", "dropdown-menu dropdown-menu-right", "role", "menu", 4, "dropdownMenu"],
                            [1, "align-items-center", "d-flex", "justify-content-between"],
                            [1, "d-flex", "align-items-center"],
                            ["class", "connect d-flex align-items-center ms-4", 3, "click", 4, "ngIf"],
                            ["href", "javascript:void(0)", "translate", "", 1, "mx-0", "ps-5", 3, "title", "click"],
                            ["role", "menu", 1, "dropdown-menu", "dropdown-menu-right"],
                            ["class", "p-2 cursor-pointer", "role", "menuitem", 3, "click", 4, "ngFor", "ngForOf"],
                            ["role", "menuitem", 1, "p-2", "cursor-pointer", 3, "click"],
                            ["alt", "", 3, "src"],
                            [1, "connect", "d-flex", "align-items-center", "ms-4", 3, "click"],
                            [1, "mx-2"],
                            [1, "header", "mobile", 3, "ngClass"],
                            [1, "d-flex", "justify-content-between", "align-items-center", "flex-grow-1", "w-100"],
                            [1, "d-flex", "justify-content-start", "align-items-center"],
                            [1, "cursor-pointer", 3, "click"],
                            ["src", "./assets/images/svg-icons/mobile-logo.svg", 3, "svgStyle"],
                            [3, "click"],
                            [3, "src", "svgStyle"],
                            ["class", "menu-overlay ", 4, "ngIf"],
                            [1, "menu-overlay"],
                            [1, "sub-menu", "pull-left", 3, "ngClass"],
                            [1, "d-flex", "flex-column", "justify-content-start", "align-items-start", "w-100"],
                            ["routerLinkActive", "active", "title", "staking", "translate", "", 1, "mx-0", 3, "routerLink", "click"],
                            ["class", "mx-0", "href", "javascript:void(0)", "translate", "", 3, "title", "click", 4, "ngFor", "ngForOf"],
                            ["class", "connect d-flex justify-content-center mt-4", 3, "click", 4, "ngIf"],
                            [1, "social-icon", "d-flex", "justify-content-center", "align-items-center", "py-2"],
                            ["href", "https://twitter.com/BTCETF_Token", "target", "_blank"],
                            ["href", "https://t.me/BTCETF_Token", "target", "_blank"],
                            ["dropdown", "", 1, "btn-group", "language"],
                            ["alt", "", 1, "flag-icon", 3, "src"],
                            [1, "ms-1", "font-13", "text-uppercase", "fw-regular", "wd-100", "text-white"],
                            ["src", "./assets/images/svg-icons/angle-down.svg", 1, "dropdown", 3, "svgStyle"],
                            ["href", "javascript:void(0)", "translate", "", 1, "mx-0", 3, "title", "click"],
                            [1, "connect", "d-flex", "justify-content-center", "mt-4", 3, "click"],
                            ["translate", "", 1, "mx-2"],
                            [1, "mx-1", "fs-6"]
                        ],
                        template: function(i, s) {
                            1 & i && (rt(0, xpe, 25, 9, "div", 0), rt(1, Ppe, 9, 9, "div", 1), N(2, "div", 2)(3, "div", 3), ot(4, "iframe", 4), H()()), 2 & i && (Fe("ngIf", s.windowSize > 1024), xe(1), Fe("ngIf", s.windowSize <= 1024))
                        },
                        dependencies: [Qo, $s, Ji, $v, uN, Tw, Dw, cv, Xl, Ir, fpe],
                        styles: [".header[_ngcontent-%COMP%]{position:fixed;left:0;top:0;width:100%;z-index:5;padding:16px 0;background:#ffffff}.header.scrolled[_ngcontent-%COMP%]{background:rgba(255,255,255,.9)}@media screen and (max-width: 576px){.header[_ngcontent-%COMP%]{padding:10px 24px}.header.scrolled[_ngcontent-%COMP%]{box-shadow:0 1px 6px #0003}}.header[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding:10px 0;color:#20262b;cursor:pointer;text-decoration:none;text-transform:capitalize;font-weight:400;letter-spacing:1px;font-size:14px}.header[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:first-child{margin-left:0}.header[_ngcontent-%COMP%]   a.active[_ngcontent-%COMP%], .header[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#20262b}@media only screen and (min-width: 577px) and (max-width: 1024px){.header[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{padding:10px;margin:0}}.header[_ngcontent-%COMP%]   .social-icon[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none!important;padding:0!important;border:none!important;width:auto!important}.header[_ngcontent-%COMP%]   .connect[_ngcontent-%COMP%]{cursor:pointer;text-transform:capitalize;font-weight:600;background:#20262B;min-height:36px;min-width:100px;display:flex;align-items:center;justify-content:center;color:#fff;border-radius:5px;font-size:13px}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]{text-decoration:none;letter-spacing:.02em;text-transform:capitalize;font-weight:400}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]{width:100%}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{position:absolute;right:12px;opacity:0}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]   .flag-icon[_ngcontent-%COMP%]{border-radius:50%;overflow:hidden;margin-right:3px;min-width:20px;width:20px;height:20px;object-fit:cover}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]   .dropdown[_ngcontent-%COMP%]{cursor:pointer}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{width:100%;max-height:250px;overflow-y:auto;padding:0;background-color:#20262b;border:2px solid rgba(128,128,128,.1098039216)}@media screen and (max-width: 576px){.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{max-height:210px}}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:flex;align-items:center}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:50%;border:1px solid #ffffff;overflow:hidden;margin-right:10px;min-width:20px;height:20px;width:20px;object-fit:cover}.header[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff}.header[_ngcontent-%COMP%]   .small-btn[_ngcontent-%COMP%]{min-height:unset;height:42px}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]{background:rgba(0,0,0,.19);position:fixed;width:100%;height:100%;top:70px;left:0;display:flex;justify-content:flex-end}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]{width:100%;min-width:320px;max-width:320px;background:#2D3439;padding:20px;position:relative;transition:right .5s cubic-bezier(.075,.82,.165,1);right:-320px;overflow-y:auto;overflow-x:hidden;height:calc(100% - 56px)}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu.open[_ngcontent-%COMP%]{right:0}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   hr.new1[_ngcontent-%COMP%]{border:1px solid #ffffff;width:100%}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   .policies[_ngcontent-%COMP%]{color:#fff;font-size:16px}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{width:100%;margin-bottom:15px;padding:5px 10px;cursor:pointer;text-decoration:none;color:#fff;border-bottom:1px solid #E4E4E4;letter-spacing:.02em;text-transform:uppercase;font-size:14px;font-weight:400}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   a.active[_ngcontent-%COMP%], .header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#2d3439}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]{width:100%!important;padding:10px;margin:0;border:1px solid #ffffff;border-radius:0;text-decoration:none;letter-spacing:.02em;text-transform:uppercase;font-weight:400}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   .language[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{position:absolute;right:12px}.header[_ngcontent-%COMP%]   .menu-overlay[_ngcontent-%COMP%]   .sub-menu[_ngcontent-%COMP%]   .social-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:30px;height:30px;margin:20px 20px 0;filter:invert(1)}.menu[_ngcontent-%COMP%]{min-width:150px}.sticky[_ngcontent-%COMP%]{top:70px;background:#E4F9DF;color:#fff;text-align:center;z-index:4;position:fixed;height:55px}@media screen and (max-width: 576px){.sticky[_ngcontent-%COMP%]{top:71px;height:50px}}"]
                    })
                }
                return t
            })();

            function Ipe(t, n) {
                if (1 & t && (N(0, "a", 30), ae(1), H()), 2 & t) {
                    const e = n.$implicit;
                    id("href", e.link, jr), id("title", e.routeName), xe(1), qt(e.navName)
                }
            }
            const Lpe = function() {
                return {
                    "width.px": "93",
                    "height.px": "93"
                }
            };
            let Fpe = (() => {
                class t {
                    eventService;
                    isMobile = window.matchMedia && window.matchMedia("(max-device-width: 1024px)").matches || screen.width <= 1024;
                    onResize(e) {
                        this.isMobile = window.matchMedia && window.matchMedia("(max-device-width: 1024px)").matches || screen.width <= 1024
                    }
                    lang = localStorage.getItem("currentlang");
                    policies = [{
                        navName: "terms",
                        link: "/assets/documents/terms.pdf"
                    }, {
                        navName: "privacy",
                        link: "/assets/documents/privacy.pdf"
                    }, {
                        navName: "cookies",
                        link: "/assets/documents/cookies.pdf"
                    }];
                    navigations = [{
                        routeName: "about",
                        navName: "nav_about",
                        link: ""
                    }, {
                        routeName: "howtobuy",
                        navName: "nav_howtobuy"
                    }, {
                        routeName: "roadmap",
                        navName: "nav_roadmap"
                    }, {
                        routeName: "faq",
                        navName: "nav_faq",
                        link: ""
                    }];
                    constructor(e) {
                        this.eventService = e, this.eventService.getLang().subscribe(i => {
                            this.lang = i || "en"
                        })
                    }
                    navigateToSection(e) {
                        e && (window.location.hash = e, window.location.pathname = "/" + this.lang)
                    }
                    static\ u0275fac = function(i) {
                        return new(i || t)($e(bl))
                    };
                    static\ u0275cmp = cn({
                        type: t,
                        selectors: [
                            ["app-footer"]
                        ],
                        hostBindings: function(i, s) {
                            1 & i && bt("resize", function(l) {
                                return s.onResize(l)
                            }, 0, Nl)
                        },
                        decls: 45,
                        vars: 3,
                        consts: [
                            [1, "footer"],
                            [1, "container", "mt-3"],
                            [1, "row", "align-items-center", "justify-content-center", "text-center"],
                            [1, "col-md-7"],
                            [1, "cursor-pointer", "d-flex", "align-items-center", "justify-content-center", "mb-4", 3, "click"],
                            ["navigation", ""],
                            ["src", "./assets/images/svg-icons/logo.svg", 1, "d-none", "d-md-block"],
                            ["src", "./assets/images/svg-icons/mobile-logo.svg", 1, "d-block", "d-md-none", 3, "svgStyle"],
                            ["target", "_blank", "class", "font-16 font-md-12 footer-menu", "translate", "", 3, "href", "title", 4, "ngFor", "ngForOf"],
                            [1, "col-md-7", "d-block", "d-md-none"],
                            [1, "social-icon", "d-flex", "align-items-center", "justify-content-center"],
                            ["href", "https://twitter.com/BTCETF_Token", "target", "_blank", 1, "mx-1"],
                            ["src", "/assets/images/svg-icons/x.svg", "alt", "twitter"],
                            ["href", "https://t.me/BTCETF_Token", "target", "_blank", 1, "mx-1"],
                            ["src", "/assets/images/svg-icons/telegram.svg", "alt", "telegram"],
                            [1, "col-6", "mt-2", "d-block", "d-md-none"],
                            ["translate", "", 1, "mb-0", "font-12", "text-md-end", "text-center"],
                            [1, "col-6", "mt-2", "text-md-end", "text-center", "d-block", "d-md-none"],
                            ["translate", "", 1, "font-12", "mb-0", "px-2"],
                            [1, "align-items-end", "row", "copyright-wrapper"],
                            [1, "footer-copy", "text-md-start", "text-center"],
                            ["translate", "", 1, "font-12"],
                            ["translate", "", 1, "font-12", "mb-0"],
                            [1, "col-md-2", "d-none", "d-md-block"],
                            [1, "col-md-2", "text-md-end", "text-center", "d-none", "d-md-block"],
                            ["translate", "", 1, "font-12", "mb-0", "mwx-130", "mx-md-auto"],
                            [1, "col-md-1", "d-none", "d-md-block"],
                            [1, "social-icon", "d-flex", "align-items-center", "justify-content-md-end"],
                            ["src", "/assets/images/svg-icons/x.svg", "alt", "twitter", "width", "25px", 1, "img-fluid"],
                            ["src", "/assets/images/svg-icons/telegram.svg", "alt", "telegram", "width", "25px", 1, "img-fluid"],
                            ["target", "_blank", "translate", "", 1, "font-16", "font-md-12", "footer-menu", 3, "href", "title"]
                        ],
                        template: function(i, s) {
                            1 & i && (N(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "div", 4, 5), bt("click", function() {
                                return s.navigateToSection("home")
                            }), ot(6, "svg-icon", 6)(7, "svg-icon", 7), H()(), N(8, "div", 3), rt(9, Ipe, 2, 3, "a", 8), H(), N(10, "div", 9)(11, "div", 10)(12, "a", 11), ot(13, "img", 12), H(), N(14, "a", 13), ot(15, "img", 14), H()()(), N(16, "div", 15)(17, "p", 16), ae(18, "bitcoin_ltd"), H(), N(19, "p", 16), ae(20, "vat"), H()(), N(21, "div", 17)(22, "p", 18), ae(23, "address_data"), H()()(), N(24, "div", 19)(25, "div", 3)(26, "div", 20)(27, "p", 21), ae(28, "copyright"), H(), N(29, "p", 22), ae(30, "disclaimer"), H()()(), N(31, "div", 23)(32, "p", 16), ae(33, "bitcoin_ltd"), H(), N(34, "p", 16), ae(35, "vat"), H()(), N(36, "div", 24)(37, "p", 25), ae(38, "address_data"), H()(), N(39, "div", 26)(40, "div", 27)(41, "a", 11), ot(42, "img", 28), H(), N(43, "a", 13), ot(44, "img", 29), H()()()()()()), 2 & i && (xe(7), Fe("svgStyle", ds(2, Lpe)), xe(2), Fe("ngForOf", s.policies))
                        },
                        dependencies: [$s, Xl, Ir],
                        styles: [".footer[_ngcontent-%COMP%]{background-color:#f5f5f7;color:#98a2b3;padding-bottom:40px;background-image:url(/assets/images/svg-icons/logobg.svg);background-repeat:no-repeat;background-size:492.54px 492.54px}@media screen and (max-width: 576px){.footer[_ngcontent-%COMP%]{background-position:bottom left}}.footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#98a2b3;text-decoration:none;font-size:16px;font-weight:400;line-height:24px;letter-spacing:0em;text-align:center;margin:0 16px}@media screen and (max-width: 576px){.footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin:0}}.footer[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:block;text-align:left;margin-bottom:20px;font-size:16px;text-transform:uppercase;font-family:Poppins,sans-serif}.footer[_ngcontent-%COMP%]   .footer-links[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:20px;letter-spacing:0em;text-align:right}@media screen and (max-width: 576px){.footer[_ngcontent-%COMP%]   .social-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:50px;height:50px;margin:37px 12px}}.footer[_ngcontent-%COMP%]   .copyright-wrapper[_ngcontent-%COMP%]{padding-top:16px;border-top:1px solid #ECF1F5;margin-top:32px}.footer[_ngcontent-%COMP%]   .footer-menu[_ngcontent-%COMP%]{color:#344054;margin:0 16px}"]
                    })
                }
                return t
            })();
            const Rpe = ["graphCont"];

            function Bpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "a", 50), bt("click", function() {
                        Ot(e);
                        const s = Qe(),
                            r = Ta(109);
                        return s.openModal(r), It(s.period = 4)
                    }), ae(1, "extend_stake"), H()
                }
            }

            function Vpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "a", 51), bt("click", function() {
                        return Ot(e), It(Qe().claimStake())
                    }), ae(1, "claim_stake"), H()
                }
            }

            function Hpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "a", 50), bt("click", function() {
                        Ot(e);
                        const s = Qe(),
                            r = Ta(107);
                        return It(s.buyClaimStake(r))
                    }), ae(1, "buy_stake"), H()
                }
            }
            const zpe = function(t) {
                return {
                    unstakeDate: t
                }
            };

            function jpe(t, n) {
                if (1 & t && (N(0, "div", 64), ae(1), Yt(2, "translate"), Yt(3, "date"), H()), 2 & t) {
                    const e = Qe(2);
                    xe(1), dn(" ", hs(2, 1, "withdraw_text", hn(7, zpe, hs(3, 4, e.unstakeDate, "dd/MM/yy HH:mm"))), " ")
                }
            }
            const r6 = function() {
                return {
                    "width.px": 12,
                    "height.px": 12
                }
            };

            function $pe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 52)(1, "div", 53)(2, "h4", 54), ae(3, "withdraw_stake_title"), H(), N(4, "svg-icon", 55), bt("click", function() {
                        return Ot(e), It(Qe().closeModal())
                    }), H()(), N(5, "div", 56)(6, "span", 57), ae(7, "card_1_title "), H(), N(8, "h2", 58), ae(9), N(10, "span", 59), ae(11, "card_coin"), H()(), rt(12, jpe, 4, 9, "div", 60), H(), N(13, "div", 61)(14, "button", 62), bt("click", function() {
                        return Ot(e), It(Qe().closeModal())
                    }), ae(15, "cancel"), H(), N(16, "button", 63), ae(17, "withdraw"), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(4), Fe("svgStyle", ds(4, r6)), xe(5), dn(" ", e.userStaked, " "), xe(3), Fe("ngIf", e.stakeData.userStaked > 0), xe(4), Fe("disabled", !e.canUnstake)
                }
            }

            function Upe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 52)(1, "div", 53)(2, "h4", 54), ae(3, "stake_token"), H(), N(4, "span", 65), bt("click", function() {
                        return Ot(e), It(Qe().closeModal())
                    }), ae(5, "X"), H()(), N(6, "div", 56)(7, "span", 66), ae(8, "user_bal "), H(), N(9, "h2", 58), ae(10), N(11, "span", 59), ae(12, "card_coin"), H()()(), N(13, "div", 67)(14, "div", 19)(15, "label", 68), ae(16, "stake_amount"), H(), N(17, "a", 69), bt("click", function() {
                        return Ot(e), It(Qe().max())
                    }), ae(18, "Max"), H()(), N(19, "input", 70), bt("ngModelChange", function(s) {
                        return Ot(e), It(Qe().stakeAmount = s)
                    }), H(), N(20, "p", 71), ae(21, "enterAmount"), H()(), N(22, "div", 61)(23, "button", 72), bt("click", function() {
                        return Ot(e), It(Qe().closeModal())
                    }), ae(24, " cancel "), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(10), qt(e.userBal), xe(9), Fe("ngModel", e.stakeAmount)
                }
            }
            const a6 = function(t) {
                return {
                    stakeAmount: t
                }
            };

            function Wpe(t, n) {
                if (1 & t && (N(0, "p", 80), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(3);
                    xe(1), qt(hs(2, 1, "stake_transction_info", hn(4, a6, e.stakeAmount)))
                }
            }

            function Gpe(t, n) {
                if (1 & t && (N(0, "div", 76), ot(1, "img", 77), N(2, "div", 78), ae(3), Yt(4, "translate"), H(), rt(5, Wpe, 3, 6, "p", 79), H()), 2 & t) {
                    const e = Qe(2);
                    xe(3), dn(" ", xn(4, 2, "transaction_in_progress"), ""), xe(2), Fe("ngIf", !e.isExtend)
                }
            }
            const o6 = function(t) {
                return {
                    cryptoName: t
                }
            };

            function Xpe(t, n) {
                if (1 & t && (N(0, "div", 76), ot(1, "img", 77), N(2, "div", 81), ae(3), Yt(4, "translate"), H(), N(5, "p", 80), ae(6), Yt(7, "translate"), H()()), 2 & t) {
                    const e = Qe(2);
                    xe(3), qt(xn(4, 2, "confirm")), xe(3), qt(hs(7, 4, "stake_waiting_confirm", hn(7, o6, e.cryptoName)))
                }
            }

            function Ype(t, n) {
                if (1 & t && (N(0, "div", 76), ot(1, "img", 77), N(2, "div", 81), ae(3), Yt(4, "translate"), H(), N(5, "p", 80), ae(6), Yt(7, "translate"), H()()), 2 & t) {
                    const e = Qe(2);
                    xe(3), qt(xn(4, 2, "authorise")), xe(3), qt(hs(7, 4, "stake_waiting_approve", hn(7, o6, e.cryptoName)))
                }
            }

            function qpe(t, n) {
                if (1 & t && (N(0, "p", 88), ae(1), Yt(2, "translate"), H()), 2 & t) {
                    const e = Qe(3);
                    xe(1), qt(hs(2, 1, "stake_transction_info", hn(4, a6, e.stakeAmount)))
                }
            }

            function Zpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 76), ot(1, "img", 82), N(2, "div", 83), ae(3), Yt(4, "translate"), H(), rt(5, qpe, 3, 6, "p", 84), N(6, "div", 85)(7, "button", 86), bt("click", function() {
                        return Ot(e), It(Qe(2).viewUrl())
                    }), ae(8), Yt(9, "translate"), H(), N(10, "a", 87), bt("click", function() {
                        return Ot(e), It(Qe(2).closeModal())
                    }), ae(11, "Done"), H()()()
                }
                if (2 & t) {
                    const e = Qe(2);
                    xe(3), dn(" ", xn(4, 3, "stake_transaction_success"), " "), xe(2), Fe("ngIf", !e.isExtend), xe(3), qt(xn(9, 5, "view_transaction"))
                }
            }

            function Kpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 76), ot(1, "img", 89), N(2, "div", 90), ae(3), Yt(4, "translate"), H(), N(5, "p", 91), ae(6), Yt(7, "translate"), H(), N(8, "div", 85)(9, "button", 86), bt("click", function() {
                        return Ot(e), It(Qe(2).viewUrl())
                    }), ae(10), Yt(11, "translate"), H(), N(12, "a", 87), bt("click", function() {
                        return Ot(e), It(Qe(2).closeModal())
                    }), ae(13, "Done"), H()()()
                }
                2 & t && (xe(3), qt(xn(4, 3, "stake_transaction_failed")), xe(3), qt(xn(7, 5, "stake_view_transaction_info")), xe(4), qt(xn(11, 7, "view_transaction")))
            }

            function Qpe(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 76), ot(1, "img", 89), N(2, "div", 92), ae(3), Yt(4, "translate"), H(), N(5, "div", 93)(6, "a", 87), bt("click", function() {
                        return Ot(e), It(Qe(2).closeModal())
                    }), ae(7, "Done"), H()()()
                }
                2 & t && (xe(3), qt(xn(4, 1, "stake_transaction_rejected")))
            }

            function Jpe(t, n) {
                if (1 & t && (N(0, "div", 73)(1, "div", 74), rt(2, Gpe, 6, 4, "div", 75), rt(3, Xpe, 8, 9, "div", 75), rt(4, Ype, 8, 9, "div", 75), rt(5, Zpe, 12, 7, "div", 75), rt(6, Kpe, 14, 9, "div", 75), rt(7, Qpe, 8, 3, "div", 75), H()()), 2 & t) {
                    const e = Qe();
                    xe(2), Fe("ngIf", e.status === e.SwapStatus.in_progess), xe(1), Fe("ngIf", e.status === e.SwapStatus.confirm_pending), xe(1), Fe("ngIf", e.status === e.SwapStatus.approval_pending), xe(1), Fe("ngIf", e.status === e.SwapStatus.complete), xe(1), Fe("ngIf", e.status === e.SwapStatus.failed), xe(1), Fe("ngIf", e.status === e.SwapStatus.rejected)
                }
            }

            function ege(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 94)(1, "h4", 54), ae(2, "buy_stake"), H(), N(3, "svg-icon", 55), bt("click", function() {
                        return Ot(e), It(Qe().closeModal())
                    }), H()(), N(4, "div", 95), ot(5, "app-swap", 96), H()
                }
                2 & t && (xe(3), Fe("svgStyle", ds(4, r6)), xe(2), Fe("isNative", !0)("isWert", !1)("isModal", !0))
            }

            function tge(t, n) {
                1 & t && (N(0, "option", 106), ae(1, "option_1"), H())
            }

            function nge(t, n) {
                1 & t && (N(0, "option", 107), ae(1, "option_2"), H())
            }

            function ige(t, n) {
                1 & t && (N(0, "option", 108), ae(1, "option_3"), H())
            }

            function sge(t, n) {
                1 & t && (N(0, "option", 109), ae(1, "option_4"), H())
            }
            const rge = function() {
                return {
                    standalone: !0
                }
            };

            function age(t, n) {
                if (1 & t) {
                    const e = sn();
                    N(0, "div", 52)(1, "div", 53)(2, "h4", 54), ae(3, "extend_stake"), H(), N(4, "span", 65), bt("click", function() {
                        return Ot(e), It(Qe().closeModal())
                    }), ae(5, "X"), H()(), N(6, "div", 97)(7, "div", 26), ae(8, "bonus_option"), H(), N(9, "select", 98), bt("ngModelChange", function(s) {
                        return Ot(e), It(Qe().period = s)
                    }), rt(10, tge, 2, 0, "option", 99), rt(11, nge, 2, 0, "option", 100), rt(12, ige, 2, 0, "option", 101), rt(13, sge, 2, 0, "option", 102), H()(), N(14, "div", 103)(15, "button", 104), bt("click", function() {
                        return Ot(e), It(Qe().closeModal())
                    }), ae(16, " cancel "), H(), N(17, "a", 105), bt("click", function() {
                        Ot(e);
                        const s = Qe(),
                            r = Ta(105);
                        return It(s.extendStake(r))
                    }), ae(18, "confirm"), H()()()
                }
                if (2 & t) {
                    const e = Qe();
                    xe(9), Fe("ngModel", e.period)("ngModelOptions", ds(6, rge)), xe(1), Fe("ngIf", e.stakeData.planId < 1), xe(1), Fe("ngIf", e.stakeData.planId < 2), xe(1), Fe("ngIf", e.stakeData.planId < 3), xe(1), Fe("ngIf", e.stakeData.planId < 4)
                }
            }
            const oge = [{
                path: ":lang",
                component: (() => {
                    class t {
                        route;
                        translate;
                        eventService;
                        lang;
                        constructor(e, i, s) {
                            this.route = e, this.translate = i, this.eventService = s, this.route.params.subscribe(r => {
                                const l = r.lang;
                                if (l && M1(l)) this.lang = l;
                                else {
                                    const u = localStorage.getItem("currentlang");
                                    if (u && M1(u)) this.lang = u;
                                    else {
                                        const h = navigator.language ? .split("-")[0];
                                        this.lang = h && M1(h) ? h : "en"
                                    }
                                }
                            }), this.translate.setDefaultLang(this.lang), this.translate.use(this.lang), this.eventService.setLang(this.lang)
                        }
                        static\ u0275fac = function(i) {
                            return new(i || t)($e(rl), $e(Fa), $e(bl))
                        };
                        static\ u0275cmp = cn({
                            type: t,
                            selectors: [
                                ["app-language"]
                            ],
                            decls: 3,
                            vars: 0,
                            template: function(i, s) {
                                1 & i && ot(0, "app-header")(1, "router-outlet")(2, "app-footer")
                            },
                            dependencies: [Fv, Ope, Fpe]
                        })
                    }
                    return t
                })(),
                children: [{
                    path: "",
                    component: dpe
                }, {
                    path: "dashboard",
                    component: (() => {
                        class t {
                            popupService;
                            translate;
                            walletConnectService;
                            modalService;
                            modalRef;
                            graphCont;
                            rewards = [{
                                name: "Nov-23",
                                value: 160125e4
                            }, {
                                name: "Dec-23",
                                value: 16275e5
                            }, {
                                name: "Jan-24",
                                value: 165375e4
                            }, {
                                name: "Feb-24",
                                value: 168e7
                            }, {
                                name: "Mar-24",
                                value: 170625e4
                            }, {
                                name: "Apr-24",
                                value: 17325e5
                            }, {
                                name: "May-24",
                                value: 175875e4
                            }, {
                                name: "Jun-24",
                                value: 1785e6
                            }, {
                                name: "Jul-24",
                                value: 181125e4
                            }, {
                                name: "Aug-24",
                                value: 18375e5
                            }, {
                                name: "Sep-24",
                                value: 186375e4
                            }, {
                                name: "Oct-24",
                                value: 189e7
                            }, {
                                name: "Nov-24",
                                value: 1894375e3
                            }, {
                                name: "Dec-24",
                                value: 189875e4
                            }, {
                                name: "Jan-25",
                                value: 1903125e3
                            }, {
                                name: "Feb-25",
                                value: 19075e5
                            }, {
                                name: "Mar-25",
                                value: 1911875e3
                            }, {
                                name: "Apr-25",
                                value: 191625e4
                            }, {
                                name: "May-25",
                                value: 1920625e3
                            }, {
                                name: "Jun-25",
                                value: 1925e6
                            }, {
                                name: "Jul-25",
                                value: 1929375e3
                            }, {
                                name: "Aug-25",
                                value: 193375e4
                            }, {
                                name: "Sep-25",
                                value: 1938125e3
                            }, {
                                name: "Oct-25",
                                value: 19425e5
                            }, {
                                name: "Nov-25",
                                value: 1946875e3
                            }, {
                                name: "Dec-25",
                                value: 195125e4
                            }, {
                                name: "Jan-26",
                                value: 1955625e3
                            }, {
                                name: "Feb-26",
                                value: 196e7
                            }, {
                                name: "Mar-26",
                                value: 1964375e3
                            }, {
                                name: "Apr-26",
                                value: 196875e4
                            }, {
                                name: "May-26",
                                value: 1973125e3
                            }, {
                                name: "Jun-26",
                                value: 19775e5
                            }, {
                                name: "Jul-26",
                                value: 1981875e3
                            }, {
                                name: "Aug-26",
                                value: 198625e4
                            }, {
                                name: "Sep-26",
                                value: 1990625e3
                            }, {
                                name: "Oct-26",
                                value: 1995e6
                            }, {
                                name: "Nov-26",
                                value: 1999375e3
                            }, {
                                name: "Dec-26",
                                value: 200375e4
                            }, {
                                name: "Jan-27",
                                value: 2008125e3
                            }, {
                                name: "Feb-27",
                                value: 20125e5
                            }, {
                                name: "Mar-27",
                                value: 2016875e3
                            }, {
                                name: "Apr-27",
                                value: 202125e4
                            }, {
                                name: "May-27",
                                value: 2025625e3
                            }, {
                                name: "Jun-27",
                                value: 203e7
                            }, {
                                name: "Jul-27",
                                value: 2034375e3
                            }, {
                                name: "Aug-27",
                                value: 203875e4
                            }, {
                                name: "Sep-27",
                                value: 2043125e3
                            }, {
                                name: "Oct-27",
                                value: 20475e5
                            }, {
                                name: "Nov-27",
                                value: 2051875e3
                            }, {
                                name: "Dec-27",
                                value: 205625e4
                            }, {
                                name: "Jan-28",
                                value: 2060625e3
                            }, {
                                name: "Feb-28",
                                value: 2065e6
                            }, {
                                name: "Mar-28",
                                value: 2069375e3
                            }, {
                                name: "Apr-28",
                                value: 207375e4
                            }, {
                                name: "May-28",
                                value: 2078125e3
                            }, {
                                name: "Jun-28",
                                value: 20825e5
                            }, {
                                name: "Jul-28",
                                value: 2086875e3
                            }, {
                                name: "Aug-28",
                                value: 209125e4
                            }, {
                                name: "Sep-28",
                                value: 2095625e3
                            }, {
                                name: "Oct-28",
                                value: 21e8
                            }];
                            fitContainer = !0;
                            view = [void 0, void 0];
                            period = 4;
                            showXAxis = !0;
                            showYAxis = !0;
                            gradient = !1;
                            legendTitle = "Total Rewards";
                            legendPosition = "below";
                            showLegend = !1;
                            showXAxisLabel = !0;
                            xAxisLabel = "Months";
                            showYAxisLabel = !0;
                            yAxisLabel = "Rewards";
                            SwapStatus = Vn;
                            showGridLines = !0;
                            showDataLabel = !1;
                            maxYAxis = 100;
                            minYAxis = 0;
                            stakeAmount;
                            colorScheme = {
                                name: "myScheme",
                                selectable: !0,
                                group: yn.Ordinal,
                                domain
                            };
                            refreshRate = 1e3;
                            lang = localStorage.getItem("currentlang");
                            refreshId;
                            timeInterval;
                            isExtend = !1;
                            onResize(e) {
                                this.view = [+this.graphCont.nativeElement.offsetWidth / 1.05, 400]
                            }
                            constructor(e, i, s, r) {
                                this.popupService = e, this.translate = i, this.walletConnectService = s, this.modalService = r;
                                let h = 0,
                                    v = new Date,
                                    _ = v.getUTCMonth(),
                                    C = v.getUTCFullYear();
                                h = C > 2023 ? 12 * (C - 2023) + 9 : _ - 10, this.colorScheme.domain[h] = "#1ef93b"
                            }
                            ngOnInit() {}
                            ngAfterViewInit() {
                                this.view = [+this.graphCont.nativeElement.offsetWidth / 1.05, 400], setTimeout(() => {
                                    this.walletAddress || this.connectModal()
                                }, 2e3)
                            }
                            get stakeData() {
                                return this.walletConnectService.stakeData
                            }
                            get walletAddress() {
                                return this.walletConnectService.walletAddress
                            }
                            get poolPercent() {
                                return this.walletAddress && 0 !== this.stakeData.totalStaked && +(100 * this.stakeData.userStaked / this.stakeData.totalStaked).toFixed(5) || 0
                            }
                            checkEthChain() {
                                return this.walletAddress ? !!this.walletConnectService.isEthChain() || (this.popupService.messagePopup("info", this.translate.instant("wrong_chain", {
                                    chainName: xt.eth.chainName
                                }), this.translate.instant("change_network")).then(e => {
                                    e.isConfirmed && this.walletConnectService.switchNetwork(xt.eth.chainIdInt)
                                }), !1) : (this.connectModal(), !1)
                            }
                            openModal(e) {
                                this.modalRef = this.modalService.show(e, {
                                    class: "modal-xs modal-dialog-centered",
                                    backdrop: "static"
                                })
                            }
                            buyClaimStake(e) {
                                this.checkEthChain() ? this.walletAddress && 0 == this.ethClaimable && this.openModal(e) : this.timeInterval = setInterval(() => this.startConnectInterval(e), 2e3)
                            }
                            startConnectInterval(e) {
                                this.walletAddress && this.walletConnectService.isEthChain() && (this.openModal(e), clearInterval(this.timeInterval))
                            }
                            claimStake() {
                                0 == this.ethClaimable || !this.checkEthChain() || (this.walletConnectService.claimStake(), this.modalRef = this.modalService.show(kp, {
                                    class: "modal-xs modal-dialog-centered",
                                    backdrop: "static",
                                    initialState: {
                                        isStake: !0
                                    }
                                }))
                            }
                            closeModal() {
                                this.modalRef.hide()
                            }
                            yAxisTickFormattingFn = this.yAxisTickFormatting.bind(this);
                            yAxisTickFormatting(e) {
                                return this.formatNumber(e / 1e9) + "B"
                            }
                            onSelect(e) {
                                console.log(e)
                            }
                            onActivate(e) {
                                console.log("Activate", JSON.parse(JSON.stringify(e)))
                            }
                            onDeactivate(e) {
                                console.log("Deactivate", JSON.parse(JSON.stringify(e)))
                            }
                            formatString(e) {
                                return e.toUpperCase()
                            }
                            formatNumber(e) {
                                return P1(e)
                            }
                            get userReward() {
                                return this.walletAddress ? this.formatNumber(+this.stakeData.userReward.toFixed(0)) : 0
                            }
                            get status() {
                                return this.walletConnectService.swapStatus
                            }
                            get userStaked() {
                                return this.walletAddress ? this.formatNumber(+this.stakeData.userStaked.toFixed(0)) : 0
                            }
                            get ethClaimable() {
                                return this.walletAddress ? this.formatNumber(+this.walletConnectService.balanceData.ethClaimable.toFixed(0)) : 0
                            }
                            get ethTokens() {
                                return this.walletAddress ? this.walletConnectService.balanceData.ethClaimable : 0
                            }
                            get totalStaked() {
                                return this.formatNumber(+this.stakeData.totalStaked.toFixed(0))
                            }
                            get userBal() {
                                return this.formatNumber(this.stakeData.userBal)
                            }
                            get unstakeDate() {
                                return new Date(1e3 * this.stakeData.unlockTime)
                            }
                            get canUnstake() {
                                return new Date(1e3 * this.stakeData.unlockTime) < new Date
                            }
                            get cryptoName() {
                                return xt.tokenName
                            }
                            get hash() {
                                return this.walletConnectService.swapHash
                            }
                            withdrawStake() {
                                this.isExtend = !1, 0 != this.stakeData.userStaked && this.checkEthChain() && (this.walletConnectService.withdrawStake(), this.modalRef.hide(), setTimeout(() => {
                                    this.modalRef = this.modalService.show(kp, {
                                        class: "modal-xs modal-dialog-centered",
                                        backdrop: "static",
                                        initialState: {
                                            isWithdraw: !0
                                        }
                                    })
                                }, 500))
                            }
                            claim() {
                                this.isExtend = !1, this.stakeData.isClaimEnabled ? 0 == this.stakeData.userReward || !this.checkEthChain() || (this.walletConnectService.claimStakeRewards(), this.modalRef ? .hide(), setTimeout(() => {
                                    this.modalRef = this.modalService.show(kp, {
                                        class: "modal-xs modal-dialog-centered",
                                        backdrop: "static"
                                    })
                                }, 500)) : this.popupService.messagePopup("info", this.translate.instant("claim_not_live"))
                            }
                            max() {
                                this.stakeAmount = this.stakeData.userBal
                            }
                            stakeToken(e) {
                                this.isExtend = !1, this.checkEthChain() && !(this.stakeAmount > this.stakeData.userBal) && (this.walletConnectService.createStake(this.stakeAmount), this.modalRef.hide(), setTimeout(() => {
                                    this.modalRef = this.modalService.show(e, {
                                        class: "modal-xs modal-dialog-centered",
                                        backdrop: "static"
                                    })
                                }, 1e3))
                            }
                            extendStake(e) {
                                this.isExtend = !0, this.checkEthChain() && !(this.period < this.stakeData.planId) && (this.walletConnectService.extendStake(this.period), this.modalRef.hide(), setTimeout(() => {
                                    this.modalRef = this.modalService.show(e, {
                                        class: "modal-xs modal-dialog-centered",
                                        backdrop: "static"
                                    })
                                }, 1e3))
                            }
                            connectModal() {
                                this.modalRef = this.modalService.show(l0, {
                                    class: "modal-min modal-dialog-centered",
                                    backdrop: "static",
                                    initialState: {
                                        isBsNetwork: !1
                                    }
                                })
                            }
                            poolInfo() {
                                this.popupService.messagePopup("info", this.translate.instant("pool_share"))
                            }
                            viewUrl() {
                                window.open(xt.eth.blockExplorerURL + this.hash, "_blank")
                            }
                            static\ u0275fac = function(i) {
                                return new(i || t)($e(Ap), $e(Fa), $e(du), $e(Yl))
                            };
                            static\ u0275cmp = cn({
                                type: t,
                                selectors: [
                                    ["app-stake-dashboard"]
                                ],
                                viewQuery: function(i, s) {
                                    if (1 & i && ka(Rpe, 5), 2 & i) {
                                        let r;
                                        kr(r = Er()) && (s.graphCont = r.first)
                                    }
                                },
                                hostBindings: function(i, s) {
                                    1 & i && bt("resize", function(l) {
                                        return s.onResize(l)
                                    }, 0, Nl)
                                },
                                decls: 110,
                                vars: 27,
                                consts: [
                                    [1, "dashboard"],
                                    [1, "container"],
                                    [1, "row", "d-flex", "align-items-center", "pt-4"],
                                    [1, "col-lg-7", "col-12"],
                                    ["translate", "", 1, "pb-3", "heading", "m-0", "text-uppercase", "pe-2", "text-start", "text-primary", "fw-bold"],
                                    ["translate", "", 1, "font-16", "sub-head", "text-tertiary"],
                                    [1, "col-lg-5", "col-12", "justify-content-md-end", "d-flex"],
                                    [1, "d-flex"],
                                    ["translate", "", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "fs-7", "w-100", 3, "click"],
                                    [1, "col-lg-12", "col-12", "mt-4"],
                                    [1, "box-wrap"],
                                    [1, "box"],
                                    ["translate", "", 1, "title", "text-primary", "fw-bold", "text-uppercase", "mb-1", "d-inline-block"],
                                    [1, "font-30", "mt-2", "text-primary", "d-flex", "align-items-start"],
                                    ["translate", "", 1, "d-inline-block", "ms-2", "font-12", "fw-bold"],
                                    ["class", "btn btn-primary bg-secondary text-primary fs-7 w-100 cursor-pointer", "translate", "", 3, "click", 4, "ngIf"],
                                    ["translate", "", 1, "title", "font-14", "text-uppercase", "text-primary", "fw-bold", "mb-1", "d-inline-block"],
                                    ["class", "btn btn-primary bg-secondary text-primary fs-7 w-100", "translate", "", "title", "staking", 3, "click", 4, "ngIf"],
                                    [1, "w-100"],
                                    [1, "d-flex", "align-items-center", "justify-content-between"],
                                    ["translate", "", 1, "title", "font-14", "fw-bold", "text-primary", "text-uppercase", "mb-1", "d-inline-block"],
                                    ["src", "/assets/images/svg-icons/info-icon.svg", "alt", "", 1, "img-fluid", "cursor-pointer", 3, "click"],
                                    [1, "font-30", "mt-2", "text-primary", "fw-bold"],
                                    [1, "font-30", "mt-2"],
                                    ["translate", "", 1, "mb-2", "font-12", "fw-bold", "title", "ps-2"],
                                    [1, "p-0", "mt-3", "mb-0"],
                                    ["translate", ""],
                                    ["src", "/assets/images/svg-icons/ani-arrow.svg", "height", "8px", "alt", "", 1, "me-2"],
                                    ["translate", "", 1, "title", "font-14", "text-uppercase", "mb-1", "d-inline-block", "text-primary", "fw-bold"],
                                    [1, "font-30", "mt-2", "d-flex", "align-items-start"],
                                    [1, "row", "mt-5", "align-items-center", "justify-content-between"],
                                    [1, "col-lg-8", "mb-3"],
                                    [1, "chart-wrapper"],
                                    [1, "d-flex", "justify-content-center", "px-3", "align-items-center"],
                                    ["translate", "", 1, "mt-3", "mb-md-5", "text-center", "text-primary"],
                                    [1, "row"],
                                    [1, "col", "graph-parent"],
                                    ["graphCont", ""],
                                    [3, "view", "scheme", "results", "gradient", "xAxis", "yAxis", "legendTitle", "legend", "yScaleMin", "yScaleMax", "showXAxisLabel", "showYAxisLabel", "showGridLines", "showDataLabel", "xAxisLabel", "yAxisLabel", "yAxisTickFormatting", "select"],
                                    ["translate", "", 1, "stake-text", "mt-2"],
                                    ["translate", "", 1, "text-primary", "me-2"],
                                    ["href", "https://web3paymentsolutions.io/", "target", "_blank"],
                                    ["src", "./assets/images/svg-icons/W3P_Black.svg", "alt", "Web3Payments"],
                                    [1, "col-lg-4", "mx-auto", "d-flex", "align-items-center", "justify-content-center"],
                                    ["src", "./assets/images/svg-icons/banner-illustration.svg", "alt", "", 1, "img-fluid", "d-flex", "justify-content-end", "my-5"],
                                    ["withdraw", ""],
                                    ["stake", ""],
                                    ["successfull", ""],
                                    ["buy_stake", ""],
                                    ["extend", ""],
                                    ["translate", "", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "fs-7", "w-100", "cursor-pointer", 3, "click"],
                                    ["translate", "", "title", "staking", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "fs-7", "w-100", 3, "click"],
                                    [1, "modal-body", "bg-white"],
                                    [1, "d-flex", "align-items-center", "justify-content-center", "w-100", "mb-3"],
                                    ["translate", "", 1, "modal-title", "pull-left", "font-20", "fw-bold"],
                                    ["src", "./assets/images/svg-icons/close-white.svg", 1, "cursor-pointer", "stake-close", 3, "svgStyle", "click"],
                                    [1, "text-center", "my-4"],
                                    ["translate", "", 1, "staking-title", "text-primary", "font-14", "text-uppercase", "mb-1", "d-inline-block"],
                                    [1, "font-30", "mt-2", "text-primary", "d-flex", "align-items-start", "fw-bold", "justify-content-center"],
                                    ["translate", "", 1, "d-inline-block", "text-black", "ms-2", "font-12", "fw-bold"],
                                    ["class", "d-inline-block text-black ms-2 font-12 fw-bold ", 4, "ngIf"],
                                    [1, "d-flex", "align-items-center"],
                                    ["translate", "", 1, "w-100", "font-15", "card-btn", "bg-tertiary", 3, "click"],
                                    ["translate", "", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "fs-7", "ms-3", "w-100", 3, "disabled"],
                                    [1, "d-inline-block", "text-black", "ms-2", "font-12", "fw-bold"],
                                    ["aria-hidden", "true", 1, "cursor-pointer", "stake-close", 3, "click"],
                                    ["translate", "", 1, "staking-title", "font-14", "text-uppercase", "mb-1", "d-inline-block", "text-primary"],
                                    [1, "form-group"],
                                    ["translate", "", 1, "font-12"],
                                    ["translate", "", 1, "font-12", "text-decoration-underline", "cursor-pointer", "text-primary", 3, "click"],
                                    ["type", "text", "placeholder", "0", 1, "form-control", "text-black", 3, "ngModel", "ngModelChange"],
                                    ["translate", "", 1, "font-13"],
                                    ["translate", "", 1, "w-100", "font-15", "card-btn", "withdraw_btn", 3, "click"],
                                    [1, "modal-body", "bg-white", "d-flex", "align-items-center", "flex-column", "justify-content-center"],
                                    [1, "text-center", "w-100", "mb-3"],
                                    ["class", "body-section text-center", 4, "ngIf"],
                                    [1, "body-section", "text-center"],
                                    ["src", "./assets/images/svg-icons/loading.png", "alt", "loading", 1, "statusIcon"],
                                    [1, "fw-normal", "fw-bold", "font-16", "px-2", "my-3", "text-uppercase", "text-black", "text-center"],
                                    ["class", "fs-7 mb-0 text-black", 4, "ngIf"],
                                    [1, "fs-7", "mb-0", "text-black"],
                                    [1, "fw-semibold", "fs-6", "my-3", "text-uppercase", "text-black", "text-center"],
                                    ["src", "./assets/images/popup-icons/success.svg", "alt", "complete", 1, "statusIcon"],
                                    [1, "fw-semibold", "fs-6", "my-3", "text-uppercase", "text-success", "text-center"],
                                    ["class", "fs-7 mb-3 mb-lg-4 text-black", 4, "ngIf"],
                                    [1, "d-flex", "align-items-center", "justify-content-center", "gap-3"],
                                    [1, "btn", "btn-md", "py-2", "btn-black", "w-80", "text-white", "fs-6", "text-uppercase", 3, "click"],
                                    ["translate", "", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "fs-7", "ms-3", "w-100", "cursor-pointer", 3, "click"],
                                    [1, "fs-7", "mb-3", "mb-lg-4", "text-black"],
                                    ["src", "./assets/images/popup-icons/warning.svg", "alt", "failed", 1, "statusIcon"],
                                    [1, "fw-semibold", "fs-6", "my-3", "text-uppercase", "text-danger", "text-center"],
                                    [1, "fs-7", "mb-3", "mb-lg-4", "text-warning"],
                                    [1, "fw-semibold", "fs-6", "text-uppercase", "text-warning", "my-3", "text-center"],
                                    [1, "d-flex", "align-items-center", "justify-content-center", "gap-3", "mt-4"],
                                    [1, "modal-header", "d-flex", "align-items-center", "justify-content-center", "position-relative"],
                                    [1, "modal-body", "bg-primary"],
                                    [3, "isNative", "isWert", "isModal"],
                                    [1, "col-12", "form-group", "mb-3", "mb-lg-0"],
                                    ["aria-placeholder", "", 1, "form-select", 3, "ngModel", "ngModelOptions", "ngModelChange"],
                                    ["translate", "", "value", "1", 4, "ngIf"],
                                    ["translate", "", "value", "2", 4, "ngIf"],
                                    ["translate", "", "value", "3", 4, "ngIf"],
                                    ["translate", "", "value", "4", 4, "ngIf"],
                                    [1, "d-flex", "align-items-center", "mt-3"],
                                    ["translate", "", 1, "btn", "btn-primary", "bg-black", "text-white", "fs-7", "w-100", "me-2", 3, "click"],
                                    ["href", "javascript:;", "translate", "", 1, "btn", "btn-primary", "bg-secondary", "text-primary", "ms-2", "fs-7", "w-100", 3, "click"],
                                    ["translate", "", "value", "1"],
                                    ["translate", "", "value", "2"],
                                    ["translate", "", "value", "3"],
                                    ["translate", "", "value", "4"]
                                ],
                                template: function(i, s) {
                                    if (1 & i) {
                                        const r = sn();
                                        N(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "h2", 4), ae(5, "stake_title"), H(), N(6, "p", 5), ae(7, "stake_desc"), H()(), N(8, "div", 6)(9, "div", 7)(10, "button", 8), bt("click", function() {
                                            Ot(r);
                                            const u = Ta(101);
                                            return It(s.openModal(u))
                                        }), ae(11, "token_withdraw"), H()()(), N(12, "div", 9)(13, "div", 10)(14, "div", 11)(15, "div")(16, "span", 12), ae(17, "card_1_title "), H(), N(18, "h2", 13), ae(19), N(20, "span", 14), ae(21, "card_coin"), H()()(), rt(22, Bpe, 2, 0, "a", 15), N(23, "div")(24, "span", 16), ae(25, "your_stakeable "), H(), N(26, "h2", 13), ae(27), N(28, "span", 14), ae(29, "card_coin"), H()()(), rt(30, Vpe, 2, 0, "a", 17), rt(31, Hpe, 2, 0, "a", 15), H(), N(32, "div", 11)(33, "div", 18)(34, "div", 19)(35, "span", 20), ae(36, "card_2_title "), H(), N(37, "img", 21), bt("click", function() {
                                            return s.poolInfo()
                                        }), H()(), N(38, "h2", 22), ae(39), H(), N(40, "div")(41, "span", 16), ae(42, "total_staked "), H(), N(43, "h2", 13), ae(44), N(45, "span", 14), ae(46, "card_coin"), H()()()()(), N(47, "div", 11)(48, "div")(49, "span", 16), ae(50, "card_3_title"), H(), N(51, "h2", 23), ae(52), N(53, "sup", 24), ae(54, "stake_pa"), H()()(), N(55, "ul", 25)(56, "li", 26), ot(57, "img", 27), ae(58, "card_3_para_1"), H(), N(59, "li", 26), ot(60, "img", 27), ae(61, "card_3_para_2"), H(), N(62, "li", 26), ot(63, "img", 27), ae(64, "card_3_para_3"), H()()(), N(65, "div", 11)(66, "div")(67, "span", 28), ae(68, "card_4_title"), H(), N(69, "h2", 29), ae(70), N(71, "span", 14), ae(72, "card_block"), H()()()(), N(73, "div", 11)(74, "div")(75, "span", 28), ae(76, "card_5_title"), H(), N(77, "h2", 29), ae(78), N(79, "span", 14), ae(80, "card_coin"), H()()(), N(81, "button", 8), bt("click", function() {
                                            return s.claim()
                                        }), ae(82, "rewards_btn"), H()()()()(), N(83, "div", 30)(84, "div", 31)(85, "div", 32)(86, "div", 33)(87, "h4", 34), ae(88, "total_supply"), H()(), N(89, "div", 35)(90, "div", 36, 37)(92, "ngx-charts-bar-vertical", 38), bt("select", function(u) {
                                            return s.onSelect(u)
                                        }), H()()()(), N(93, "div", 39)(94, "span", 40), ae(95, "staking_powered_by"), H(), N(96, "a", 41), ot(97, "img", 42), H()()(), N(98, "div", 43), ot(99, "img", 44), H()()()(), rt(100, $pe, 18, 5, "ng-template", null, 45, Ea), rt(102, Upe, 25, 2, "ng-template", null, 46, Ea), rt(104, Jpe, 8, 6, "ng-template", null, 47, Ea), rt(106, ege, 6, 5, "ng-template", null, 48, Ea), rt(108, age, 19, 7, "ng-template", null, 49, Ea)
                                    }
                                    2 & i && (xe(19), dn("", s.userStaked, " "), xe(3), Fe("ngIf", s.stakeData.userStaked > 0 && s.stakeData.planId < 4), xe(5), dn("", s.ethClaimable, " "), xe(3), Fe("ngIf", s.ethTokens && s.ethTokens > 0), xe(1), Fe("ngIf", 0 == s.ethTokens), xe(8), dn("", s.poolPercent, "%"), xe(5), dn("", s.totalStaked, " "), xe(8), dn("", s.stakeData.apy, "%"), xe(18), dn("", s.stakeData.rewardPerRound, " "), xe(8), dn("", s.userReward, " "), xe(14), Fe("view", s.view)("scheme", s.colorScheme)("results", s.rewards)("gradient", s.gradient)("xAxis", s.showXAxis)("yAxis", s.showYAxis)("legendTitle", s.legendTitle)("legend", s.showLegend)("yScaleMin", s.minYAxis)("yScaleMax", s.maxYAxis)("showXAxisLabel", s.showXAxisLabel)("showYAxisLabel", s.showYAxisLabel)("showGridLines", s.showGridLines)("showDataLabel", s.showDataLabel)("xAxisLabel", s.xAxisLabel)("yAxisLabel", s.yAxisLabel)("yAxisTickFormatting", s.yAxisTickFormattingFn))
                                },
                                dependencies: [Ji, ZL, QL, Df, wv, Ow, _v, Xl, tle, Ir, aD, QP, Vc],
                                styles: [".dashboard[_ngcontent-%COMP%]{padding:150px 0 105px}.dashboard[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{color:#1ef93b;font-size:50px;margin:auto;max-width:500px;font-weight:800}@media screen and (max-width: 576px){.dashboard[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{font-size:45px;padding-top:50px}}.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(5,1fr);gap:20px}@media screen and (max-width: 1024px){.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]{grid-template-columns:repeat(4,1fr)}}@media screen and (max-width: 768px){.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]{grid-template-columns:repeat(3,1fr)}}@media screen and (max-width: 576px){.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]{grid-template-columns:repeat(1,1fr)}}.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]{padding:20px;align-items:flex-start;border-radius:20px;border:1px solid #8C979F;background-color:#fff;color:#fff;box-shadow:2px 4px 12px #00000014;width:100%;margin:0 auto;display:flex;flex-direction:column;justify-content:space-between}@media screen and (max-width: 576px){.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]{max-width:unset}}.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]   sup[_ngcontent-%COMP%]{vertical-align:super}.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{color:#1ef93b;font-weight:700}.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#1ef93b}.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{letter-spacing:1.4px;color:#1ef93b}.dashboard[_ngcontent-%COMP%]   .box-wrap[_ngcontent-%COMP%]   .box[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{color:#2d3439;font-size:10px;font-style:normal;font-weight:500;list-style:none;margin-bottom:3px;display:flex;align-items:baseline}.dashboard[_ngcontent-%COMP%]   google-chart[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > svg[_ngcontent-%COMP%] > g[_ngcontent-%COMP%] > rect[_ngcontent-%COMP%]{fill:#f26133!important}.dashboard[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]{background:#ffffff;border-radius:20px;border:1px solid #8C979F;box-shadow:0 6px 5px #00000008;min-height:431px}.dashboard[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   .calendar[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]{display:none}.dashboard[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   .graph-parent[_ngcontent-%COMP%]{height:450px;width:900px}.dashboard[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{color:#20262b;font-size:14px;font-weight:400;letter-spacing:1.4px;text-transform:uppercase;font-family:Poppins,sans-serif}.dashboard[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]   ngx-charts-bar-vertical[_ngcontent-%COMP%]{fill:#000!important}@media screen and (max-width: 1024px){.dashboard[_ngcontent-%COMP%]   .chart-wrapper[_ngcontent-%COMP%]{min-height:unset}}.dashboard[_ngcontent-%COMP%]   .ngx-daterangepicker-action[_ngcontent-%COMP%]{position:absolute;right:15px;top:10px}.modal-title[_ngcontent-%COMP%], .staking-title[_ngcontent-%COMP%]{color:#20262b}.success-msg[_ngcontent-%COMP%]{color:#22282d;font-size:16px}.stake-close[_ngcontent-%COMP%]{position:absolute;right:20px}.card-btn[_ngcontent-%COMP%]{border:none;border-radius:30px;background:#20262B;font-size:15px;font-weight:500;padding:10px;color:#fff;line-height:1;height:40px}.button[_ngcontent-%COMP%]{border:1px solid #7f756b;background:rgba(255,255,255,.46);display:flex;height:40px;padding:10px 24px;justify-content:center;align-items:center;text-decoration:none}@media screen and (max-width: 576px){.button[_ngcontent-%COMP%]{padding:10px 15px;font-size:14px!important}}.withdraw_btn[_ngcontent-%COMP%]{background-color:#20262b;border:none;border-radius:30px}.withdraw_btn[_ngcontent-%COMP%]:disabled{background-color:gray}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#20262b}.form-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{border:1px solid #dbd1c9;background:#ffffff;padding:8px 10px}.modal-body[_ngcontent-%COMP%]{min-height:auto!important}.stake-text[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px}.stake-text[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:18px}.form-group[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:16px;color:#20262b;font-weight:600;margin-bottom:5px}.form-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{font-size:16px;font-weight:600;box-shadow:none;border-radius:10px;border:6px solid #DAD9C7;background-color:#1ef93b;padding:16px 25px;color:#20262b}.form-group[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]::placeholder{opacity:.5;color:#20262b}.form-group[_ngcontent-%COMP%]   .form-select[_ngcontent-%COMP%]{font-size:16px;font-weight:600;box-shadow:none;border-radius:10px;background-color:#1ef93b;padding:16px 25px;color:#20262b;background-image:url(/assets/images/svg-icons/down-arrow.svg)}.form-group[_ngcontent-%COMP%]   .form-select[_ngcontent-%COMP%]::placeholder{opacity:.5;color:#20262b}"]
                            })
                        }
                        return t
                    })()
                }]
            }, {
                path: "**",
                redirectTo: "/en",
                pathMatch: "full"
            }];
            let lD, lge = (() => {
                    class t {
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275mod = jn({
                            type: t
                        });
                        static\ u0275inj = zn({
                            imports: [yN.forRoot(oge), yN]
                        })
                    }
                    return t
                })(),
                cge = 1;
            const d0 = {};

            function l6(t) {
                return t in d0 && (delete d0[t], !0)
            }
            const uge = {
                    setImmediate(t) {
                        const n = cge++;
                        return d0[n] = !0, lD || (lD = Promise.resolve()), lD.then(() => l6(n) && t()), n
                    },
                    clearImmediate(t) {
                        l6(t)
                    }
                },
                {
                    setImmediate: dge,
                    clearImmediate: hge
                } = uge,
                h0 = {
                    setImmediate(...t) {
                        const {
                            delegate: n
                        } = h0;
                        return (n ? .setImmediate || dge)(...t)
                    },
                    clearImmediate(t) {
                        const {
                            delegate: n
                        } = h0;
                        return (n ? .clearImmediate || hge)(t)
                    },
                    delegate: void 0
                };
            new class pge extends mw {
                flush(n) {
                    this._active = !0;
                    const e = this._scheduled;
                    this._scheduled = void 0;
                    const {
                        actions: i
                    } = this;
                    let s;
                    n = n || i.shift();
                    do {
                        if (s = n.execute(n.state, n.delay)) break
                    } while ((n = i[0]) && n.id === e && i.shift());
                    if (this._active = !1, s) {
                        for (;
                            (n = i[0]) && n.id === e && i.shift();) n.unsubscribe();
                        throw s
                    }
                }
            }(class fge extends gw {
                constructor(n, e) {
                    super(n, e), this.scheduler = n, this.work = e
                }
                requestAsyncId(n, e, i = 0) {
                    return null !== i && i > 0 ? super.requestAsyncId(n, e, i) : (n.actions.push(this), n._scheduled || (n._scheduled = h0.setImmediate(n.flush.bind(n, void 0))))
                }
                recycleAsyncId(n, e, i = 0) {
                    var s;
                    if (null != i ? i > 0 : this.delay > 0) return super.recycleAsyncId(n, e, i);
                    const {
                        actions: r
                    } = n;
                    null != e && (null === (s = r[r.length - 1]) || void 0 === s ? void 0 : s.id) !== e && (h0.clearImmediate(e), n._scheduled === e && (n._scheduled = void 0))
                }
            });
            var c6 = I(5054);
            window.ApexCharts = c6;
            let yge = (() => {
                    class t {}
                    return t.\u0275fac = function(e) {
                        return new(e || t)
                    }, t.\u0275mod = jn({
                        type: t
                    }), t.\u0275inj = zn({}), t
                })(),
                bge = (() => {
                    class t {
                        static\ u0275fac = function(i) {
                            return new(i || t)
                        };
                        static\ u0275mod = jn({
                            type: t,
                            bootstrap: [hpe]
                        });
                        static\ u0275inj = zn({
                            imports: [kX, lge, DZ, AZ, PZ, Mq.forRoot(), uq.forRoot(), bY.forRoot(), Pq, lY, gle, DJ, jfe, yge, BX.forRoot({
                                loader: {
                                    provide: mf,
                                    useFactory: xge,
                                    deps: [Ul]
                                }
                            })]
                        })
                    }
                    return t
                })();

            function xge(t) {
                return new pY(t, "./assets/i18n/", ".json")
            }
            CG().bootstrapModule(bge).catch(t => console.error(t)), xt.production && window && window.console && (window.console.log = function() {})
        },
        9546: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            });
            var _e = I(8052);

            function se(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(2)), void 0 === je && (je = 0), we[je + 0] = Re >>> 8, we[je + 1] = Re >>> 0, we
            }

            function z(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(2)), void 0 === je && (je = 0), we[je + 0] = Re >>> 0, we[je + 1] = Re >>> 8, we
            }

            function ie(Re, we) {
                return void 0 === we && (we = 0), Re[we] << 24 | Re[we + 1] << 16 | Re[we + 2] << 8 | Re[we + 3]
            }

            function ee(Re, we) {
                return void 0 === we && (we = 0), (Re[we] << 24 | Re[we + 1] << 16 | Re[we + 2] << 8 | Re[we + 3]) >>> 0
            }

            function oe(Re, we) {
                return void 0 === we && (we = 0), Re[we + 3] << 24 | Re[we + 2] << 16 | Re[we + 1] << 8 | Re[we]
            }

            function ve(Re, we) {
                return void 0 === we && (we = 0), (Re[we + 3] << 24 | Re[we + 2] << 16 | Re[we + 1] << 8 | Re[we]) >>> 0
            }

            function Te(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(4)), void 0 === je && (je = 0), we[je + 0] = Re >>> 24, we[je + 1] = Re >>> 16, we[je + 2] = Re >>> 8, we[je + 3] = Re >>> 0, we
            }

            function Me(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(4)), void 0 === je && (je = 0), we[je + 0] = Re >>> 0, we[je + 1] = Re >>> 8, we[je + 2] = Re >>> 16, we[je + 3] = Re >>> 24, we
            }

            function te(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(8)), void 0 === je && (je = 0), Te(Re / 4294967296 >>> 0, we, je), Te(Re >>> 0, we, je + 4), we
            }

            function Pe(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(8)), void 0 === je && (je = 0), Me(Re >>> 0, we, je), Me(Re / 4294967296 >>> 0, we, je + 4), we
            }
            G.readInt16BE = function Ee(Re, we) {
                return void 0 === we && (we = 0), (Re[we + 0] << 8 | Re[we + 1]) << 16 >> 16
            }, G.readUint16BE = function ge(Re, we) {
                return void 0 === we && (we = 0), (Re[we + 0] << 8 | Re[we + 1]) >>> 0
            }, G.readInt16LE = function Ce(Re, we) {
                return void 0 === we && (we = 0), (Re[we + 1] << 8 | Re[we]) << 16 >> 16
            }, G.readUint16LE = function U(Re, we) {
                return void 0 === we && (we = 0), (Re[we + 1] << 8 | Re[we]) >>> 0
            }, G.writeUint16BE = se, G.writeInt16BE = se, G.writeUint16LE = z, G.writeInt16LE = z, G.readInt32BE = ie, G.readUint32BE = ee, G.readInt32LE = oe, G.readUint32LE = ve, G.writeUint32BE = Te, G.writeInt32BE = Te, G.writeUint32LE = Me, G.writeInt32LE = Me, G.readInt64BE = function Be(Re, we) {
                void 0 === we && (we = 0);
                var je = ie(Re, we),
                    _t = ie(Re, we + 4);
                return 4294967296 * je + _t - 4294967296 * (_t >> 31)
            }, G.readUint64BE = function We(Re, we) {
                return void 0 === we && (we = 0), 4294967296 * ee(Re, we) + ee(Re, we + 4)
            }, G.readInt64LE = function Ye(Re, we) {
                void 0 === we && (we = 0);
                var je = oe(Re, we);
                return 4294967296 * oe(Re, we + 4) + je - 4294967296 * (je >> 31)
            }, G.readUint64LE = function Je(Re, we) {
                void 0 === we && (we = 0);
                var je = ve(Re, we);
                return 4294967296 * ve(Re, we + 4) + je
            }, G.writeUint64BE = te, G.writeInt64BE = te, G.writeUint64LE = Pe, G.writeInt64LE = Pe, G.readUintBE = function Oe(Re, we, je) {
                if (void 0 === je && (je = 0), Re % 8 != 0) throw new Error("readUintBE supports only bitLengths divisible by 8");
                if (Re / 8 > we.length - je) throw new Error("readUintBE: array is too short for the given bitLength");
                for (var _t = 0, Mt = 1, Lt = Re / 8 + je - 1; Lt >= je; Lt--) _t += we[Lt] * Mt, Mt *= 256;
                return _t
            }, G.readUintLE = function J(Re, we, je) {
                if (void 0 === je && (je = 0), Re % 8 != 0) throw new Error("readUintLE supports only bitLengths divisible by 8");
                if (Re / 8 > we.length - je) throw new Error("readUintLE: array is too short for the given bitLength");
                for (var _t = 0, Mt = 1, Lt = je; Lt < je + Re / 8; Lt++) _t += we[Lt] * Mt, Mt *= 256;
                return _t
            }, G.writeUintBE = function Ie(Re, we, je, _t) {
                if (void 0 === je && (je = new Uint8Array(Re / 8)), void 0 === _t && (_t = 0), Re % 8 != 0) throw new Error("writeUintBE supports only bitLengths divisible by 8");
                if (!_e.isSafeInteger(we)) throw new Error("writeUintBE value must be an integer");
                for (var Mt = 1, Lt = Re / 8 + _t - 1; Lt >= _t; Lt--) je[Lt] = we / Mt & 255, Mt *= 256;
                return je
            }, G.writeUintLE = function Xe(Re, we, je, _t) {
                if (void 0 === je && (je = new Uint8Array(Re / 8)), void 0 === _t && (_t = 0), Re % 8 != 0) throw new Error("writeUintLE supports only bitLengths divisible by 8");
                if (!_e.isSafeInteger(we)) throw new Error("writeUintLE value must be an integer");
                for (var Mt = 1, Lt = _t; Lt < _t + Re / 8; Lt++) je[Lt] = we / Mt & 255, Mt *= 256;
                return je
            }, G.readFloat32BE = function R(Re, we) {
                return void 0 === we && (we = 0), new DataView(Re.buffer, Re.byteOffset, Re.byteLength).getFloat32(we)
            }, G.readFloat32LE = function ce(Re, we) {
                return void 0 === we && (we = 0), new DataView(Re.buffer, Re.byteOffset, Re.byteLength).getFloat32(we, !0)
            }, G.readFloat64BE = function Ve(Re, we) {
                return void 0 === we && (we = 0), new DataView(Re.buffer, Re.byteOffset, Re.byteLength).getFloat64(we)
            }, G.readFloat64LE = function Ze(Re, we) {
                return void 0 === we && (we = 0), new DataView(Re.buffer, Re.byteOffset, Re.byteLength).getFloat64(we, !0)
            }, G.writeFloat32BE = function tt(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(4)), void 0 === je && (je = 0), new DataView(we.buffer, we.byteOffset, we.byteLength).setFloat32(je, Re), we
            }, G.writeFloat32LE = function at(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(4)), void 0 === je && (je = 0), new DataView(we.buffer, we.byteOffset, we.byteLength).setFloat32(je, Re, !0), we
            }, G.writeFloat64BE = function Ge(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(8)), void 0 === je && (je = 0), new DataView(we.buffer, we.byteOffset, we.byteLength).setFloat64(je, Re), we
            }, G.writeFloat64LE = function ct(Re, we, je) {
                return void 0 === we && (we = new Uint8Array(8)), void 0 === je && (je = 0), new DataView(we.buffer, we.byteOffset, we.byteLength).setFloat64(je, Re, !0), we
            }
        },
        6814: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            });
            var _e = I(9546),
                Ee = I(3403),
                ge = 20;

            function Ce(ie, ee, oe) {
                for (var ve = 1634760805, Te = 857760878, Me = 2036477234, Be = 1797285236, We = oe[3] << 24 | oe[2] << 16 | oe[1] << 8 | oe[0], Ye = oe[7] << 24 | oe[6] << 16 | oe[5] << 8 | oe[4], Je = oe[11] << 24 | oe[10] << 16 | oe[9] << 8 | oe[8], te = oe[15] << 24 | oe[14] << 16 | oe[13] << 8 | oe[12], Pe = oe[19] << 24 | oe[18] << 16 | oe[17] << 8 | oe[16], Oe = oe[23] << 24 | oe[22] << 16 | oe[21] << 8 | oe[20], J = oe[27] << 24 | oe[26] << 16 | oe[25] << 8 | oe[24], Ie = oe[31] << 24 | oe[30] << 16 | oe[29] << 8 | oe[28], Xe = ee[3] << 24 | ee[2] << 16 | ee[1] << 8 | ee[0], R = ee[7] << 24 | ee[6] << 16 | ee[5] << 8 | ee[4], ce = ee[11] << 24 | ee[10] << 16 | ee[9] << 8 | ee[8], Ve = ee[15] << 24 | ee[14] << 16 | ee[13] << 8 | ee[12], Ze = ve, tt = Te, at = Me, Ge = Be, ct = We, Re = Ye, we = Je, je = te, _t = Pe, Mt = Oe, Lt = J, He = Ie, St = Xe, Ft = R, Dt = ce, Ct = Ve, Gt = 0; Gt < ge; Gt += 2) ct = (ct ^= _t = _t + (St = (St ^= Ze = Ze + ct | 0) >>> 16 | St << 16) | 0) >>> 20 | ct << 12, Re = (Re ^= Mt = Mt + (Ft = (Ft ^= tt = tt + Re | 0) >>> 16 | Ft << 16) | 0) >>> 20 | Re << 12, we = (we ^= Lt = Lt + (Dt = (Dt ^= at = at + we | 0) >>> 16 | Dt << 16) | 0) >>> 20 | we << 12, je = (je ^= He = He + (Ct = (Ct ^= Ge = Ge + je | 0) >>> 16 | Ct << 16) | 0) >>> 20 | je << 12, we = (we ^= Lt = Lt + (Dt = (Dt ^= at = at + we | 0) >>> 24 | Dt << 8) | 0) >>> 25 | we << 7, je = (je ^= He = He + (Ct = (Ct ^= Ge = Ge + je | 0) >>> 24 | Ct << 8) | 0) >>> 25 | je << 7, Re = (Re ^= Mt = Mt + (Ft = (Ft ^= tt = tt + Re | 0) >>> 24 | Ft << 8) | 0) >>> 25 | Re << 7, ct = (ct ^= _t = _t + (St = (St ^= Ze = Ze + ct | 0) >>> 24 | St << 8) | 0) >>> 25 | ct << 7, Re = (Re ^= Lt = Lt + (Ct = (Ct ^= Ze = Ze + Re | 0) >>> 16 | Ct << 16) | 0) >>> 20 | Re << 12, we = (we ^= He = He + (St = (St ^= tt = tt + we | 0) >>> 16 | St << 16) | 0) >>> 20 | we << 12, je = (je ^= _t = _t + (Ft = (Ft ^= at = at + je | 0) >>> 16 | Ft << 16) | 0) >>> 20 | je << 12, ct = (ct ^= Mt = Mt + (Dt = (Dt ^= Ge = Ge + ct | 0) >>> 16 | Dt << 16) | 0) >>> 20 | ct << 12, je = (je ^= _t = _t + (Ft = (Ft ^= at = at + je | 0) >>> 24 | Ft << 8) | 0) >>> 25 | je << 7, ct = (ct ^= Mt = Mt + (Dt = (Dt ^= Ge = Ge + ct | 0) >>> 24 | Dt << 8) | 0) >>> 25 | ct << 7, we = (we ^= He = He + (St = (St ^= tt = tt + we | 0) >>> 24 | St << 8) | 0) >>> 25 | we << 7, Re = (Re ^= Lt = Lt + (Ct = (Ct ^= Ze = Ze + Re | 0) >>> 24 | Ct << 8) | 0) >>> 25 | Re << 7;
                _e.writeUint32LE(Ze + ve | 0, ie, 0), _e.writeUint32LE(tt + Te | 0, ie, 4), _e.writeUint32LE(at + Me | 0, ie, 8), _e.writeUint32LE(Ge + Be | 0, ie, 12), _e.writeUint32LE(ct + We | 0, ie, 16), _e.writeUint32LE(Re + Ye | 0, ie, 20), _e.writeUint32LE(we + Je | 0, ie, 24), _e.writeUint32LE(je + te | 0, ie, 28), _e.writeUint32LE(_t + Pe | 0, ie, 32), _e.writeUint32LE(Mt + Oe | 0, ie, 36), _e.writeUint32LE(Lt + J | 0, ie, 40), _e.writeUint32LE(He + Ie | 0, ie, 44), _e.writeUint32LE(St + Xe | 0, ie, 48), _e.writeUint32LE(Ft + R | 0, ie, 52), _e.writeUint32LE(Dt + ce | 0, ie, 56), _e.writeUint32LE(Ct + Ve | 0, ie, 60)
            }

            function U(ie, ee, oe, ve, Te) {
                if (void 0 === Te && (Te = 0), 32 !== ie.length) throw new Error("ChaCha: key size must be 32 bytes");
                if (ve.length < oe.length) throw new Error("ChaCha: destination is shorter than source");
                var Me, Be;
                if (0 === Te) {
                    if (8 !== ee.length && 12 !== ee.length) throw new Error("ChaCha nonce must be 8 or 12 bytes");
                    (Me = new Uint8Array(16)).set(ee, Be = Me.length - ee.length)
                } else {
                    if (16 !== ee.length) throw new Error("ChaCha nonce with counter must be 16 bytes");
                    Me = ee, Be = Te
                }
                for (var We = new Uint8Array(64), Ye = 0; Ye < oe.length; Ye += 64) {
                    Ce(We, Me, ie);
                    for (var Je = Ye; Je < Ye + 64 && Je < oe.length; Je++) ve[Je] = oe[Je] ^ We[Je - Ye];
                    z(Me, 0, Be)
                }
                return Ee.wipe(We), 0 === Te && Ee.wipe(Me), ve
            }

            function z(ie, ee, oe) {
                for (var ve = 1; oe--;) ie[ee] = 255 & (ve = ve + (255 & ie[ee]) | 0), ve >>>= 8, ee++;
                if (ve > 0) throw new Error("ChaCha: counter overflow")
            }
            G.streamXOR = U, G.stream = function se(ie, ee, oe, ve) {
                return void 0 === ve && (ve = 0), Ee.wipe(oe), U(ie, ee, oe, oe, ve)
            }
        },
        9026: (ft, G, I) => {
            "use strict";
            var Ee = I(6814),
                ge = I(826),
                Ce = I(3403),
                U = I(9546),
                se = I(7456);
            G.Cv = 32, G.WH = 12, G.pg = 16;
            var z = new Uint8Array(16),
                ie = function() {
                    function ee(oe) {
                        if (this.nonceLength = G.WH, this.tagLength = G.pg, oe.length !== G.Cv) throw new Error("ChaCha20Poly1305 needs 32-byte key");
                        this._key = new Uint8Array(oe)
                    }
                    return ee.prototype.seal = function(oe, ve, Te, Me) {
                        if (oe.length > 16) throw new Error("ChaCha20Poly1305: incorrect nonce length");
                        var Be = new Uint8Array(16);
                        Be.set(oe, Be.length - oe.length);
                        var We = new Uint8Array(32);
                        Ee.stream(this._key, Be, We, 4);
                        var Je, Ye = ve.length + this.tagLength;
                        if (Me) {
                            if (Me.length !== Ye) throw new Error("ChaCha20Poly1305: incorrect destination length");
                            Je = Me
                        } else Je = new Uint8Array(Ye);
                        return Ee.streamXOR(this._key, Be, ve, Je, 4), this._authenticate(Je.subarray(Je.length - this.tagLength, Je.length), We, Je.subarray(0, Je.length - this.tagLength), Te), Ce.wipe(Be), Je
                    }, ee.prototype.open = function(oe, ve, Te, Me) {
                        if (oe.length > 16) throw new Error("ChaCha20Poly1305: incorrect nonce length");
                        if (ve.length < this.tagLength) return null;
                        var Be = new Uint8Array(16);
                        Be.set(oe, Be.length - oe.length);
                        var We = new Uint8Array(32);
                        Ee.stream(this._key, Be, We, 4);
                        var Ye = new Uint8Array(this.tagLength);
                        if (this._authenticate(Ye, We, ve.subarray(0, ve.length - this.tagLength), Te), !se.equal(Ye, ve.subarray(ve.length - this.tagLength, ve.length))) return null;
                        var te, Je = ve.length - this.tagLength;
                        if (Me) {
                            if (Me.length !== Je) throw new Error("ChaCha20Poly1305: incorrect destination length");
                            te = Me
                        } else te = new Uint8Array(Je);
                        return Ee.streamXOR(this._key, Be, ve.subarray(0, ve.length - this.tagLength), te, 4), Ce.wipe(Be), te
                    }, ee.prototype.clean = function() {
                        return Ce.wipe(this._key), this
                    }, ee.prototype._authenticate = function(oe, ve, Te, Me) {
                        var Be = new ge.Poly1305(ve);
                        Me && (Be.update(Me), Me.length % 16 > 0 && Be.update(z.subarray(Me.length % 16))), Be.update(Te), Te.length % 16 > 0 && Be.update(z.subarray(Te.length % 16));
                        var We = new Uint8Array(8);
                        Me && U.writeUint64LE(Me.length, We), Be.update(We), U.writeUint64LE(Te.length, We), Be.update(We);
                        for (var Ye = Be.digest(), Je = 0; Je < Ye.length; Je++) oe[Je] = Ye[Je];
                        Be.clean(), Ce.wipe(Ye), Ce.wipe(We)
                    }, ee
                }();
            G.OK = ie
        },
        7456: (ft, G) => {
            "use strict";

            function Ee(Ce, U) {
                if (Ce.length !== U.length) return 0;
                for (var se = 0, z = 0; z < Ce.length; z++) se |= Ce[z] ^ U[z];
                return 1 & se - 1 >>> 8
            }
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.select = function I(Ce, U, se) {
                return ~(Ce - 1) & U | Ce - 1 & se
            }, G.lessOrEqual = function _e(Ce, U) {
                return (0 | Ce) - (0 | U) - 1 >>> 31 & 1
            }, G.compare = Ee, G.equal = function ge(Ce, U) {
                return 0 !== Ce.length && 0 !== U.length && 0 !== Ee(Ce, U)
            }
        },
        970: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.isSerializableHash = function I(_e) {
                return typeof _e.saveState < "u" && typeof _e.restoreState < "u" && typeof _e.cleanSavedState < "u"
            }
        },
        1028: (ft, G, I) => {
            "use strict";
            var Ee = I(7177),
                ge = I(3403),
                Ce = function() {
                    function U(se, z, ie, ee) {
                        void 0 === ie && (ie = new Uint8Array(0)), this._counter = new Uint8Array(1), this._hash = se, this._info = ee;
                        var oe = Ee.hmac(this._hash, ie, z);
                        this._hmac = new Ee.HMAC(se, oe), this._buffer = new Uint8Array(this._hmac.digestLength), this._bufpos = this._buffer.length
                    }
                    return U.prototype._fillBuffer = function() {
                        this._counter[0]++;
                        var se = this._counter[0];
                        if (0 === se) throw new Error("hkdf: cannot expand more");
                        this._hmac.reset(), se > 1 && this._hmac.update(this._buffer), this._info && this._hmac.update(this._info), this._hmac.update(this._counter), this._hmac.finish(this._buffer), this._bufpos = 0
                    }, U.prototype.expand = function(se) {
                        for (var z = new Uint8Array(se), ie = 0; ie < z.length; ie++) this._bufpos === this._buffer.length && this._fillBuffer(), z[ie] = this._buffer[this._bufpos++];
                        return z
                    }, U.prototype.clean = function() {
                        this._hmac.clean(), ge.wipe(this._buffer), ge.wipe(this._counter), this._bufpos = 0
                    }, U
                }();
            G.t = Ce
        },
        7177: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            });
            var _e = I(970),
                Ee = I(7456),
                ge = I(3403),
                Ce = function() {
                    function se(z, ie) {
                        this._finished = !1, this._inner = new z, this._outer = new z, this.blockSize = this._outer.blockSize, this.digestLength = this._outer.digestLength;
                        var ee = new Uint8Array(this.blockSize);
                        ie.length > this.blockSize ? this._inner.update(ie).finish(ee).clean() : ee.set(ie);
                        for (var oe = 0; oe < ee.length; oe++) ee[oe] ^= 54;
                        for (this._inner.update(ee), oe = 0; oe < ee.length; oe++) ee[oe] ^= 106;
                        this._outer.update(ee), _e.isSerializableHash(this._inner) && _e.isSerializableHash(this._outer) && (this._innerKeyedState = this._inner.saveState(), this._outerKeyedState = this._outer.saveState()), ge.wipe(ee)
                    }
                    return se.prototype.reset = function() {
                        if (!_e.isSerializableHash(this._inner) || !_e.isSerializableHash(this._outer)) throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
                        return this._inner.restoreState(this._innerKeyedState), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, se.prototype.clean = function() {
                        _e.isSerializableHash(this._inner) && this._inner.cleanSavedState(this._innerKeyedState), _e.isSerializableHash(this._outer) && this._outer.cleanSavedState(this._outerKeyedState), this._inner.clean(), this._outer.clean()
                    }, se.prototype.update = function(z) {
                        return this._inner.update(z), this
                    }, se.prototype.finish = function(z) {
                        return this._finished ? (this._outer.finish(z), this) : (this._inner.finish(z), this._outer.update(z.subarray(0, this.digestLength)).finish(z), this._finished = !0, this)
                    }, se.prototype.digest = function() {
                        var z = new Uint8Array(this.digestLength);
                        return this.finish(z), z
                    }, se.prototype.saveState = function() {
                        if (!_e.isSerializableHash(this._inner)) throw new Error("hmac: can't saveState() because hash doesn't implement it");
                        return this._inner.saveState()
                    }, se.prototype.restoreState = function(z) {
                        if (!_e.isSerializableHash(this._inner) || !_e.isSerializableHash(this._outer)) throw new Error("hmac: can't restoreState() because hash doesn't implement it");
                        return this._inner.restoreState(z), this._outer.restoreState(this._outerKeyedState), this._finished = !1, this
                    }, se.prototype.cleanSavedState = function(z) {
                        if (!_e.isSerializableHash(this._inner)) throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
                        this._inner.cleanSavedState(z)
                    }, se
                }();
            G.HMAC = Ce, G.hmac = function U(se, z, ie) {
                var ee = new Ce(se, z);
                ee.update(ie);
                var oe = ee.digest();
                return ee.clean(), oe
            }, G.equal = Ee.equal
        },
        8052: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.mul = Math.imul || function I(se, z) {
                var ee = 65535 & se,
                    ve = 65535 & z;
                return ee * ve + ((se >>> 16 & 65535) * ve + ee * (z >>> 16 & 65535) << 16 >>> 0) | 0
            }, G.add = function _e(se, z) {
                return se + z | 0
            }, G.sub = function Ee(se, z) {
                return se - z | 0
            }, G.rotl = function ge(se, z) {
                return se << z | se >>> 32 - z
            }, G.rotr = function Ce(se, z) {
                return se << 32 - z | se >>> z
            }, G.isInteger = Number.isInteger || function U(se) {
                return "number" == typeof se && isFinite(se) && Math.floor(se) === se
            }, G.MAX_SAFE_INTEGER = 9007199254740991, G.isSafeInteger = function(se) {
                return G.isInteger(se) && se >= -G.MAX_SAFE_INTEGER && se <= G.MAX_SAFE_INTEGER
            }
        },
        826: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            });
            var _e = I(7456),
                Ee = I(3403);
            G.DIGEST_LENGTH = 16;
            var ge = function() {
                function se(z) {
                    this.digestLength = G.DIGEST_LENGTH, this._buffer = new Uint8Array(16), this._r = new Uint16Array(10), this._h = new Uint16Array(10), this._pad = new Uint16Array(8), this._leftover = 0, this._fin = 0, this._finished = !1;
                    var ie = z[0] | z[1] << 8;
                    this._r[0] = 8191 & ie;
                    var ee = z[2] | z[3] << 8;
                    this._r[1] = 8191 & (ie >>> 13 | ee << 3);
                    var oe = z[4] | z[5] << 8;
                    this._r[2] = 7939 & (ee >>> 10 | oe << 6);
                    var ve = z[6] | z[7] << 8;
                    this._r[3] = 8191 & (oe >>> 7 | ve << 9);
                    var Te = z[8] | z[9] << 8;
                    this._r[4] = 255 & (ve >>> 4 | Te << 12), this._r[5] = Te >>> 1 & 8190;
                    var Me = z[10] | z[11] << 8;
                    this._r[6] = 8191 & (Te >>> 14 | Me << 2);
                    var Be = z[12] | z[13] << 8;
                    this._r[7] = 8065 & (Me >>> 11 | Be << 5);
                    var We = z[14] | z[15] << 8;
                    this._r[8] = 8191 & (Be >>> 8 | We << 8), this._r[9] = We >>> 5 & 127, this._pad[0] = z[16] | z[17] << 8, this._pad[1] = z[18] | z[19] << 8, this._pad[2] = z[20] | z[21] << 8, this._pad[3] = z[22] | z[23] << 8, this._pad[4] = z[24] | z[25] << 8, this._pad[5] = z[26] | z[27] << 8, this._pad[6] = z[28] | z[29] << 8, this._pad[7] = z[30] | z[31] << 8
                }
                return se.prototype._blocks = function(z, ie, ee) {
                    for (var oe = this._fin ? 0 : 2048, ve = this._h[0], Te = this._h[1], Me = this._h[2], Be = this._h[3], We = this._h[4], Ye = this._h[5], Je = this._h[6], te = this._h[7], Pe = this._h[8], Oe = this._h[9], J = this._r[0], Ie = this._r[1], Xe = this._r[2], R = this._r[3], ce = this._r[4], Ve = this._r[5], Ze = this._r[6], tt = this._r[7], at = this._r[8], Ge = this._r[9]; ee >= 16;) {
                        var ct = z[ie + 0] | z[ie + 1] << 8,
                            Re = z[ie + 2] | z[ie + 3] << 8,
                            we = z[ie + 4] | z[ie + 5] << 8,
                            je = z[ie + 6] | z[ie + 7] << 8,
                            _t = z[ie + 8] | z[ie + 9] << 8,
                            Mt = z[ie + 10] | z[ie + 11] << 8,
                            Lt = z[ie + 12] | z[ie + 13] << 8,
                            He = z[ie + 14] | z[ie + 15] << 8,
                            St = 0,
                            Ft = St;
                        Ft += (ve += 8191 & ct) * J, Ft += (Te += 8191 & (ct >>> 13 | Re << 3)) * (5 * Ge), Ft += (Me += 8191 & (Re >>> 10 | we << 6)) * (5 * at), Ft += (Be += 8191 & (we >>> 7 | je << 9)) * (5 * tt), St = (Ft += (We += 8191 & (je >>> 4 | _t << 12)) * (5 * Ze)) >>> 13, Ft &= 8191, Ft += (Ye += _t >>> 1 & 8191) * (5 * Ve), Ft += (Je += 8191 & (_t >>> 14 | Mt << 2)) * (5 * ce), Ft += (te += 8191 & (Mt >>> 11 | Lt << 5)) * (5 * R), Ft += (Pe += 8191 & (Lt >>> 8 | He << 8)) * (5 * Xe);
                        var Dt = St += (Ft += (Oe += He >>> 5 | oe) * (5 * Ie)) >>> 13;
                        Dt += ve * Ie, Dt += Te * J, Dt += Me * (5 * Ge), Dt += Be * (5 * at), St = (Dt += We * (5 * tt)) >>> 13, Dt &= 8191, Dt += Ye * (5 * Ze), Dt += Je * (5 * Ve), Dt += te * (5 * ce), Dt += Pe * (5 * R), St += (Dt += Oe * (5 * Xe)) >>> 13, Dt &= 8191;
                        var Ct = St;
                        Ct += ve * Xe, Ct += Te * Ie, Ct += Me * J, Ct += Be * (5 * Ge), St = (Ct += We * (5 * at)) >>> 13, Ct &= 8191, Ct += Ye * (5 * tt), Ct += Je * (5 * Ze), Ct += te * (5 * Ve), Ct += Pe * (5 * ce);
                        var Gt = St += (Ct += Oe * (5 * R)) >>> 13;
                        Gt += ve * R, Gt += Te * Xe, Gt += Me * Ie, Gt += Be * J, St = (Gt += We * (5 * Ge)) >>> 13, Gt &= 8191, Gt += Ye * (5 * at), Gt += Je * (5 * tt), Gt += te * (5 * Ze), Gt += Pe * (5 * Ve);
                        var kt = St += (Gt += Oe * (5 * ce)) >>> 13;
                        kt += ve * ce, kt += Te * R, kt += Me * Xe, kt += Be * Ie, St = (kt += We * J) >>> 13, kt &= 8191, kt += Ye * (5 * Ge), kt += Je * (5 * at), kt += te * (5 * tt), kt += Pe * (5 * Ze);
                        var pn = St += (kt += Oe * (5 * Ve)) >>> 13;
                        pn += ve * Ve, pn += Te * ce, pn += Me * R, pn += Be * Xe, St = (pn += We * Ie) >>> 13, pn &= 8191, pn += Ye * J, pn += Je * (5 * Ge), pn += te * (5 * at), pn += Pe * (5 * tt);
                        var _n = St += (pn += Oe * (5 * Ze)) >>> 13;
                        _n += ve * Ze, _n += Te * Ve, _n += Me * ce, _n += Be * R, St = (_n += We * Xe) >>> 13, _n &= 8191, _n += Ye * Ie, _n += Je * J, _n += te * (5 * Ge), _n += Pe * (5 * at);
                        var Hn = St += (_n += Oe * (5 * tt)) >>> 13;
                        Hn += ve * tt, Hn += Te * Ze, Hn += Me * Ve, Hn += Be * ce, St = (Hn += We * R) >>> 13, Hn &= 8191, Hn += Ye * Xe, Hn += Je * Ie, Hn += te * J, Hn += Pe * (5 * Ge);
                        var vn = St += (Hn += Oe * (5 * at)) >>> 13;
                        vn += ve * at, vn += Te * tt, vn += Me * Ze, vn += Be * Ve, St = (vn += We * ce) >>> 13, vn &= 8191, vn += Ye * R, vn += Je * Xe, vn += te * Ie, vn += Pe * J;
                        var Kn = St += (vn += Oe * (5 * Ge)) >>> 13;
                        Kn += ve * Ge, Kn += Te * at, Kn += Me * tt, Kn += Be * Ze, St = (Kn += We * Ve) >>> 13, Kn &= 8191, Kn += Ye * ce, Kn += Je * R, Kn += te * Xe, Kn += Pe * Ie, ve = Ft = 8191 & (St = (St = ((St += (Kn += Oe * J) >>> 13) << 2) + St | 0) + (Ft &= 8191) | 0), Te = Dt += St >>>= 13, Me = Ct &= 8191, Be = Gt &= 8191, We = kt &= 8191, Ye = pn &= 8191, Je = _n &= 8191, te = Hn &= 8191, Pe = vn &= 8191, Oe = Kn &= 8191, ie += 16, ee -= 16
                    }
                    this._h[0] = ve, this._h[1] = Te, this._h[2] = Me, this._h[3] = Be, this._h[4] = We, this._h[5] = Ye, this._h[6] = Je, this._h[7] = te, this._h[8] = Pe, this._h[9] = Oe
                }, se.prototype.finish = function(z, ie) {
                    void 0 === ie && (ie = 0);
                    var oe, ve, Te, Me, ee = new Uint16Array(10);
                    if (this._leftover) {
                        for (Me = this._leftover, this._buffer[Me++] = 1; Me < 16; Me++) this._buffer[Me] = 0;
                        this._fin = 1, this._blocks(this._buffer, 0, 16)
                    }
                    for (oe = this._h[1] >>> 13, this._h[1] &= 8191, Me = 2; Me < 10; Me++) this._h[Me] += oe, oe = this._h[Me] >>> 13, this._h[Me] &= 8191;
                    for (this._h[0] += 5 * oe, oe = this._h[0] >>> 13, this._h[0] &= 8191, this._h[1] += oe, oe = this._h[1] >>> 13, this._h[1] &= 8191, this._h[2] += oe, ee[0] = this._h[0] + 5, oe = ee[0] >>> 13, ee[0] &= 8191, Me = 1; Me < 10; Me++) ee[Me] = this._h[Me] + oe, oe = ee[Me] >>> 13, ee[Me] &= 8191;
                    for (ee[9] -= 8192, ve = (1 ^ oe) - 1, Me = 0; Me < 10; Me++) ee[Me] &= ve;
                    for (ve = ~ve, Me = 0; Me < 10; Me++) this._h[Me] = this._h[Me] & ve | ee[Me];
                    for (this._h[0] = 65535 & (this._h[0] | this._h[1] << 13), this._h[1] = 65535 & (this._h[1] >>> 3 | this._h[2] << 10), this._h[2] = 65535 & (this._h[2] >>> 6 | this._h[3] << 7), this._h[3] = 65535 & (this._h[3] >>> 9 | this._h[4] << 4), this._h[4] = 65535 & (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14), this._h[5] = 65535 & (this._h[6] >>> 2 | this._h[7] << 11), this._h[6] = 65535 & (this._h[7] >>> 5 | this._h[8] << 8), this._h[7] = 65535 & (this._h[8] >>> 8 | this._h[9] << 5), this._h[0] = 65535 & (Te = this._h[0] + this._pad[0]), Me = 1; Me < 8; Me++) this._h[Me] = 65535 & (Te = (this._h[Me] + this._pad[Me] | 0) + (Te >>> 16) | 0);
                    return z[ie + 0] = this._h[0] >>> 0, z[ie + 1] = this._h[0] >>> 8, z[ie + 2] = this._h[1] >>> 0, z[ie + 3] = this._h[1] >>> 8, z[ie + 4] = this._h[2] >>> 0, z[ie + 5] = this._h[2] >>> 8, z[ie + 6] = this._h[3] >>> 0, z[ie + 7] = this._h[3] >>> 8, z[ie + 8] = this._h[4] >>> 0, z[ie + 9] = this._h[4] >>> 8, z[ie + 10] = this._h[5] >>> 0, z[ie + 11] = this._h[5] >>> 8, z[ie + 12] = this._h[6] >>> 0, z[ie + 13] = this._h[6] >>> 8, z[ie + 14] = this._h[7] >>> 0, z[ie + 15] = this._h[7] >>> 8, this._finished = !0, this
                }, se.prototype.update = function(z) {
                    var oe, ie = 0,
                        ee = z.length;
                    if (this._leftover) {
                        (oe = 16 - this._leftover) > ee && (oe = ee);
                        for (var ve = 0; ve < oe; ve++) this._buffer[this._leftover + ve] = z[ie + ve];
                        if (ee -= oe, ie += oe, this._leftover += oe, this._leftover < 16) return this;
                        this._blocks(this._buffer, 0, 16), this._leftover = 0
                    }
                    if (ee >= 16 && (this._blocks(z, ie, oe = ee - ee % 16), ie += oe, ee -= oe), ee) {
                        for (ve = 0; ve < ee; ve++) this._buffer[this._leftover + ve] = z[ie + ve];
                        this._leftover += ee
                    }
                    return this
                }, se.prototype.digest = function() {
                    if (this._finished) throw new Error("Poly1305 was finished");
                    var z = new Uint8Array(16);
                    return this.finish(z), z
                }, se.prototype.clean = function() {
                    return Ee.wipe(this._buffer), Ee.wipe(this._r), Ee.wipe(this._h), Ee.wipe(this._pad), this._leftover = 0, this._fin = 0, this._finished = !0, this
                }, se
            }();
            G.Poly1305 = ge, G.oneTimeAuth = function Ce(se, z) {
                var ie = new ge(se);
                ie.update(z);
                var ee = ie.digest();
                return ie.clean(), ee
            }, G.equal = function U(se, z) {
                return se.length === G.DIGEST_LENGTH && z.length === G.DIGEST_LENGTH && _e.equal(se, z)
            }
        },
        5465: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.randomStringForEntropy = G.randomString = G.randomUint32 = G.randomBytes = G.defaultRandomSource = void 0;
            const _e = I(1297),
                Ee = I(9546),
                ge = I(3403);

            function Ce(ee, oe = G.defaultRandomSource) {
                return oe.randomBytes(ee)
            }
            G.defaultRandomSource = new _e.SystemRandomSource, G.randomBytes = Ce, G.randomUint32 = function U(ee = G.defaultRandomSource) {
                const oe = Ce(4, ee),
                    ve = (0, Ee.readUint32LE)(oe);
                return (0, ge.wipe)(oe), ve
            };
            const se = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

            function z(ee, oe = se, ve = G.defaultRandomSource) {
                if (oe.length < 2) throw new Error("randomString charset is too short");
                if (oe.length > 256) throw new Error("randomString charset is too long");
                let Te = "";
                const Me = oe.length,
                    Be = 256 - 256 % Me;
                for (; ee > 0;) {
                    const We = Ce(Math.ceil(256 * ee / Be), ve);
                    for (let Ye = 0; Ye < We.length && ee > 0; Ye++) {
                        const Je = We[Ye];
                        Je < Be && (Te += oe.charAt(Je % Me), ee--)
                    }(0, ge.wipe)(We)
                }
                return Te
            }
            G.randomString = z, G.randomStringForEntropy = function ie(ee, oe = se, ve = G.defaultRandomSource) {
                return z(Math.ceil(ee / (Math.log(oe.length) / Math.LN2)), oe, ve)
            }
        },
        3158: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.BrowserRandomSource = void 0, G.BrowserRandomSource = class _e {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1;
                    const ge = typeof self < "u" ? self.crypto || self.msCrypto : null;
                    ge && void 0 !== ge.getRandomValues && (this._crypto = ge, this.isAvailable = !0, this.isInstantiated = !0)
                }
                randomBytes(ge) {
                    if (!this.isAvailable || !this._crypto) throw new Error("Browser random byte generator is not available.");
                    const Ce = new Uint8Array(ge);
                    for (let U = 0; U < Ce.length; U += 65536) this._crypto.getRandomValues(Ce.subarray(U, U + Math.min(Ce.length - U, 65536)));
                    return Ce
                }
            }
        },
        5481: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.NodeRandomSource = void 0;
            const _e = I(3403);
            G.NodeRandomSource = class Ee {
                constructor() {
                    this.isAvailable = !1, this.isInstantiated = !1; {
                        const Ce = I(5883);
                        Ce && Ce.randomBytes && (this._crypto = Ce, this.isAvailable = !0, this.isInstantiated = !0)
                    }
                }
                randomBytes(Ce) {
                    if (!this.isAvailable || !this._crypto) throw new Error("Node.js random byte generator is not available.");
                    let U = this._crypto.randomBytes(Ce);
                    if (U.length !== Ce) throw new Error("NodeRandomSource: got fewer bytes than requested");
                    const se = new Uint8Array(Ce);
                    for (let z = 0; z < se.length; z++) se[z] = U[z];
                    return (0, _e.wipe)(U), se
                }
            }
        },
        1297: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.SystemRandomSource = void 0;
            const _e = I(3158),
                Ee = I(5481);
            G.SystemRandomSource = class ge {
                constructor() {
                    return this.isAvailable = !1, this.name = "", this._source = new _e.BrowserRandomSource, this._source.isAvailable ? (this.isAvailable = !0, void(this.name = "Browser")) : (this._source = new Ee.NodeRandomSource, this._source.isAvailable ? (this.isAvailable = !0, void(this.name = "Node")) : void 0)
                }
                randomBytes(U) {
                    if (!this.isAvailable) throw new Error("System random byte generator is not available.");
                    return this._source.randomBytes(U)
                }
            }
        },
        1033: (ft, G, I) => {
            "use strict";
            var Ee = I(9546),
                ge = I(3403);
            G.k = 32, G.cn = 64;
            var Ce = function() {
                function ie() {
                    this.digestLength = G.k, this.blockSize = G.cn, this._state = new Int32Array(8), this._temp = new Int32Array(64), this._buffer = new Uint8Array(128), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this.reset()
                }
                return ie.prototype._initState = function() {
                    this._state[0] = 1779033703, this._state[1] = 3144134277, this._state[2] = 1013904242, this._state[3] = 2773480762, this._state[4] = 1359893119, this._state[5] = 2600822924, this._state[6] = 528734635, this._state[7] = 1541459225
                }, ie.prototype.reset = function() {
                    return this._initState(), this._bufferLength = 0, this._bytesHashed = 0, this._finished = !1, this
                }, ie.prototype.clean = function() {
                    ge.wipe(this._buffer), ge.wipe(this._temp), this.reset()
                }, ie.prototype.update = function(ee, oe) {
                    if (void 0 === oe && (oe = ee.length), this._finished) throw new Error("SHA256: can't update because hash was finished.");
                    var ve = 0;
                    if (this._bytesHashed += oe, this._bufferLength > 0) {
                        for (; this._bufferLength < this.blockSize && oe > 0;) this._buffer[this._bufferLength++] = ee[ve++], oe--;
                        this._bufferLength === this.blockSize && (se(this._temp, this._state, this._buffer, 0, this.blockSize), this._bufferLength = 0)
                    }
                    for (oe >= this.blockSize && (ve = se(this._temp, this._state, ee, ve, oe), oe %= this.blockSize); oe > 0;) this._buffer[this._bufferLength++] = ee[ve++], oe--;
                    return this
                }, ie.prototype.finish = function(ee) {
                    if (!this._finished) {
                        var oe = this._bytesHashed,
                            ve = this._bufferLength,
                            Te = oe / 536870912 | 0,
                            Me = oe << 3,
                            Be = oe % 64 < 56 ? 64 : 128;
                        this._buffer[ve] = 128;
                        for (var We = ve + 1; We < Be - 8; We++) this._buffer[We] = 0;
                        Ee.writeUint32BE(Te, this._buffer, Be - 8), Ee.writeUint32BE(Me, this._buffer, Be - 4), se(this._temp, this._state, this._buffer, 0, Be), this._finished = !0
                    }
                    for (We = 0; We < this.digestLength / 4; We++) Ee.writeUint32BE(this._state[We], ee, 4 * We);
                    return this
                }, ie.prototype.digest = function() {
                    var ee = new Uint8Array(this.digestLength);
                    return this.finish(ee), ee
                }, ie.prototype.saveState = function() {
                    if (this._finished) throw new Error("SHA256: cannot save finished state");
                    return {
                        state: new Int32Array(this._state),
                        buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
                        bufferLength: this._bufferLength,
                        bytesHashed: this._bytesHashed
                    }
                }, ie.prototype.restoreState = function(ee) {
                    return this._state.set(ee.state), this._bufferLength = ee.bufferLength, ee.buffer && this._buffer.set(ee.buffer), this._bytesHashed = ee.bytesHashed, this._finished = !1, this
                }, ie.prototype.cleanSavedState = function(ee) {
                    ge.wipe(ee.state), ee.buffer && ge.wipe(ee.buffer), ee.bufferLength = 0, ee.bytesHashed = 0
                }, ie
            }();
            G.mE = Ce;
            var U = new Int32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);

            function se(ie, ee, oe, ve, Te) {
                for (; Te >= 64;) {
                    for (var Me = ee[0], Be = ee[1], We = ee[2], Ye = ee[3], Je = ee[4], te = ee[5], Pe = ee[6], Oe = ee[7], J = 0; J < 16; J++) ie[J] = Ee.readUint32BE(oe, ve + 4 * J);
                    for (J = 16; J < 64; J++) {
                        var Xe = ie[J - 2];
                        ie[J] = ((R = (Xe >>> 17 | Xe << 15) ^ (Xe >>> 19 | Xe << 13) ^ Xe >>> 10) + ie[J - 7] | 0) + ((ce = ((Xe = ie[J - 15]) >>> 7 | Xe << 25) ^ (Xe >>> 18 | Xe << 14) ^ Xe >>> 3) + ie[J - 16] | 0)
                    }
                    for (J = 0; J < 64; J++) {
                        var R = (((Je >>> 6 | Je << 26) ^ (Je >>> 11 | Je << 21) ^ (Je >>> 25 | Je << 7)) + (Je & te ^ ~Je & Pe) | 0) + (Oe + (U[J] + ie[J] | 0) | 0) | 0,
                            ce = ((Me >>> 2 | Me << 30) ^ (Me >>> 13 | Me << 19) ^ (Me >>> 22 | Me << 10)) + (Me & Be ^ Me & We ^ Be & We) | 0;
                        Oe = Pe, Pe = te, te = Je, Je = Ye + R | 0, Ye = We, We = Be, Be = Me, Me = R + ce | 0
                    }
                    ee[0] += Me, ee[1] += Be, ee[2] += We, ee[3] += Ye, ee[4] += Je, ee[5] += te, ee[6] += Pe, ee[7] += Oe, ve += 64, Te -= 64
                }
                return ve
            }
            G.vp = function z(ie) {
                var ee = new Ce;
                ee.update(ie);
                var oe = ee.digest();
                return ee.clean(), oe
            }
        },
        3403: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.wipe = function I(_e) {
                for (var Ee = 0; Ee < _e.length; Ee++) _e[Ee] = 0;
                return _e
            }
        },
        8467: (ft, G, I) => {
            "use strict";
            G.gi = G.Au = G.KS = G.kz = void 0;
            const Ee = I(5465),
                ge = I(3403);

            function Ce(J) {
                const Ie = new Float64Array(16);
                if (J)
                    for (let Xe = 0; Xe < J.length; Xe++) Ie[Xe] = J[Xe];
                return Ie
            }
            G.kz = 32, G.KS = 32;
            const U = new Uint8Array(32);
            U[0] = 9;
            const se = Ce([56129, 1]);

            function z(J) {
                let Ie = 1;
                for (let Xe = 0; Xe < 16; Xe++) {
                    let R = J[Xe] + Ie + 65535;
                    Ie = Math.floor(R / 65536), J[Xe] = R - 65536 * Ie
                }
                J[0] += Ie - 1 + 37 * (Ie - 1)
            }

            function ie(J, Ie, Xe) {
                const R = ~(Xe - 1);
                for (let ce = 0; ce < 16; ce++) {
                    const Ve = R & (J[ce] ^ Ie[ce]);
                    J[ce] ^= Ve, Ie[ce] ^= Ve
                }
            }

            function ve(J, Ie, Xe) {
                for (let R = 0; R < 16; R++) J[R] = Ie[R] + Xe[R]
            }

            function Te(J, Ie, Xe) {
                for (let R = 0; R < 16; R++) J[R] = Ie[R] - Xe[R]
            }

            function Me(J, Ie, Xe) {
                let R, ce, Ve = 0,
                    Ze = 0,
                    tt = 0,
                    at = 0,
                    Ge = 0,
                    ct = 0,
                    Re = 0,
                    we = 0,
                    je = 0,
                    _t = 0,
                    Mt = 0,
                    Lt = 0,
                    He = 0,
                    St = 0,
                    Ft = 0,
                    Dt = 0,
                    Ct = 0,
                    Gt = 0,
                    kt = 0,
                    pn = 0,
                    _n = 0,
                    Hn = 0,
                    vn = 0,
                    Kn = 0,
                    ts = 0,
                    Vs = 0,
                    Hi = 0,
                    Hs = 0,
                    ui = 0,
                    Yn = 0,
                    ir = 0,
                    Ui = Xe[0],
                    Ei = Xe[1],
                    Ii = Xe[2],
                    Mi = Xe[3],
                    fi = Xe[4],
                    yi = Xe[5],
                    oi = Xe[6],
                    bi = Xe[7],
                    qn = Xe[8],
                    Wi = Xe[9],
                    xi = Xe[10],
                    pi = Xe[11],
                    Li = Xe[12],
                    Fi = Xe[13],
                    Si = Xe[14],
                    Gi = Xe[15];
                R = Ie[0], Ve += R * Ui, Ze += R * Ei, tt += R * Ii, at += R * Mi, Ge += R * fi, ct += R * yi, Re += R * oi, we += R * bi, je += R * qn, _t += R * Wi, Mt += R * xi, Lt += R * pi, He += R * Li, St += R * Fi, Ft += R * Si, Dt += R * Gi, R = Ie[1], Ze += R * Ui, tt += R * Ei, at += R * Ii, Ge += R * Mi, ct += R * fi, Re += R * yi, we += R * oi, je += R * bi, _t += R * qn, Mt += R * Wi, Lt += R * xi, He += R * pi, St += R * Li, Ft += R * Fi, Dt += R * Si, Ct += R * Gi, R = Ie[2], tt += R * Ui, at += R * Ei, Ge += R * Ii, ct += R * Mi, Re += R * fi, we += R * yi, je += R * oi, _t += R * bi, Mt += R * qn, Lt += R * Wi, He += R * xi, St += R * pi, Ft += R * Li, Dt += R * Fi, Ct += R * Si, Gt += R * Gi, R = Ie[3], at += R * Ui, Ge += R * Ei, ct += R * Ii, Re += R * Mi, we += R * fi, je += R * yi, _t += R * oi, Mt += R * bi, Lt += R * qn, He += R * Wi, St += R * xi, Ft += R * pi, Dt += R * Li, Ct += R * Fi, Gt += R * Si, kt += R * Gi, R = Ie[4], Ge += R * Ui, ct += R * Ei, Re += R * Ii, we += R * Mi, je += R * fi, _t += R * yi, Mt += R * oi, Lt += R * bi, He += R * qn, St += R * Wi, Ft += R * xi, Dt += R * pi, Ct += R * Li, Gt += R * Fi, kt += R * Si, pn += R * Gi, R = Ie[5], ct += R * Ui, Re += R * Ei, we += R * Ii, je += R * Mi, _t += R * fi, Mt += R * yi, Lt += R * oi, He += R * bi, St += R * qn, Ft += R * Wi, Dt += R * xi, Ct += R * pi, Gt += R * Li, kt += R * Fi, pn += R * Si, _n += R * Gi, R = Ie[6], Re += R * Ui, we += R * Ei, je += R * Ii, _t += R * Mi, Mt += R * fi, Lt += R * yi, He += R * oi, St += R * bi, Ft += R * qn, Dt += R * Wi, Ct += R * xi, Gt += R * pi, kt += R * Li, pn += R * Fi, _n += R * Si, Hn += R * Gi, R = Ie[7], we += R * Ui, je += R * Ei, _t += R * Ii, Mt += R * Mi, Lt += R * fi, He += R * yi, St += R * oi, Ft += R * bi, Dt += R * qn, Ct += R * Wi, Gt += R * xi, kt += R * pi, pn += R * Li, _n += R * Fi, Hn += R * Si, vn += R * Gi, R = Ie[8], je += R * Ui, _t += R * Ei, Mt += R * Ii, Lt += R * Mi, He += R * fi, St += R * yi, Ft += R * oi, Dt += R * bi, Ct += R * qn, Gt += R * Wi, kt += R * xi, pn += R * pi, _n += R * Li, Hn += R * Fi, vn += R * Si, Kn += R * Gi, R = Ie[9], _t += R * Ui, Mt += R * Ei, Lt += R * Ii, He += R * Mi, St += R * fi, Ft += R * yi, Dt += R * oi, Ct += R * bi, Gt += R * qn, kt += R * Wi, pn += R * xi, _n += R * pi, Hn += R * Li, vn += R * Fi, Kn += R * Si, ts += R * Gi, R = Ie[10], Mt += R * Ui, Lt += R * Ei, He += R * Ii, St += R * Mi, Ft += R * fi, Dt += R * yi, Ct += R * oi, Gt += R * bi, kt += R * qn, pn += R * Wi, _n += R * xi, Hn += R * pi, vn += R * Li, Kn += R * Fi, ts += R * Si, Vs += R * Gi, R = Ie[11], Lt += R * Ui, He += R * Ei, St += R * Ii, Ft += R * Mi, Dt += R * fi, Ct += R * yi, Gt += R * oi, kt += R * bi, pn += R * qn, _n += R * Wi, Hn += R * xi, vn += R * pi, Kn += R * Li, ts += R * Fi, Vs += R * Si, Hi += R * Gi, R = Ie[12], He += R * Ui, St += R * Ei, Ft += R * Ii, Dt += R * Mi, Ct += R * fi, Gt += R * yi, kt += R * oi, pn += R * bi, _n += R * qn, Hn += R * Wi, vn += R * xi, Kn += R * pi, ts += R * Li, Vs += R * Fi, Hi += R * Si, Hs += R * Gi, R = Ie[13], St += R * Ui, Ft += R * Ei, Dt += R * Ii, Ct += R * Mi, Gt += R * fi, kt += R * yi, pn += R * oi, _n += R * bi, Hn += R * qn, vn += R * Wi, Kn += R * xi, ts += R * pi, Vs += R * Li, Hi += R * Fi, Hs += R * Si, ui += R * Gi, R = Ie[14], Ft += R * Ui, Dt += R * Ei, Ct += R * Ii, Gt += R * Mi, kt += R * fi, pn += R * yi, _n += R * oi, Hn += R * bi, vn += R * qn, Kn += R * Wi, ts += R * xi, Vs += R * pi, Hi += R * Li, Hs += R * Fi, ui += R * Si, Yn += R * Gi, R = Ie[15], Dt += R * Ui, Ct += R * Ei, Gt += R * Ii, kt += R * Mi, pn += R * fi, _n += R * yi, Hn += R * oi, vn += R * bi, Kn += R * qn, ts += R * Wi, Vs += R * xi, Hi += R * pi, Hs += R * Li, ui += R * Fi, Yn += R * Si, ir += R * Gi, Ve += 38 * Ct, Ze += 38 * Gt, tt += 38 * kt, at += 38 * pn, Ge += 38 * _n, ct += 38 * Hn, Re += 38 * vn, we += 38 * Kn, je += 38 * ts, _t += 38 * Vs, Mt += 38 * Hi, Lt += 38 * Hs, He += 38 * ui, St += 38 * Yn, Ft += 38 * ir, ce = 1, R = Ve + ce + 65535, ce = Math.floor(R / 65536), Ve = R - 65536 * ce, R = Ze + ce + 65535, ce = Math.floor(R / 65536), Ze = R - 65536 * ce, R = tt + ce + 65535, ce = Math.floor(R / 65536), tt = R - 65536 * ce, R = at + ce + 65535, ce = Math.floor(R / 65536), at = R - 65536 * ce, R = Ge + ce + 65535, ce = Math.floor(R / 65536), Ge = R - 65536 * ce, R = ct + ce + 65535, ce = Math.floor(R / 65536), ct = R - 65536 * ce, R = Re + ce + 65535, ce = Math.floor(R / 65536), Re = R - 65536 * ce, R = we + ce + 65535, ce = Math.floor(R / 65536), we = R - 65536 * ce, R = je + ce + 65535, ce = Math.floor(R / 65536), je = R - 65536 * ce, R = _t + ce + 65535, ce = Math.floor(R / 65536), _t = R - 65536 * ce, R = Mt + ce + 65535, ce = Math.floor(R / 65536), Mt = R - 65536 * ce, R = Lt + ce + 65535, ce = Math.floor(R / 65536), Lt = R - 65536 * ce, R = He + ce + 65535, ce = Math.floor(R / 65536), He = R - 65536 * ce, R = St + ce + 65535, ce = Math.floor(R / 65536), St = R - 65536 * ce, R = Ft + ce + 65535, ce = Math.floor(R / 65536), Ft = R - 65536 * ce, R = Dt + ce + 65535, ce = Math.floor(R / 65536), Dt = R - 65536 * ce, Ve += ce - 1 + 37 * (ce - 1), ce = 1, R = Ve + ce + 65535, ce = Math.floor(R / 65536), Ve = R - 65536 * ce, R = Ze + ce + 65535, ce = Math.floor(R / 65536), Ze = R - 65536 * ce, R = tt + ce + 65535, ce = Math.floor(R / 65536), tt = R - 65536 * ce, R = at + ce + 65535, ce = Math.floor(R / 65536), at = R - 65536 * ce, R = Ge + ce + 65535, ce = Math.floor(R / 65536), Ge = R - 65536 * ce, R = ct + ce + 65535, ce = Math.floor(R / 65536), ct = R - 65536 * ce, R = Re + ce + 65535, ce = Math.floor(R / 65536), Re = R - 65536 * ce, R = we + ce + 65535, ce = Math.floor(R / 65536), we = R - 65536 * ce, R = je + ce + 65535, ce = Math.floor(R / 65536), je = R - 65536 * ce, R = _t + ce + 65535, ce = Math.floor(R / 65536), _t = R - 65536 * ce, R = Mt + ce + 65535, ce = Math.floor(R / 65536), Mt = R - 65536 * ce, R = Lt + ce + 65535, ce = Math.floor(R / 65536), Lt = R - 65536 * ce, R = He + ce + 65535, ce = Math.floor(R / 65536), He = R - 65536 * ce, R = St + ce + 65535, ce = Math.floor(R / 65536), St = R - 65536 * ce, R = Ft + ce + 65535, ce = Math.floor(R / 65536), Ft = R - 65536 * ce, R = Dt + ce + 65535, ce = Math.floor(R / 65536), Dt = R - 65536 * ce, Ve += ce - 1 + 37 * (ce - 1), J[0] = Ve, J[1] = Ze, J[2] = tt, J[3] = at, J[4] = Ge, J[5] = ct, J[6] = Re, J[7] = we, J[8] = je, J[9] = _t, J[10] = Mt, J[11] = Lt, J[12] = He, J[13] = St, J[14] = Ft, J[15] = Dt
            }

            function Be(J, Ie) {
                Me(J, Ie, Ie)
            }

            function Ye(J, Ie) {
                const Xe = new Uint8Array(32),
                    R = new Float64Array(80),
                    ce = Ce(),
                    Ve = Ce(),
                    Ze = Ce(),
                    tt = Ce(),
                    at = Ce(),
                    Ge = Ce();
                for (let je = 0; je < 31; je++) Xe[je] = J[je];
                Xe[31] = 127 & J[31] | 64, Xe[0] &= 248,
                    function oe(J, Ie) {
                        for (let Xe = 0; Xe < 16; Xe++) J[Xe] = Ie[2 * Xe] + (Ie[2 * Xe + 1] << 8);
                        J[15] &= 32767
                    }(R, Ie);
                for (let je = 0; je < 16; je++) Ve[je] = R[je];
                ce[0] = tt[0] = 1;
                for (let je = 254; je >= 0; --je) {
                    const _t = Xe[je >>> 3] >>> (7 & je) & 1;
                    ie(ce, Ve, _t), ie(Ze, tt, _t), ve(at, ce, Ze), Te(ce, ce, Ze), ve(Ze, Ve, tt), Te(Ve, Ve, tt), Be(tt, at), Be(Ge, ce), Me(ce, Ze, ce), Me(Ze, Ve, at), ve(at, ce, Ze), Te(ce, ce, Ze), Be(Ve, ce), Te(Ze, tt, Ge), Me(ce, Ze, se), ve(ce, ce, tt), Me(Ze, Ze, ce), Me(ce, tt, Ge), Me(tt, Ve, R), Be(Ve, at), ie(ce, Ve, _t), ie(Ze, tt, _t)
                }
                for (let je = 0; je < 16; je++) R[je + 16] = ce[je], R[je + 32] = Ze[je], R[je + 48] = Ve[je], R[je + 64] = tt[je];
                const ct = R.subarray(32),
                    Re = R.subarray(16);
                (function We(J, Ie) {
                    const Xe = Ce();
                    for (let R = 0; R < 16; R++) Xe[R] = Ie[R];
                    for (let R = 253; R >= 0; R--) Be(Xe, Xe), 2 !== R && 4 !== R && Me(Xe, Xe, Ie);
                    for (let R = 0; R < 16; R++) J[R] = Xe[R]
                })(ct, ct), Me(Re, Re, ct);
                const we = new Uint8Array(32);
                return function ee(J, Ie) {
                    const Xe = Ce(),
                        R = Ce();
                    for (let ce = 0; ce < 16; ce++) R[ce] = Ie[ce];
                    z(R), z(R), z(R);
                    for (let ce = 0; ce < 2; ce++) {
                        Xe[0] = R[0] - 65517;
                        for (let Ze = 1; Ze < 15; Ze++) Xe[Ze] = R[Ze] - 65535 - (Xe[Ze - 1] >> 16 & 1), Xe[Ze - 1] &= 65535;
                        Xe[15] = R[15] - 32767 - (Xe[14] >> 16 & 1);
                        const Ve = Xe[15] >> 16 & 1;
                        Xe[14] &= 65535, ie(R, Xe, 1 - Ve)
                    }
                    for (let ce = 0; ce < 16; ce++) J[2 * ce] = 255 & R[ce], J[2 * ce + 1] = R[ce] >> 8
                }(we, Re), we
            }

            function Je(J) {
                return Ye(J, U)
            }
            G.Au = function Pe(J) {
                const Ie = (0, Ee.randomBytes)(32, J),
                    Xe = function te(J) {
                        if (J.length !== G.KS) throw new Error(`x25519: seed must be ${G.KS} bytes`);
                        const Ie = new Uint8Array(J);
                        return {
                            publicKey: Je(Ie),
                            secretKey: Ie
                        }
                    }(Ie);
                return (0, ge.wipe)(Ie), Xe
            }, G.gi = function Oe(J, Ie, Xe = !1) {
                if (J.length !== G.kz) throw new Error("X25519: incorrect secret key length");
                if (Ie.length !== G.kz) throw new Error("X25519: incorrect public key length");
                const R = Ye(J, Ie);
                if (Xe) {
                    let ce = 0;
                    for (let Ve = 0; Ve < R.length; Ve++) ce |= R[Ve];
                    if (0 === ce) throw new Error("X25519: invalid shared key")
                }
                return R
            }
        },
        1634: (ft, G, I) => {
            "use strict";
            I.d(G, {
                RELAY_JSONRPC: () => Ee
            }), I(36);
            const Ee = {
                waku: {
                    publish: "waku_publish",
                    batchPublish: "waku_batchPublish",
                    subscribe: "waku_subscribe",
                    batchSubscribe: "waku_batchSubscribe",
                    subscription: "waku_subscription",
                    unsubscribe: "waku_unsubscribe",
                    batchUnsubscribe: "waku_batchUnsubscribe"
                },
                irn: {
                    publish: "irn_publish",
                    batchPublish: "irn_batchPublish",
                    subscribe: "irn_subscribe",
                    batchSubscribe: "irn_batchSubscribe",
                    subscription: "irn_subscription",
                    unsubscribe: "irn_unsubscribe",
                    batchUnsubscribe: "irn_batchUnsubscribe"
                },
                iridium: {
                    publish: "iridium_publish",
                    batchPublish: "iridium_batchPublish",
                    subscribe: "iridium_subscribe",
                    batchSubscribe: "iridium_batchSubscribe",
                    subscription: "iridium_subscription",
                    unsubscribe: "iridium_unsubscribe",
                    batchUnsubscribe: "iridium_batchUnsubscribe"
                }
            }
        },
        36: () => {},
        6380: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            });
            const _e = I(4);
            _e.__exportStar(I(2996), G), _e.__exportStar(I(6836), G)
        },
        2996: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.ONE_THOUSAND = G.ONE_HUNDRED = void 0, G.ONE_HUNDRED = 100, G.ONE_THOUSAND = 1e3
        },
        6836: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.ONE_YEAR = G.FOUR_WEEKS = G.THREE_WEEKS = G.TWO_WEEKS = G.ONE_WEEK = G.THIRTY_DAYS = G.SEVEN_DAYS = G.FIVE_DAYS = G.THREE_DAYS = G.ONE_DAY = G.TWENTY_FOUR_HOURS = G.TWELVE_HOURS = G.SIX_HOURS = G.THREE_HOURS = G.ONE_HOUR = G.SIXTY_MINUTES = G.THIRTY_MINUTES = G.TEN_MINUTES = G.FIVE_MINUTES = G.ONE_MINUTE = G.SIXTY_SECONDS = G.THIRTY_SECONDS = G.TEN_SECONDS = G.FIVE_SECONDS = G.ONE_SECOND = void 0, G.ONE_SECOND = 1, G.FIVE_SECONDS = 5, G.TEN_SECONDS = 10, G.THIRTY_SECONDS = 30, G.SIXTY_SECONDS = 60, G.ONE_MINUTE = G.SIXTY_SECONDS, G.FIVE_MINUTES = 5 * G.ONE_MINUTE, G.TEN_MINUTES = 10 * G.ONE_MINUTE, G.THIRTY_MINUTES = 30 * G.ONE_MINUTE, G.SIXTY_MINUTES = 60 * G.ONE_MINUTE, G.ONE_HOUR = G.SIXTY_MINUTES, G.THREE_HOURS = 3 * G.ONE_HOUR, G.SIX_HOURS = 6 * G.ONE_HOUR, G.TWELVE_HOURS = 12 * G.ONE_HOUR, G.TWENTY_FOUR_HOURS = 24 * G.ONE_HOUR, G.ONE_DAY = G.TWENTY_FOUR_HOURS, G.THREE_DAYS = 3 * G.ONE_DAY, G.FIVE_DAYS = 5 * G.ONE_DAY, G.SEVEN_DAYS = 7 * G.ONE_DAY, G.THIRTY_DAYS = 30 * G.ONE_DAY, G.ONE_WEEK = G.SEVEN_DAYS, G.TWO_WEEKS = 2 * G.ONE_WEEK, G.THREE_WEEKS = 3 * G.ONE_WEEK, G.FOUR_WEEKS = 4 * G.ONE_WEEK, G.ONE_YEAR = 365 * G.ONE_DAY
        },
        5409: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            });
            const _e = I(4);
            _e.__exportStar(I(3429), G), _e.__exportStar(I(5882), G), _e.__exportStar(I(8066), G), _e.__exportStar(I(6380), G)
        },
        8066: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), I(4).__exportStar(I(8148), G)
        },
        8148: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.IWatch = void 0, G.IWatch = class I {}
        },
        9976: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.fromMiliseconds = G.toMiliseconds = void 0;
            const _e = I(6380);
            G.toMiliseconds = function Ee(Ce) {
                return Ce * _e.ONE_THOUSAND
            }, G.fromMiliseconds = function ge(Ce) {
                return Math.floor(Ce / _e.ONE_THOUSAND)
            }
        },
        2373: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.delay = void 0, G.delay = function I(_e) {
                return new Promise(Ee => {
                    setTimeout(() => {
                        Ee(!0)
                    }, _e)
                })
            }
        },
        3429: (ft, G, I) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            });
            const _e = I(4);
            _e.__exportStar(I(2373), G), _e.__exportStar(I(9976), G)
        },
        5882: (ft, G) => {
            "use strict";
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.Watch = void 0;
            class I {
                constructor() {
                    this.timestamps = new Map
                }
                start(Ee) {
                    if (this.timestamps.has(Ee)) throw new Error(`Watch already started for label: ${Ee}`);
                    this.timestamps.set(Ee, {
                        started: Date.now()
                    })
                }
                stop(Ee) {
                    const ge = this.get(Ee);
                    if (typeof ge.elapsed < "u") throw new Error(`Watch already stopped for label: ${Ee}`);
                    const Ce = Date.now() - ge.started;
                    this.timestamps.set(Ee, {
                        started: ge.started,
                        elapsed: Ce
                    })
                }
                get(Ee) {
                    const ge = this.timestamps.get(Ee);
                    if (typeof ge > "u") throw new Error(`No timestamp found for label: ${Ee}`);
                    return ge
                }
                elapsed(Ee) {
                    const ge = this.get(Ee);
                    return ge.elapsed || Date.now() - ge.started
                }
            }
            G.Watch = I, G.default = I
        },
        8808: (ft, G, I) => {
            "use strict";
            const _e = I(8385),
                Ee = I(4989),
                ge = I(6144),
                Ce = I(220),
                se = Symbol("encodeFragmentIdentifier");

            function ee(te) {
                if ("string" != typeof te || 1 !== te.length) throw new TypeError("arrayFormatSeparator must be single character string")
            }

            function oe(te, Pe) {
                return Pe.encode ? Pe.strict ? _e(te) : encodeURIComponent(te) : te
            }

            function ve(te, Pe) {
                return Pe.decode ? Ee(te) : te
            }

            function Te(te) {
                return Array.isArray(te) ? te.sort() : "object" == typeof te ? Te(Object.keys(te)).sort((Pe, Oe) => Number(Pe) - Number(Oe)).map(Pe => te[Pe]) : te
            }

            function Me(te) {
                const Pe = te.indexOf("#");
                return -1 !== Pe && (te = te.slice(0, Pe)), te
            }

            function We(te) {
                const Pe = (te = Me(te)).indexOf("?");
                return -1 === Pe ? "" : te.slice(Pe + 1)
            }

            function Ye(te, Pe) {
                return Pe.parseNumbers && !Number.isNaN(Number(te)) && "string" == typeof te && "" !== te.trim() ? te = Number(te) : Pe.parseBooleans && null !== te && ("true" === te.toLowerCase() || "false" === te.toLowerCase()) && (te = "true" === te.toLowerCase()), te
            }

            function Je(te, Pe) {
                ee((Pe = Object.assign({
                    decode: !0,
                    sort: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ",",
                    parseNumbers: !1,
                    parseBooleans: !1
                }, Pe)).arrayFormatSeparator);
                const Oe = function ie(te) {
                        let Pe;
                        switch (te.arrayFormat) {
                            case "index":
                                return (Oe, J, Ie) => {
                                    Pe = /\[(\d*)\]$/.exec(Oe), Oe = Oe.replace(/\[\d*\]$/, ""), Pe ? (void 0 === Ie[Oe] && (Ie[Oe] = {}), Ie[Oe][Pe[1]] = J) : Ie[Oe] = J
                                };
                            case "bracket":
                                return (Oe, J, Ie) => {
                                    Pe = /(\[\])$/.exec(Oe), Ie[Oe = Oe.replace(/\[\]$/, "")] = Pe ? void 0 !== Ie[Oe] ? [].concat(Ie[Oe], J) : [J] : J
                                };
                            case "colon-list-separator":
                                return (Oe, J, Ie) => {
                                    Pe = /(:list)$/.exec(Oe), Ie[Oe = Oe.replace(/:list$/, "")] = Pe ? void 0 !== Ie[Oe] ? [].concat(Ie[Oe], J) : [J] : J
                                };
                            case "comma":
                            case "separator":
                                return (Oe, J, Ie) => {
                                    const Xe = "string" == typeof J && J.includes(te.arrayFormatSeparator),
                                        R = "string" == typeof J && !Xe && ve(J, te).includes(te.arrayFormatSeparator);
                                    J = R ? ve(J, te) : J;
                                    const ce = Xe || R ? J.split(te.arrayFormatSeparator).map(Ve => ve(Ve, te)) : null === J ? J : ve(J, te);
                                    Ie[Oe] = ce
                                };
                            case "bracket-separator":
                                return (Oe, J, Ie) => {
                                    const Xe = /(\[\])$/.test(Oe);
                                    if (Oe = Oe.replace(/\[\]$/, ""), !Xe) return void(Ie[Oe] = J && ve(J, te));
                                    const R = null === J ? [] : J.split(te.arrayFormatSeparator).map(ce => ve(ce, te));
                                    Ie[Oe] = void 0 !== Ie[Oe] ? [].concat(Ie[Oe], R) : R
                                };
                            default:
                                return (Oe, J, Ie) => {
                                    Ie[Oe] = void 0 !== Ie[Oe] ? [].concat(Ie[Oe], J) : J
                                }
                        }
                    }(Pe),
                    J = Object.create(null);
                if ("string" != typeof te || !(te = te.trim().replace(/^[?#&]/, ""))) return J;
                for (const Ie of te.split("&")) {
                    if ("" === Ie) continue;
                    let [Xe, R] = ge(Pe.decode ? Ie.replace(/\+/g, " ") : Ie, "=");
                    R = void 0 === R ? null : ["comma", "separator", "bracket-separator"].includes(Pe.arrayFormat) ? R : ve(R, Pe), Oe(ve(Xe, Pe), R, J)
                }
                for (const Ie of Object.keys(J)) {
                    const Xe = J[Ie];
                    if ("object" == typeof Xe && null !== Xe)
                        for (const R of Object.keys(Xe)) Xe[R] = Ye(Xe[R], Pe);
                    else J[Ie] = Ye(Xe, Pe)
                }
                return !1 === Pe.sort ? J : (!0 === Pe.sort ? Object.keys(J).sort() : Object.keys(J).sort(Pe.sort)).reduce((Ie, Xe) => {
                    const R = J[Xe];
                    return Ie[Xe] = R && "object" == typeof R && !Array.isArray(R) ? Te(R) : R, Ie
                }, Object.create(null))
            }
            G.extract = We, G.parse = Je, G.stringify = (te, Pe) => {
                if (!te) return "";
                ee((Pe = Object.assign({
                    encode: !0,
                    strict: !0,
                    arrayFormat: "none",
                    arrayFormatSeparator: ","
                }, Pe)).arrayFormatSeparator);
                const Oe = R => Pe.skipNull && (te => null == te)(te[R]) || Pe.skipEmptyString && "" === te[R],
                    J = function z(te) {
                        switch (te.arrayFormat) {
                            case "index":
                                return Pe => (Oe, J) => {
                                    const Ie = Oe.length;
                                    return void 0 === J || te.skipNull && null === J || te.skipEmptyString && "" === J ? Oe : null === J ? [...Oe, [oe(Pe, te), "[", Ie, "]"].join("")] : [...Oe, [oe(Pe, te), "[", oe(Ie, te), "]=", oe(J, te)].join("")]
                                };
                            case "bracket":
                                return Pe => (Oe, J) => void 0 === J || te.skipNull && null === J || te.skipEmptyString && "" === J ? Oe : null === J ? [...Oe, [oe(Pe, te), "[]"].join("")] : [...Oe, [oe(Pe, te), "[]=", oe(J, te)].join("")];
                            case "colon-list-separator":
                                return Pe => (Oe, J) => void 0 === J || te.skipNull && null === J || te.skipEmptyString && "" === J ? Oe : null === J ? [...Oe, [oe(Pe, te), ":list="].join("")] : [...Oe, [oe(Pe, te), ":list=", oe(J, te)].join("")];
                            case "comma":
                            case "separator":
                            case "bracket-separator":
                                {
                                    const Pe = "bracket-separator" === te.arrayFormat ? "[]=" : "=";
                                    return Oe => (J, Ie) => void 0 === Ie || te.skipNull && null === Ie || te.skipEmptyString && "" === Ie ? J : (Ie = null === Ie ? "" : Ie, 0 === J.length ? [
                                        [oe(Oe, te), Pe, oe(Ie, te)].join("")
                                    ] : [
                                        [J, oe(Ie, te)].join(te.arrayFormatSeparator)
                                    ])
                                }
                            default:
                                return Pe => (Oe, J) => void 0 === J || te.skipNull && null === J || te.skipEmptyString && "" === J ? Oe : null === J ? [...Oe, oe(Pe, te)] : [...Oe, [oe(Pe, te), "=", oe(J, te)].join("")]
                        }
                    }(Pe),
                    Ie = {};
                for (const R of Object.keys(te)) Oe(R) || (Ie[R] = te[R]);
                const Xe = Object.keys(Ie);
                return !1 !== Pe.sort && Xe.sort(Pe.sort), Xe.map(R => {
                    const ce = te[R];
                    return void 0 === ce ? "" : null === ce ? oe(R, Pe) : Array.isArray(ce) ? 0 === ce.length && "bracket-separator" === Pe.arrayFormat ? oe(R, Pe) + "[]" : ce.reduce(J(R), []).join("&") : oe(R, Pe) + "=" + oe(ce, Pe)
                }).filter(R => R.length > 0).join("&")
            }, G.parseUrl = (te, Pe) => {
                Pe = Object.assign({
                    decode: !0
                }, Pe);
                const [Oe, J] = ge(te, "#");
                return Object.assign({
                    url: Oe.split("?")[0] || "",
                    query: Je(We(te), Pe)
                }, Pe && Pe.parseFragmentIdentifier && J ? {
                    fragmentIdentifier: ve(J, Pe)
                } : {})
            }, G.stringifyUrl = (te, Pe) => {
                Pe = Object.assign({
                    encode: !0,
                    strict: !0,
                    [se]: !0
                }, Pe);
                const Oe = Me(te.url).split("?")[0] || "",
                    J = G.extract(te.url),
                    Ie = G.parse(J, {
                        sort: !1
                    }),
                    Xe = Object.assign(Ie, te.query);
                let R = G.stringify(Xe, Pe);
                R && (R = `?${R}`);
                let ce = function Be(te) {
                    let Pe = "";
                    const Oe = te.indexOf("#");
                    return -1 !== Oe && (Pe = te.slice(Oe)), Pe
                }(te.url);
                return te.fragmentIdentifier && (ce = `#${Pe[se]?oe(te.fragmentIdentifier,Pe):te.fragmentIdentifier}`), `${Oe}${R}${ce}`
            }, G.pick = (te, Pe, Oe) => {
                Oe = Object.assign({
                    parseFragmentIdentifier: !0,
                    [se]: !1
                }, Oe);
                const {
                    url: J,
                    query: Ie,
                    fragmentIdentifier: Xe
                } = G.parseUrl(te, Oe);
                return G.stringifyUrl({
                    url: J,
                    query: Ce(Ie, Pe),
                    fragmentIdentifier: Xe
                }, Oe)
            }, G.exclude = (te, Pe, Oe) => {
                const J = Array.isArray(Pe) ? Ie => !Pe.includes(Ie) : (Ie, Xe) => !Pe(Ie, Xe);
                return G.pick(te, J, Oe)
            }
        },
        439: (ft, G) => {
            "use strict";

            function I(Te) {
                let Me;
                return typeof window < "u" && typeof window[Te] < "u" && (Me = window[Te]), Me
            }

            function _e(Te) {
                const Me = I(Te);
                if (!Me) throw new Error(`${Te} is not defined in Window`);
                return Me
            }
            Object.defineProperty(G, "__esModule", {
                value: !0
            }), G.getLocalStorage = G.getLocalStorageOrThrow = G.getCrypto = G.getCryptoOrThrow = G.getLocation = G.getLocationOrThrow = G.getNavigator = G.getNavigatorOrThrow = G.getDocument = G.getDocumentOrThrow = G.getFromWindowOrThrow = G.getFromWindow = void 0, G.getFromWindow = I, G.getFromWindowOrThrow = _e, G.getDocumentOrThrow = function Ee() {
                return _e("document")
            }, G.getDocument = function ge() {
                return I("document")
            }, G.getNavigatorOrThrow = function Ce() {
                return _e("navigator")
            }, G.getNavigator = function U() {
                return I("navigator")
            }, G.getLocationOrThrow = function se() {
                return _e("location")
            }, G.getLocation = function z() {
                return I("location")
            }, G.getCryptoOrThrow = function ie() {
                return _e("crypto")
            }, G.getCrypto = function ee() {
                return I("crypto")
            }, G.getLocalStorageOrThrow = function oe() {
                return _e("localStorage")
            }, G.getLocalStorage = function ve() {
                return I("localStorage")
            }
        },
        6534: (ft, G, I) => {
            "use strict";
            G.D = void 0;
            const Ee = I(439);
            G.D = function ge() {
                let Ce, U;
                try {
                    Ce = Ee.getDocumentOrThrow(), U = Ee.getLocationOrThrow()
                } catch {
                    return null
                }

                function z(...We) {
                    const Ye = Ce.getElementsByTagName("meta");
                    for (let Je = 0; Je < Ye.length; Je++) {
                        const te = Ye[Je],
                            Pe = ["itemprop", "property", "name"].map(Oe => te.getAttribute(Oe)).filter(Oe => !!Oe && We.includes(Oe));
                        if (Pe.length && Pe) {
                            const Oe = te.getAttribute("content");
                            if (Oe) return Oe
                        }
                    }
                    return ""
                }
                const oe = function ie() {
                    let We = z("name", "og:site_name", "og:title", "twitter:title");
                    return We || (We = Ce.title), We
                }();
                return {
                    description: function ee() {
                        return z("description", "og:description", "twitter:description", "keywords")
                    }(),
                    url: U.origin,
                    icons: function se() {
                        const We = Ce.getElementsByTagName("link"),
                            Ye = [];
                        for (let Je = 0; Je < We.length; Je++) {
                            const te = We[Je],
                                Pe = te.getAttribute("rel");
                            if (Pe && Pe.toLowerCase().indexOf("icon") > -1) {
                                const Oe = te.getAttribute("href");
                                if (Oe)
                                    if (-1 === Oe.toLowerCase().indexOf("https:") && -1 === Oe.toLowerCase().indexOf("http:") && 0 !== Oe.indexOf("//")) {
                                        let J = U.protocol + "//" + U.host;
                                        if (0 === Oe.indexOf("/")) J += Oe;
                                        else {
                                            const Ie = U.pathname.split("/");
                                            Ie.pop(), J += Ie.join("/") + "/" + Oe
                                        }
                                        Ye.push(J)
                                    } else 0 === Oe.indexOf("//") ? Ye.push(U.protocol + Oe) : Ye.push(Oe)
                            }
                        }
                        return Ye
                    }(),
                    name: oe
                }
            }
        },
        3703: (ft, G, I) => {
            "use strict";
            const _e = I(4713);
            ft.exports = class ge {
                constructor(U = {}) {
                    this.iframe = document.createElement("iframe"), this.onMessage = z => {
                        if (z.source !== this.widgetWindow || "object" != typeof z.data) return;
                        switch (z.data.type) {
                            case "loaded":
                                this.sendEvent({
                                    type: "extra",
                                    origin: z.origin,
                                    data: this.extraOptions
                                });
                                break;
                            case "close":
                                document.body.removeChild(this.iframe), document.body.style.overflow = ""
                        }
                        const oe = this.listeners[z.data.type];
                        oe && oe(z.data.data)
                    };
                    const se = Object.assign({}, U);
                    se.container_id && console.error("container_id is no longer supported"), this.partner_id = se.partner_id, this.origin = se.origin || "https://widget.wert.io", this.extraOptions = se.extra ? Object.assign({}, se.extra) : void 0, this.listeners = se.listeners || {}, this.widgetWindow = null, this.checkIntervalId = void 0, se.widgetLayoutMode = "Modal", delete se.partner_id, delete se.origin, delete se.extra, delete se.listeners, se.await_data = se.await_data || this.extraOptions ? "1" : void 0, this.options = se
                }
                static get eventTypes() {
                    return ["close", "error", "loaded", "payment-status", "position", "rate-update"]
                }
                mount() {
                    this.unlistenWidget(), this.iframe.style.border = "none", this.iframe.style.width = "100%", this.iframe.style.height = "100%", this.iframe.style.bottom = "0", this.iframe.style.right = "0", this.iframe.style.position = "fixed", this.iframe.style.zIndex = "10000", document.body.style.overflow = "hidden", this.iframe.setAttribute("src", this.getEmbedUrl()), this.iframe.setAttribute("allow", "camera *; microphone *"), this.iframe.setAttribute("sandbox", "allow-scripts allow-forms allow-popups allow-same-origin"), document.body.appendChild(this.iframe), this.widgetWindow = this.iframe.contentWindow, this.listenWidget()
                }
                destroy() {
                    this.unlistenWidget()
                }
                listenWidget() {
                    window.addEventListener("message", this.onMessage), this.checkIntervalId = window.setInterval(() => {
                        this.widgetWindow && !this.widgetWindow.closed || this.unlistenWidget()
                    }, 200)
                }
                unlistenWidget() {
                    this.checkIntervalId && (clearInterval(this.checkIntervalId), this.checkIntervalId = void 0, window.removeEventListener("message", this.onMessage))
                }
                sendEvent(U) {
                    var se;
                    U.data && (null === (se = this.widgetWindow) || void 0 === se || se.postMessage({
                        type: U.type,
                        data: U.data
                    }, U.origin))
                }
                getEmbedCode() {
                    const se = `<script type="text/javascript" src="https://javascript.wert.io/wert-${_e.version}.js">`,
                        z = "<\/script>",
                        ee = Object.assign({
                            partner_id: this.partner_id,
                            origin: this.origin
                        }, this.options);
                    return se + z + '\n<script type="text/javascript">\n' + `const wertWidget = new WertWidget(${JSON.stringify(ee,null,2)});\nwertWidget.mount();\n` + z
                }
                getEmbedUrl() {
                    const U = this.getParametersString();
                    return this.origin + "/" + this.partner_id + "/widget" + U
                }
                getParametersString() {
                    return Object.entries(this.options).reduce((se, [z, ie]) => void 0 === ie ? se : se + (se.length ? "&" : "?") + z + "=" + encodeURIComponent(ie), "")
                }
                setTheme(U) {
                    !U || !Object.keys(U).length || this.sendEvent({
                        type: "theme",
                        origin: this.origin,
                        data: U
                    })
                }
            }
        },
        5054: (ft, G, I) => {
            "use strict";
            var _e;

            function Ee(K, a) {
                var o = Object.keys(K);
                if (Object.getOwnPropertySymbols) {
                    var c = Object.getOwnPropertySymbols(K);
                    a && (c = c.filter(function(d) {
                        return Object.getOwnPropertyDescriptor(K, d).enumerable
                    })), o.push.apply(o, c)
                }
                return o
            }

            function ge(K) {
                for (var a = 1; a < arguments.length; a++) {
                    var o = null != arguments[a] ? arguments[a] : {};
                    a % 2 ? Ee(Object(o), !0).forEach(function(c) {
                        ie(K, c, o[c])
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(K, Object.getOwnPropertyDescriptors(o)) : Ee(Object(o)).forEach(function(c) {
                        Object.defineProperty(K, c, Object.getOwnPropertyDescriptor(o, c))
                    })
                }
                return K
            }

            function Ce(K) {
                return (Ce = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
                    return typeof a
                } : function(a) {
                    return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                })(K)
            }

            function U(K, a) {
                if (!(K instanceof a)) throw new TypeError("Cannot call a class as a function")
            }

            function se(K, a) {
                for (var o = 0; o < a.length; o++) {
                    var c = a[o];
                    c.enumerable = c.enumerable || !1, c.configurable = !0, "value" in c && (c.writable = !0), Object.defineProperty(K, c.key, c)
                }
            }

            function z(K, a, o) {
                return a && se(K.prototype, a), o && se(K, o), K
            }

            function ie(K, a, o) {
                return a in K ? Object.defineProperty(K, a, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : K[a] = o, K
            }

            function ee(K, a) {
                if ("function" != typeof a && null !== a) throw new TypeError("Super expression must either be null or a function");
                K.prototype = Object.create(a && a.prototype, {
                    constructor: {
                        value: K,
                        writable: !0,
                        configurable: !0
                    }
                }), a && ve(K, a)
            }

            function oe(K) {
                return (oe = Object.setPrototypeOf ? Object.getPrototypeOf : function(a) {
                    return a.__proto__ || Object.getPrototypeOf(a)
                })(K)
            }

            function ve(K, a) {
                return (ve = Object.setPrototypeOf || function(o, c) {
                    return o.__proto__ = c, o
                })(K, a)
            }

            function Te(K) {
                if (void 0 === K) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return K
            }

            function Me(K) {
                var a = function() {
                    if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                    } catch {
                        return !1
                    }
                }();
                return function() {
                    var o, c = oe(K);
                    if (a) {
                        var d = oe(this).constructor;
                        o = Reflect.construct(c, arguments, d)
                    } else o = c.apply(this, arguments);
                    return function(f, p) {
                        if (p && ("object" == typeof p || "function" == typeof p)) return p;
                        if (void 0 !== p) throw new TypeError("Derived constructors may only return object or undefined");
                        return Te(f)
                    }(this, o)
                }
            }

            function Be(K, a) {
                return function(o) {
                    if (Array.isArray(o)) return o
                }(K) || function(o, c) {
                    var d = null == o ? null : typeof Symbol < "u" && o[Symbol.iterator] || o["@@iterator"];
                    if (null != d) {
                        var f, p, m = [],
                            y = !0,
                            x = !1;
                        try {
                            for (d = d.call(o); !(y = (f = d.next()).done) && (m.push(f.value), !c || m.length !== c); y = !0);
                        } catch (w) {
                            x = !0, p = w
                        } finally {
                            try {
                                y || null == d.return || d.return()
                            } finally {
                                if (x) throw p
                            }
                        }
                        return m
                    }
                }(K, a) || Ye(K, a) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function We(K) {
                return function(a) {
                    if (Array.isArray(a)) return Je(a)
                }(K) || function(a) {
                    if (typeof Symbol < "u" && null != a[Symbol.iterator] || null != a["@@iterator"]) return Array.from(a)
                }(K) || Ye(K) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function Ye(K, a) {
                if (K) {
                    if ("string" == typeof K) return Je(K, a);
                    var o = Object.prototype.toString.call(K).slice(8, -1);
                    return "Object" === o && K.constructor && (o = K.constructor.name), "Map" === o || "Set" === o ? Array.from(K) : "Arguments" === o || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o) ? Je(K, a) : void 0
                }
            }

            function Je(K, a) {
                (null == a || a > K.length) && (a = K.length);
                for (var o = 0, c = new Array(a); o < a; o++) c[o] = K[o];
                return c
            }
            var te = function() {
                    function K() {
                        U(this, K)
                    }
                    return z(K, [{
                        key: "shadeRGBColor",
                        value: function(a, o) {
                            var c = o.split(","),
                                d = a < 0 ? 0 : 255,
                                f = a < 0 ? -1 * a : a,
                                p = parseInt(c[0].slice(4), 10),
                                m = parseInt(c[1], 10),
                                y = parseInt(c[2], 10);
                            return "rgb(" + (Math.round((d - p) * f) + p) + "," + (Math.round((d - m) * f) + m) + "," + (Math.round((d - y) * f) + y) + ")"
                        }
                    }, {
                        key: "shadeHexColor",
                        value: function(a, o) {
                            var c = parseInt(o.slice(1), 16),
                                d = a < 0 ? 0 : 255,
                                f = a < 0 ? -1 * a : a,
                                p = c >> 16,
                                m = c >> 8 & 255,
                                y = 255 & c;
                            return "#" + (16777216 + 65536 * (Math.round((d - p) * f) + p) + 256 * (Math.round((d - m) * f) + m) + (Math.round((d - y) * f) + y)).toString(16).slice(1)
                        }
                    }, {
                        key: "shadeColor",
                        value: function(a, o) {
                            return K.isColorHex(o) ? this.shadeHexColor(a, o) : this.shadeRGBColor(a, o)
                        }
                    }], [{
                        key: "bind",
                        value: function(a, o) {
                            return function() {
                                return a.apply(o, arguments)
                            }
                        }
                    }, {
                        key: "isObject",
                        value: function(a) {
                            return a && "object" === Ce(a) && !Array.isArray(a) && null != a
                        }
                    }, {
                        key: "is",
                        value: function(a, o) {
                            return Object.prototype.toString.call(o) === "[object " + a + "]"
                        }
                    }, {
                        key: "listToArray",
                        value: function(a) {
                            var o, c = [];
                            for (o = 0; o < a.length; o++) c[o] = a[o];
                            return c
                        }
                    }, {
                        key: "extend",
                        value: function(a, o) {
                            var c = this;
                            "function" != typeof Object.assign && (Object.assign = function(f) {
                                if (null == f) throw new TypeError("Cannot convert undefined or null to object");
                                for (var p = Object(f), m = 1; m < arguments.length; m++) {
                                    var y = arguments[m];
                                    if (null != y)
                                        for (var x in y) y.hasOwnProperty(x) && (p[x] = y[x])
                                }
                                return p
                            });
                            var d = Object.assign({}, a);
                            return this.isObject(a) && this.isObject(o) && Object.keys(o).forEach(function(f) {
                                c.isObject(o[f]) && f in a ? d[f] = c.extend(a[f], o[f]) : Object.assign(d, ie({}, f, o[f]))
                            }), d
                        }
                    }, {
                        key: "extendArray",
                        value: function(a, o) {
                            var c = [];
                            return a.map(function(d) {
                                c.push(K.extend(o, d))
                            }), c
                        }
                    }, {
                        key: "monthMod",
                        value: function(a) {
                            return a % 12
                        }
                    }, {
                        key: "clone",
                        value: function(a) {
                            if (K.is("Array", a)) {
                                for (var o = [], c = 0; c < a.length; c++) o[c] = this.clone(a[c]);
                                return o
                            }
                            if (K.is("Null", a)) return null;
                            if (K.is("Date", a)) return a;
                            if ("object" === Ce(a)) {
                                var d = {};
                                for (var f in a) a.hasOwnProperty(f) && (d[f] = this.clone(a[f]));
                                return d
                            }
                            return a
                        }
                    }, {
                        key: "log10",
                        value: function(a) {
                            return Math.log(a) / Math.LN10
                        }
                    }, {
                        key: "roundToBase10",
                        value: function(a) {
                            return Math.pow(10, Math.floor(Math.log10(a)))
                        }
                    }, {
                        key: "roundToBase",
                        value: function(a, o) {
                            return Math.pow(o, Math.floor(Math.log(a) / Math.log(o)))
                        }
                    }, {
                        key: "parseNumber",
                        value: function(a) {
                            return null === a ? a : parseFloat(a)
                        }
                    }, {
                        key: "stripNumber",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
                            return Number.isInteger(a) ? a : parseFloat(a.toPrecision(o))
                        }
                    }, {
                        key: "randomId",
                        value: function() {
                            return (Math.random() + 1).toString(36).substring(4)
                        }
                    }, {
                        key: "noExponents",
                        value: function(a) {
                            var o = String(a).split(/[eE]/);
                            if (1 === o.length) return o[0];
                            var c = "",
                                d = a < 0 ? "-" : "",
                                f = o[0].replace(".", ""),
                                p = Number(o[1]) + 1;
                            if (p < 0) {
                                for (c = d + "0."; p++;) c += "0";
                                return c + f.replace(/^-/, "")
                            }
                            for (p -= f.length; p--;) c += "0";
                            return f + c
                        }
                    }, {
                        key: "getDimensions",
                        value: function(a) {
                            var o = getComputedStyle(a, null),
                                c = a.clientHeight,
                                d = a.clientWidth;
                            return c -= parseFloat(o.paddingTop) + parseFloat(o.paddingBottom), [d -= parseFloat(o.paddingLeft) + parseFloat(o.paddingRight), c]
                        }
                    }, {
                        key: "getBoundingClientRect",
                        value: function(a) {
                            var o = a.getBoundingClientRect();
                            return {
                                top: o.top,
                                right: o.right,
                                bottom: o.bottom,
                                left: o.left,
                                width: a.clientWidth,
                                height: a.clientHeight,
                                x: o.left,
                                y: o.top
                            }
                        }
                    }, {
                        key: "getLargestStringFromArr",
                        value: function(a) {
                            return a.reduce(function(o, c) {
                                return Array.isArray(c) && (c = c.reduce(function(d, f) {
                                    return d.length > f.length ? d : f
                                })), o.length > c.length ? o : c
                            }, 0)
                        }
                    }, {
                        key: "hexToRgba",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999",
                                o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .6;
                            "#" !== a.substring(0, 1) && (a = "#999999");
                            var c = a.replace("#", "");
                            c = c.match(new RegExp("(.{" + c.length / 3 + "})", "g"));
                            for (var d = 0; d < c.length; d++) c[d] = parseInt(1 === c[d].length ? c[d] + c[d] : c[d], 16);
                            return void 0 !== o && c.push(o), "rgba(" + c.join(",") + ")"
                        }
                    }, {
                        key: "getOpacityFromRGBA",
                        value: function(a) {
                            return parseFloat(a.replace(/^.*,(.+)\)/, "$1"))
                        }
                    }, {
                        key: "rgb2hex",
                        value: function(a) {
                            return (a = a.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === a.length ? "#" + ("0" + parseInt(a[1], 10).toString(16)).slice(-2) + ("0" + parseInt(a[2], 10).toString(16)).slice(-2) + ("0" + parseInt(a[3], 10).toString(16)).slice(-2) : ""
                        }
                    }, {
                        key: "isColorHex",
                        value: function(a) {
                            return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(a)
                        }
                    }, {
                        key: "getPolygonPos",
                        value: function(a, o) {
                            for (var c = [], d = 2 * Math.PI / o, f = 0; f < o; f++) {
                                var p = {};
                                p.x = a * Math.sin(f * d), p.y = -a * Math.cos(f * d), c.push(p)
                            }
                            return c
                        }
                    }, {
                        key: "polarToCartesian",
                        value: function(a, o, c, d) {
                            var f = (d - 90) * Math.PI / 180;
                            return {
                                x: a + c * Math.cos(f),
                                y: o + c * Math.sin(f)
                            }
                        }
                    }, {
                        key: "escapeString",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x";
                            return a.toString().slice().replace(/[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi, o)
                        }
                    }, {
                        key: "negToZero",
                        value: function(a) {
                            return a < 0 ? 0 : a
                        }
                    }, {
                        key: "moveIndexInArray",
                        value: function(a, o, c) {
                            if (c >= a.length)
                                for (var d = c - a.length + 1; d--;) a.push(void 0);
                            return a.splice(c, 0, a.splice(o, 1)[0]), a
                        }
                    }, {
                        key: "extractNumber",
                        value: function(a) {
                            return parseFloat(a.replace(/[^\d.]*/g, ""))
                        }
                    }, {
                        key: "findAncestor",
                        value: function(a, o) {
                            for (;
                                (a = a.parentElement) && !a.classList.contains(o););
                            return a
                        }
                    }, {
                        key: "setELstyles",
                        value: function(a, o) {
                            for (var c in o) o.hasOwnProperty(c) && (a.style.key = o[c])
                        }
                    }, {
                        key: "isNumber",
                        value: function(a) {
                            return !isNaN(a) && parseFloat(Number(a)) === a && !isNaN(parseInt(a, 10))
                        }
                    }, {
                        key: "isFloat",
                        value: function(a) {
                            return Number(a) === a && a % 1 != 0
                        }
                    }, {
                        key: "isSafari",
                        value: function() {
                            return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
                        }
                    }, {
                        key: "isFirefox",
                        value: function() {
                            return navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                        }
                    }, {
                        key: "isIE11",
                        value: function() {
                            if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1) return !0
                        }
                    }, {
                        key: "isIE",
                        value: function() {
                            var a = window.navigator.userAgent,
                                o = a.indexOf("MSIE ");
                            if (o > 0) return parseInt(a.substring(o + 5, a.indexOf(".", o)), 10);
                            if (a.indexOf("Trident/") > 0) {
                                var c = a.indexOf("rv:");
                                return parseInt(a.substring(c + 3, a.indexOf(".", c)), 10)
                            }
                            var d = a.indexOf("Edge/");
                            return d > 0 && parseInt(a.substring(d + 5, a.indexOf(".", d)), 10)
                        }
                    }]), K
                }(),
                Pe = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.setEasingFunctions()
                    }
                    return z(K, [{
                        key: "setEasingFunctions",
                        value: function() {
                            var a;
                            if (!this.w.globals.easing) {
                                switch (this.w.config.chart.animations.easing) {
                                    case "linear":
                                        a = "-";
                                        break;
                                    case "easein":
                                        a = "<";
                                        break;
                                    case "easeout":
                                        a = ">";
                                        break;
                                    case "easeinout":
                                    default:
                                        a = "<>";
                                        break;
                                    case "swing":
                                        a = function(o) {
                                            var c = 1.70158;
                                            return (o -= 1) * o * ((c + 1) * o + c) + 1
                                        };
                                        break;
                                    case "bounce":
                                        a = function(o) {
                                            return o < 1 / 2.75 ? 7.5625 * o * o : o < 2 / 2.75 ? 7.5625 * (o -= 1.5 / 2.75) * o + .75 : o < 2.5 / 2.75 ? 7.5625 * (o -= 2.25 / 2.75) * o + .9375 : 7.5625 * (o -= 2.625 / 2.75) * o + .984375
                                        };
                                        break;
                                    case "elastic":
                                        a = function(o) {
                                            return o === !!o ? o : Math.pow(2, -10 * o) * Math.sin((o - .075) * (2 * Math.PI) / .3) + 1
                                        }
                                }
                                this.w.globals.easing = a
                            }
                        }
                    }, {
                        key: "animateLine",
                        value: function(a, o, c, d) {
                            a.attr(o).animate(d).attr(c)
                        }
                    }, {
                        key: "animateMarker",
                        value: function(a, o, c, d, f, p) {
                            o || (o = 0), a.attr({
                                r: o,
                                width: o,
                                height: o
                            }).animate(d, f).attr({
                                r: c,
                                width: c.width,
                                height: c.height
                            }).afterAll(function() {
                                p()
                            })
                        }
                    }, {
                        key: "animateCircle",
                        value: function(a, o, c, d, f) {
                            a.attr({
                                r: o.r,
                                cx: o.cx,
                                cy: o.cy
                            }).animate(d, f).attr({
                                r: c.r,
                                cx: c.cx,
                                cy: c.cy
                            })
                        }
                    }, {
                        key: "animateRect",
                        value: function(a, o, c, d, f) {
                            a.attr(o).animate(d).attr(c).afterAll(function() {
                                return f()
                            })
                        }
                    }, {
                        key: "animatePathsGradually",
                        value: function(a) {
                            var w = this.w,
                                S = 0;
                            w.config.chart.animations.animateGradually.enabled && (S = w.config.chart.animations.animateGradually.delay), w.config.chart.animations.dynamicAnimation.enabled && w.globals.dataChanged && "bar" !== w.config.chart.type && (S = 0), this.morphSVG(a.el, a.realIndex, a.j, "line" !== w.config.chart.type || w.globals.comboCharts ? a.fill : "stroke", a.pathFrom, a.pathTo, a.speed, a.delay * S)
                        }
                    }, {
                        key: "showDelayedElements",
                        value: function() {
                            this.w.globals.delayedElements.forEach(function(a) {
                                var o = a.el;
                                o.classList.remove("apexcharts-element-hidden"), o.classList.add("apexcharts-hidden-element-shown")
                            })
                        }
                    }, {
                        key: "animationCompleted",
                        value: function(a) {
                            var o = this.w;
                            o.globals.animationEnded || (o.globals.animationEnded = !0, this.showDelayedElements(), "function" == typeof o.config.chart.events.animationEnd && o.config.chart.events.animationEnd(this.ctx, {
                                el: a,
                                w: o
                            }))
                        }
                    }, {
                        key: "morphSVG",
                        value: function(a, o, c, d, f, p, m, y) {
                            var x = this,
                                w = this.w;
                            f || (f = a.attr("pathFrom")), p || (p = a.attr("pathTo"));
                            var S = function(T) {
                                return "radar" === w.config.chart.type && (m = 1), "M 0 ".concat(w.globals.gridHeight)
                            };
                            (!f || f.indexOf("undefined") > -1 || f.indexOf("NaN") > -1) && (f = S()), (!p || p.indexOf("undefined") > -1 || p.indexOf("NaN") > -1) && (p = S()), w.globals.shouldAnimate || (m = 1), a.plot(f).animate(1, w.globals.easing, y).plot(f).animate(m, w.globals.easing, y).plot(p).afterAll(function() {
                                te.isNumber(c) ? c === w.globals.series[w.globals.maxValsInArrayIndex].length - 2 && w.globals.shouldAnimate && x.animationCompleted(a) : "none" !== d && w.globals.shouldAnimate && (!w.globals.comboCharts && o === w.globals.series.length - 1 || w.globals.comboCharts) && x.animationCompleted(a), x.showDelayedElements()
                            })
                        }
                    }]), K
                }(),
                Oe = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "getDefaultFilter",
                        value: function(a, o) {
                            var c = this.w;
                            a.unfilter(!0), (new window.SVG.Filter).size("120%", "180%", "-5%", "-40%"), "none" !== c.config.states.normal.filter ? this.applyFilter(a, o, c.config.states.normal.filter.type, c.config.states.normal.filter.value) : c.config.chart.dropShadow.enabled && this.dropShadow(a, c.config.chart.dropShadow, o)
                        }
                    }, {
                        key: "addNormalFilter",
                        value: function(a, o) {
                            var c = this.w;
                            c.config.chart.dropShadow.enabled && !a.node.classList.contains("apexcharts-marker") && this.dropShadow(a, c.config.chart.dropShadow, o)
                        }
                    }, {
                        key: "addLightenFilter",
                        value: function(a, o, c) {
                            var d = this,
                                f = this.w,
                                p = c.intensity;
                            a.unfilter(!0), new window.SVG.Filter, a.filter(function(m) {
                                var y = f.config.chart.dropShadow;
                                (y.enabled ? d.addShadow(m, o, y) : m).componentTransfer({
                                    rgb: {
                                        type: "linear",
                                        slope: 1.5,
                                        intercept: p
                                    }
                                })
                            }), a.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(a.filterer.node)
                        }
                    }, {
                        key: "addDarkenFilter",
                        value: function(a, o, c) {
                            var d = this,
                                f = this.w,
                                p = c.intensity;
                            a.unfilter(!0), new window.SVG.Filter, a.filter(function(m) {
                                var y = f.config.chart.dropShadow;
                                (y.enabled ? d.addShadow(m, o, y) : m).componentTransfer({
                                    rgb: {
                                        type: "linear",
                                        slope: p
                                    }
                                })
                            }), a.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(a.filterer.node)
                        }
                    }, {
                        key: "applyFilter",
                        value: function(a, o, c) {
                            var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
                            switch (c) {
                                case "none":
                                    this.addNormalFilter(a, o);
                                    break;
                                case "lighten":
                                    this.addLightenFilter(a, o, {
                                        intensity: d
                                    });
                                    break;
                                case "darken":
                                    this.addDarkenFilter(a, o, {
                                        intensity: d
                                    })
                            }
                        }
                    }, {
                        key: "addShadow",
                        value: function(a, o, c) {
                            var d = c.blur,
                                f = c.top,
                                p = c.left,
                                m = c.color,
                                y = c.opacity,
                                x = a.flood(Array.isArray(m) ? m[o] : m, y).composite(a.sourceAlpha, "in").offset(p, f).gaussianBlur(d).merge(a.source);
                            return a.blend(a.source, x)
                        }
                    }, {
                        key: "dropShadow",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                d = o.top,
                                f = o.left,
                                p = o.blur,
                                m = o.color,
                                y = o.opacity,
                                x = o.noUserSpaceOnUse,
                                w = this.w;
                            return a.unfilter(!0), te.isIE() && "radialBar" === w.config.chart.type || (m = Array.isArray(m) ? m[c] : m, a.filter(function(S) {
                                var T;
                                T = te.isSafari() || te.isFirefox() || te.isIE() ? S.flood(m, y).composite(S.sourceAlpha, "in").offset(f, d).gaussianBlur(p) : S.flood(m, y).composite(S.sourceAlpha, "in").offset(f, d).gaussianBlur(p).merge(S.source), S.blend(S.source, T)
                            }), x || a.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(a.filterer.node)), a
                        }
                    }, {
                        key: "setSelectionFilter",
                        value: function(a, o, c) {
                            var d = this.w;
                            if (void 0 !== d.globals.selectedDataPoints[o] && d.globals.selectedDataPoints[o].indexOf(c) > -1) {
                                a.node.setAttribute("selected", !0);
                                var f = d.config.states.active.filter;
                                "none" !== f && this.applyFilter(a, o, f.type, f.value)
                            }
                        }
                    }, {
                        key: "_scaleFilterSize",
                        value: function(a) {
                            ! function(o) {
                                for (var c in o) o.hasOwnProperty(c) && a.setAttribute(c, o[c])
                            }({
                                width: "200%",
                                height: "200%",
                                x: "-50%",
                                y: "-50%"
                            })
                        }
                    }]), K
                }(),
                J = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "roundPathCorners",
                        value: function(a, o) {
                            function c(Se, Le, ze) {
                                var nt = Le.x - Se.x,
                                    yt = Le.y - Se.y,
                                    dt = Math.sqrt(nt * nt + yt * yt);
                                return d(Se, Le, Math.min(1, ze / dt))
                            }

                            function d(Se, Le, ze) {
                                return {
                                    x: Se.x + (Le.x - Se.x) * ze,
                                    y: Se.y + (Le.y - Se.y) * ze
                                }
                            }

                            function f(Se, Le) {
                                Se.length > 2 && (Se[Se.length - 2] = Le.x, Se[Se.length - 1] = Le.y)
                            }

                            function p(Se) {
                                return {
                                    x: parseFloat(Se[Se.length - 2]),
                                    y: parseFloat(Se[Se.length - 1])
                                }
                            }
                            a.indexOf("NaN") > -1 && (a = "");
                            var m = a.split(/[,\s]/).reduce(function(Se, Le) {
                                    var ze = Le.match("([a-zA-Z])(.+)");
                                    return ze ? (Se.push(ze[1]), Se.push(ze[2])) : Se.push(Le), Se
                                }, []).reduce(function(Se, Le) {
                                    return parseFloat(Le) == Le && Se.length ? Se[Se.length - 1].push(Le) : Se.push([Le]), Se
                                }, []),
                                y = [];
                            if (m.length > 1) {
                                var x = p(m[0]),
                                    w = null;
                                "Z" == m[m.length - 1][0] && m[0].length > 2 && (m[m.length - 1] = w = ["L", x.x, x.y]), y.push(m[0]);
                                for (var S = 1; S < m.length; S++) {
                                    var T = y[y.length - 1],
                                        k = m[S],
                                        O = k == w ? m[1] : m[S + 1];
                                    if (O && T && T.length > 2 && "L" == k[0] && O.length > 2 && "L" == O[0]) {
                                        var B, $, ne = p(T),
                                            re = p(k),
                                            b = p(O);
                                        B = c(re, ne, o), $ = c(re, b, o), f(k, B), k.origPoint = re, y.push(k);
                                        var A = d(B, re, .5),
                                            F = d(re, $, .5),
                                            X = ["C", A.x, A.y, F.x, F.y, $.x, $.y];
                                        X.origPoint = re, y.push(X)
                                    } else y.push(k)
                                }
                                if (w) {
                                    var be = p(y[y.length - 1]);
                                    y.push(["Z"]), f(y[0], be)
                                }
                            } else y = m;
                            return y.reduce(function(Se, Le) {
                                return Se + Le.join(" ") + " "
                            }, "")
                        }
                    }, {
                        key: "drawLine",
                        value: function(a, o, c, d) {
                            var f = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8",
                                p = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
                                m = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                                y = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "butt";
                            return this.w.globals.dom.Paper.line().attr({
                                x1: a,
                                y1: o,
                                x2: c,
                                y2: d,
                                stroke: f,
                                "stroke-dasharray": p,
                                "stroke-width": m,
                                "stroke-linecap": y
                            })
                        }
                    }, {
                        key: "drawRect",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                                o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                                d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                                f = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                                p = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe",
                                m = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1,
                                y = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                                x = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
                                w = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0,
                                S = this.w.globals.dom.Paper.rect();
                            return S.attr({
                                x: a,
                                y: o,
                                width: c > 0 ? c : 0,
                                height: d > 0 ? d : 0,
                                rx: f,
                                ry: f,
                                opacity: m,
                                "stroke-width": null !== y ? y : 0,
                                stroke: null !== x ? x : "none",
                                "stroke-dasharray": w
                            }), S.node.setAttribute("fill", p), S
                        }
                    }, {
                        key: "drawPolygon",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1",
                                c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                                d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "none";
                            return this.w.globals.dom.Paper.polygon(a).attr({
                                fill: d,
                                stroke: o,
                                "stroke-width": c
                            })
                        }
                    }, {
                        key: "drawCircle",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                            a < 0 && (a = 0);
                            var c = this.w.globals.dom.Paper.circle(2 * a);
                            return null !== o && c.attr(o), c
                        }
                    }, {
                        key: "drawPath",
                        value: function(a) {
                            var o = a.d,
                                c = void 0 === o ? "" : o,
                                d = a.stroke,
                                f = void 0 === d ? "#a8a8a8" : d,
                                p = a.strokeWidth,
                                m = void 0 === p ? 1 : p,
                                y = a.fill,
                                x = a.fillOpacity,
                                w = void 0 === x ? 1 : x,
                                S = a.strokeOpacity,
                                T = void 0 === S ? 1 : S,
                                k = a.classes,
                                O = a.strokeLinecap,
                                B = void 0 === O ? null : O,
                                $ = a.strokeDashArray,
                                ne = void 0 === $ ? 0 : $,
                                re = this.w;
                            return null === B && (B = re.config.stroke.lineCap), (c.indexOf("undefined") > -1 || c.indexOf("NaN") > -1) && (c = "M 0 ".concat(re.globals.gridHeight)), re.globals.dom.Paper.path(c).attr({
                                fill: y,
                                "fill-opacity": w,
                                stroke: f,
                                "stroke-opacity": T,
                                "stroke-linecap": B,
                                "stroke-width": m,
                                "stroke-dasharray": ne,
                                class: k
                            })
                        }
                    }, {
                        key: "group",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                o = this.w.globals.dom.Paper.group();
                            return null !== a && o.attr(a), o
                        }
                    }, {
                        key: "move",
                        value: function(a, o) {
                            return ["M", a, o].join(" ")
                        }
                    }, {
                        key: "line",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                                d = null;
                            return null === c ? d = [" L", a, o].join(" ") : "H" === c ? d = [" H", a].join(" ") : "V" === c && (d = [" V", o].join(" ")), d
                        }
                    }, {
                        key: "curve",
                        value: function(a, o, c, d, f, p) {
                            return ["C", a, o, c, d, f, p].join(" ")
                        }
                    }, {
                        key: "quadraticCurve",
                        value: function(a, o, c, d) {
                            return ["Q", a, o, c, d].join(" ")
                        }
                    }, {
                        key: "arc",
                        value: function(a, o, c, d, f, p, m) {
                            var y = "A";
                            return arguments.length > 7 && void 0 !== arguments[7] && arguments[7] && (y = "a"), [y, a, o, c, d, f, p, m].join(" ")
                        }
                    }, {
                        key: "renderPaths",
                        value: function(a) {
                            var o, c = a.j,
                                d = a.realIndex,
                                f = a.pathFrom,
                                p = a.pathTo,
                                m = a.stroke,
                                y = a.strokeWidth,
                                x = a.strokeLinecap,
                                w = a.fill,
                                S = a.animationDelay,
                                T = a.initialSpeed,
                                k = a.dataChangeSpeed,
                                O = a.className,
                                B = a.shouldClipToGrid,
                                $ = void 0 === B || B,
                                ne = a.bindEventsOnPaths,
                                re = void 0 === ne || ne,
                                b = a.drawShadow,
                                A = void 0 === b || b,
                                F = this.w,
                                X = new Oe(this.ctx),
                                be = new Pe(this.ctx),
                                Se = this.w.config.chart.animations.enabled,
                                Le = Se && this.w.config.chart.animations.dynamicAnimation.enabled,
                                ze = !!(Se && !F.globals.resized || Le && F.globals.dataChanged && F.globals.shouldAnimate);
                            ze ? o = f : (o = p, F.globals.animationEnded = !0);
                            var yt, nt = F.config.stroke.dashArray;
                            yt = Array.isArray(nt) ? nt[d] : F.config.stroke.dashArray;
                            var dt = this.drawPath({
                                d: o,
                                stroke: m,
                                strokeWidth: y,
                                fill: w,
                                fillOpacity: 1,
                                classes: O,
                                strokeLinecap: x,
                                strokeDashArray: yt
                            });
                            dt.attr("index", d), $ && dt.attr({
                                "clip-path": "url(#gridRectMask".concat(F.globals.cuid, ")")
                            }), "none" !== F.config.states.normal.filter.type ? X.getDefaultFilter(dt, d) : F.config.chart.dropShadow.enabled && A && (!F.config.chart.dropShadow.enabledOnSeries || F.config.chart.dropShadow.enabledOnSeries && -1 !== F.config.chart.dropShadow.enabledOnSeries.indexOf(d)) && X.dropShadow(dt, F.config.chart.dropShadow, d), re && (dt.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, dt)), dt.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, dt)), dt.node.addEventListener("mousedown", this.pathMouseDown.bind(this, dt))), dt.attr({
                                pathTo: p,
                                pathFrom: f
                            });
                            var wt = {
                                el: dt,
                                j: c,
                                realIndex: d,
                                pathFrom: f,
                                pathTo: p,
                                fill: w,
                                strokeWidth: y,
                                delay: S
                            };
                            return !Se || F.globals.resized || F.globals.dataChanged ? !F.globals.resized && F.globals.dataChanged || be.showDelayedElements() : be.animatePathsGradually(ge(ge({}, wt), {}, {
                                speed: T
                            })), F.globals.dataChanged && Le && ze && be.animatePathsGradually(ge(ge({}, wt), {}, {
                                speed: k
                            })), dt
                        }
                    }, {
                        key: "drawPattern",
                        value: function(a, o, c) {
                            var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8",
                                f = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                            return this.w.globals.dom.Paper.pattern(o, c, function(p) {
                                "horizontalLines" === a ? p.line(0, 0, c, 0).stroke({
                                    color: d,
                                    width: f + 1
                                }) : "verticalLines" === a ? p.line(0, 0, 0, o).stroke({
                                    color: d,
                                    width: f + 1
                                }) : "slantedLines" === a ? p.line(0, 0, o, c).stroke({
                                    color: d,
                                    width: f
                                }) : "squares" === a ? p.rect(o, c).fill("none").stroke({
                                    color: d,
                                    width: f
                                }) : "circles" === a && p.circle(o).fill("none").stroke({
                                    color: d,
                                    width: f
                                })
                            })
                        }
                    }, {
                        key: "drawGradient",
                        value: function(a, o, c, d, f) {
                            var p, m = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
                                y = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
                                x = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
                                w = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0,
                                S = this.w;
                            o.length < 9 && 0 === o.indexOf("#") && (o = te.hexToRgba(o, d)), c.length < 9 && 0 === c.indexOf("#") && (c = te.hexToRgba(c, f));
                            var T = 0,
                                k = 1,
                                O = 1,
                                B = null;
                            null !== y && (T = void 0 !== y[0] ? y[0] / 100 : 0, k = void 0 !== y[1] ? y[1] / 100 : 1, O = void 0 !== y[2] ? y[2] / 100 : 1, B = void 0 !== y[3] ? y[3] / 100 : null);
                            var $ = !("donut" !== S.config.chart.type && "pie" !== S.config.chart.type && "polarArea" !== S.config.chart.type && "bubble" !== S.config.chart.type);
                            return p = S.globals.dom.Paper.gradient($ ? "radial" : "linear", null === x || 0 === x.length ? function(b) {
                                b.at(T, o, d), b.at(k, c, f), b.at(O, c, f), null !== B && b.at(B, o, d)
                            } : function(b) {
                                (Array.isArray(x[w]) ? x[w] : x).forEach(function(A) {
                                    b.at(A.offset / 100, A.color, A.opacity)
                                })
                            }), $ ? p.attr("bubble" !== S.config.chart.type ? {
                                gradientUnits: "userSpaceOnUse",
                                cx: S.globals.gridWidth / 2,
                                cy: S.globals.gridHeight / 2,
                                r: m
                            } : {
                                cx: .5,
                                cy: .5,
                                r: .8,
                                fx: .2,
                                fy: .2
                            }) : "vertical" === a ? p.from(0, 0).to(0, 1) : "diagonal" === a ? p.from(0, 0).to(1, 1) : "horizontal" === a ? p.from(0, 1).to(1, 1) : "diagonal2" === a && p.from(1, 0).to(0, 1), p
                        }
                    }, {
                        key: "getTextBasedOnMaxWidth",
                        value: function(a) {
                            var o = a.text,
                                c = a.maxWidth,
                                p = this.getTextRects(o, a.fontSize, a.fontFamily),
                                y = Math.floor(c / (p.width / o.length));
                            return c < p.width ? o.slice(0, y - 3) + "..." : o
                        }
                    }, {
                        key: "drawText",
                        value: function(a) {
                            var o = this,
                                c = a.x,
                                d = a.y,
                                f = a.text,
                                p = a.textAnchor,
                                m = a.fontSize,
                                y = a.fontFamily,
                                x = a.fontWeight,
                                w = a.foreColor,
                                S = a.opacity,
                                T = a.maxWidth,
                                k = a.cssClass,
                                O = void 0 === k ? "" : k,
                                B = a.isPlainText,
                                $ = void 0 === B || B,
                                ne = a.dominantBaseline,
                                re = void 0 === ne ? "auto" : ne,
                                b = this.w;
                            void 0 === f && (f = "");
                            var A = f;
                            p || (p = "start"), w && w.length || (w = b.config.chart.foreColor), x = x || "regular";
                            var F, X = {
                                maxWidth: T,
                                fontSize: m = m || "11px",
                                fontFamily: y = y || b.config.chart.fontFamily
                            };
                            return Array.isArray(f) ? F = b.globals.dom.Paper.text(function(be) {
                                for (var Se = 0; Se < f.length; Se++) A = f[Se], T && (A = o.getTextBasedOnMaxWidth(ge({
                                    text: f[Se]
                                }, X))), 0 === Se ? be.tspan(A) : be.tspan(A).newLine()
                            }) : (T && (A = this.getTextBasedOnMaxWidth(ge({
                                text: f
                            }, X))), F = $ ? b.globals.dom.Paper.plain(f) : b.globals.dom.Paper.text(function(be) {
                                return be.tspan(A)
                            })), F.attr({
                                x: c,
                                y: d,
                                "text-anchor": p,
                                "dominant-baseline": re,
                                "font-size": m,
                                "font-family": y,
                                "font-weight": x,
                                fill: w,
                                class: "apexcharts-text " + O
                            }), F.node.style.fontFamily = y, F.node.style.opacity = S, F
                        }
                    }, {
                        key: "drawMarker",
                        value: function(a, o, c) {
                            a = a || 0;
                            var d = c.pSize || 0,
                                f = null;
                            if ("square" === c.shape || "rect" === c.shape) {
                                var p = void 0 === c.pRadius ? d / 2 : c.pRadius;
                                null !== o && d || (d = 0, p = 0);
                                var m = 1.2 * d + p,
                                    y = this.drawRect(m, m, m, m, p);
                                y.attr({
                                    x: a - m / 2,
                                    y: o - m / 2,
                                    cx: a,
                                    cy: o,
                                    class: c.class ? c.class : "",
                                    fill: c.pointFillColor,
                                    "fill-opacity": c.pointFillOpacity ? c.pointFillOpacity : 1,
                                    stroke: c.pointStrokeColor,
                                    "stroke-width": c.pointStrokeWidth ? c.pointStrokeWidth : 0,
                                    "stroke-opacity": c.pointStrokeOpacity ? c.pointStrokeOpacity : 1
                                }), f = y
                            } else "circle" !== c.shape && c.shape || (te.isNumber(o) || (d = 0, o = 0), f = this.drawCircle(d, {
                                cx: a,
                                cy: o,
                                class: c.class ? c.class : "",
                                stroke: c.pointStrokeColor,
                                fill: c.pointFillColor,
                                "fill-opacity": c.pointFillOpacity ? c.pointFillOpacity : 1,
                                "stroke-width": c.pointStrokeWidth ? c.pointStrokeWidth : 0,
                                "stroke-opacity": c.pointStrokeOpacity ? c.pointStrokeOpacity : 1
                            }));
                            return f
                        }
                    }, {
                        key: "pathMouseEnter",
                        value: function(a, o) {
                            var c = this.w,
                                d = new Oe(this.ctx),
                                f = parseInt(a.node.getAttribute("index"), 10),
                                p = parseInt(a.node.getAttribute("j"), 10);
                            if ("function" == typeof c.config.chart.events.dataPointMouseEnter && c.config.chart.events.dataPointMouseEnter(o, this.ctx, {
                                    seriesIndex: f,
                                    dataPointIndex: p,
                                    w: c
                                }), this.ctx.events.fireEvent("dataPointMouseEnter", [o, this.ctx, {
                                    seriesIndex: f,
                                    dataPointIndex: p,
                                    w: c
                                }]), ("none" === c.config.states.active.filter.type || "true" !== a.node.getAttribute("selected")) && "none" !== c.config.states.hover.filter.type && !c.globals.isTouchDevice) {
                                var m = c.config.states.hover.filter;
                                d.applyFilter(a, f, m.type, m.value)
                            }
                        }
                    }, {
                        key: "pathMouseLeave",
                        value: function(a, o) {
                            var c = this.w,
                                d = new Oe(this.ctx),
                                f = parseInt(a.node.getAttribute("index"), 10),
                                p = parseInt(a.node.getAttribute("j"), 10);
                            "function" == typeof c.config.chart.events.dataPointMouseLeave && c.config.chart.events.dataPointMouseLeave(o, this.ctx, {
                                seriesIndex: f,
                                dataPointIndex: p,
                                w: c
                            }), this.ctx.events.fireEvent("dataPointMouseLeave", [o, this.ctx, {
                                seriesIndex: f,
                                dataPointIndex: p,
                                w: c
                            }]), "none" !== c.config.states.active.filter.type && "true" === a.node.getAttribute("selected") || "none" !== c.config.states.hover.filter.type && d.getDefaultFilter(a, f)
                        }
                    }, {
                        key: "pathMouseDown",
                        value: function(a, o) {
                            var c = this.w,
                                d = new Oe(this.ctx),
                                f = parseInt(a.node.getAttribute("index"), 10),
                                p = parseInt(a.node.getAttribute("j"), 10),
                                m = "false";
                            if ("true" === a.node.getAttribute("selected")) {
                                if (a.node.setAttribute("selected", "false"), c.globals.selectedDataPoints[f].indexOf(p) > -1) {
                                    var y = c.globals.selectedDataPoints[f].indexOf(p);
                                    c.globals.selectedDataPoints[f].splice(y, 1)
                                }
                            } else {
                                if (!c.config.states.active.allowMultipleDataPointsSelection && c.globals.selectedDataPoints.length > 0) {
                                    c.globals.selectedDataPoints = [];
                                    var x = c.globals.dom.Paper.select(".apexcharts-series path").members,
                                        w = c.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,
                                        S = function(O) {
                                            Array.prototype.forEach.call(O, function(B) {
                                                B.node.setAttribute("selected", "false"), d.getDefaultFilter(B, f)
                                            })
                                        };
                                    S(x), S(w)
                                }
                                a.node.setAttribute("selected", "true"), m = "true", void 0 === c.globals.selectedDataPoints[f] && (c.globals.selectedDataPoints[f] = []), c.globals.selectedDataPoints[f].push(p)
                            }
                            if ("true" === m) {
                                var T = c.config.states.active.filter;
                                if ("none" !== T) d.applyFilter(a, f, T.type, T.value);
                                else if ("none" !== c.config.states.hover.filter && !c.globals.isTouchDevice) {
                                    var k = c.config.states.hover.filter;
                                    d.applyFilter(a, f, k.type, k.value)
                                }
                            } else "none" !== c.config.states.active.filter.type && ("none" === c.config.states.hover.filter.type || c.globals.isTouchDevice ? d.getDefaultFilter(a, f) : d.applyFilter(a, f, (k = c.config.states.hover.filter).type, k.value));
                            "function" == typeof c.config.chart.events.dataPointSelection && c.config.chart.events.dataPointSelection(o, this.ctx, {
                                selectedDataPoints: c.globals.selectedDataPoints,
                                seriesIndex: f,
                                dataPointIndex: p,
                                w: c
                            }), o && this.ctx.events.fireEvent("dataPointSelection", [o, this.ctx, {
                                selectedDataPoints: c.globals.selectedDataPoints,
                                seriesIndex: f,
                                dataPointIndex: p,
                                w: c
                            }])
                        }
                    }, {
                        key: "rotateAroundCenter",
                        value: function(a) {
                            var o = {};
                            return a && "function" == typeof a.getBBox && (o = a.getBBox()), {
                                x: o.x + o.width / 2,
                                y: o.y + o.height / 2
                            }
                        }
                    }, {
                        key: "getTextRects",
                        value: function(a, o, c, d) {
                            var f = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
                                p = this.w,
                                m = this.drawText({
                                    x: -200,
                                    y: -200,
                                    text: a,
                                    textAnchor: "start",
                                    fontSize: o,
                                    fontFamily: c,
                                    foreColor: "#fff",
                                    opacity: 0
                                });
                            d && m.attr("transform", d), p.globals.dom.Paper.add(m);
                            var y = m.bbox();
                            return f || (y = m.node.getBoundingClientRect()), m.remove(), {
                                width: y.width,
                                height: y.height
                            }
                        }
                    }, {
                        key: "placeTextWithEllipsis",
                        value: function(a, o, c) {
                            if ("function" == typeof a.getComputedTextLength && (a.textContent = o, o.length > 0 && a.getComputedTextLength() >= c / 1.1)) {
                                for (var d = o.length - 3; d > 0; d -= 3)
                                    if (a.getSubStringLength(0, d) <= c / 1.1) return void(a.textContent = o.substring(0, d) + "...");
                                a.textContent = "."
                            }
                        }
                    }], [{
                        key: "setAttrs",
                        value: function(a, o) {
                            for (var c in o) o.hasOwnProperty(c) && a.setAttribute(c, o[c])
                        }
                    }]), K
                }(),
                Ie = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "getStackedSeriesTotals",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                o = this.w,
                                c = [];
                            if (0 === o.globals.series.length) return c;
                            for (var d = 0; d < o.globals.series[o.globals.maxValsInArrayIndex].length; d++) {
                                for (var f = 0, p = 0; p < o.globals.series.length; p++) void 0 !== o.globals.series[p][d] && -1 === a.indexOf(p) && (f += o.globals.series[p][d]);
                                c.push(f)
                            }
                            return c
                        }
                    }, {
                        key: "getSeriesTotalByIndex",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            return null === a ? this.w.config.series.reduce(function(o, c) {
                                return o + c
                            }, 0) : this.w.globals.series[a].reduce(function(o, c) {
                                return o + c
                            }, 0)
                        }
                    }, {
                        key: "getStackedSeriesTotalsByGroups",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = [];
                            return o.globals.seriesGroups.forEach(function(d) {
                                var f = [];
                                o.config.series.forEach(function(m, y) {
                                    d.indexOf(m.name) > -1 && f.push(y)
                                });
                                var p = o.globals.series.map(function(m, y) {
                                    return -1 === f.indexOf(y) ? y : -1
                                }).filter(function(m) {
                                    return -1 !== m
                                });
                                c.push(a.getStackedSeriesTotals(p))
                            }), c
                        }
                    }, {
                        key: "isSeriesNull",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                            return 0 === (null === a ? this.w.config.series.filter(function(o) {
                                return null !== o
                            }) : this.w.config.series[a].data.filter(function(o) {
                                return null !== o
                            })).length
                        }
                    }, {
                        key: "seriesHaveSameValues",
                        value: function(a) {
                            return this.w.globals.series[a].every(function(o, c, d) {
                                return o === d[0]
                            })
                        }
                    }, {
                        key: "getCategoryLabels",
                        value: function(a) {
                            var o = this.w,
                                c = a.slice();
                            return o.config.xaxis.convertedCatToNumeric && (c = a.map(function(d, f) {
                                return o.config.xaxis.labels.formatter(d - o.globals.minX + 1)
                            })), c
                        }
                    }, {
                        key: "getLargestSeries",
                        value: function() {
                            var a = this.w;
                            a.globals.maxValsInArrayIndex = a.globals.series.map(function(o) {
                                return o.length
                            }).indexOf(Math.max.apply(Math, a.globals.series.map(function(o) {
                                return o.length
                            })))
                        }
                    }, {
                        key: "getLargestMarkerSize",
                        value: function() {
                            var a = this.w,
                                o = 0;
                            return a.globals.markers.size.forEach(function(c) {
                                o = Math.max(o, c)
                            }), a.config.markers.discrete && a.config.markers.discrete.length && a.config.markers.discrete.forEach(function(c) {
                                o = Math.max(o, c.size)
                            }), o > 0 && (o += a.config.markers.hover.sizeOffset + 1), a.globals.markers.largestSize = o, o
                        }
                    }, {
                        key: "getSeriesTotals",
                        value: function() {
                            var a = this.w;
                            a.globals.seriesTotals = a.globals.series.map(function(o, c) {
                                var d = 0;
                                if (Array.isArray(o))
                                    for (var f = 0; f < o.length; f++) d += o[f];
                                else d += o;
                                return d
                            })
                        }
                    }, {
                        key: "getSeriesTotalsXRange",
                        value: function(a, o) {
                            var c = this.w;
                            return c.globals.series.map(function(d, f) {
                                for (var p = 0, m = 0; m < d.length; m++) c.globals.seriesX[f][m] > a && c.globals.seriesX[f][m] < o && (p += d[m]);
                                return p
                            })
                        }
                    }, {
                        key: "getPercentSeries",
                        value: function() {
                            var a = this.w;
                            a.globals.seriesPercent = a.globals.series.map(function(o, c) {
                                var d = [];
                                if (Array.isArray(o))
                                    for (var f = 0; f < o.length; f++) {
                                        var p = a.globals.stackedSeriesTotals[f],
                                            m = 0;
                                        p && (m = 100 * o[f] / p), d.push(m)
                                    } else {
                                        var y = 100 * o / a.globals.seriesTotals.reduce(function(x, w) {
                                            return x + w
                                        }, 0);
                                        d.push(y)
                                    }
                                return d
                            })
                        }
                    }, {
                        key: "getCalculatedRatios",
                        value: function() {
                            var a, o, c, d, f = this.w.globals,
                                p = [],
                                m = 0,
                                y = [],
                                x = .1,
                                w = 0;
                            if (f.yRange = [], f.isMultipleYAxis)
                                for (var S = 0; S < f.minYArr.length; S++) f.yRange.push(Math.abs(f.minYArr[S] - f.maxYArr[S])), y.push(0);
                            else f.yRange.push(Math.abs(f.minY - f.maxY));
                            f.xRange = Math.abs(f.maxX - f.minX), f.zRange = Math.abs(f.maxZ - f.minZ);
                            for (var T = 0; T < f.yRange.length; T++) p.push(f.yRange[T] / f.gridHeight);
                            if (o = f.xRange / f.gridWidth, c = Math.abs(f.initialMaxX - f.initialMinX) / f.gridWidth, a = f.yRange / f.gridWidth, d = f.xRange / f.gridHeight, (m = f.zRange / f.gridHeight * 16) || (m = 1), f.minY !== Number.MIN_VALUE && 0 !== Math.abs(f.minY) && (f.hasNegs = !0), f.isMultipleYAxis) {
                                y = [];
                                for (var k = 0; k < p.length; k++) y.push(-f.minYArr[k] / p[k])
                            } else y.push(-f.minY / p[0]), f.minY !== Number.MIN_VALUE && 0 !== Math.abs(f.minY) && (x = -f.minY / a, w = f.minX / o);
                            return {
                                yRatio: p,
                                invertedYRatio: a,
                                zRatio: m,
                                xRatio: o,
                                initialXRatio: c,
                                invertedXRatio: d,
                                baseLineInvertedY: x,
                                baseLineY: y,
                                baseLineX: w
                            }
                        }
                    }, {
                        key: "getLogSeries",
                        value: function(a) {
                            var o = this,
                                c = this.w;
                            return c.globals.seriesLog = a.map(function(d, f) {
                                return c.config.yaxis[f] && c.config.yaxis[f].logarithmic ? d.map(function(p) {
                                    return null === p ? null : o.getLogVal(c.config.yaxis[f].logBase, p, f)
                                }) : d
                            }), c.globals.invalidLogScale ? a : c.globals.seriesLog
                        }
                    }, {
                        key: "getBaseLog",
                        value: function(a, o) {
                            return Math.log(o) / Math.log(a)
                        }
                    }, {
                        key: "getLogVal",
                        value: function(a, o, c) {
                            if (0 === o) return 0;
                            var d = this.w,
                                f = 0 === d.globals.minYArr[c] ? -1 : this.getBaseLog(a, d.globals.minYArr[c]),
                                p = (0 === d.globals.maxYArr[c] ? 0 : this.getBaseLog(a, d.globals.maxYArr[c])) - f;
                            return o < 1 ? o / p : (this.getBaseLog(a, o) - f) / p
                        }
                    }, {
                        key: "getLogYRatios",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = this.w.globals;
                            return d.yLogRatio = a.slice(), d.logYRange = d.yRange.map(function(f, p) {
                                if (c.config.yaxis[p] && o.w.config.yaxis[p].logarithmic) {
                                    var m, y = -Number.MAX_VALUE,
                                        x = Number.MIN_VALUE;
                                    return d.seriesLog.forEach(function(w, S) {
                                        w.forEach(function(T) {
                                            c.config.yaxis[S] && c.config.yaxis[S].logarithmic && (y = Math.max(T, y), x = Math.min(T, x))
                                        })
                                    }), m = Math.pow(d.yRange[p], Math.abs(x - y) / d.yRange[p]), d.yLogRatio[p] = m / d.gridHeight, m
                                }
                            }), d.invalidLogScale ? a.slice() : d.yLogRatio
                        }
                    }], [{
                        key: "checkComboSeries",
                        value: function(a) {
                            var o = !1,
                                c = 0,
                                d = 0;
                            return a.length && void 0 !== a[0].type && a.forEach(function(f) {
                                "bar" !== f.type && "column" !== f.type && "candlestick" !== f.type && "boxPlot" !== f.type || c++, void 0 !== f.type && d++
                            }), d > 0 && (o = !0), {
                                comboBarCount: c,
                                comboCharts: o
                            }
                        }
                    }, {
                        key: "extendArrayProps",
                        value: function(a, o, c) {
                            return o.yaxis && (o = a.extendYAxis(o, c)), o.annotations && (o.annotations.yaxis && (o = a.extendYAxisAnnotations(o)), o.annotations.xaxis && (o = a.extendXAxisAnnotations(o)), o.annotations.points && (o = a.extendPointAnnotations(o))), o
                        }
                    }]), K
                }(),
                Xe = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.annoCtx = a
                    }
                    return z(K, [{
                        key: "setOrientations",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                            if ("vertical" === a.label.orientation) {
                                var f = this.w.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(null !== o ? o : 0, "']"));
                                if (null !== f) {
                                    var p = f.getBoundingClientRect();
                                    f.setAttribute("x", parseFloat(f.getAttribute("x")) - p.height + 4), f.setAttribute("y", "top" === a.label.position ? parseFloat(f.getAttribute("y")) + p.width : parseFloat(f.getAttribute("y")) - p.width);
                                    var m = this.annoCtx.graphics.rotateAroundCenter(f),
                                        x = m.y;
                                    f.setAttribute("transform", "rotate(-90 ".concat(m.x, " ").concat(x, ")"))
                                }
                            }
                        }
                    }, {
                        key: "addBackgroundToAnno",
                        value: function(a, o) {
                            var c = this.w;
                            if (!a || void 0 === o.label.text || void 0 !== o.label.text && !String(o.label.text).trim()) return null;
                            var d = c.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),
                                f = a.getBoundingClientRect(),
                                p = o.label.style.padding.left,
                                m = o.label.style.padding.right,
                                y = o.label.style.padding.top,
                                x = o.label.style.padding.bottom;
                            "vertical" === o.label.orientation && (y = o.label.style.padding.left, x = o.label.style.padding.right, p = o.label.style.padding.top, m = o.label.style.padding.bottom);
                            var T = this.annoCtx.graphics.drawRect(f.left - d.left - p - c.globals.barPadForNumericAxis, f.top - d.top - y, f.width + p + m, f.height + y + x, o.label.borderRadius, o.label.style.background, 1, o.label.borderWidth, o.label.borderColor, 0);
                            return o.id && T.node.classList.add(o.id), T
                        }
                    }, {
                        key: "annotationsBackground",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = function(d, f, p) {
                                    var m = o.globals.dom.baseEl.querySelector(".apexcharts-".concat(p, "-annotations .apexcharts-").concat(p, "-annotation-label[rel='").concat(f, "']"));
                                    if (m) {
                                        var y = m.parentNode,
                                            x = a.addBackgroundToAnno(m, d);
                                        x && (y.insertBefore(x.node, m), d.label.mouseEnter && x.node.addEventListener("mouseenter", d.label.mouseEnter.bind(a, d)), d.label.mouseLeave && x.node.addEventListener("mouseleave", d.label.mouseLeave.bind(a, d)), d.label.click && x.node.addEventListener("click", d.label.click.bind(a, d)))
                                    }
                                };
                            o.config.annotations.xaxis.map(function(d, f) {
                                c(d, f, "xaxis")
                            }), o.config.annotations.yaxis.map(function(d, f) {
                                c(d, f, "yaxis")
                            }), o.config.annotations.points.map(function(d, f) {
                                c(d, f, "point")
                            })
                        }
                    }, {
                        key: "getY1Y2",
                        value: function(a, o) {
                            var c, d = "y1" === a ? o.y : o.y2,
                                f = this.w;
                            if (this.annoCtx.invertAxis) {
                                var p = f.globals.labels.indexOf(d);
                                f.config.xaxis.convertedCatToNumeric && (p = f.globals.categoryLabels.indexOf(d));
                                var m = f.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (p + 1) + ")");
                                m && (c = parseFloat(m.getAttribute("y")))
                            } else {
                                var y;
                                y = f.config.yaxis[o.yAxisIndex].logarithmic ? (d = new Ie(this.annoCtx.ctx).getLogVal(d, o.yAxisIndex)) / f.globals.yLogRatio[o.yAxisIndex] : (d - f.globals.minYArr[o.yAxisIndex]) / (f.globals.yRange[o.yAxisIndex] / f.globals.gridHeight), c = f.globals.gridHeight - y, !o.marker || null != o.y || (c = 0), f.config.yaxis[o.yAxisIndex] && f.config.yaxis[o.yAxisIndex].reversed && (c = y)
                            }
                            return "string" == typeof d && d.indexOf("px") > -1 && (c = parseFloat(d)), c
                        }
                    }, {
                        key: "getX1X2",
                        value: function(a, o) {
                            var c = this.w,
                                d = this.annoCtx.invertAxis ? c.globals.minY : c.globals.minX,
                                f = this.annoCtx.invertAxis ? c.globals.maxY : c.globals.maxX,
                                p = this.annoCtx.invertAxis ? c.globals.yRange[0] : c.globals.xRange,
                                m = (o.x - d) / (p / c.globals.gridWidth);
                            this.annoCtx.inversedReversedAxis && (m = (f - o.x) / (p / c.globals.gridWidth)), "category" !== c.config.xaxis.type && !c.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || c.globals.dataFormatXNumeric || (m = this.getStringX(o.x));
                            var y = (o.x2 - d) / (p / c.globals.gridWidth);
                            return this.annoCtx.inversedReversedAxis && (y = (f - o.x2) / (p / c.globals.gridWidth)), "category" !== c.config.xaxis.type && !c.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || c.globals.dataFormatXNumeric || (y = this.getStringX(o.x2)), null != o.x || !o.marker || (m = c.globals.gridWidth), "x1" === a && "string" == typeof o.x && o.x.indexOf("px") > -1 && (m = parseFloat(o.x)), "x2" === a && "string" == typeof o.x2 && o.x2.indexOf("px") > -1 && (y = parseFloat(o.x2)), "x1" === a ? m : y
                        }
                    }, {
                        key: "getStringX",
                        value: function(a) {
                            var o = this.w,
                                c = a;
                            o.config.xaxis.convertedCatToNumeric && o.globals.categoryLabels.length && (a = o.globals.categoryLabels.indexOf(a) + 1);
                            var d = o.globals.labels.indexOf(a),
                                f = o.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (d + 1) + ")");
                            return f && (c = parseFloat(f.getAttribute("x"))), c
                        }
                    }]), K
                }(),
                R = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.annoCtx = a, this.invertAxis = this.annoCtx.invertAxis, this.helpers = new Xe(this.annoCtx)
                    }
                    return z(K, [{
                        key: "addXaxisAnnotation",
                        value: function(a, o, c) {
                            var d, f = this.w,
                                p = this.helpers.getX1X2("x1", a),
                                m = a.label.text,
                                y = a.strokeDashArray;
                            if (te.isNumber(p)) {
                                if (null == a.x2) {
                                    var x = this.annoCtx.graphics.drawLine(p + a.offsetX, 0 + a.offsetY, p + a.offsetX, f.globals.gridHeight + a.offsetY, a.borderColor, y, a.borderWidth);
                                    o.appendChild(x.node), a.id && x.node.classList.add(a.id)
                                } else {
                                    if ((d = this.helpers.getX1X2("x2", a)) < p) {
                                        var w = p;
                                        p = d, d = w
                                    }
                                    var S = this.annoCtx.graphics.drawRect(p + a.offsetX, 0 + a.offsetY, d - p, f.globals.gridHeight + a.offsetY, 0, a.fillColor, a.opacity, 1, a.borderColor, y);
                                    S.node.classList.add("apexcharts-annotation-rect"), S.attr("clip-path", "url(#gridRectMask".concat(f.globals.cuid, ")")), o.appendChild(S.node), a.id && S.node.classList.add(a.id)
                                }
                                var T = this.annoCtx.graphics.getTextRects(m, parseFloat(a.label.style.fontSize)),
                                    O = this.annoCtx.graphics.drawText({
                                        x: p + a.label.offsetX,
                                        y: ("top" === a.label.position ? 4 : "center" === a.label.position ? f.globals.gridHeight / 2 + ("vertical" === a.label.orientation ? T.width / 2 : 0) : f.globals.gridHeight) + a.label.offsetY - ("vertical" === a.label.orientation ? "top" === a.label.position ? T.width / 2 - 12 : -T.width / 2 : 0),
                                        text: m,
                                        textAnchor: a.label.textAnchor,
                                        fontSize: a.label.style.fontSize,
                                        fontFamily: a.label.style.fontFamily,
                                        fontWeight: a.label.style.fontWeight,
                                        foreColor: a.label.style.color,
                                        cssClass: "apexcharts-xaxis-annotation-label ".concat(a.label.style.cssClass, " ").concat(a.id ? a.id : "")
                                    });
                                O.attr({
                                    rel: c
                                }), o.appendChild(O.node), this.annoCtx.helpers.setOrientations(a, c)
                            }
                        }
                    }, {
                        key: "drawXAxisAnnotations",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = this.annoCtx.graphics.group({
                                    class: "apexcharts-xaxis-annotations"
                                });
                            return o.config.annotations.xaxis.map(function(d, f) {
                                a.addXaxisAnnotation(d, c.node, f)
                            }), c
                        }
                    }]), K
                }(),
                ce = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.annoCtx = a, this.helpers = new Xe(this.annoCtx)
                    }
                    return z(K, [{
                        key: "addYaxisAnnotation",
                        value: function(a, o, c) {
                            var d, f = this.w,
                                p = a.strokeDashArray,
                                m = this.helpers.getY1Y2("y1", a),
                                y = a.label.text;
                            if (null == a.y2) {
                                var x = this.annoCtx.graphics.drawLine(0 + a.offsetX, m + a.offsetY, this._getYAxisAnnotationWidth(a), m + a.offsetY, a.borderColor, p, a.borderWidth);
                                o.appendChild(x.node), a.id && x.node.classList.add(a.id)
                            } else {
                                if ((d = this.helpers.getY1Y2("y2", a)) > m) {
                                    var w = m;
                                    m = d, d = w
                                }
                                var S = this.annoCtx.graphics.drawRect(0 + a.offsetX, d + a.offsetY, this._getYAxisAnnotationWidth(a), m - d, 0, a.fillColor, a.opacity, 1, a.borderColor, p);
                                S.node.classList.add("apexcharts-annotation-rect"), S.attr("clip-path", "url(#gridRectMask".concat(f.globals.cuid, ")")), o.appendChild(S.node), a.id && S.node.classList.add(a.id)
                            }
                            var k = this.annoCtx.graphics.drawText({
                                x: ("right" === a.label.position ? f.globals.gridWidth : "center" === a.label.position ? f.globals.gridWidth / 2 : 0) + a.label.offsetX,
                                y: (d ? ? m) + a.label.offsetY - 3,
                                text: y,
                                textAnchor: a.label.textAnchor,
                                fontSize: a.label.style.fontSize,
                                fontFamily: a.label.style.fontFamily,
                                fontWeight: a.label.style.fontWeight,
                                foreColor: a.label.style.color,
                                cssClass: "apexcharts-yaxis-annotation-label ".concat(a.label.style.cssClass, " ").concat(a.id ? a.id : "")
                            });
                            k.attr({
                                rel: c
                            }), o.appendChild(k.node)
                        }
                    }, {
                        key: "_getYAxisAnnotationWidth",
                        value: function(a) {
                            var o = this.w;
                            return (a.width.indexOf("%") > -1 ? o.globals.gridWidth * parseInt(a.width, 10) / 100 : parseInt(a.width, 10)) + a.offsetX
                        }
                    }, {
                        key: "drawYAxisAnnotations",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = this.annoCtx.graphics.group({
                                    class: "apexcharts-yaxis-annotations"
                                });
                            return o.config.annotations.yaxis.map(function(d, f) {
                                a.addYaxisAnnotation(d, c.node, f)
                            }), c
                        }
                    }]), K
                }(),
                Ve = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.annoCtx = a, this.helpers = new Xe(this.annoCtx)
                    }
                    return z(K, [{
                        key: "addPointAnnotation",
                        value: function(a, o, c) {
                            var d = this.helpers.getX1X2("x1", a),
                                f = this.helpers.getY1Y2("y1", a);
                            if (te.isNumber(d)) {
                                var p = {
                                        pSize: a.marker.size,
                                        pointStrokeWidth: a.marker.strokeWidth,
                                        pointFillColor: a.marker.fillColor,
                                        pointStrokeColor: a.marker.strokeColor,
                                        shape: a.marker.shape,
                                        pRadius: a.marker.radius,
                                        class: "apexcharts-point-annotation-marker ".concat(a.marker.cssClass, " ").concat(a.id ? a.id : "")
                                    },
                                    m = this.annoCtx.graphics.drawMarker(d + a.marker.offsetX, f + a.marker.offsetY, p);
                                o.appendChild(m.node);
                                var y = a.label.text ? a.label.text : "",
                                    x = this.annoCtx.graphics.drawText({
                                        x: d + a.label.offsetX,
                                        y: f + a.label.offsetY - a.marker.size - parseFloat(a.label.style.fontSize) / 1.6,
                                        text: y,
                                        textAnchor: a.label.textAnchor,
                                        fontSize: a.label.style.fontSize,
                                        fontFamily: a.label.style.fontFamily,
                                        fontWeight: a.label.style.fontWeight,
                                        foreColor: a.label.style.color,
                                        cssClass: "apexcharts-point-annotation-label ".concat(a.label.style.cssClass, " ").concat(a.id ? a.id : "")
                                    });
                                if (x.attr({
                                        rel: c
                                    }), o.appendChild(x.node), a.customSVG.SVG) {
                                    var w = this.annoCtx.graphics.group({
                                        class: "apexcharts-point-annotations-custom-svg " + a.customSVG.cssClass
                                    });
                                    w.attr({
                                        transform: "translate(".concat(d + a.customSVG.offsetX, ", ").concat(f + a.customSVG.offsetY, ")")
                                    }), w.node.innerHTML = a.customSVG.SVG, o.appendChild(w.node)
                                }
                                if (a.image.path) {
                                    var S = a.image.width ? a.image.width : 20,
                                        T = a.image.height ? a.image.height : 20;
                                    m = this.annoCtx.addImage({
                                        x: d + a.image.offsetX - S / 2,
                                        y: f + a.image.offsetY - T / 2,
                                        width: S,
                                        height: T,
                                        path: a.image.path,
                                        appendTo: ".apexcharts-point-annotations"
                                    })
                                }
                                a.mouseEnter && m.node.addEventListener("mouseenter", a.mouseEnter.bind(this, a)), a.mouseLeave && m.node.addEventListener("mouseleave", a.mouseLeave.bind(this, a)), a.click && m.node.addEventListener("click", a.click.bind(this, a))
                            }
                        }
                    }, {
                        key: "drawPointAnnotations",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = this.annoCtx.graphics.group({
                                    class: "apexcharts-point-annotations"
                                });
                            return o.config.annotations.points.map(function(d, f) {
                                a.addPointAnnotation(d, c.node, f)
                            }), c
                        }
                    }]), K
                }(),
                Ze = {
                    name: "en",
                    options: {
                        months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                        shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                        days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                        toolbar: {
                            exportToSVG: "Download SVG",
                            exportToPNG: "Download PNG",
                            exportToCSV: "Download CSV",
                            menu: "Menu",
                            selection: "Selection",
                            selectionZoom: "Selection Zoom",
                            zoomIn: "Zoom In",
                            zoomOut: "Zoom Out",
                            pan: "Panning",
                            reset: "Reset Zoom"
                        }
                    }
                },
                tt = function() {
                    function K() {
                        U(this, K), this.yAxis = {
                            show: !0,
                            showAlways: !1,
                            showForNullSeries: !0,
                            seriesName: void 0,
                            opposite: !1,
                            reversed: !1,
                            logarithmic: !1,
                            logBase: 10,
                            tickAmount: void 0,
                            forceNiceScale: !1,
                            max: void 0,
                            min: void 0,
                            floating: !1,
                            decimalsInFloat: void 0,
                            labels: {
                                show: !0,
                                minWidth: 0,
                                maxWidth: 160,
                                offsetX: 0,
                                offsetY: 0,
                                align: void 0,
                                rotate: 0,
                                padding: 20,
                                style: {
                                    colors: [],
                                    fontSize: "11px",
                                    fontWeight: 400,
                                    fontFamily: void 0,
                                    cssClass: ""
                                },
                                formatter: void 0
                            },
                            axisBorder: {
                                show: !1,
                                color: "#e0e0e0",
                                width: 1,
                                offsetX: 0,
                                offsetY: 0
                            },
                            axisTicks: {
                                show: !1,
                                color: "#e0e0e0",
                                width: 6,
                                offsetX: 0,
                                offsetY: 0
                            },
                            title: {
                                text: void 0,
                                rotate: -90,
                                offsetY: 0,
                                offsetX: 0,
                                style: {
                                    color: void 0,
                                    fontSize: "11px",
                                    fontWeight: 900,
                                    fontFamily: void 0,
                                    cssClass: ""
                                }
                            },
                            tooltip: {
                                enabled: !1,
                                offsetX: 0
                            },
                            crosshairs: {
                                show: !0,
                                position: "front",
                                stroke: {
                                    color: "#b6b6b6",
                                    width: 1,
                                    dashArray: 0
                                }
                            }
                        }, this.pointAnnotation = {
                            id: void 0,
                            x: 0,
                            y: null,
                            yAxisIndex: 0,
                            seriesIndex: 0,
                            mouseEnter: void 0,
                            mouseLeave: void 0,
                            click: void 0,
                            marker: {
                                size: 4,
                                fillColor: "#fff",
                                strokeWidth: 2,
                                strokeColor: "#333",
                                shape: "circle",
                                offsetX: 0,
                                offsetY: 0,
                                radius: 2,
                                cssClass: ""
                            },
                            label: {
                                borderColor: "#c2c2c2",
                                borderWidth: 1,
                                borderRadius: 2,
                                text: void 0,
                                textAnchor: "middle",
                                offsetX: 0,
                                offsetY: 0,
                                mouseEnter: void 0,
                                mouseLeave: void 0,
                                click: void 0,
                                style: {
                                    background: "#fff",
                                    color: void 0,
                                    fontSize: "11px",
                                    fontFamily: void 0,
                                    fontWeight: 400,
                                    cssClass: "",
                                    padding: {
                                        left: 5,
                                        right: 5,
                                        top: 2,
                                        bottom: 2
                                    }
                                }
                            },
                            customSVG: {
                                SVG: void 0,
                                cssClass: void 0,
                                offsetX: 0,
                                offsetY: 0
                            },
                            image: {
                                path: void 0,
                                width: 20,
                                height: 20,
                                offsetX: 0,
                                offsetY: 0
                            }
                        }, this.yAxisAnnotation = {
                            id: void 0,
                            y: 0,
                            y2: null,
                            strokeDashArray: 1,
                            fillColor: "#c2c2c2",
                            borderColor: "#c2c2c2",
                            borderWidth: 1,
                            opacity: .3,
                            offsetX: 0,
                            offsetY: 0,
                            width: "100%",
                            yAxisIndex: 0,
                            label: {
                                borderColor: "#c2c2c2",
                                borderWidth: 1,
                                borderRadius: 2,
                                text: void 0,
                                textAnchor: "end",
                                position: "right",
                                offsetX: 0,
                                offsetY: -3,
                                mouseEnter: void 0,
                                mouseLeave: void 0,
                                click: void 0,
                                style: {
                                    background: "#fff",
                                    color: void 0,
                                    fontSize: "11px",
                                    fontFamily: void 0,
                                    fontWeight: 400,
                                    cssClass: "",
                                    padding: {
                                        left: 5,
                                        right: 5,
                                        top: 2,
                                        bottom: 2
                                    }
                                }
                            }
                        }, this.xAxisAnnotation = {
                            id: void 0,
                            x: 0,
                            x2: null,
                            strokeDashArray: 1,
                            fillColor: "#c2c2c2",
                            borderColor: "#c2c2c2",
                            borderWidth: 1,
                            opacity: .3,
                            offsetX: 0,
                            offsetY: 0,
                            label: {
                                borderColor: "#c2c2c2",
                                borderWidth: 1,
                                borderRadius: 2,
                                text: void 0,
                                textAnchor: "middle",
                                orientation: "vertical",
                                position: "top",
                                offsetX: 0,
                                offsetY: 0,
                                mouseEnter: void 0,
                                mouseLeave: void 0,
                                click: void 0,
                                style: {
                                    background: "#fff",
                                    color: void 0,
                                    fontSize: "11px",
                                    fontFamily: void 0,
                                    fontWeight: 400,
                                    cssClass: "",
                                    padding: {
                                        left: 5,
                                        right: 5,
                                        top: 2,
                                        bottom: 2
                                    }
                                }
                            }
                        }, this.text = {
                            x: 0,
                            y: 0,
                            text: "",
                            textAnchor: "start",
                            foreColor: void 0,
                            fontSize: "13px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            appendTo: ".apexcharts-annotations",
                            backgroundColor: "transparent",
                            borderColor: "#c2c2c2",
                            borderRadius: 0,
                            borderWidth: 0,
                            paddingLeft: 4,
                            paddingRight: 4,
                            paddingTop: 2,
                            paddingBottom: 2
                        }
                    }
                    return z(K, [{
                        key: "init",
                        value: function() {
                            return {
                                annotations: {
                                    yaxis: [this.yAxisAnnotation],
                                    xaxis: [this.xAxisAnnotation],
                                    points: [this.pointAnnotation],
                                    texts: [],
                                    images: [],
                                    shapes: []
                                },
                                chart: {
                                    animations: {
                                        enabled: !0,
                                        easing: "easeinout",
                                        speed: 800,
                                        animateGradually: {
                                            delay: 150,
                                            enabled: !0
                                        },
                                        dynamicAnimation: {
                                            enabled: !0,
                                            speed: 350
                                        }
                                    },
                                    background: "transparent",
                                    locales: [Ze],
                                    defaultLocale: "en",
                                    dropShadow: {
                                        enabled: !1,
                                        enabledOnSeries: void 0,
                                        top: 2,
                                        left: 2,
                                        blur: 4,
                                        color: "#000",
                                        opacity: .35
                                    },
                                    events: {
                                        animationEnd: void 0,
                                        beforeMount: void 0,
                                        mounted: void 0,
                                        updated: void 0,
                                        click: void 0,
                                        mouseMove: void 0,
                                        mouseLeave: void 0,
                                        xAxisLabelClick: void 0,
                                        legendClick: void 0,
                                        markerClick: void 0,
                                        selection: void 0,
                                        dataPointSelection: void 0,
                                        dataPointMouseEnter: void 0,
                                        dataPointMouseLeave: void 0,
                                        beforeZoom: void 0,
                                        beforeResetZoom: void 0,
                                        zoomed: void 0,
                                        scrolled: void 0,
                                        brushScrolled: void 0
                                    },
                                    foreColor: "#373d3f",
                                    fontFamily: "Helvetica, Arial, sans-serif",
                                    height: "auto",
                                    parentHeightOffset: 15,
                                    redrawOnParentResize: !0,
                                    redrawOnWindowResize: !0,
                                    id: void 0,
                                    group: void 0,
                                    nonce: void 0,
                                    offsetX: 0,
                                    offsetY: 0,
                                    selection: {
                                        enabled: !1,
                                        type: "x",
                                        fill: {
                                            color: "#24292e",
                                            opacity: .1
                                        },
                                        stroke: {
                                            width: 1,
                                            color: "#24292e",
                                            opacity: .4,
                                            dashArray: 3
                                        },
                                        xaxis: {
                                            min: void 0,
                                            max: void 0
                                        },
                                        yaxis: {
                                            min: void 0,
                                            max: void 0
                                        }
                                    },
                                    sparkline: {
                                        enabled: !1
                                    },
                                    brush: {
                                        enabled: !1,
                                        autoScaleYaxis: !0,
                                        target: void 0,
                                        targets: void 0
                                    },
                                    stacked: !1,
                                    stackOnlyBar: !0,
                                    stackType: "normal",
                                    toolbar: {
                                        show: !0,
                                        offsetX: 0,
                                        offsetY: 0,
                                        tools: {
                                            download: !0,
                                            selection: !0,
                                            zoom: !0,
                                            zoomin: !0,
                                            zoomout: !0,
                                            pan: !0,
                                            reset: !0,
                                            customIcons: []
                                        },
                                        export: {
                                            csv: {
                                                filename: void 0,
                                                columnDelimiter: ",",
                                                headerCategory: "category",
                                                headerValue: "value",
                                                dateFormatter: function(a) {
                                                    return new Date(a).toDateString()
                                                }
                                            },
                                            png: {
                                                filename: void 0
                                            },
                                            svg: {
                                                filename: void 0
                                            }
                                        },
                                        autoSelected: "zoom"
                                    },
                                    type: "line",
                                    width: "100%",
                                    zoom: {
                                        enabled: !0,
                                        type: "x",
                                        autoScaleYaxis: !1,
                                        zoomedArea: {
                                            fill: {
                                                color: "#90CAF9",
                                                opacity: .4
                                            },
                                            stroke: {
                                                color: "#0D47A1",
                                                opacity: .4,
                                                width: 1
                                            }
                                        }
                                    }
                                },
                                plotOptions: {
                                    area: {
                                        fillTo: "origin"
                                    },
                                    bar: {
                                        horizontal: !1,
                                        columnWidth: "70%",
                                        barHeight: "70%",
                                        distributed: !1,
                                        borderRadius: 0,
                                        borderRadiusApplication: "around",
                                        borderRadiusWhenStacked: "last",
                                        rangeBarOverlap: !0,
                                        rangeBarGroupRows: !1,
                                        hideZeroBarsWhenGrouped: !1,
                                        isDumbbell: !1,
                                        dumbbellColors: void 0,
                                        isFunnel: !1,
                                        isFunnel3d: !0,
                                        colors: {
                                            ranges: [],
                                            backgroundBarColors: [],
                                            backgroundBarOpacity: 1,
                                            backgroundBarRadius: 0
                                        },
                                        dataLabels: {
                                            position: "top",
                                            maxItems: 100,
                                            hideOverflowingLabels: !0,
                                            orientation: "horizontal",
                                            total: {
                                                enabled: !1,
                                                formatter: void 0,
                                                offsetX: 0,
                                                offsetY: 0,
                                                style: {
                                                    color: "#373d3f",
                                                    fontSize: "12px",
                                                    fontFamily: void 0,
                                                    fontWeight: 600
                                                }
                                            }
                                        }
                                    },
                                    bubble: {
                                        zScaling: !0,
                                        minBubbleRadius: void 0,
                                        maxBubbleRadius: void 0
                                    },
                                    candlestick: {
                                        colors: {
                                            upward: "#00B746",
                                            downward: "#EF403C"
                                        },
                                        wick: {
                                            useFillColor: !0
                                        }
                                    },
                                    boxPlot: {
                                        colors: {
                                            upper: "#00E396",
                                            lower: "#008FFB"
                                        }
                                    },
                                    heatmap: {
                                        radius: 2,
                                        enableShades: !0,
                                        shadeIntensity: .5,
                                        reverseNegativeShade: !1,
                                        distributed: !1,
                                        useFillColorAsStroke: !1,
                                        colorScale: {
                                            inverse: !1,
                                            ranges: [],
                                            min: void 0,
                                            max: void 0
                                        }
                                    },
                                    treemap: {
                                        enableShades: !0,
                                        shadeIntensity: .5,
                                        distributed: !1,
                                        reverseNegativeShade: !1,
                                        useFillColorAsStroke: !1,
                                        dataLabels: {
                                            format: "scale"
                                        },
                                        colorScale: {
                                            inverse: !1,
                                            ranges: [],
                                            min: void 0,
                                            max: void 0
                                        }
                                    },
                                    radialBar: {
                                        inverseOrder: !1,
                                        startAngle: 0,
                                        endAngle: 360,
                                        offsetX: 0,
                                        offsetY: 0,
                                        hollow: {
                                            margin: 5,
                                            size: "50%",
                                            background: "transparent",
                                            image: void 0,
                                            imageWidth: 150,
                                            imageHeight: 150,
                                            imageOffsetX: 0,
                                            imageOffsetY: 0,
                                            imageClipped: !0,
                                            position: "front",
                                            dropShadow: {
                                                enabled: !1,
                                                top: 0,
                                                left: 0,
                                                blur: 3,
                                                color: "#000",
                                                opacity: .5
                                            }
                                        },
                                        track: {
                                            show: !0,
                                            startAngle: void 0,
                                            endAngle: void 0,
                                            background: "#f2f2f2",
                                            strokeWidth: "97%",
                                            opacity: 1,
                                            margin: 5,
                                            dropShadow: {
                                                enabled: !1,
                                                top: 0,
                                                left: 0,
                                                blur: 3,
                                                color: "#000",
                                                opacity: .5
                                            }
                                        },
                                        dataLabels: {
                                            show: !0,
                                            name: {
                                                show: !0,
                                                fontSize: "16px",
                                                fontFamily: void 0,
                                                fontWeight: 600,
                                                color: void 0,
                                                offsetY: 0,
                                                formatter: function(a) {
                                                    return a
                                                }
                                            },
                                            value: {
                                                show: !0,
                                                fontSize: "14px",
                                                fontFamily: void 0,
                                                fontWeight: 400,
                                                color: void 0,
                                                offsetY: 16,
                                                formatter: function(a) {
                                                    return a + "%"
                                                }
                                            },
                                            total: {
                                                show: !1,
                                                label: "Total",
                                                fontSize: "16px",
                                                fontWeight: 600,
                                                fontFamily: void 0,
                                                color: void 0,
                                                formatter: function(a) {
                                                    return a.globals.seriesTotals.reduce(function(o, c) {
                                                        return o + c
                                                    }, 0) / a.globals.series.length + "%"
                                                }
                                            }
                                        },
                                        barLabels: {
                                            enabled: !1,
                                            margin: 5,
                                            useSeriesColors: !0,
                                            fontFamily: void 0,
                                            fontWeight: 600,
                                            fontSize: "16px",
                                            formatter: function(a) {
                                                return a
                                            },
                                            onClick: void 0
                                        }
                                    },
                                    pie: {
                                        customScale: 1,
                                        offsetX: 0,
                                        offsetY: 0,
                                        startAngle: 0,
                                        endAngle: 360,
                                        expandOnClick: !0,
                                        dataLabels: {
                                            offset: 0,
                                            minAngleToShowLabel: 10
                                        },
                                        donut: {
                                            size: "65%",
                                            background: "transparent",
                                            labels: {
                                                show: !1,
                                                name: {
                                                    show: !0,
                                                    fontSize: "16px",
                                                    fontFamily: void 0,
                                                    fontWeight: 600,
                                                    color: void 0,
                                                    offsetY: -10,
                                                    formatter: function(a) {
                                                        return a
                                                    }
                                                },
                                                value: {
                                                    show: !0,
                                                    fontSize: "20px",
                                                    fontFamily: void 0,
                                                    fontWeight: 400,
                                                    color: void 0,
                                                    offsetY: 10,
                                                    formatter: function(a) {
                                                        return a
                                                    }
                                                },
                                                total: {
                                                    show: !1,
                                                    showAlways: !1,
                                                    label: "Total",
                                                    fontSize: "16px",
                                                    fontWeight: 400,
                                                    fontFamily: void 0,
                                                    color: void 0,
                                                    formatter: function(a) {
                                                        return a.globals.seriesTotals.reduce(function(o, c) {
                                                            return o + c
                                                        }, 0)
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    polarArea: {
                                        rings: {
                                            strokeWidth: 1,
                                            strokeColor: "#e8e8e8"
                                        },
                                        spokes: {
                                            strokeWidth: 1,
                                            connectorColors: "#e8e8e8"
                                        }
                                    },
                                    radar: {
                                        size: void 0,
                                        offsetX: 0,
                                        offsetY: 0,
                                        polygons: {
                                            strokeWidth: 1,
                                            strokeColors: "#e8e8e8",
                                            connectorColors: "#e8e8e8",
                                            fill: {
                                                colors: void 0
                                            }
                                        }
                                    }
                                },
                                colors: void 0,
                                dataLabels: {
                                    enabled: !0,
                                    enabledOnSeries: void 0,
                                    formatter: function(a) {
                                        return null !== a ? a : ""
                                    },
                                    textAnchor: "middle",
                                    distributed: !1,
                                    offsetX: 0,
                                    offsetY: 0,
                                    style: {
                                        fontSize: "12px",
                                        fontFamily: void 0,
                                        fontWeight: 600,
                                        colors: void 0
                                    },
                                    background: {
                                        enabled: !0,
                                        foreColor: "#fff",
                                        borderRadius: 2,
                                        padding: 4,
                                        opacity: .9,
                                        borderWidth: 1,
                                        borderColor: "#fff",
                                        dropShadow: {
                                            enabled: !1,
                                            top: 1,
                                            left: 1,
                                            blur: 1,
                                            color: "#000",
                                            opacity: .45
                                        }
                                    },
                                    dropShadow: {
                                        enabled: !1,
                                        top: 1,
                                        left: 1,
                                        blur: 1,
                                        color: "#000",
                                        opacity: .45
                                    }
                                },
                                fill: {
                                    type: "solid",
                                    colors: void 0,
                                    opacity: .85,
                                    gradient: {
                                        shade: "dark",
                                        type: "horizontal",
                                        shadeIntensity: .5,
                                        gradientToColors: void 0,
                                        inverseColors: !0,
                                        opacityFrom: 1,
                                        opacityTo: 1,
                                        stops: [0, 50, 100],
                                        colorStops: []
                                    },
                                    image: {
                                        src: [],
                                        width: void 0,
                                        height: void 0
                                    },
                                    pattern: {
                                        style: "squares",
                                        width: 6,
                                        height: 6,
                                        strokeWidth: 2
                                    }
                                },
                                forecastDataPoints: {
                                    count: 0,
                                    fillOpacity: .5,
                                    strokeWidth: void 0,
                                    dashArray: 4
                                },
                                grid: {
                                    show: !0,
                                    borderColor: "#e0e0e0",
                                    strokeDashArray: 0,
                                    position: "back",
                                    xaxis: {
                                        lines: {
                                            show: !1
                                        }
                                    },
                                    yaxis: {
                                        lines: {
                                            show: !0
                                        }
                                    },
                                    row: {
                                        colors: void 0,
                                        opacity: .5
                                    },
                                    column: {
                                        colors: void 0,
                                        opacity: .5
                                    },
                                    padding: {
                                        top: 0,
                                        right: 10,
                                        bottom: 0,
                                        left: 12
                                    }
                                },
                                labels: [],
                                legend: {
                                    show: !0,
                                    showForSingleSeries: !1,
                                    showForNullSeries: !0,
                                    showForZeroSeries: !0,
                                    floating: !1,
                                    position: "bottom",
                                    horizontalAlign: "center",
                                    inverseOrder: !1,
                                    fontSize: "12px",
                                    fontFamily: void 0,
                                    fontWeight: 400,
                                    width: void 0,
                                    height: void 0,
                                    formatter: void 0,
                                    tooltipHoverFormatter: void 0,
                                    offsetX: -20,
                                    offsetY: 4,
                                    customLegendItems: [],
                                    labels: {
                                        colors: void 0,
                                        useSeriesColors: !1
                                    },
                                    markers: {
                                        width: 12,
                                        height: 12,
                                        strokeWidth: 0,
                                        fillColors: void 0,
                                        strokeColor: "#fff",
                                        radius: 12,
                                        customHTML: void 0,
                                        offsetX: 0,
                                        offsetY: 0,
                                        onClick: void 0
                                    },
                                    itemMargin: {
                                        horizontal: 5,
                                        vertical: 2
                                    },
                                    onItemClick: {
                                        toggleDataSeries: !0
                                    },
                                    onItemHover: {
                                        highlightDataSeries: !0
                                    }
                                },
                                markers: {
                                    discrete: [],
                                    size: 0,
                                    colors: void 0,
                                    strokeColors: "#fff",
                                    strokeWidth: 2,
                                    strokeOpacity: .9,
                                    strokeDashArray: 0,
                                    fillOpacity: 1,
                                    shape: "circle",
                                    width: 8,
                                    height: 8,
                                    radius: 2,
                                    offsetX: 0,
                                    offsetY: 0,
                                    onClick: void 0,
                                    onDblClick: void 0,
                                    showNullDataPoints: !0,
                                    hover: {
                                        size: void 0,
                                        sizeOffset: 3
                                    }
                                },
                                noData: {
                                    text: void 0,
                                    align: "center",
                                    verticalAlign: "middle",
                                    offsetX: 0,
                                    offsetY: 0,
                                    style: {
                                        color: void 0,
                                        fontSize: "14px",
                                        fontFamily: void 0
                                    }
                                },
                                responsive: [],
                                series: void 0,
                                states: {
                                    normal: {
                                        filter: {
                                            type: "none",
                                            value: 0
                                        }
                                    },
                                    hover: {
                                        filter: {
                                            type: "lighten",
                                            value: .1
                                        }
                                    },
                                    active: {
                                        allowMultipleDataPointsSelection: !1,
                                        filter: {
                                            type: "darken",
                                            value: .5
                                        }
                                    }
                                },
                                title: {
                                    text: void 0,
                                    align: "left",
                                    margin: 5,
                                    offsetX: 0,
                                    offsetY: 0,
                                    floating: !1,
                                    style: {
                                        fontSize: "14px",
                                        fontWeight: 900,
                                        fontFamily: void 0,
                                        color: void 0
                                    }
                                },
                                subtitle: {
                                    text: void 0,
                                    align: "left",
                                    margin: 5,
                                    offsetX: 0,
                                    offsetY: 30,
                                    floating: !1,
                                    style: {
                                        fontSize: "12px",
                                        fontWeight: 400,
                                        fontFamily: void 0,
                                        color: void 0
                                    }
                                },
                                stroke: {
                                    show: !0,
                                    curve: "smooth",
                                    lineCap: "butt",
                                    width: 2,
                                    colors: void 0,
                                    dashArray: 0,
                                    fill: {
                                        type: "solid",
                                        colors: void 0,
                                        opacity: .85,
                                        gradient: {
                                            shade: "dark",
                                            type: "horizontal",
                                            shadeIntensity: .5,
                                            gradientToColors: void 0,
                                            inverseColors: !0,
                                            opacityFrom: 1,
                                            opacityTo: 1,
                                            stops: [0, 50, 100],
                                            colorStops: []
                                        }
                                    }
                                },
                                tooltip: {
                                    enabled: !0,
                                    enabledOnSeries: void 0,
                                    shared: !0,
                                    hideEmptySeries: !0,
                                    followCursor: !1,
                                    intersect: !1,
                                    inverseOrder: !1,
                                    custom: void 0,
                                    fillSeriesColor: !1,
                                    theme: "light",
                                    cssClass: "",
                                    style: {
                                        fontSize: "12px",
                                        fontFamily: void 0
                                    },
                                    onDatasetHover: {
                                        highlightDataSeries: !1
                                    },
                                    x: {
                                        show: !0,
                                        format: "dd MMM",
                                        formatter: void 0
                                    },
                                    y: {
                                        formatter: void 0,
                                        title: {
                                            formatter: function(a) {
                                                return a ? a + ": " : ""
                                            }
                                        }
                                    },
                                    z: {
                                        formatter: void 0,
                                        title: "Size: "
                                    },
                                    marker: {
                                        show: !0,
                                        fillColors: void 0
                                    },
                                    items: {
                                        display: "flex"
                                    },
                                    fixed: {
                                        enabled: !1,
                                        position: "topRight",
                                        offsetX: 0,
                                        offsetY: 0
                                    }
                                },
                                xaxis: {
                                    type: "category",
                                    categories: [],
                                    convertedCatToNumeric: !1,
                                    offsetX: 0,
                                    offsetY: 0,
                                    overwriteCategories: void 0,
                                    labels: {
                                        show: !0,
                                        rotate: -45,
                                        rotateAlways: !1,
                                        hideOverlappingLabels: !0,
                                        trim: !1,
                                        minHeight: void 0,
                                        maxHeight: 120,
                                        showDuplicates: !0,
                                        style: {
                                            colors: [],
                                            fontSize: "12px",
                                            fontWeight: 400,
                                            fontFamily: void 0,
                                            cssClass: ""
                                        },
                                        offsetX: 0,
                                        offsetY: 0,
                                        format: void 0,
                                        formatter: void 0,
                                        datetimeUTC: !0,
                                        datetimeFormatter: {
                                            year: "yyyy",
                                            month: "MMM 'yy",
                                            day: "dd MMM",
                                            hour: "HH:mm",
                                            minute: "HH:mm:ss",
                                            second: "HH:mm:ss"
                                        }
                                    },
                                    group: {
                                        groups: [],
                                        style: {
                                            colors: [],
                                            fontSize: "12px",
                                            fontWeight: 400,
                                            fontFamily: void 0,
                                            cssClass: ""
                                        }
                                    },
                                    axisBorder: {
                                        show: !0,
                                        color: "#e0e0e0",
                                        width: "100%",
                                        height: 1,
                                        offsetX: 0,
                                        offsetY: 0
                                    },
                                    axisTicks: {
                                        show: !0,
                                        color: "#e0e0e0",
                                        height: 6,
                                        offsetX: 0,
                                        offsetY: 0
                                    },
                                    tickAmount: void 0,
                                    tickPlacement: "on",
                                    min: void 0,
                                    max: void 0,
                                    range: void 0,
                                    floating: !1,
                                    decimalsInFloat: void 0,
                                    position: "bottom",
                                    title: {
                                        text: void 0,
                                        offsetX: 0,
                                        offsetY: 0,
                                        style: {
                                            color: void 0,
                                            fontSize: "12px",
                                            fontWeight: 900,
                                            fontFamily: void 0,
                                            cssClass: ""
                                        }
                                    },
                                    crosshairs: {
                                        show: !0,
                                        width: 1,
                                        position: "back",
                                        opacity: .9,
                                        stroke: {
                                            color: "#b6b6b6",
                                            width: 1,
                                            dashArray: 3
                                        },
                                        fill: {
                                            type: "solid",
                                            color: "#B1B9C4",
                                            gradient: {
                                                colorFrom: "#D8E3F0",
                                                colorTo: "#BED1E6",
                                                stops: [0, 100],
                                                opacityFrom: .4,
                                                opacityTo: .5
                                            }
                                        },
                                        dropShadow: {
                                            enabled: !1,
                                            left: 0,
                                            top: 0,
                                            blur: 1,
                                            opacity: .4
                                        }
                                    },
                                    tooltip: {
                                        enabled: !0,
                                        offsetY: 0,
                                        formatter: void 0,
                                        style: {
                                            fontSize: "12px",
                                            fontFamily: void 0
                                        }
                                    }
                                },
                                yaxis: this.yAxis,
                                theme: {
                                    mode: "light",
                                    palette: "palette1",
                                    monochrome: {
                                        enabled: !1,
                                        color: "#008FFB",
                                        shadeTo: "light",
                                        shadeIntensity: .65
                                    }
                                }
                            }
                        }
                    }]), K
                }(),
                at = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.graphics = new J(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = !0), this.helpers = new Xe(this), this.xAxisAnnotations = new R(this), this.yAxisAnnotations = new ce(this), this.pointsAnnotations = new Ve(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = !0), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints
                    }
                    return z(K, [{
                        key: "drawAxesAnnotations",
                        value: function() {
                            var a = this.w;
                            if (a.globals.axisCharts) {
                                for (var o = this.yAxisAnnotations.drawYAxisAnnotations(), c = this.xAxisAnnotations.drawXAxisAnnotations(), d = this.pointsAnnotations.drawPointAnnotations(), f = a.config.chart.animations.enabled, p = [o, c, d], m = [c.node, o.node, d.node], y = 0; y < 3; y++) a.globals.dom.elGraphical.add(p[y]), !f || a.globals.resized || a.globals.dataChanged || "scatter" !== a.config.chart.type && "bubble" !== a.config.chart.type && a.globals.dataPoints > 1 && m[y].classList.add("apexcharts-element-hidden"), a.globals.delayedElements.push({
                                    el: m[y],
                                    index: 0
                                });
                                this.helpers.annotationsBackground()
                            }
                        }
                    }, {
                        key: "drawImageAnnos",
                        value: function() {
                            var a = this;
                            this.w.config.annotations.images.map(function(o, c) {
                                a.addImage(o, c)
                            })
                        }
                    }, {
                        key: "drawTextAnnos",
                        value: function() {
                            var a = this;
                            this.w.config.annotations.texts.map(function(o, c) {
                                a.addText(o, c)
                            })
                        }
                    }, {
                        key: "addXaxisAnnotation",
                        value: function(a, o, c) {
                            this.xAxisAnnotations.addXaxisAnnotation(a, o, c)
                        }
                    }, {
                        key: "addYaxisAnnotation",
                        value: function(a, o, c) {
                            this.yAxisAnnotations.addYaxisAnnotation(a, o, c)
                        }
                    }, {
                        key: "addPointAnnotation",
                        value: function(a, o, c) {
                            this.pointsAnnotations.addPointAnnotation(a, o, c)
                        }
                    }, {
                        key: "addText",
                        value: function(a, o) {
                            var f = a.text,
                                T = a.backgroundColor,
                                k = a.borderWidth,
                                O = a.strokeDashArray,
                                B = a.borderRadius,
                                $ = a.borderColor,
                                ne = a.appendTo,
                                re = void 0 === ne ? ".apexcharts-svg" : ne,
                                b = a.paddingLeft,
                                A = void 0 === b ? 4 : b,
                                F = a.paddingRight,
                                X = void 0 === F ? 4 : F,
                                be = a.paddingBottom,
                                Se = void 0 === be ? 2 : be,
                                Le = a.paddingTop,
                                ze = void 0 === Le ? 2 : Le,
                                nt = this.w,
                                yt = this.graphics.drawText({
                                    x: a.x,
                                    y: a.y,
                                    text: f,
                                    textAnchor: a.textAnchor || "start",
                                    fontSize: a.fontSize || "12px",
                                    fontWeight: a.fontWeight || "regular",
                                    fontFamily: a.fontFamily || nt.config.chart.fontFamily,
                                    foreColor: a.foreColor || nt.config.chart.foreColor,
                                    cssClass: a.cssClass
                                }),
                                dt = nt.globals.dom.baseEl.querySelector(re);
                            dt && dt.appendChild(yt.node);
                            var Tt = yt.bbox();
                            if (f) {
                                var wt = this.graphics.drawRect(Tt.x - A, Tt.y - ze, Tt.width + A + X, Tt.height + Se + ze, B, T || "transparent", 1, k, $, O);
                                dt.insertBefore(wt.node, yt.node)
                            }
                        }
                    }, {
                        key: "addImage",
                        value: function(a, o) {
                            var c = this.w,
                                f = a.x,
                                p = void 0 === f ? 0 : f,
                                m = a.y,
                                y = void 0 === m ? 0 : m,
                                x = a.width,
                                w = void 0 === x ? 20 : x,
                                S = a.height,
                                T = void 0 === S ? 20 : S,
                                k = a.appendTo,
                                O = void 0 === k ? ".apexcharts-svg" : k,
                                B = c.globals.dom.Paper.image(a.path);
                            B.size(w, T).move(p, y);
                            var $ = c.globals.dom.baseEl.querySelector(O);
                            return $ && $.appendChild(B.node), B
                        }
                    }, {
                        key: "addXaxisAnnotationExternal",
                        value: function(a, o, c) {
                            return this.addAnnotationExternal({
                                params: a,
                                pushToMemory: o,
                                context: c,
                                type: "xaxis",
                                contextMethod: c.addXaxisAnnotation
                            }), c
                        }
                    }, {
                        key: "addYaxisAnnotationExternal",
                        value: function(a, o, c) {
                            return this.addAnnotationExternal({
                                params: a,
                                pushToMemory: o,
                                context: c,
                                type: "yaxis",
                                contextMethod: c.addYaxisAnnotation
                            }), c
                        }
                    }, {
                        key: "addPointAnnotationExternal",
                        value: function(a, o, c) {
                            return void 0 === this.invertAxis && (this.invertAxis = c.w.globals.isBarHorizontal), this.addAnnotationExternal({
                                params: a,
                                pushToMemory: o,
                                context: c,
                                type: "point",
                                contextMethod: c.addPointAnnotation
                            }), c
                        }
                    }, {
                        key: "addAnnotationExternal",
                        value: function(a) {
                            var o = a.params,
                                c = a.pushToMemory,
                                d = a.context,
                                f = a.type,
                                p = a.contextMethod,
                                m = d,
                                y = m.w,
                                x = y.globals.dom.baseEl.querySelector(".apexcharts-".concat(f, "-annotations")),
                                w = x.childNodes.length + 1,
                                S = new tt,
                                T = Object.assign({}, "xaxis" === f ? S.xAxisAnnotation : "yaxis" === f ? S.yAxisAnnotation : S.pointAnnotation),
                                k = te.extend(T, o);
                            switch (f) {
                                case "xaxis":
                                    this.addXaxisAnnotation(k, x, w);
                                    break;
                                case "yaxis":
                                    this.addYaxisAnnotation(k, x, w);
                                    break;
                                case "point":
                                    this.addPointAnnotation(k, x, w)
                            }
                            var O = y.globals.dom.baseEl.querySelector(".apexcharts-".concat(f, "-annotations .apexcharts-").concat(f, "-annotation-label[rel='").concat(w, "']")),
                                B = this.helpers.addBackgroundToAnno(O, k);
                            return B && x.insertBefore(B.node, O), c && y.globals.memory.methodsToExec.push({
                                context: m,
                                id: k.id ? k.id : te.randomId(),
                                method: p,
                                label: "addAnnotation",
                                params: o
                            }), d
                        }
                    }, {
                        key: "clearAnnotations",
                        value: function(a) {
                            var o = a.w,
                                c = o.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
                            o.globals.memory.methodsToExec.map(function(d, f) {
                                "addText" !== d.label && "addAnnotation" !== d.label || o.globals.memory.methodsToExec.splice(f, 1)
                            }), c = te.listToArray(c), Array.prototype.forEach.call(c, function(d) {
                                for (; d.firstChild;) d.removeChild(d.firstChild)
                            })
                        }
                    }, {
                        key: "removeAnnotation",
                        value: function(a, o) {
                            var c = a.w,
                                d = c.globals.dom.baseEl.querySelectorAll(".".concat(o));
                            d && (c.globals.memory.methodsToExec.map(function(f, p) {
                                f.id === o && c.globals.memory.methodsToExec.splice(p, 1)
                            }), Array.prototype.forEach.call(d, function(f) {
                                f.parentElement.removeChild(f)
                            }))
                        }
                    }]), K
                }(),
                Ge = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]
                    }
                    return z(K, [{
                        key: "isValidDate",
                        value: function(a) {
                            return "number" != typeof a && !isNaN(this.parseDate(a))
                        }
                    }, {
                        key: "getTimeStamp",
                        value: function(a) {
                            return Date.parse(a) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(a).toISOString().substr(0, 25)).getTime() : new Date(a).getTime() : a
                        }
                    }, {
                        key: "getDate",
                        value: function(a) {
                            return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(a).toUTCString()) : new Date(a)
                        }
                    }, {
                        key: "parseDate",
                        value: function(a) {
                            var o = Date.parse(a);
                            if (!isNaN(o)) return this.getTimeStamp(a);
                            var c = Date.parse(a.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
                            return this.getTimeStamp(c)
                        }
                    }, {
                        key: "parseDateWithTimezone",
                        value: function(a) {
                            return Date.parse(a.replace(/-/g, "/").replace(/[a-z]+/gi, " "))
                        }
                    }, {
                        key: "formatDate",
                        value: function(a, o) {
                            var c = this.w.globals.locale,
                                d = this.w.config.xaxis.labels.datetimeUTC,
                                f = ["\0"].concat(We(c.months)),
                                p = ["\x01"].concat(We(c.shortMonths)),
                                m = ["\x02"].concat(We(c.days)),
                                y = ["\x03"].concat(We(c.shortDays));

                            function x(Se, Le) {
                                var ze = Se + "";
                                for (Le = Le || 2; ze.length < Le;) ze = "0" + ze;
                                return ze
                            }
                            var w = d ? a.getUTCFullYear() : a.getFullYear();
                            o = (o = (o = o.replace(/(^|[^\\])yyyy+/g, "$1" + w)).replace(/(^|[^\\])yy/g, "$1" + w.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + w);
                            var S = (d ? a.getUTCMonth() : a.getMonth()) + 1;
                            o = (o = (o = (o = o.replace(/(^|[^\\])MMMM+/g, "$1" + f[0])).replace(/(^|[^\\])MMM/g, "$1" + p[0])).replace(/(^|[^\\])MM/g, "$1" + x(S))).replace(/(^|[^\\])M/g, "$1" + S);
                            var T = d ? a.getUTCDate() : a.getDate();
                            o = (o = (o = (o = o.replace(/(^|[^\\])dddd+/g, "$1" + m[0])).replace(/(^|[^\\])ddd/g, "$1" + y[0])).replace(/(^|[^\\])dd/g, "$1" + x(T))).replace(/(^|[^\\])d/g, "$1" + T);
                            var k = d ? a.getUTCHours() : a.getHours(),
                                O = k > 12 ? k - 12 : 0 === k ? 12 : k;
                            o = (o = (o = (o = o.replace(/(^|[^\\])HH+/g, "$1" + x(k))).replace(/(^|[^\\])H/g, "$1" + k)).replace(/(^|[^\\])hh+/g, "$1" + x(O))).replace(/(^|[^\\])h/g, "$1" + O);
                            var B = d ? a.getUTCMinutes() : a.getMinutes();
                            o = (o = o.replace(/(^|[^\\])mm+/g, "$1" + x(B))).replace(/(^|[^\\])m/g, "$1" + B);
                            var $ = d ? a.getUTCSeconds() : a.getSeconds();
                            o = (o = o.replace(/(^|[^\\])ss+/g, "$1" + x($))).replace(/(^|[^\\])s/g, "$1" + $);
                            var ne = d ? a.getUTCMilliseconds() : a.getMilliseconds();
                            o = o.replace(/(^|[^\\])fff+/g, "$1" + x(ne, 3)), ne = Math.round(ne / 10), o = o.replace(/(^|[^\\])ff/g, "$1" + x(ne)), ne = Math.round(ne / 10);
                            var re = k < 12 ? "AM" : "PM";
                            o = (o = (o = o.replace(/(^|[^\\])f/g, "$1" + ne)).replace(/(^|[^\\])TT+/g, "$1" + re)).replace(/(^|[^\\])T/g, "$1" + re.charAt(0));
                            var b = re.toLowerCase();
                            o = (o = o.replace(/(^|[^\\])tt+/g, "$1" + b)).replace(/(^|[^\\])t/g, "$1" + b.charAt(0));
                            var A = -a.getTimezoneOffset(),
                                F = d || !A ? "Z" : A > 0 ? "+" : "-";
                            if (!d) {
                                var X = (A = Math.abs(A)) % 60;
                                F += x(Math.floor(A / 60)) + ":" + x(X)
                            }
                            o = o.replace(/(^|[^\\])K/g, "$1" + F);
                            var be = (d ? a.getUTCDay() : a.getDay()) + 1;
                            return (o = (o = (o = (o = o.replace(new RegExp(m[0], "g"), m[be])).replace(new RegExp(y[0], "g"), y[be])).replace(new RegExp(f[0], "g"), f[S])).replace(new RegExp(p[0], "g"), p[S])).replace(/\\(.)/g, "$1")
                        }
                    }, {
                        key: "getTimeUnitsfromTimestamp",
                        value: function(a, o, c) {
                            var d = this.w;
                            void 0 !== d.config.xaxis.min && (a = d.config.xaxis.min), void 0 !== d.config.xaxis.max && (o = d.config.xaxis.max);
                            var f = this.getDate(a),
                                p = this.getDate(o),
                                m = this.formatDate(f, "yyyy MM dd HH mm ss fff").split(" "),
                                y = this.formatDate(p, "yyyy MM dd HH mm ss fff").split(" ");
                            return {
                                minMillisecond: parseInt(m[6], 10),
                                maxMillisecond: parseInt(y[6], 10),
                                minSecond: parseInt(m[5], 10),
                                maxSecond: parseInt(y[5], 10),
                                minMinute: parseInt(m[4], 10),
                                maxMinute: parseInt(y[4], 10),
                                minHour: parseInt(m[3], 10),
                                maxHour: parseInt(y[3], 10),
                                minDate: parseInt(m[2], 10),
                                maxDate: parseInt(y[2], 10),
                                minMonth: parseInt(m[1], 10) - 1,
                                maxMonth: parseInt(y[1], 10) - 1,
                                minYear: parseInt(m[0], 10),
                                maxYear: parseInt(y[0], 10)
                            }
                        }
                    }, {
                        key: "isLeapYear",
                        value: function(a) {
                            return a % 4 == 0 && a % 100 != 0 || a % 400 == 0
                        }
                    }, {
                        key: "calculcateLastDaysOfMonth",
                        value: function(a, o, c) {
                            return this.determineDaysOfMonths(a, o) - c
                        }
                    }, {
                        key: "determineDaysOfYear",
                        value: function(a) {
                            var o = 365;
                            return this.isLeapYear(a) && (o = 366), o
                        }
                    }, {
                        key: "determineRemainingDaysOfYear",
                        value: function(a, o, c) {
                            var d = this.daysCntOfYear[o] + c;
                            return o > 1 && this.isLeapYear() && d++, d
                        }
                    }, {
                        key: "determineDaysOfMonths",
                        value: function(a, o) {
                            var c = 30;
                            switch (a = te.monthMod(a), !0) {
                                case this.months30.indexOf(a) > -1:
                                    2 === a && (c = this.isLeapYear(o) ? 29 : 28);
                                    break;
                                case this.months31.indexOf(a) > -1:
                                default:
                                    c = 31
                            }
                            return c
                        }
                    }]), K
                }(),
                ct = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.tooltipKeyFormat = "dd MMM"
                    }
                    return z(K, [{
                        key: "xLabelFormat",
                        value: function(a, o, c, d) {
                            var f = this.w;
                            if ("datetime" === f.config.xaxis.type && void 0 === f.config.xaxis.labels.formatter && void 0 === f.config.tooltip.x.formatter) {
                                var p = new Ge(this.ctx);
                                return p.formatDate(p.getDate(o), f.config.tooltip.x.format)
                            }
                            return a(o, c, d)
                        }
                    }, {
                        key: "defaultGeneralFormatter",
                        value: function(a) {
                            return Array.isArray(a) ? a.map(function(o) {
                                return o
                            }) : a
                        }
                    }, {
                        key: "defaultYFormatter",
                        value: function(a, o, c) {
                            var d = this.w;
                            return te.isNumber(a) && (a = a.toFixed(0 !== d.globals.yValueDecimal ? void 0 !== o.decimalsInFloat ? o.decimalsInFloat : d.globals.yValueDecimal : d.globals.maxYArr[c] - d.globals.minYArr[c] < 5 ? 1 : 0)), a
                        }
                    }, {
                        key: "setLabelFormatters",
                        value: function() {
                            var a = this,
                                o = this.w;
                            return o.globals.xaxisTooltipFormatter = function(c) {
                                return a.defaultGeneralFormatter(c)
                            }, o.globals.ttKeyFormatter = function(c) {
                                return a.defaultGeneralFormatter(c)
                            }, o.globals.ttZFormatter = function(c) {
                                return c
                            }, o.globals.legendFormatter = function(c) {
                                return a.defaultGeneralFormatter(c)
                            }, o.globals.xLabelFormatter = void 0 !== o.config.xaxis.labels.formatter ? o.config.xaxis.labels.formatter : function(c) {
                                if (te.isNumber(c)) {
                                    if (!o.config.xaxis.convertedCatToNumeric && "numeric" === o.config.xaxis.type) {
                                        if (te.isNumber(o.config.xaxis.decimalsInFloat)) return c.toFixed(o.config.xaxis.decimalsInFloat);
                                        var d = o.globals.maxX - o.globals.minX;
                                        return c.toFixed(d > 0 && d < 100 ? 1 : 0)
                                    }
                                    return c.toFixed(o.globals.isBarHorizontal && o.globals.maxY - o.globals.minYArr < 4 ? 1 : 0)
                                }
                                return c
                            }, o.globals.ttKeyFormatter = "function" == typeof o.config.tooltip.x.formatter ? o.config.tooltip.x.formatter : o.globals.xLabelFormatter, "function" == typeof o.config.xaxis.tooltip.formatter && (o.globals.xaxisTooltipFormatter = o.config.xaxis.tooltip.formatter), (Array.isArray(o.config.tooltip.y) || void 0 !== o.config.tooltip.y.formatter) && (o.globals.ttVal = o.config.tooltip.y), void 0 !== o.config.tooltip.z.formatter && (o.globals.ttZFormatter = o.config.tooltip.z.formatter), void 0 !== o.config.legend.formatter && (o.globals.legendFormatter = o.config.legend.formatter), o.config.yaxis.forEach(function(c, d) {
                                o.globals.yLabelFormatters[d] = void 0 !== c.labels.formatter ? c.labels.formatter : function(f) {
                                    return o.globals.xyCharts ? Array.isArray(f) ? f.map(function(p) {
                                        return a.defaultYFormatter(p, c, d)
                                    }) : a.defaultYFormatter(f, c, d) : f
                                }
                            }), o.globals
                        }
                    }, {
                        key: "heatmapLabelFormatters",
                        value: function() {
                            var a = this.w;
                            if ("heatmap" === a.config.chart.type) {
                                a.globals.yAxisScale[0].result = a.globals.seriesNames.slice();
                                var o = a.globals.seriesNames.reduce(function(c, d) {
                                    return c.length > d.length ? c : d
                                }, 0);
                                a.globals.yAxisScale[0].niceMax = o, a.globals.yAxisScale[0].niceMin = o
                            }
                        }
                    }]), K
                }(),
                Re = function(K) {
                    var a, o = K.isTimeline,
                        c = K.ctx,
                        d = K.seriesIndex,
                        f = K.dataPointIndex,
                        p = K.y1,
                        m = K.y2,
                        y = K.w,
                        x = y.globals.seriesRangeStart[d][f],
                        w = y.globals.seriesRangeEnd[d][f],
                        S = y.globals.labels[f],
                        T = y.config.series[d].name ? y.config.series[d].name : "",
                        k = y.globals.ttKeyFormatter,
                        O = y.config.tooltip.y.title.formatter,
                        B = {
                            w: y,
                            seriesIndex: d,
                            dataPointIndex: f,
                            start: x,
                            end: w
                        };
                    "function" == typeof O && (T = O(T, B)), null !== (a = y.config.series[d].data[f]) && void 0 !== a && a.x && (S = y.config.series[d].data[f].x), o || "datetime" === y.config.xaxis.type && (S = new ct(c).xLabelFormat(y.globals.ttKeyFormatter, S, S, {
                        i: void 0,
                        dateFormatter: new Ge(c).formatDate,
                        w: y
                    })), "function" == typeof k && (S = k(S, B)), Number.isFinite(p) && Number.isFinite(m) && (x = p, w = m);
                    var $ = "",
                        ne = "",
                        re = y.globals.colors[d];
                    if (void 0 === y.config.tooltip.x.formatter)
                        if ("datetime" === y.config.xaxis.type) {
                            var b = new Ge(c);
                            $ = b.formatDate(b.getDate(x), y.config.tooltip.x.format), ne = b.formatDate(b.getDate(w), y.config.tooltip.x.format)
                        } else $ = x, ne = w;
                    else $ = y.config.tooltip.x.formatter(x), ne = y.config.tooltip.x.formatter(w);
                    return {
                        start: x,
                        end: w,
                        startVal: $,
                        endVal: ne,
                        ylabel: S,
                        color: re,
                        seriesName: T
                    }
                },
                we = function(K) {
                    var a = K.color,
                        o = K.seriesName,
                        c = K.ylabel,
                        d = K.start,
                        f = K.end,
                        p = K.seriesIndex,
                        m = K.dataPointIndex,
                        y = K.ctx.tooltip.tooltipLabels.getFormatters(p);
                    d = y.yLbFormatter(d), f = y.yLbFormatter(f);
                    var x = y.yLbFormatter(K.w.globals.series[p][m]),
                        w = '<span class="value start-value">\n  '.concat(d, '\n  </span> <span class="separator">-</span> <span class="value end-value">\n  ').concat(f, "\n  </span>");
                    return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + a + '">' + (o || "") + '</span></div><div> <span class="category">' + c + ": </span> " + (K.w.globals.comboCharts ? "rangeArea" === K.w.config.series[p].type || "rangeBar" === K.w.config.series[p].type ? w : "<span>".concat(x, "</span>") : w) + " </div></div>"
                },
                je = function() {
                    function K(a) {
                        U(this, K), this.opts = a
                    }
                    return z(K, [{
                        key: "hideYAxis",
                        value: function() {
                            this.opts.yaxis[0].show = !1, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = !1, this.opts.yaxis[0].axisTicks.show = !1, this.opts.yaxis[0].floating = !0
                        }
                    }, {
                        key: "line",
                        value: function() {
                            return {
                                chart: {
                                    animations: {
                                        easing: "swing"
                                    }
                                },
                                dataLabels: {
                                    enabled: !1
                                },
                                stroke: {
                                    width: 5,
                                    curve: "straight"
                                },
                                markers: {
                                    size: 0,
                                    hover: {
                                        sizeOffset: 6
                                    }
                                },
                                xaxis: {
                                    crosshairs: {
                                        width: 1
                                    }
                                }
                            }
                        }
                    }, {
                        key: "sparkline",
                        value: function(a) {
                            return this.hideYAxis(), te.extend(a, {
                                grid: {
                                    show: !1,
                                    padding: {
                                        left: 0,
                                        right: 0,
                                        top: 0,
                                        bottom: 0
                                    }
                                },
                                legend: {
                                    show: !1
                                },
                                xaxis: {
                                    labels: {
                                        show: !1
                                    },
                                    tooltip: {
                                        enabled: !1
                                    },
                                    axisBorder: {
                                        show: !1
                                    },
                                    axisTicks: {
                                        show: !1
                                    }
                                },
                                chart: {
                                    toolbar: {
                                        show: !1
                                    },
                                    zoom: {
                                        enabled: !1
                                    }
                                },
                                dataLabels: {
                                    enabled: !1
                                }
                            })
                        }
                    }, {
                        key: "bar",
                        value: function() {
                            return {
                                chart: {
                                    stacked: !1,
                                    animations: {
                                        easing: "swing"
                                    }
                                },
                                plotOptions: {
                                    bar: {
                                        dataLabels: {
                                            position: "center"
                                        }
                                    }
                                },
                                dataLabels: {
                                    style: {
                                        colors: ["#fff"]
                                    },
                                    background: {
                                        enabled: !1
                                    }
                                },
                                stroke: {
                                    width: 0,
                                    lineCap: "round"
                                },
                                fill: {
                                    opacity: .85
                                },
                                legend: {
                                    markers: {
                                        shape: "square",
                                        radius: 2,
                                        size: 8
                                    }
                                },
                                tooltip: {
                                    shared: !1,
                                    intersect: !0
                                },
                                xaxis: {
                                    tooltip: {
                                        enabled: !1
                                    },
                                    tickPlacement: "between",
                                    crosshairs: {
                                        width: "barWidth",
                                        position: "back",
                                        fill: {
                                            type: "gradient"
                                        },
                                        dropShadow: {
                                            enabled: !1
                                        },
                                        stroke: {
                                            width: 0
                                        }
                                    }
                                }
                            }
                        }
                    }, {
                        key: "funnel",
                        value: function() {
                            return this.hideYAxis(), ge(ge({}, this.bar()), {}, {
                                chart: {
                                    animations: {
                                        easing: "linear",
                                        speed: 800,
                                        animateGradually: {
                                            enabled: !1
                                        }
                                    }
                                },
                                plotOptions: {
                                    bar: {
                                        horizontal: !0,
                                        borderRadiusApplication: "around",
                                        borderRadius: 0,
                                        dataLabels: {
                                            position: "center"
                                        }
                                    }
                                },
                                grid: {
                                    show: !1,
                                    padding: {
                                        left: 0,
                                        right: 0
                                    }
                                },
                                xaxis: {
                                    labels: {
                                        show: !1
                                    },
                                    tooltip: {
                                        enabled: !1
                                    },
                                    axisBorder: {
                                        show: !1
                                    },
                                    axisTicks: {
                                        show: !1
                                    }
                                }
                            })
                        }
                    }, {
                        key: "candlestick",
                        value: function() {
                            var a = this;
                            return {
                                stroke: {
                                    width: 1,
                                    colors: ["#333"]
                                },
                                fill: {
                                    opacity: 1
                                },
                                dataLabels: {
                                    enabled: !1
                                },
                                tooltip: {
                                    shared: !0,
                                    custom: function(o) {
                                        return a._getBoxTooltip(o.w, o.seriesIndex, o.dataPointIndex, ["Open", "High", "", "Low", "Close"], "candlestick")
                                    }
                                },
                                states: {
                                    active: {
                                        filter: {
                                            type: "none"
                                        }
                                    }
                                },
                                xaxis: {
                                    crosshairs: {
                                        width: 1
                                    }
                                }
                            }
                        }
                    }, {
                        key: "boxPlot",
                        value: function() {
                            var a = this;
                            return {
                                chart: {
                                    animations: {
                                        dynamicAnimation: {
                                            enabled: !1
                                        }
                                    }
                                },
                                stroke: {
                                    width: 1,
                                    colors: ["#24292e"]
                                },
                                dataLabels: {
                                    enabled: !1
                                },
                                tooltip: {
                                    shared: !0,
                                    custom: function(o) {
                                        return a._getBoxTooltip(o.w, o.seriesIndex, o.dataPointIndex, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot")
                                    }
                                },
                                markers: {
                                    size: 5,
                                    strokeWidth: 1,
                                    strokeColors: "#111"
                                },
                                xaxis: {
                                    crosshairs: {
                                        width: 1
                                    }
                                }
                            }
                        }
                    }, {
                        key: "rangeBar",
                        value: function() {
                            return {
                                chart: {
                                    animations: {
                                        animateGradually: !1
                                    }
                                },
                                stroke: {
                                    width: 0,
                                    lineCap: "square"
                                },
                                plotOptions: {
                                    bar: {
                                        borderRadius: 0,
                                        dataLabels: {
                                            position: "center"
                                        }
                                    }
                                },
                                dataLabels: {
                                    enabled: !1,
                                    formatter: function(a, o) {
                                        var c = o.seriesIndex,
                                            d = o.dataPointIndex,
                                            f = o.w,
                                            p = function() {
                                                return f.globals.seriesRangeEnd[c][d] - f.globals.seriesRangeStart[c][d]
                                            };
                                        return f.globals.comboCharts ? "rangeBar" === f.config.series[c].type || "rangeArea" === f.config.series[c].type ? p() : a : p()
                                    },
                                    background: {
                                        enabled: !1
                                    },
                                    style: {
                                        colors: ["#fff"]
                                    }
                                },
                                markers: {
                                    size: 10
                                },
                                tooltip: {
                                    shared: !1,
                                    followCursor: !0,
                                    custom: function(a) {
                                        return a.w.config.plotOptions && a.w.config.plotOptions.bar && a.w.config.plotOptions.bar.horizontal ? (d = (c = Re(ge(ge({}, o = a), {}, {
                                            isTimeline: !0
                                        }))).color, f = c.seriesName, p = c.ylabel, m = c.startVal, y = c.endVal, we(ge(ge({}, o), {}, {
                                            color: d,
                                            seriesName: f,
                                            ylabel: p,
                                            start: m,
                                            end: y
                                        }))) : function(o) {
                                            var c = Re(o),
                                                d = c.color,
                                                f = c.seriesName,
                                                p = c.ylabel,
                                                m = c.start,
                                                y = c.end;
                                            return we(ge(ge({}, o), {}, {
                                                color: d,
                                                seriesName: f,
                                                ylabel: p,
                                                start: m,
                                                end: y
                                            }))
                                        }(a);
                                        var o, c, d, f, p, m, y
                                    }
                                },
                                xaxis: {
                                    tickPlacement: "between",
                                    tooltip: {
                                        enabled: !1
                                    },
                                    crosshairs: {
                                        stroke: {
                                            width: 0
                                        }
                                    }
                                }
                            }
                        }
                    }, {
                        key: "dumbbell",
                        value: function(a) {
                            var o, c;
                            return null !== (o = a.plotOptions.bar) && void 0 !== o && o.barHeight || (a.plotOptions.bar.barHeight = 2), null !== (c = a.plotOptions.bar) && void 0 !== c && c.columnWidth || (a.plotOptions.bar.columnWidth = 2), a
                        }
                    }, {
                        key: "area",
                        value: function() {
                            return {
                                stroke: {
                                    width: 4,
                                    fill: {
                                        type: "solid",
                                        gradient: {
                                            inverseColors: !1,
                                            shade: "light",
                                            type: "vertical",
                                            opacityFrom: .65,
                                            opacityTo: .5,
                                            stops: [0, 100, 100]
                                        }
                                    }
                                },
                                fill: {
                                    type: "gradient",
                                    gradient: {
                                        inverseColors: !1,
                                        shade: "light",
                                        type: "vertical",
                                        opacityFrom: .65,
                                        opacityTo: .5,
                                        stops: [0, 100, 100]
                                    }
                                },
                                markers: {
                                    size: 0,
                                    hover: {
                                        sizeOffset: 6
                                    }
                                },
                                tooltip: {
                                    followCursor: !1
                                }
                            }
                        }
                    }, {
                        key: "rangeArea",
                        value: function() {
                            return {
                                stroke: {
                                    curve: "straight",
                                    width: 0
                                },
                                fill: {
                                    type: "solid",
                                    opacity: .6
                                },
                                markers: {
                                    size: 0
                                },
                                states: {
                                    hover: {
                                        filter: {
                                            type: "none"
                                        }
                                    },
                                    active: {
                                        filter: {
                                            type: "none"
                                        }
                                    }
                                },
                                tooltip: {
                                    intersect: !1,
                                    shared: !0,
                                    followCursor: !0,
                                    custom: function(a) {
                                        return d = (c = Re(o = a)).color, f = c.seriesName, p = c.ylabel, m = c.start, y = c.end, we(ge(ge({}, o), {}, {
                                            color: d,
                                            seriesName: f,
                                            ylabel: p,
                                            start: m,
                                            end: y
                                        }));
                                        var o, c, d, f, p, m, y
                                    }
                                }
                            }
                        }
                    }, {
                        key: "brush",
                        value: function(a) {
                            return te.extend(a, {
                                chart: {
                                    toolbar: {
                                        autoSelected: "selection",
                                        show: !1
                                    },
                                    zoom: {
                                        enabled: !1
                                    }
                                },
                                dataLabels: {
                                    enabled: !1
                                },
                                stroke: {
                                    width: 1
                                },
                                tooltip: {
                                    enabled: !1
                                },
                                xaxis: {
                                    tooltip: {
                                        enabled: !1
                                    }
                                }
                            })
                        }
                    }, {
                        key: "stacked100",
                        value: function(a) {
                            a.dataLabels = a.dataLabels || {}, a.dataLabels.formatter = a.dataLabels.formatter || void 0;
                            var o = a.dataLabels.formatter;
                            return a.yaxis.forEach(function(c, d) {
                                a.yaxis[d].min = 0, a.yaxis[d].max = 100
                            }), "bar" === a.chart.type && (a.dataLabels.formatter = o || function(c) {
                                return "number" == typeof c && c ? c.toFixed(0) + "%" : c
                            }), a
                        }
                    }, {
                        key: "stackedBars",
                        value: function() {
                            var a = this.bar();
                            return ge(ge({}, a), {}, {
                                plotOptions: ge(ge({}, a.plotOptions), {}, {
                                    bar: ge(ge({}, a.plotOptions.bar), {}, {
                                        borderRadiusApplication: "end",
                                        borderRadiusWhenStacked: "last"
                                    })
                                })
                            })
                        }
                    }, {
                        key: "convertCatToNumeric",
                        value: function(a) {
                            return a.xaxis.convertedCatToNumeric = !0, a
                        }
                    }, {
                        key: "convertCatToNumericXaxis",
                        value: function(a, o, c) {
                            a.xaxis.type = "numeric", a.xaxis.labels = a.xaxis.labels || {}, a.xaxis.labels.formatter = a.xaxis.labels.formatter || function(p) {
                                return te.isNumber(p) ? Math.floor(p) : p
                            };
                            var d = a.xaxis.labels.formatter,
                                f = a.xaxis.categories && a.xaxis.categories.length ? a.xaxis.categories : a.labels;
                            return c && c.length && (f = c.map(function(p) {
                                return Array.isArray(p) ? p : String(p)
                            })), f && f.length && (a.xaxis.labels.formatter = function(p) {
                                return te.isNumber(p) ? d(f[Math.floor(p) - 1]) : d(p)
                            }), a.xaxis.categories = [], a.labels = [], a.xaxis.tickAmount = a.xaxis.tickAmount || "dataPoints", a
                        }
                    }, {
                        key: "bubble",
                        value: function() {
                            return {
                                dataLabels: {
                                    style: {
                                        colors: ["#fff"]
                                    }
                                },
                                tooltip: {
                                    shared: !1,
                                    intersect: !0
                                },
                                xaxis: {
                                    crosshairs: {
                                        width: 0
                                    }
                                },
                                fill: {
                                    type: "solid",
                                    gradient: {
                                        shade: "light",
                                        inverse: !0,
                                        shadeIntensity: .55,
                                        opacityFrom: .4,
                                        opacityTo: .8
                                    }
                                }
                            }
                        }
                    }, {
                        key: "scatter",
                        value: function() {
                            return {
                                dataLabels: {
                                    enabled: !1
                                },
                                tooltip: {
                                    shared: !1,
                                    intersect: !0
                                },
                                markers: {
                                    size: 6,
                                    strokeWidth: 1,
                                    hover: {
                                        sizeOffset: 2
                                    }
                                }
                            }
                        }
                    }, {
                        key: "heatmap",
                        value: function() {
                            return {
                                chart: {
                                    stacked: !1
                                },
                                fill: {
                                    opacity: 1
                                },
                                dataLabels: {
                                    style: {
                                        colors: ["#fff"]
                                    }
                                },
                                stroke: {
                                    colors: ["#fff"]
                                },
                                tooltip: {
                                    followCursor: !0,
                                    marker: {
                                        show: !1
                                    },
                                    x: {
                                        show: !1
                                    }
                                },
                                legend: {
                                    position: "top",
                                    markers: {
                                        shape: "square",
                                        size: 10,
                                        offsetY: 2
                                    }
                                },
                                grid: {
                                    padding: {
                                        right: 20
                                    }
                                }
                            }
                        }
                    }, {
                        key: "treemap",
                        value: function() {
                            return {
                                chart: {
                                    zoom: {
                                        enabled: !1
                                    }
                                },
                                dataLabels: {
                                    style: {
                                        fontSize: 14,
                                        fontWeight: 600,
                                        colors: ["#fff"]
                                    }
                                },
                                stroke: {
                                    show: !0,
                                    width: 2,
                                    colors: ["#fff"]
                                },
                                legend: {
                                    show: !1
                                },
                                fill: {
                                    gradient: {
                                        stops: [0, 100]
                                    }
                                },
                                tooltip: {
                                    followCursor: !0,
                                    x: {
                                        show: !1
                                    }
                                },
                                grid: {
                                    padding: {
                                        left: 0,
                                        right: 0
                                    }
                                },
                                xaxis: {
                                    crosshairs: {
                                        show: !1
                                    },
                                    tooltip: {
                                        enabled: !1
                                    }
                                }
                            }
                        }
                    }, {
                        key: "pie",
                        value: function() {
                            return {
                                chart: {
                                    toolbar: {
                                        show: !1
                                    }
                                },
                                plotOptions: {
                                    pie: {
                                        donut: {
                                            labels: {
                                                show: !1
                                            }
                                        }
                                    }
                                },
                                dataLabels: {
                                    formatter: function(a) {
                                        return a.toFixed(1) + "%"
                                    },
                                    style: {
                                        colors: ["#fff"]
                                    },
                                    background: {
                                        enabled: !1
                                    },
                                    dropShadow: {
                                        enabled: !0
                                    }
                                },
                                stroke: {
                                    colors: ["#fff"]
                                },
                                fill: {
                                    opacity: 1,
                                    gradient: {
                                        shade: "light",
                                        stops: [0, 100]
                                    }
                                },
                                tooltip: {
                                    theme: "dark",
                                    fillSeriesColor: !0
                                },
                                legend: {
                                    position: "right"
                                }
                            }
                        }
                    }, {
                        key: "donut",
                        value: function() {
                            return {
                                chart: {
                                    toolbar: {
                                        show: !1
                                    }
                                },
                                dataLabels: {
                                    formatter: function(a) {
                                        return a.toFixed(1) + "%"
                                    },
                                    style: {
                                        colors: ["#fff"]
                                    },
                                    background: {
                                        enabled: !1
                                    },
                                    dropShadow: {
                                        enabled: !0
                                    }
                                },
                                stroke: {
                                    colors: ["#fff"]
                                },
                                fill: {
                                    opacity: 1,
                                    gradient: {
                                        shade: "light",
                                        shadeIntensity: .35,
                                        stops: [80, 100],
                                        opacityFrom: 1,
                                        opacityTo: 1
                                    }
                                },
                                tooltip: {
                                    theme: "dark",
                                    fillSeriesColor: !0
                                },
                                legend: {
                                    position: "right"
                                }
                            }
                        }
                    }, {
                        key: "polarArea",
                        value: function() {
                            return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6, {
                                chart: {
                                    toolbar: {
                                        show: !1
                                    }
                                },
                                dataLabels: {
                                    formatter: function(a) {
                                        return a.toFixed(1) + "%"
                                    },
                                    enabled: !1
                                },
                                stroke: {
                                    show: !0,
                                    width: 2
                                },
                                fill: {
                                    opacity: .7
                                },
                                tooltip: {
                                    theme: "dark",
                                    fillSeriesColor: !0
                                },
                                legend: {
                                    position: "right"
                                }
                            }
                        }
                    }, {
                        key: "radar",
                        value: function() {
                            return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, {
                                dataLabels: {
                                    enabled: !1,
                                    style: {
                                        fontSize: "11px"
                                    }
                                },
                                stroke: {
                                    width: 2
                                },
                                markers: {
                                    size: 3,
                                    strokeWidth: 1,
                                    strokeOpacity: 1
                                },
                                fill: {
                                    opacity: .2
                                },
                                tooltip: {
                                    shared: !1,
                                    intersect: !0,
                                    followCursor: !0
                                },
                                grid: {
                                    show: !1
                                },
                                xaxis: {
                                    labels: {
                                        formatter: function(a) {
                                            return a
                                        },
                                        style: {
                                            colors: ["#a8a8a8"],
                                            fontSize: "11px"
                                        }
                                    },
                                    tooltip: {
                                        enabled: !1
                                    },
                                    crosshairs: {
                                        show: !1
                                    }
                                }
                            }
                        }
                    }, {
                        key: "radialBar",
                        value: function() {
                            return {
                                chart: {
                                    animations: {
                                        dynamicAnimation: {
                                            enabled: !0,
                                            speed: 800
                                        }
                                    },
                                    toolbar: {
                                        show: !1
                                    }
                                },
                                fill: {
                                    gradient: {
                                        shade: "dark",
                                        shadeIntensity: .4,
                                        inverseColors: !1,
                                        type: "diagonal2",
                                        opacityFrom: 1,
                                        opacityTo: 1,
                                        stops: [70, 98, 100]
                                    }
                                },
                                legend: {
                                    show: !1,
                                    position: "right"
                                },
                                tooltip: {
                                    enabled: !1,
                                    fillSeriesColor: !0
                                }
                            }
                        }
                    }, {
                        key: "_getBoxTooltip",
                        value: function(a, o, c, d, f) {
                            var p = a.globals.seriesCandleO[o][c],
                                m = a.globals.seriesCandleH[o][c],
                                y = a.globals.seriesCandleM[o][c],
                                x = a.globals.seriesCandleL[o][c],
                                w = a.globals.seriesCandleC[o][c];
                            return a.config.series[o].type && a.config.series[o].type !== f ? '<div class="apexcharts-custom-tooltip">\n          '.concat(a.config.series[o].name ? a.config.series[o].name : "series-" + (o + 1), ": <strong>").concat(a.globals.series[o][c], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(a.config.chart.type, '">') + "<div>".concat(d[0], ': <span class="value">') + p + "</span></div>" + "<div>".concat(d[1], ': <span class="value">') + m + "</span></div>" + (y ? "<div>".concat(d[2], ': <span class="value">') + y + "</span></div>" : "") + "<div>".concat(d[3], ': <span class="value">') + x + "</span></div>" + "<div>".concat(d[4], ': <span class="value">') + w + "</span></div></div>"
                        }
                    }]), K
                }(),
                _t = function() {
                    function K(a) {
                        U(this, K), this.opts = a
                    }
                    return z(K, [{
                        key: "init",
                        value: function(a) {
                            var o = a.responsiveOverride,
                                c = this.opts,
                                d = new tt,
                                f = new je(c);
                            this.chartType = c.chart.type, c = this.extendYAxis(c), c = this.extendAnnotations(c);
                            var p = d.init(),
                                m = {};
                            if (c && "object" === Ce(c)) {
                                var y, x, w, S, T, k, O, B, $, ne, re = {};
                                re = -1 !== ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "rangeArea", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(c.chart.type) ? f[c.chart.type]() : f.line(), null !== (y = c.plotOptions) && void 0 !== y && null !== (x = y.bar) && void 0 !== x && x.isFunnel && (re = f.funnel()), c.chart.stacked && "bar" === c.chart.type && (re = f.stackedBars()), null !== (w = c.chart.brush) && void 0 !== w && w.enabled && (re = f.brush(re)), c.chart.stacked && "100%" === c.chart.stackType && (c = f.stacked100(c)), null !== (S = c.plotOptions) && void 0 !== S && null !== (T = S.bar) && void 0 !== T && T.isDumbbell && (c = f.dumbbell(c)), "monotoneCubic" === (null === (k = c) || void 0 === k || null === (O = k.stroke) || void 0 === O ? void 0 : O.curve) && (c.stroke.curve = "smooth"), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(c), c.xaxis = c.xaxis || window.Apex.xaxis || {}, o || (c.xaxis.convertedCatToNumeric = !1), (null !== (B = (c = this.checkForCatToNumericXAxis(this.chartType, re, c)).chart.sparkline) && void 0 !== B && B.enabled || null !== ($ = window.Apex.chart) && void 0 !== $ && null !== (ne = $.sparkline) && void 0 !== ne && ne.enabled) && (re = f.sparkline(re)), m = te.extend(p, re)
                            }
                            var b = te.extend(m, window.Apex);
                            return p = te.extend(b, c), this.handleUserInputErrors(p)
                        }
                    }, {
                        key: "checkForCatToNumericXAxis",
                        value: function(a, o, c) {
                            var d, f, p = new je(c);
                            return ("bar" === a || "boxPlot" === a) && (null === (d = c.plotOptions) || void 0 === d || null === (f = d.bar) || void 0 === f ? void 0 : f.horizontal) || "pie" === a || "polarArea" === a || "donut" === a || "radar" === a || "radialBar" === a || "heatmap" === a || !("datetime" !== c.xaxis.type && "numeric" !== c.xaxis.type) || "between" === (c.xaxis.tickPlacement ? c.xaxis.tickPlacement : o.xaxis && o.xaxis.tickPlacement) || (c = p.convertCatToNumeric(c)), c
                        }
                    }, {
                        key: "extendYAxis",
                        value: function(a, o) {
                            var c = new tt;
                            (void 0 === a.yaxis || !a.yaxis || Array.isArray(a.yaxis) && 0 === a.yaxis.length) && (a.yaxis = {}), a.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (a.yaxis = te.extend(a.yaxis, window.Apex.yaxis)), a.yaxis = a.yaxis.constructor !== Array ? [te.extend(c.yAxis, a.yaxis)] : te.extendArray(a.yaxis, c.yAxis);
                            var d = !1;
                            a.yaxis.forEach(function(p) {
                                p.logarithmic && (d = !0)
                            });
                            var f = a.series;
                            return o && !f && (f = o.config.series), d && f.length !== a.yaxis.length && f.length && (a.yaxis = f.map(function(p, m) {
                                if (p.name || (f[m].name = "series-".concat(m + 1)), a.yaxis[m]) return a.yaxis[m].seriesName = f[m].name, a.yaxis[m];
                                var y = te.extend(c.yAxis, a.yaxis[0]);
                                return y.show = !1, y
                            })), d && f.length > 1 && f.length !== a.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes"), a
                        }
                    }, {
                        key: "extendAnnotations",
                        value: function(a) {
                            return void 0 === a.annotations && (a.annotations = {}, a.annotations.yaxis = [], a.annotations.xaxis = [], a.annotations.points = []), a = this.extendYAxisAnnotations(a), a = this.extendXAxisAnnotations(a), this.extendPointAnnotations(a)
                        }
                    }, {
                        key: "extendYAxisAnnotations",
                        value: function(a) {
                            var o = new tt;
                            return a.annotations.yaxis = te.extendArray(void 0 !== a.annotations.yaxis ? a.annotations.yaxis : [], o.yAxisAnnotation), a
                        }
                    }, {
                        key: "extendXAxisAnnotations",
                        value: function(a) {
                            var o = new tt;
                            return a.annotations.xaxis = te.extendArray(void 0 !== a.annotations.xaxis ? a.annotations.xaxis : [], o.xAxisAnnotation), a
                        }
                    }, {
                        key: "extendPointAnnotations",
                        value: function(a) {
                            var o = new tt;
                            return a.annotations.points = te.extendArray(void 0 !== a.annotations.points ? a.annotations.points : [], o.pointAnnotation), a
                        }
                    }, {
                        key: "checkForDarkTheme",
                        value: function(a) {
                            a.theme && "dark" === a.theme.mode && (a.tooltip || (a.tooltip = {}), "light" !== a.tooltip.theme && (a.tooltip.theme = "dark"), a.chart.foreColor || (a.chart.foreColor = "#f6f7f8"), a.chart.background || (a.chart.background = "#424242"), a.theme.palette || (a.theme.palette = "palette4"))
                        }
                    }, {
                        key: "handleUserInputErrors",
                        value: function(a) {
                            var o = a;
                            if (o.tooltip.shared && o.tooltip.intersect) throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
                            if ("bar" === o.chart.type && o.plotOptions.bar.horizontal) {
                                if (o.yaxis.length > 1) throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
                                o.yaxis[0].reversed && (o.yaxis[0].opposite = !0), o.xaxis.tooltip.enabled = !1, o.yaxis[0].tooltip.enabled = !1, o.chart.zoom.enabled = !1
                            }
                            return "bar" !== o.chart.type && "rangeBar" !== o.chart.type || o.tooltip.shared && "barWidth" === o.xaxis.crosshairs.width && o.series.length > 1 && (o.xaxis.crosshairs.width = "tickWidth"), "candlestick" !== o.chart.type && "boxPlot" !== o.chart.type || o.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(o.chart.type, " chart is not supported.")), o.yaxis[0].reversed = !1), o
                        }
                    }]), K
                }(),
                Mt = function() {
                    function K() {
                        U(this, K)
                    }
                    return z(K, [{
                        key: "initGlobalVars",
                        value: function(a) {
                            a.series = [], a.seriesCandleO = [], a.seriesCandleH = [], a.seriesCandleM = [], a.seriesCandleL = [], a.seriesCandleC = [], a.seriesRangeStart = [], a.seriesRangeEnd = [], a.seriesRange = [], a.seriesPercent = [], a.seriesGoals = [], a.seriesX = [], a.seriesZ = [], a.seriesNames = [], a.seriesTotals = [], a.seriesLog = [], a.seriesColors = [], a.stackedSeriesTotals = [], a.seriesXvalues = [], a.seriesYvalues = [], a.labels = [], a.hasXaxisGroups = !1, a.groups = [], a.hasSeriesGroups = !1, a.seriesGroups = [], a.categoryLabels = [], a.timescaleLabels = [], a.noLabelsProvided = !1, a.resizeTimer = null, a.selectionResizeTimer = null, a.delayedElements = [], a.pointsArray = [], a.dataLabelsRects = [], a.isXNumeric = !1, a.skipLastTimelinelabel = !1, a.skipFirstTimelinelabel = !1, a.isDataXYZ = !1, a.isMultiLineX = !1, a.isMultipleYAxis = !1, a.maxY = -Number.MAX_VALUE, a.minY = Number.MIN_VALUE, a.minYArr = [], a.maxYArr = [], a.maxX = -Number.MAX_VALUE, a.minX = Number.MAX_VALUE, a.initialMaxX = -Number.MAX_VALUE, a.initialMinX = Number.MAX_VALUE, a.maxDate = 0, a.minDate = Number.MAX_VALUE, a.minZ = Number.MAX_VALUE, a.maxZ = -Number.MAX_VALUE, a.minXDiff = Number.MAX_VALUE, a.yAxisScale = [], a.xAxisScale = null, a.xAxisTicksPositions = [], a.yLabelsCoords = [], a.yTitleCoords = [], a.barPadForNumericAxis = 0, a.padHorizontal = 0, a.xRange = 0, a.yRange = [], a.zRange = 0, a.dataPoints = 0, a.xTickAmount = 0
                        }
                    }, {
                        key: "globalVars",
                        value: function(a) {
                            return {
                                chartID: null,
                                cuid: null,
                                events: {
                                    beforeMount: [],
                                    mounted: [],
                                    updated: [],
                                    clicked: [],
                                    selection: [],
                                    dataPointSelection: [],
                                    zoomed: [],
                                    scrolled: []
                                },
                                colors: [],
                                clientX: null,
                                clientY: null,
                                fill: {
                                    colors: []
                                },
                                stroke: {
                                    colors: []
                                },
                                dataLabels: {
                                    style: {
                                        colors: []
                                    }
                                },
                                radarPolygons: {
                                    fill: {
                                        colors: []
                                    }
                                },
                                markers: {
                                    colors: [],
                                    size: a.markers.size,
                                    largestSize: 0
                                },
                                animationEnded: !1,
                                isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
                                isDirty: !1,
                                isExecCalled: !1,
                                initialConfig: null,
                                initialSeries: [],
                                lastXAxis: [],
                                lastYAxis: [],
                                columnSeries: null,
                                labels: [],
                                timescaleLabels: [],
                                noLabelsProvided: !1,
                                allSeriesCollapsed: !1,
                                collapsedSeries: [],
                                collapsedSeriesIndices: [],
                                ancillaryCollapsedSeries: [],
                                ancillaryCollapsedSeriesIndices: [],
                                risingSeries: [],
                                dataFormatXNumeric: !1,
                                capturedSeriesIndex: -1,
                                capturedDataPointIndex: -1,
                                selectedDataPoints: [],
                                goldenPadding: 35,
                                invalidLogScale: !1,
                                ignoreYAxisIndexes: [],
                                yAxisSameScaleIndices: [],
                                maxValsInArrayIndex: 0,
                                radialSize: 0,
                                selection: void 0,
                                zoomEnabled: "zoom" === a.chart.toolbar.autoSelected && a.chart.toolbar.tools.zoom && a.chart.zoom.enabled,
                                panEnabled: "pan" === a.chart.toolbar.autoSelected && a.chart.toolbar.tools.pan,
                                selectionEnabled: "selection" === a.chart.toolbar.autoSelected && a.chart.toolbar.tools.selection,
                                yaxis: null,
                                mousedown: !1,
                                lastClientPosition: {},
                                visibleXRange: void 0,
                                yValueDecimal: 0,
                                total: 0,
                                SVGNS: "http://www.w3.org/2000/svg",
                                svgWidth: 0,
                                svgHeight: 0,
                                noData: !1,
                                locale: {},
                                dom: {},
                                memory: {
                                    methodsToExec: []
                                },
                                shouldAnimate: !0,
                                skipLastTimelinelabel: !1,
                                skipFirstTimelinelabel: !1,
                                delayedElements: [],
                                axisCharts: !0,
                                isDataXYZ: !1,
                                resized: !1,
                                resizeTimer: null,
                                comboCharts: !1,
                                dataChanged: !1,
                                previousPaths: [],
                                allSeriesHasEqualX: !0,
                                pointsArray: [],
                                dataLabelsRects: [],
                                lastDrawnDataLabelsIndexes: [],
                                hasNullValues: !1,
                                easing: null,
                                zoomed: !1,
                                gridWidth: 0,
                                gridHeight: 0,
                                rotateXLabels: !1,
                                defaultLabels: !1,
                                xLabelFormatter: void 0,
                                yLabelFormatters: [],
                                xaxisTooltipFormatter: void 0,
                                ttKeyFormatter: void 0,
                                ttVal: void 0,
                                ttZFormatter: void 0,
                                LINE_HEIGHT_RATIO: 1.618,
                                xAxisLabelsHeight: 0,
                                xAxisGroupLabelsHeight: 0,
                                xAxisLabelsWidth: 0,
                                yAxisLabelsWidth: 0,
                                scaleX: 1,
                                scaleY: 1,
                                translateX: 0,
                                translateY: 0,
                                translateYAxisX: [],
                                yAxisWidths: [],
                                translateXAxisY: 0,
                                translateXAxisX: 0,
                                tooltip: null
                            }
                        }
                    }, {
                        key: "init",
                        value: function(a) {
                            var o = this.globalVars(a);
                            return this.initGlobalVars(o), o.initialConfig = te.extend({}, a), o.initialSeries = te.clone(a.series), o.lastXAxis = te.clone(o.initialConfig.xaxis), o.lastYAxis = te.clone(o.initialConfig.yaxis), o
                        }
                    }]), K
                }(),
                Lt = function() {
                    function K(a) {
                        U(this, K), this.opts = a
                    }
                    return z(K, [{
                        key: "init",
                        value: function() {
                            var a = new _t(this.opts).init({
                                responsiveOverride: !1
                            });
                            return {
                                config: a,
                                globals: (new Mt).init(a)
                            }
                        }
                    }]), K
                }(),
                He = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.opts = null, this.seriesIndex = 0
                    }
                    return z(K, [{
                        key: "clippedImgArea",
                        value: function(a) {
                            var o = this.w,
                                c = o.config,
                                d = parseInt(o.globals.gridWidth, 10),
                                f = parseInt(o.globals.gridHeight, 10),
                                p = d > f ? d : f,
                                m = a.image,
                                y = 0,
                                x = 0;
                            void 0 === a.width && void 0 === a.height ? void 0 !== c.fill.image.width && void 0 !== c.fill.image.height ? (y = c.fill.image.width + 1, x = c.fill.image.height) : (y = p + 1, x = p) : (y = a.width, x = a.height);
                            var w = document.createElementNS(o.globals.SVGNS, "pattern");
                            J.setAttrs(w, {
                                id: a.patternID,
                                patternUnits: a.patternUnits ? a.patternUnits : "userSpaceOnUse",
                                width: y + "px",
                                height: x + "px"
                            });
                            var S = document.createElementNS(o.globals.SVGNS, "image");
                            w.appendChild(S), S.setAttributeNS(window.SVG.xlink, "href", m), J.setAttrs(S, {
                                x: 0,
                                y: 0,
                                preserveAspectRatio: "none",
                                width: y + "px",
                                height: x + "px"
                            }), S.style.opacity = a.opacity, o.globals.dom.elDefs.node.appendChild(w)
                        }
                    }, {
                        key: "getSeriesIndex",
                        value: function(a) {
                            var o = this.w,
                                c = o.config.chart.type;
                            return this.seriesIndex = ("bar" === c || "rangeBar" === c) && o.config.plotOptions.bar.distributed || "heatmap" === c || "treemap" === c ? a.seriesNumber : a.seriesNumber % o.globals.series.length, this.seriesIndex
                        }
                    }, {
                        key: "fillPath",
                        value: function(a) {
                            var o = this.w;
                            this.opts = a;
                            var c, d, f, p = this.w.config;
                            this.seriesIndex = this.getSeriesIndex(a);
                            var m = this.getFillColors()[this.seriesIndex];
                            void 0 !== o.globals.seriesColors[this.seriesIndex] && (m = o.globals.seriesColors[this.seriesIndex]), "function" == typeof m && (m = m({
                                seriesIndex: this.seriesIndex,
                                dataPointIndex: a.dataPointIndex,
                                value: a.value,
                                w: o
                            }));
                            var y = a.fillType ? a.fillType : this.getFillType(this.seriesIndex),
                                x = Array.isArray(p.fill.opacity) ? p.fill.opacity[this.seriesIndex] : p.fill.opacity;
                            a.color && (m = a.color), m || (m = "#fff", console.warn("undefined color - ApexCharts"));
                            var w = m;
                            if (-1 === m.indexOf("rgb") ? m.length < 9 && (w = te.hexToRgba(m, x)) : m.indexOf("rgba") > -1 && (x = te.getOpacityFromRGBA(m)), a.opacity && (x = a.opacity), "pattern" === y && (d = this.handlePatternFill({
                                    fillConfig: a.fillConfig,
                                    patternFill: d,
                                    fillColor: m,
                                    fillOpacity: x,
                                    defaultColor: w
                                })), "gradient" === y && (f = this.handleGradientFill({
                                    fillConfig: a.fillConfig,
                                    fillColor: m,
                                    fillOpacity: x,
                                    i: this.seriesIndex
                                })), "image" === y) {
                                var S = p.fill.image.src,
                                    T = a.patternID ? a.patternID : "";
                                this.clippedImgArea({
                                    opacity: x,
                                    image: Array.isArray(S) ? a.seriesNumber < S.length ? S[a.seriesNumber] : S[0] : S,
                                    width: a.width ? a.width : void 0,
                                    height: a.height ? a.height : void 0,
                                    patternUnits: a.patternUnits,
                                    patternID: "pattern".concat(o.globals.cuid).concat(a.seriesNumber + 1).concat(T)
                                }), c = "url(#pattern".concat(o.globals.cuid).concat(a.seriesNumber + 1).concat(T, ")")
                            } else c = "gradient" === y ? f : "pattern" === y ? d : w;
                            return a.solid && (c = w), c
                        }
                    }, {
                        key: "getFillType",
                        value: function(a) {
                            var o = this.w;
                            return Array.isArray(o.config.fill.type) ? o.config.fill.type[a] : o.config.fill.type
                        }
                    }, {
                        key: "getFillColors",
                        value: function() {
                            var a = this.w,
                                o = a.config,
                                c = this.opts,
                                d = [];
                            return a.globals.comboCharts ? "line" === a.config.series[this.seriesIndex].type ? Array.isArray(a.globals.stroke.colors) ? d = a.globals.stroke.colors : d.push(a.globals.stroke.colors) : Array.isArray(a.globals.fill.colors) ? d = a.globals.fill.colors : d.push(a.globals.fill.colors) : "line" === o.chart.type ? Array.isArray(a.globals.stroke.colors) ? d = a.globals.stroke.colors : d.push(a.globals.stroke.colors) : Array.isArray(a.globals.fill.colors) ? d = a.globals.fill.colors : d.push(a.globals.fill.colors), void 0 !== c.fillColors && (d = [], Array.isArray(c.fillColors) ? d = c.fillColors.slice() : d.push(c.fillColors)), d
                        }
                    }, {
                        key: "handlePatternFill",
                        value: function(a) {
                            var o = a.fillConfig,
                                d = a.fillColor,
                                f = a.fillOpacity,
                                p = a.defaultColor,
                                m = this.w.config.fill;
                            o && (m = o);
                            var y = this.opts,
                                x = new J(this.ctx),
                                w = Array.isArray(m.pattern.strokeWidth) ? m.pattern.strokeWidth[this.seriesIndex] : m.pattern.strokeWidth,
                                S = d;
                            return Array.isArray(m.pattern.style) ? void 0 !== m.pattern.style[y.seriesNumber] ? x.drawPattern(m.pattern.style[y.seriesNumber], m.pattern.width, m.pattern.height, S, w, f) : p : x.drawPattern(m.pattern.style, m.pattern.width, m.pattern.height, S, w, f)
                        }
                    }, {
                        key: "handleGradientFill",
                        value: function(a) {
                            var o = a.fillColor,
                                c = a.fillOpacity,
                                d = a.fillConfig,
                                f = a.i,
                                p = this.w.config.fill;
                            d && (p = ge(ge({}, p), d));
                            var m, y = this.opts,
                                x = new J(this.ctx),
                                w = new te,
                                S = p.gradient.type,
                                T = o,
                                k = void 0 === p.gradient.opacityFrom ? c : Array.isArray(p.gradient.opacityFrom) ? p.gradient.opacityFrom[f] : p.gradient.opacityFrom;
                            T.indexOf("rgba") > -1 && (k = te.getOpacityFromRGBA(T));
                            var O = void 0 === p.gradient.opacityTo ? c : Array.isArray(p.gradient.opacityTo) ? p.gradient.opacityTo[f] : p.gradient.opacityTo;
                            if (void 0 === p.gradient.gradientToColors || 0 === p.gradient.gradientToColors.length) m = w.shadeColor("dark" === p.gradient.shade ? -1 * parseFloat(p.gradient.shadeIntensity) : parseFloat(p.gradient.shadeIntensity), o.indexOf("rgb") > -1 ? te.rgb2hex(o) : o);
                            else if (p.gradient.gradientToColors[y.seriesNumber]) {
                                var B = p.gradient.gradientToColors[y.seriesNumber];
                                m = B, B.indexOf("rgba") > -1 && (O = te.getOpacityFromRGBA(B))
                            } else m = o;
                            if (p.gradient.gradientFrom && (T = p.gradient.gradientFrom), p.gradient.gradientTo && (m = p.gradient.gradientTo), p.gradient.inverseColors) {
                                var $ = T;
                                T = m, m = $
                            }
                            return T.indexOf("rgb") > -1 && (T = te.rgb2hex(T)), m.indexOf("rgb") > -1 && (m = te.rgb2hex(m)), x.drawGradient(S, T, m, k, O, y.size, p.gradient.stops, p.gradient.colorStops, f)
                        }
                    }]), K
                }(),
                St = function() {
                    function K(a, o) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "setGlobalMarkerSize",
                        value: function() {
                            var a = this.w;
                            if (a.globals.markers.size = Array.isArray(a.config.markers.size) ? a.config.markers.size : [a.config.markers.size], a.globals.markers.size.length > 0) {
                                if (a.globals.markers.size.length < a.globals.series.length + 1)
                                    for (var o = 0; o <= a.globals.series.length; o++) void 0 === a.globals.markers.size[o] && a.globals.markers.size.push(a.globals.markers.size[0])
                            } else a.globals.markers.size = a.config.series.map(function(c) {
                                return a.config.markers.size
                            })
                        }
                    }, {
                        key: "plotChartMarkers",
                        value: function(a, o, c, d) {
                            var f, p = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                                m = this.w,
                                y = o,
                                x = a,
                                w = null,
                                S = new J(this.ctx),
                                T = m.config.markers.discrete && m.config.markers.discrete.length;
                            if ((m.globals.markers.size[o] > 0 || p || T) && (w = S.group({
                                    class: p || T ? "" : "apexcharts-series-markers"
                                })).attr("clip-path", "url(#gridRectMarkerMask".concat(m.globals.cuid, ")")), Array.isArray(x.x))
                                for (var k = 0; k < x.x.length; k++) {
                                    var O = c;
                                    1 === c && 0 === k && (O = 0), 1 === c && 1 === k && (O = 1);
                                    var B = "apexcharts-marker";
                                    if ("line" !== m.config.chart.type && "area" !== m.config.chart.type || m.globals.comboCharts || m.config.tooltip.intersect || (B += " no-pointer-events"), (Array.isArray(m.config.markers.size) ? m.globals.markers.size[o] > 0 : m.config.markers.size > 0) || p || T) {
                                        te.isNumber(x.y[k]) ? B += " w".concat(te.randomId()) : B = "apexcharts-nullpoint";
                                        var $ = this.getMarkerConfig({
                                            cssClass: B,
                                            seriesIndex: o,
                                            dataPointIndex: O
                                        });
                                        m.config.series[y].data[O] && (m.config.series[y].data[O].fillColor && ($.pointFillColor = m.config.series[y].data[O].fillColor), m.config.series[y].data[O].strokeColor && ($.pointStrokeColor = m.config.series[y].data[O].strokeColor)), d && ($.pSize = d), (x.x[k] < 0 || x.x[k] > m.globals.gridWidth || x.y[k] < -m.globals.markers.largestSize || x.y[k] > m.globals.gridHeight + m.globals.markers.largestSize) && ($.pSize = 0), (f = S.drawMarker(x.x[k], x.y[k], $)).attr("rel", O), f.attr("j", O), f.attr("index", o), f.node.setAttribute("default-marker-size", $.pSize), new Oe(this.ctx).setSelectionFilter(f, o, O), this.addEvents(f), w && w.add(f)
                                    } else void 0 === m.globals.pointsArray[o] && (m.globals.pointsArray[o] = []), m.globals.pointsArray[o].push([x.x[k], x.y[k]])
                                }
                            return w
                        }
                    }, {
                        key: "getMarkerConfig",
                        value: function(a) {
                            var o = a.cssClass,
                                c = a.seriesIndex,
                                d = a.dataPointIndex,
                                f = void 0 === d ? null : d,
                                p = a.finishRadius,
                                m = void 0 === p ? null : p,
                                y = this.w,
                                x = this.getMarkerStyle(c),
                                w = y.globals.markers.size[c],
                                S = y.config.markers;
                            return null !== f && S.discrete.length && S.discrete.map(function(T) {
                                T.seriesIndex === c && T.dataPointIndex === f && (x.pointStrokeColor = T.strokeColor, x.pointFillColor = T.fillColor, w = T.size, x.pointShape = T.shape)
                            }), {
                                pSize: null === m ? w : m,
                                pRadius: S.radius,
                                width: Array.isArray(S.width) ? S.width[c] : S.width,
                                height: Array.isArray(S.height) ? S.height[c] : S.height,
                                pointStrokeWidth: Array.isArray(S.strokeWidth) ? S.strokeWidth[c] : S.strokeWidth,
                                pointStrokeColor: x.pointStrokeColor,
                                pointFillColor: x.pointFillColor,
                                shape: x.pointShape || (Array.isArray(S.shape) ? S.shape[c] : S.shape),
                                class: o,
                                pointStrokeOpacity: Array.isArray(S.strokeOpacity) ? S.strokeOpacity[c] : S.strokeOpacity,
                                pointStrokeDashArray: Array.isArray(S.strokeDashArray) ? S.strokeDashArray[c] : S.strokeDashArray,
                                pointFillOpacity: Array.isArray(S.fillOpacity) ? S.fillOpacity[c] : S.fillOpacity,
                                seriesIndex: c
                            }
                        }
                    }, {
                        key: "addEvents",
                        value: function(a) {
                            var o = this.w,
                                c = new J(this.ctx);
                            a.node.addEventListener("mouseenter", c.pathMouseEnter.bind(this.ctx, a)), a.node.addEventListener("mouseleave", c.pathMouseLeave.bind(this.ctx, a)), a.node.addEventListener("mousedown", c.pathMouseDown.bind(this.ctx, a)), a.node.addEventListener("click", o.config.markers.onClick), a.node.addEventListener("dblclick", o.config.markers.onDblClick), a.node.addEventListener("touchstart", c.pathMouseDown.bind(this.ctx, a), {
                                passive: !0
                            })
                        }
                    }, {
                        key: "getMarkerStyle",
                        value: function(a) {
                            var o = this.w,
                                c = o.globals.markers.colors,
                                d = o.config.markers.strokeColor || o.config.markers.strokeColors;
                            return {
                                pointStrokeColor: Array.isArray(d) ? d[a] : d,
                                pointFillColor: Array.isArray(c) ? c[a] : c
                            }
                        }
                    }]), K
                }(),
                Ft = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled
                    }
                    return z(K, [{
                        key: "draw",
                        value: function(a, o, c) {
                            var d = this.w,
                                f = new J(this.ctx),
                                p = c.realIndex,
                                m = c.pointsPos,
                                y = c.zRatio,
                                x = c.elParent,
                                w = f.group({
                                    class: "apexcharts-series-markers apexcharts-series-".concat(d.config.chart.type)
                                });
                            if (w.attr("clip-path", "url(#gridRectMarkerMask".concat(d.globals.cuid, ")")), Array.isArray(m.x))
                                for (var S = 0; S < m.x.length; S++) {
                                    var T = o + 1,
                                        k = !0;
                                    0 === o && 0 === S && (T = 0), 0 === o && 1 === S && (T = 1);
                                    var O = 0,
                                        B = d.globals.markers.size[p];
                                    if (y !== 1 / 0) {
                                        var $ = d.config.plotOptions.bubble;
                                        B = d.globals.seriesZ[p][T], $.zScaling && (B /= y), $.minBubbleRadius && B < $.minBubbleRadius && (B = $.minBubbleRadius), $.maxBubbleRadius && B > $.maxBubbleRadius && (B = $.maxBubbleRadius)
                                    }
                                    d.config.chart.animations.enabled || (O = B);
                                    var re = m.y[S];
                                    if (O = O || 0, null !== re && void 0 !== d.globals.series[p][T] || (k = !1), k) {
                                        var b = this.drawPoint(m.x[S], re, O, B, p, T, o);
                                        w.add(b)
                                    }
                                    x.add(w)
                                }
                        }
                    }, {
                        key: "drawPoint",
                        value: function(a, o, c, d, f, p, m) {
                            var y = this.w,
                                x = f,
                                w = new Pe(this.ctx),
                                S = new Oe(this.ctx),
                                T = new He(this.ctx),
                                k = new St(this.ctx),
                                O = new J(this.ctx),
                                B = k.getMarkerConfig({
                                    cssClass: "apexcharts-marker",
                                    seriesIndex: x,
                                    dataPointIndex: p,
                                    finishRadius: "bubble" === y.config.chart.type || y.globals.comboCharts && y.config.series[f] && "bubble" === y.config.series[f].type ? d : null
                                });
                            d = B.pSize;
                            var $, ne = T.fillPath({
                                seriesNumber: f,
                                dataPointIndex: p,
                                color: B.pointFillColor,
                                patternUnits: "objectBoundingBox",
                                value: y.globals.series[f][m]
                            });
                            if ("circle" === B.shape ? $ = O.drawCircle(c) : "square" !== B.shape && "rect" !== B.shape || ($ = O.drawRect(0, 0, B.width - B.pointStrokeWidth / 2, B.height - B.pointStrokeWidth / 2, B.pRadius)), y.config.series[x].data[p] && y.config.series[x].data[p].fillColor && (ne = y.config.series[x].data[p].fillColor), $.attr({
                                    x: a - B.width / 2 - B.pointStrokeWidth / 2,
                                    y: o - B.height / 2 - B.pointStrokeWidth / 2,
                                    cx: a,
                                    cy: o,
                                    fill: ne,
                                    "fill-opacity": B.pointFillOpacity,
                                    stroke: B.pointStrokeColor,
                                    r: d,
                                    "stroke-width": B.pointStrokeWidth,
                                    "stroke-dasharray": B.pointStrokeDashArray,
                                    "stroke-opacity": B.pointStrokeOpacity
                                }), y.config.chart.dropShadow.enabled && S.dropShadow($, y.config.chart.dropShadow, f), !this.initialAnim || y.globals.dataChanged || y.globals.resized ? y.globals.animationEnded = !0 : w.animateMarker($, 0, "circle" === B.shape ? d : {
                                    width: B.width,
                                    height: B.height
                                }, y.config.chart.animations.speed, y.globals.easing, function() {
                                    window.setTimeout(function() {
                                        w.animationCompleted($)
                                    }, 100)
                                }), y.globals.dataChanged && "circle" === B.shape)
                                if (this.dynamicAnim) {
                                    var A, F, X, be, Se = y.config.chart.animations.dynamicAnimation.speed;
                                    null != (be = y.globals.previousPaths[f] && y.globals.previousPaths[f][m]) && (A = be.x, F = be.y, X = void 0 !== be.r ? be.r : d);
                                    for (var Le = 0; Le < y.globals.collapsedSeries.length; Le++) y.globals.collapsedSeries[Le].index === f && (Se = 1, d = 0);
                                    0 === a && 0 === o && (d = 0), w.animateCircle($, {
                                        cx: A,
                                        cy: F,
                                        r: X
                                    }, {
                                        cx: a,
                                        cy: o,
                                        r: d
                                    }, Se, y.globals.easing)
                                } else $.attr({
                                    r: d
                                });
                            return $.attr({
                                rel: p,
                                j: p,
                                index: f,
                                "default-marker-size": d
                            }), S.setSelectionFilter($, f, p), k.addEvents($), $.node.classList.add("apexcharts-marker"), $
                        }
                    }, {
                        key: "centerTextInBubble",
                        value: function(a) {
                            return {
                                y: a += parseInt(this.w.config.dataLabels.style.fontSize, 10) / 4
                            }
                        }
                    }]), K
                }(),
                Dt = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "dataLabelsCorrection",
                        value: function(a, o, c, d, f, p, m) {
                            var y = this.w,
                                x = !1,
                                w = new J(this.ctx).getTextRects(c, m),
                                S = w.width,
                                T = w.height;
                            if (o < 0 && (o = 0), o > y.globals.gridHeight + T && (o = y.globals.gridHeight + T / 2), void 0 === y.globals.dataLabelsRects[d] && (y.globals.dataLabelsRects[d] = []), y.globals.dataLabelsRects[d].push({
                                    x: a,
                                    y: o,
                                    width: S,
                                    height: T
                                }), void 0 !== y.globals.dataLabelsRects[d][y.globals.dataLabelsRects[d].length - 2]) {
                                var B = y.globals.dataLabelsRects[d][void 0 !== y.globals.lastDrawnDataLabelsIndexes[d] ? y.globals.lastDrawnDataLabelsIndexes[d][y.globals.lastDrawnDataLabelsIndexes[d].length - 1] : 0];
                                (a > B.x + B.width || o > B.y + B.height || o + T < B.y || a + S < B.x) && (x = !0)
                            }
                            return (0 === f || p) && (x = !0), {
                                x: a,
                                y: o,
                                textRects: w,
                                drawnextLabel: x
                            }
                        }
                    }, {
                        key: "drawDataLabel",
                        value: function(a) {
                            var o = this,
                                c = a.type,
                                d = a.pos,
                                f = a.i,
                                p = a.j,
                                m = a.isRangeStart,
                                y = a.strokeWidth,
                                x = void 0 === y ? 2 : y,
                                w = this.w,
                                S = new J(this.ctx),
                                T = w.config.dataLabels,
                                k = 0,
                                O = 0,
                                B = p,
                                $ = null;
                            if (!T.enabled || !Array.isArray(d.x)) return $;
                            $ = S.group({
                                class: "apexcharts-data-labels"
                            });
                            for (var ne = 0; ne < d.x.length; ne++)
                                if (k = d.x[ne] + T.offsetX, O = d.y[ne] + T.offsetY + x, !isNaN(k)) {
                                    1 === p && 0 === ne && (B = 0), 1 === p && 1 === ne && (B = 1);
                                    var re = w.globals.series[f][B];
                                    "rangeArea" === c && (re = m ? w.globals.seriesRangeStart[f][B] : w.globals.seriesRangeEnd[f][B]);
                                    var b = "",
                                        A = function(F) {
                                            return w.config.dataLabels.formatter(F, {
                                                ctx: o.ctx,
                                                seriesIndex: f,
                                                dataPointIndex: B,
                                                w
                                            })
                                        };
                                    "bubble" === w.config.chart.type ? (b = A(re = w.globals.seriesZ[f][B]), O = d.y[ne], O = new Ft(this.ctx).centerTextInBubble(O, f, B).y) : void 0 !== re && (b = A(re)), this.plotDataLabelsText({
                                        x: k,
                                        y: O,
                                        text: b,
                                        i: f,
                                        j: B,
                                        parent: $,
                                        offsetCorrection: !0,
                                        dataLabelsConfig: w.config.dataLabels
                                    })
                                }
                            return $
                        }
                    }, {
                        key: "plotDataLabelsText",
                        value: function(a) {
                            var o = this.w,
                                c = new J(this.ctx),
                                d = a.x,
                                f = a.y,
                                p = a.i,
                                m = a.j,
                                y = a.text,
                                x = a.textAnchor,
                                w = a.fontSize,
                                S = a.parent,
                                T = a.dataLabelsConfig,
                                k = a.color,
                                O = a.alwaysDrawDataLabel,
                                B = a.offsetCorrection;
                            if (!(Array.isArray(o.config.dataLabels.enabledOnSeries) && o.config.dataLabels.enabledOnSeries.indexOf(p) < 0)) {
                                var $ = {
                                    x: d,
                                    y: f,
                                    drawnextLabel: !0,
                                    textRects: null
                                };
                                B && ($ = this.dataLabelsCorrection(d, f, y, p, m, O, parseInt(T.style.fontSize, 10))), o.globals.zoomed || (d = $.x, f = $.y), $.textRects && (d < -20 - $.textRects.width || d > o.globals.gridWidth + $.textRects.width + 30) && (y = "");
                                var ne = o.globals.dataLabels.style.colors[p];
                                (("bar" === o.config.chart.type || "rangeBar" === o.config.chart.type) && o.config.plotOptions.bar.distributed || o.config.dataLabels.distributed) && (ne = o.globals.dataLabels.style.colors[m]), "function" == typeof ne && (ne = ne({
                                    series: o.globals.series,
                                    seriesIndex: p,
                                    dataPointIndex: m,
                                    w: o
                                })), k && (ne = k);
                                var re = T.offsetX,
                                    b = T.offsetY;
                                if ("bar" !== o.config.chart.type && "rangeBar" !== o.config.chart.type || (re = 0, b = 0), $.drawnextLabel) {
                                    var A = c.drawText({
                                        width: 100,
                                        height: parseInt(T.style.fontSize, 10),
                                        x: d + re,
                                        y: f + b,
                                        foreColor: ne,
                                        textAnchor: x || T.textAnchor,
                                        text: y,
                                        fontSize: w || T.style.fontSize,
                                        fontFamily: T.style.fontFamily,
                                        fontWeight: T.style.fontWeight || "normal"
                                    });
                                    if (A.attr({
                                            class: "apexcharts-datalabel",
                                            cx: d,
                                            cy: f
                                        }), T.dropShadow.enabled) {
                                        var F = T.dropShadow;
                                        new Oe(this.ctx).dropShadow(A, F)
                                    }
                                    S.add(A), void 0 === o.globals.lastDrawnDataLabelsIndexes[p] && (o.globals.lastDrawnDataLabelsIndexes[p] = []), o.globals.lastDrawnDataLabelsIndexes[p].push(m)
                                }
                            }
                        }
                    }, {
                        key: "addBackgroundToDataLabel",
                        value: function(a, o) {
                            var c = this.w,
                                d = c.config.dataLabels.background,
                                f = d.padding,
                                p = d.padding / 2,
                                m = o.width,
                                y = o.height,
                                x = new J(this.ctx).drawRect(o.x - f, o.y - p / 2, m + 2 * f, y + p, d.borderRadius, "transparent" === c.config.chart.background ? "#fff" : c.config.chart.background, d.opacity, d.borderWidth, d.borderColor);
                            return d.dropShadow.enabled && new Oe(this.ctx).dropShadow(x, d.dropShadow), x
                        }
                    }, {
                        key: "dataLabelsBackground",
                        value: function() {
                            var a = this.w;
                            if ("bubble" !== a.config.chart.type)
                                for (var o = a.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), c = 0; c < o.length; c++) {
                                    var d = o[c],
                                        f = d.getBBox(),
                                        p = null;
                                    if (f.width && f.height && (p = this.addBackgroundToDataLabel(d, f)), p) {
                                        d.parentNode.insertBefore(p.node, d);
                                        var m = d.getAttribute("fill");
                                        !a.config.chart.animations.enabled || a.globals.resized || a.globals.dataChanged ? p.attr({
                                            fill: m
                                        }) : p.animate().attr({
                                            fill: m
                                        }), d.setAttribute("fill", a.config.dataLabels.background.foreColor)
                                    }
                                }
                        }
                    }, {
                        key: "bringForward",
                        value: function() {
                            for (var a = this.w, o = a.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), c = a.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), d = 0; d < o.length; d++) c && c.insertBefore(o[d], c.nextSibling)
                        }
                    }]), K
                }(),
                Ct = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.legendInactiveClass = "legend-mouseover-inactive"
                    }
                    return z(K, [{
                        key: "getAllSeriesEls",
                        value: function() {
                            return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series")
                        }
                    }, {
                        key: "getSeriesByName",
                        value: function(a) {
                            return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(te.escapeString(a), "']"))
                        }
                    }, {
                        key: "isSeriesHidden",
                        value: function(a) {
                            var o = this.getSeriesByName(a),
                                c = parseInt(o.getAttribute("data:realIndex"), 10);
                            return {
                                isHidden: o.classList.contains("apexcharts-series-collapsed"),
                                realIndex: c
                            }
                        }
                    }, {
                        key: "addCollapsedClassToSeries",
                        value: function(a, o) {
                            var c = this.w;

                            function d(f) {
                                for (var p = 0; p < f.length; p++) f[p].index === o && a.node.classList.add("apexcharts-series-collapsed")
                            }
                            d(c.globals.collapsedSeries), d(c.globals.ancillaryCollapsedSeries)
                        }
                    }, {
                        key: "toggleSeries",
                        value: function(a) {
                            var o = this.isSeriesHidden(a);
                            return this.ctx.legend.legendHelpers.toggleDataSeries(o.realIndex, o.isHidden), o.isHidden
                        }
                    }, {
                        key: "showSeries",
                        value: function(a) {
                            var o = this.isSeriesHidden(a);
                            o.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(o.realIndex, !0)
                        }
                    }, {
                        key: "hideSeries",
                        value: function(a) {
                            var o = this.isSeriesHidden(a);
                            o.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(o.realIndex, !1)
                        }
                    }, {
                        key: "resetSeries",
                        value: function() {
                            var a = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
                                o = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                                c = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                                d = this.w,
                                f = te.clone(d.globals.initialSeries);
                            d.globals.previousPaths = [], c ? (d.globals.collapsedSeries = [], d.globals.ancillaryCollapsedSeries = [], d.globals.collapsedSeriesIndices = [], d.globals.ancillaryCollapsedSeriesIndices = []) : f = this.emptyCollapsedSeries(f), d.config.series = f, a && (o && (d.globals.zoomed = !1, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(f, d.config.chart.animations.dynamicAnimation.enabled))
                        }
                    }, {
                        key: "emptyCollapsedSeries",
                        value: function(a) {
                            for (var o = this.w, c = 0; c < a.length; c++) o.globals.collapsedSeriesIndices.indexOf(c) > -1 && (a[c].data = []);
                            return a
                        }
                    }, {
                        key: "toggleSeriesOnHover",
                        value: function(a, o) {
                            var c = this.w;
                            o || (o = a.target);
                            var d = c.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
                            if ("mousemove" === a.type) {
                                var f = parseInt(o.getAttribute("rel"), 10) - 1,
                                    p = null,
                                    m = null;
                                c.globals.axisCharts || "radialBar" === c.config.chart.type ? c.globals.axisCharts ? (p = c.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(f, "']")), m = c.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(f, "']"))) : p = c.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(f + 1, "']")) : p = c.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(f + 1, "'] path"));
                                for (var y = 0; y < d.length; y++) d[y].classList.add(this.legendInactiveClass);
                                null !== p && (c.globals.axisCharts || p.parentNode.classList.remove(this.legendInactiveClass), p.classList.remove(this.legendInactiveClass), null !== m && m.classList.remove(this.legendInactiveClass))
                            } else if ("mouseout" === a.type)
                                for (var x = 0; x < d.length; x++) d[x].classList.remove(this.legendInactiveClass)
                        }
                    }, {
                        key: "highlightRangeInSeries",
                        value: function(a, o) {
                            var c = this,
                                d = this.w,
                                f = d.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),
                                p = function(y) {
                                    for (var x = 0; x < f.length; x++) f[x].classList[y](c.legendInactiveClass)
                                };
                            if ("mousemove" === a.type) {
                                var m = parseInt(o.getAttribute("rel"), 10) - 1;
                                p("add"),
                                    function(y) {
                                        for (var x = 0; x < f.length; x++) {
                                            var w = parseInt(f[x].getAttribute("val"), 10);
                                            w >= y.from && w <= y.to && f[x].classList.remove(c.legendInactiveClass)
                                        }
                                    }(d.config.plotOptions.heatmap.colorScale.ranges[m])
                            } else "mouseout" === a.type && p("remove")
                        }
                    }, {
                        key: "getActiveConfigSeriesIndex",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "asc",
                                o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                                c = this.w,
                                d = 0;
                            if (c.config.series.length > 1)
                                for (var f = c.config.series.map(function(m, y) {
                                        return m.data && m.data.length > 0 && -1 === c.globals.collapsedSeriesIndices.indexOf(y) && (!c.globals.comboCharts || 0 === o.length || o.length && o.indexOf(c.config.series[y].type) > -1) ? y : -1
                                    }), p = "asc" === a ? 0 : f.length - 1;
                                    "asc" === a ? p < f.length : p >= 0;
                                    "asc" === a ? p++ : p--)
                                    if (-1 !== f[p]) {
                                        d = f[p];
                                        break
                                    }
                            return d
                        }
                    }, {
                        key: "getBarSeriesIndices",
                        value: function() {
                            return this.w.globals.comboCharts ? this.w.config.series.map(function(a, o) {
                                return "bar" === a.type || "column" === a.type ? o : -1
                            }).filter(function(a) {
                                return -1 !== a
                            }) : this.w.config.series.map(function(a, o) {
                                return o
                            })
                        }
                    }, {
                        key: "getPreviousPaths",
                        value: function() {
                            var a = this.w;

                            function o(p, m, y) {
                                for (var x = p[m].childNodes, w = {
                                        type: y,
                                        paths: [],
                                        realIndex: p[m].getAttribute("data:realIndex")
                                    }, S = 0; S < x.length; S++)
                                    if (x[S].hasAttribute("pathTo")) {
                                        var T = x[S].getAttribute("pathTo");
                                        w.paths.push({
                                            d: T
                                        })
                                    }
                                a.globals.previousPaths.push(w)
                            }
                            a.globals.previousPaths = [], ["line", "area", "bar", "rangebar", "rangeArea", "candlestick", "radar"].forEach(function(p) {
                                for (var y = a.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(p, "-series .apexcharts-series")), x = 0; x < y.length; x++) o(y, x, p)
                            }), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
                            var c = a.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a.config.chart.type, " .apexcharts-series"));
                            if (c.length > 0)
                                for (var d = function(p) {
                                        for (var m = a.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(p, "'] rect")), y = [], x = function(S) {
                                                var T = function(O) {
                                                        return m[S].getAttribute(O)
                                                    },
                                                    k = {
                                                        x: parseFloat(T("x")),
                                                        y: parseFloat(T("y")),
                                                        width: parseFloat(T("width")),
                                                        height: parseFloat(T("height"))
                                                    };
                                                y.push({
                                                    rect: k,
                                                    color: m[S].getAttribute("color")
                                                })
                                            }, w = 0; w < m.length; w++) x(w);
                                        a.globals.previousPaths.push(y)
                                    }, f = 0; f < c.length; f++) d(f);
                            a.globals.axisCharts || (a.globals.previousPaths = a.globals.series)
                        }
                    }, {
                        key: "handlePrevBubbleScatterPaths",
                        value: function(a) {
                            var o = this.w,
                                c = o.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a, "-series .apexcharts-series"));
                            if (c.length > 0)
                                for (var d = 0; d < c.length; d++) {
                                    for (var f = o.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a, "-series .apexcharts-series[data\\:realIndex='").concat(d, "'] circle")), p = [], m = 0; m < f.length; m++) p.push({
                                        x: f[m].getAttribute("cx"),
                                        y: f[m].getAttribute("cy"),
                                        r: f[m].getAttribute("r")
                                    });
                                    o.globals.previousPaths.push(p)
                                }
                        }
                    }, {
                        key: "clearPreviousPaths",
                        value: function() {
                            var a = this.w;
                            a.globals.previousPaths = [], a.globals.allSeriesCollapsed = !1
                        }
                    }, {
                        key: "handleNoData",
                        value: function() {
                            var a = this.w,
                                o = a.config.noData,
                                c = new J(this.ctx),
                                d = a.globals.svgWidth / 2,
                                f = a.globals.svgHeight / 2,
                                p = "middle";
                            if (a.globals.noData = !0, a.globals.animationEnded = !0, "left" === o.align ? (d = 10, p = "start") : "right" === o.align && (d = a.globals.svgWidth - 10, p = "end"), "top" === o.verticalAlign ? f = 50 : "bottom" === o.verticalAlign && (f = a.globals.svgHeight - 50), d += o.offsetX, f = f + parseInt(o.style.fontSize, 10) + 2 + o.offsetY, void 0 !== o.text && "" !== o.text) {
                                var m = c.drawText({
                                    x: d,
                                    y: f,
                                    text: o.text,
                                    textAnchor: p,
                                    fontSize: o.style.fontSize,
                                    fontFamily: o.style.fontFamily,
                                    foreColor: o.style.color,
                                    opacity: 1,
                                    class: "apexcharts-text-nodata"
                                });
                                a.globals.dom.Paper.add(m)
                            }
                        }
                    }, {
                        key: "setNullSeriesToZeroValues",
                        value: function(a) {
                            for (var o = this.w, c = 0; c < a.length; c++)
                                if (0 === a[c].length)
                                    for (var d = 0; d < a[o.globals.maxValsInArrayIndex].length; d++) a[c].push(0);
                            return a
                        }
                    }, {
                        key: "hasAllSeriesEqualX",
                        value: function() {
                            for (var a = !0, o = this.w, c = this.filteredSeriesX(), d = 0; d < c.length - 1; d++)
                                if (c[d][0] !== c[d + 1][0]) {
                                    a = !1;
                                    break
                                }
                            return o.globals.allSeriesHasEqualX = a, a
                        }
                    }, {
                        key: "filteredSeriesX",
                        value: function() {
                            return this.w.globals.seriesX.map(function(o) {
                                return o.length > 0 ? o : []
                            })
                        }
                    }]), K
                }(),
                Gt = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new Ie(this.ctx)
                    }
                    return z(K, [{
                        key: "isMultiFormat",
                        value: function() {
                            return this.isFormatXY() || this.isFormat2DArray()
                        }
                    }, {
                        key: "isFormatXY",
                        value: function() {
                            var a = this.w.config.series.slice(),
                                o = new Ct(this.ctx);
                            if (this.activeSeriesIndex = o.getActiveConfigSeriesIndex(), void 0 !== a[this.activeSeriesIndex].data && a[this.activeSeriesIndex].data.length > 0 && null !== a[this.activeSeriesIndex].data[0] && void 0 !== a[this.activeSeriesIndex].data[0].x && null !== a[this.activeSeriesIndex].data[0]) return !0
                        }
                    }, {
                        key: "isFormat2DArray",
                        value: function() {
                            var a = this.w.config.series.slice(),
                                o = new Ct(this.ctx);
                            if (this.activeSeriesIndex = o.getActiveConfigSeriesIndex(), void 0 !== a[this.activeSeriesIndex].data && a[this.activeSeriesIndex].data.length > 0 && null != a[this.activeSeriesIndex].data[0] && a[this.activeSeriesIndex].data[0].constructor === Array) return !0
                        }
                    }, {
                        key: "handleFormat2DArray",
                        value: function(a, o) {
                            for (var c = this.w.config, d = this.w.globals, f = "boxPlot" === c.chart.type || "boxPlot" === c.series[o].type, p = 0; p < a[o].data.length; p++)
                                if (void 0 !== a[o].data[p][1] && (Array.isArray(a[o].data[p][1]) && 4 === a[o].data[p][1].length && !f ? this.twoDSeries.push(te.parseNumber(a[o].data[p][1][3])) : this.twoDSeries.push(te.parseNumber(a[o].data[p].length >= 5 ? a[o].data[p][4] : a[o].data[p][1])), d.dataFormatXNumeric = !0), "datetime" === c.xaxis.type) {
                                    var m = new Date(a[o].data[p][0]);
                                    m = new Date(m).getTime(), this.twoDSeriesX.push(m)
                                } else this.twoDSeriesX.push(a[o].data[p][0]);
                            for (var y = 0; y < a[o].data.length; y++) void 0 !== a[o].data[y][2] && (this.threeDSeries.push(a[o].data[y][2]), d.isDataXYZ = !0)
                        }
                    }, {
                        key: "handleFormatXY",
                        value: function(a, o) {
                            var c = this.w.config,
                                d = this.w.globals,
                                f = new Ge(this.ctx),
                                p = o;
                            d.collapsedSeriesIndices.indexOf(o) > -1 && (p = this.activeSeriesIndex);
                            for (var m = 0; m < a[o].data.length; m++) void 0 !== a[o].data[m].y && (Array.isArray(a[o].data[m].y) ? this.twoDSeries.push(te.parseNumber(a[o].data[m].y[a[o].data[m].y.length - 1])) : this.twoDSeries.push(te.parseNumber(a[o].data[m].y))), void 0 !== a[o].data[m].goals && Array.isArray(a[o].data[m].goals) ? (void 0 === this.seriesGoals[o] && (this.seriesGoals[o] = []), this.seriesGoals[o].push(a[o].data[m].goals)) : (void 0 === this.seriesGoals[o] && (this.seriesGoals[o] = []), this.seriesGoals[o].push(null));
                            for (var y = 0; y < a[p].data.length; y++) {
                                var x = "string" == typeof a[p].data[y].x,
                                    w = Array.isArray(a[p].data[y].x),
                                    S = !w && !!f.isValidDate(a[p].data[y].x);
                                x || S ? x || c.xaxis.convertedCatToNumeric ? "datetime" !== c.xaxis.type || d.isBarHorizontal && d.isRangeData ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(a[p].data[y].x), isNaN(a[p].data[y].x) || "category" === this.w.config.xaxis.type || "string" == typeof a[p].data[y].x || (d.isXNumeric = !0)) : this.twoDSeriesX.push(f.parseDate(a[p].data[y].x)) : "datetime" === c.xaxis.type ? this.twoDSeriesX.push(f.parseDate(a[p].data[y].x.toString())) : (d.dataFormatXNumeric = !0, d.isXNumeric = !0, this.twoDSeriesX.push(parseFloat(a[p].data[y].x))) : w ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(a[p].data[y].x)) : (d.isXNumeric = !0, d.dataFormatXNumeric = !0, this.twoDSeriesX.push(a[p].data[y].x))
                            }
                            if (a[o].data[0] && void 0 !== a[o].data[0].z) {
                                for (var k = 0; k < a[o].data.length; k++) this.threeDSeries.push(a[o].data[k].z);
                                d.isDataXYZ = !0
                            }
                        }
                    }, {
                        key: "handleRangeData",
                        value: function(a, o) {
                            var c = this.w.globals,
                                d = {};
                            return this.isFormat2DArray() ? d = this.handleRangeDataFormat("array", a, o) : this.isFormatXY() && (d = this.handleRangeDataFormat("xy", a, o)), c.seriesRangeStart.push(d.start), c.seriesRangeEnd.push(d.end), c.seriesRange.push(d.rangeUniques), c.seriesRange.forEach(function(f, p) {
                                f && f.forEach(function(m, y) {
                                    m.y.forEach(function(x, w) {
                                        for (var S = 0; S < m.y.length; S++) w !== S && x.y1 <= m.y[S].y2 && m.y[S].y1 <= x.y2 && (m.overlaps.indexOf(x.rangeName) < 0 && m.overlaps.push(x.rangeName), m.overlaps.indexOf(m.y[S].rangeName) < 0 && m.overlaps.push(m.y[S].rangeName))
                                    })
                                })
                            }), d
                        }
                    }, {
                        key: "handleCandleStickBoxData",
                        value: function(a, o) {
                            var c = this.w.globals,
                                d = {};
                            return this.isFormat2DArray() ? d = this.handleCandleStickBoxDataFormat("array", a, o) : this.isFormatXY() && (d = this.handleCandleStickBoxDataFormat("xy", a, o)), c.seriesCandleO[o] = d.o, c.seriesCandleH[o] = d.h, c.seriesCandleM[o] = d.m, c.seriesCandleL[o] = d.l, c.seriesCandleC[o] = d.c, d
                        }
                    }, {
                        key: "handleRangeDataFormat",
                        value: function(a, o, c) {
                            var d = [],
                                f = [],
                                p = o[c].data.filter(function(w, S, T) {
                                    return S === T.findIndex(function(k) {
                                        return k.x === w.x
                                    })
                                }).map(function(w, S) {
                                    return {
                                        x: w.x,
                                        overlaps: [],
                                        y: []
                                    }
                                });
                            if ("array" === a)
                                for (var m = 0; m < o[c].data.length; m++) Array.isArray(o[c].data[m]) ? (d.push(o[c].data[m][1][0]), f.push(o[c].data[m][1][1])) : (d.push(o[c].data[m]), f.push(o[c].data[m]));
                            else if ("xy" === a)
                                for (var y = function(w) {
                                        var S = Array.isArray(o[c].data[w].y),
                                            T = te.randomId(),
                                            k = o[c].data[w].x,
                                            O = {
                                                y1: S ? o[c].data[w].y[0] : o[c].data[w].y,
                                                y2: S ? o[c].data[w].y[1] : o[c].data[w].y,
                                                rangeName: T
                                            };
                                        o[c].data[w].rangeName = T;
                                        var B = p.findIndex(function($) {
                                            return $.x === k
                                        });
                                        p[B].y.push(O), d.push(O.y1), f.push(O.y2)
                                    }, x = 0; x < o[c].data.length; x++) y(x);
                            return {
                                start: d,
                                end: f,
                                rangeUniques: p
                            }
                        }
                    }, {
                        key: "handleCandleStickBoxDataFormat",
                        value: function(a, o, c) {
                            var d = this.w,
                                f = "boxPlot" === d.config.chart.type || "boxPlot" === d.config.series[c].type,
                                p = [],
                                m = [],
                                y = [],
                                x = [],
                                w = [];
                            if ("array" === a)
                                if (f && 6 === o[c].data[0].length || !f && 5 === o[c].data[0].length)
                                    for (var S = 0; S < o[c].data.length; S++) p.push(o[c].data[S][1]), m.push(o[c].data[S][2]), f ? (y.push(o[c].data[S][3]), x.push(o[c].data[S][4]), w.push(o[c].data[S][5])) : (x.push(o[c].data[S][3]), w.push(o[c].data[S][4]));
                                else
                                    for (var T = 0; T < o[c].data.length; T++) Array.isArray(o[c].data[T][1]) && (p.push(o[c].data[T][1][0]), m.push(o[c].data[T][1][1]), f ? (y.push(o[c].data[T][1][2]), x.push(o[c].data[T][1][3]), w.push(o[c].data[T][1][4])) : (x.push(o[c].data[T][1][2]), w.push(o[c].data[T][1][3])));
                            else if ("xy" === a)
                                for (var k = 0; k < o[c].data.length; k++) Array.isArray(o[c].data[k].y) && (p.push(o[c].data[k].y[0]), m.push(o[c].data[k].y[1]), f ? (y.push(o[c].data[k].y[2]), x.push(o[c].data[k].y[3]), w.push(o[c].data[k].y[4])) : (x.push(o[c].data[k].y[2]), w.push(o[c].data[k].y[3])));
                            return {
                                o: p,
                                h: m,
                                m: y,
                                l: x,
                                c: w
                            }
                        }
                    }, {
                        key: "parseDataAxisCharts",
                        value: function(a) {
                            var o, c = this,
                                f = this.w.config,
                                p = this.w.globals,
                                m = new Ge(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx),
                                y = f.labels.length > 0 ? f.labels.slice() : f.xaxis.categories.slice();
                            if (p.isRangeBar = "rangeBar" === f.chart.type && p.isBarHorizontal, p.hasXaxisGroups = "category" === f.xaxis.type && f.xaxis.group.groups.length > 0, p.hasXaxisGroups && (p.groups = f.xaxis.group.groups), p.hasSeriesGroups = null === (o = a[0]) || void 0 === o ? void 0 : o.group, p.hasSeriesGroups) {
                                var x = [],
                                    w = We(new Set(a.map(function(O) {
                                        return O.group
                                    })));
                                a.forEach(function(O, B) {
                                    var $ = w.indexOf(O.group);
                                    x[$] || (x[$] = []), x[$].push(O.name)
                                }), p.seriesGroups = x
                            }
                            for (var S = function() {
                                    for (var O = 0; O < y.length; O++)
                                        if ("string" == typeof y[O]) {
                                            if (!m.isValidDate(y[O])) throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
                                            c.twoDSeriesX.push(m.parseDate(y[O]))
                                        } else c.twoDSeriesX.push(y[O])
                                }, T = 0; T < a.length; T++) {
                                if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === a[T].data) return void console.error("It is a possibility that you may have not included 'data' property in series.");
                                if ("rangeBar" !== f.chart.type && "rangeArea" !== f.chart.type && "rangeBar" !== a[T].type && "rangeArea" !== a[T].type || (p.isRangeData = !0, "rangeBar" !== f.chart.type && "rangeArea" !== f.chart.type || this.handleRangeData(a, T)), this.isMultiFormat()) this.isFormat2DArray() ? this.handleFormat2DArray(a, T) : this.isFormatXY() && this.handleFormatXY(a, T), "candlestick" !== f.chart.type && "candlestick" !== a[T].type && "boxPlot" !== f.chart.type && "boxPlot" !== a[T].type || this.handleCandleStickBoxData(a, T), p.series.push(this.twoDSeries), p.labels.push(this.twoDSeriesX), p.seriesX.push(this.twoDSeriesX), p.seriesGoals = this.seriesGoals, T !== this.activeSeriesIndex || this.fallbackToCategory || (p.isXNumeric = !0);
                                else {
                                    "datetime" === f.xaxis.type ? (p.isXNumeric = !0, S(), p.seriesX.push(this.twoDSeriesX)) : "numeric" === f.xaxis.type && (p.isXNumeric = !0, y.length > 0 && (this.twoDSeriesX = y, p.seriesX.push(this.twoDSeriesX))), p.labels.push(this.twoDSeriesX);
                                    var k = a[T].data.map(function(O) {
                                        return te.parseNumber(O)
                                    });
                                    p.series.push(k)
                                }
                                p.seriesZ.push(this.threeDSeries), p.seriesNames.push(void 0 !== a[T].name ? a[T].name : "series-" + parseInt(T + 1, 10)), p.seriesColors.push(void 0 !== a[T].color ? a[T].color : void 0)
                            }
                            return this.w
                        }
                    }, {
                        key: "parseDataNonAxisCharts",
                        value: function(a) {
                            var o = this.w.globals,
                                c = this.w.config;
                            o.series = a.slice(), o.seriesNames = c.labels.slice();
                            for (var d = 0; d < o.series.length; d++) void 0 === o.seriesNames[d] && o.seriesNames.push("series-" + (d + 1));
                            return this.w
                        }
                    }, {
                        key: "handleExternalLabelsData",
                        value: function(a) {
                            var o = this.w.config,
                                c = this.w.globals;
                            o.xaxis.categories.length > 0 ? c.labels = o.xaxis.categories : o.labels.length > 0 ? c.labels = o.labels.slice() : this.fallbackToCategory ? (c.labels = c.labels[0], c.seriesRange.length && (c.seriesRange.map(function(d) {
                                d.forEach(function(f) {
                                    c.labels.indexOf(f.x) < 0 && f.x && c.labels.push(f.x)
                                })
                            }), c.labels = Array.from(new Set(c.labels.map(JSON.stringify)), JSON.parse)), o.xaxis.convertedCatToNumeric && (new je(o).convertCatToNumericXaxis(o, this.ctx, c.seriesX[0]), this._generateExternalLabels(a))) : this._generateExternalLabels(a)
                        }
                    }, {
                        key: "_generateExternalLabels",
                        value: function(a) {
                            var o = this.w.globals,
                                c = this.w.config,
                                d = [];
                            if (o.axisCharts) {
                                if (o.series.length > 0)
                                    if (this.isFormatXY())
                                        for (var f = c.series.map(function(S, T) {
                                                return S.data.filter(function(k, O, B) {
                                                    return B.findIndex(function($) {
                                                        return $.x === k.x
                                                    }) === O
                                                })
                                            }), p = f.reduce(function(S, T, k, O) {
                                                return O[S].length > T.length ? S : k
                                            }, 0), m = 0; m < f[p].length; m++) d.push(m + 1);
                                    else
                                        for (var y = 0; y < o.series[o.maxValsInArrayIndex].length; y++) d.push(y + 1);
                                o.seriesX = [];
                                for (var x = 0; x < a.length; x++) o.seriesX.push(d);
                                this.w.globals.isBarHorizontal || (o.isXNumeric = !0)
                            }
                            if (0 === d.length) {
                                d = o.axisCharts ? [] : o.series.map(function(S, T) {
                                    return T + 1
                                });
                                for (var w = 0; w < a.length; w++) o.seriesX.push(d)
                            }
                            o.labels = d, c.xaxis.convertedCatToNumeric && (o.categoryLabels = d.map(function(S) {
                                return c.xaxis.labels.formatter(S)
                            })), o.noLabelsProvided = !0
                        }
                    }, {
                        key: "parseData",
                        value: function(a) {
                            var o = this.w,
                                c = o.config,
                                d = o.globals;
                            if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = !1, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), d.axisCharts ? (this.parseDataAxisCharts(a), this.coreUtils.getLargestSeries()) : this.parseDataNonAxisCharts(a), c.chart.stacked) {
                                var f = new Ct(this.ctx);
                                d.series = f.setNullSeriesToZeroValues(d.series)
                            }
                            this.coreUtils.getSeriesTotals(), d.axisCharts && (d.stackedSeriesTotals = this.coreUtils.getStackedSeriesTotals(), d.stackedSeriesTotalsByGroups = this.coreUtils.getStackedSeriesTotalsByGroups()), this.coreUtils.getPercentSeries(), d.dataFormatXNumeric || d.isXNumeric && ("numeric" !== c.xaxis.type || 0 !== c.labels.length || 0 !== c.xaxis.categories.length) || this.handleExternalLabelsData(a);
                            for (var p = this.coreUtils.getCategoryLabels(d.labels), m = 0; m < p.length; m++)
                                if (Array.isArray(p[m])) {
                                    d.isMultiLineX = !0;
                                    break
                                }
                        }
                    }, {
                        key: "excludeCollapsedSeriesInYAxis",
                        value: function() {
                            var a = this,
                                o = this.w;
                            o.globals.ignoreYAxisIndexes = o.globals.collapsedSeries.map(function(c, d) {
                                if (a.w.globals.isMultipleYAxis && !o.config.chart.stacked) return c.index
                            })
                        }
                    }]), K
                }(),
                kt = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "getLabel",
                        value: function(a, o, c, d) {
                            var $, ne, f = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],
                                p = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "12px",
                                m = !(arguments.length > 6 && void 0 !== arguments[6]) || arguments[6],
                                y = this.w,
                                x = void 0 === a[d] ? "" : a[d],
                                w = x,
                                S = y.globals.xLabelFormatter,
                                T = y.config.xaxis.labels.formatter,
                                k = !1,
                                O = new ct(this.ctx);
                            m && (w = O.xLabelFormat(S, x, x, {
                                i: d,
                                dateFormatter: new Ge(this.ctx).formatDate,
                                w: y
                            }), void 0 !== T && (w = T(x, a[d], {
                                i: d,
                                dateFormatter: new Ge(this.ctx).formatDate,
                                w: y
                            }))), o.length > 0 ? ($ = o[d].unit, ne = null, o.forEach(function(F) {
                                "month" === F.unit ? ne = "year" : "day" === F.unit ? ne = "month" : "hour" === F.unit ? ne = "day" : "minute" === F.unit && (ne = "hour")
                            }), k = ne === $, c = o[d].position, w = o[d].value) : "datetime" === y.config.xaxis.type && void 0 === T && (w = ""), void 0 === w && (w = ""), w = Array.isArray(w) ? w : w.toString();
                            var b, re = new J(this.ctx);
                            b = y.globals.rotateXLabels && m ? re.getTextRects(w, parseInt(p, 10), null, "rotate(".concat(y.config.xaxis.labels.rotate, " 0 0)"), !1) : re.getTextRects(w, parseInt(p, 10));
                            var A = !y.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
                            return !Array.isArray(w) && (0 === w.indexOf("NaN") || 0 === w.toLowerCase().indexOf("invalid") || w.toLowerCase().indexOf("infinity") >= 0 || f.indexOf(w) >= 0 && A) && (w = ""), {
                                x: c,
                                text: w,
                                textRect: b,
                                isBold: k
                            }
                        }
                    }, {
                        key: "checkLabelBasedOnTickamount",
                        value: function(a, o, c) {
                            var d = this.w,
                                f = d.config.xaxis.tickAmount;
                            return "dataPoints" === f && (f = Math.round(d.globals.gridWidth / 120)), f > c || a % Math.round(c / (f + 1)) == 0 || (o.text = ""), o
                        }
                    }, {
                        key: "checkForOverflowingLabels",
                        value: function(a, o, c, d, f) {
                            var p = this.w;
                            if (0 === a && p.globals.skipFirstTimelinelabel && (o.text = ""), a === c - 1 && p.globals.skipLastTimelinelabel && (o.text = ""), p.config.xaxis.labels.hideOverlappingLabels && d.length > 0) {
                                var m = f[f.length - 1];
                                o.x < m.textRect.width / (p.globals.rotateXLabels ? Math.abs(p.config.xaxis.labels.rotate) / 12 : 1.01) + m.x && (o.text = "")
                            }
                            return o
                        }
                    }, {
                        key: "checkForReversedLabels",
                        value: function(a, o) {
                            var c = this.w;
                            return c.config.yaxis[a] && c.config.yaxis[a].reversed && o.reverse(), o
                        }
                    }, {
                        key: "isYAxisHidden",
                        value: function(a) {
                            var o = this.w,
                                c = new Ie(this.ctx);
                            return !o.config.yaxis[a].show || !o.config.yaxis[a].showForNullSeries && c.isSeriesNull(a) && -1 === o.globals.collapsedSeriesIndices.indexOf(a)
                        }
                    }, {
                        key: "getYAxisForeColor",
                        value: function(a, o) {
                            var c = this.w;
                            return Array.isArray(a) && c.globals.yAxisScale[o] && this.ctx.theme.pushExtraColors(a, c.globals.yAxisScale[o].result.length, !1), a
                        }
                    }, {
                        key: "drawYAxisTicks",
                        value: function(a, o, c, d, f, p, m) {
                            var y = this.w,
                                x = new J(this.ctx),
                                w = y.globals.translateY;
                            if (d.show && o > 0) {
                                !0 === y.config.yaxis[f].opposite && (a += d.width);
                                for (var S = o; S >= 0; S--) {
                                    var T = w + o / 10 + y.config.yaxis[f].labels.offsetY - 1;
                                    y.globals.isBarHorizontal && (T = p * S), "heatmap" === y.config.chart.type && (T += p / 2);
                                    var k = x.drawLine(a + c.offsetX - d.width + d.offsetX, T + d.offsetY, a + c.offsetX + d.offsetX, T + d.offsetY, d.color);
                                    m.add(k), w += p
                                }
                            }
                        }
                    }]), K
                }(),
                pn = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "scaleSvgNode",
                        value: function(a, o) {
                            var c = parseFloat(a.getAttributeNS(null, "width")),
                                d = parseFloat(a.getAttributeNS(null, "height"));
                            a.setAttributeNS(null, "width", c * o), a.setAttributeNS(null, "height", d * o), a.setAttributeNS(null, "viewBox", "0 0 " + c + " " + d)
                        }
                    }, {
                        key: "fixSvgStringForIe11",
                        value: function(a) {
                            if (!te.isIE11()) return a.replace(/&nbsp;/g, "&#160;");
                            var o = 0,
                                c = a.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, function(d) {
                                    return 2 == ++o ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : d
                                });
                            return (c = c.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1")
                        }
                    }, {
                        key: "getSvgString",
                        value: function(a) {
                            null == a && (a = 1);
                            var o = this.w.globals.dom.Paper.svg();
                            if (1 !== a) {
                                var c = this.w.globals.dom.Paper.node.cloneNode(!0);
                                this.scaleSvgNode(c, a), o = (new XMLSerializer).serializeToString(c)
                            }
                            return this.fixSvgStringForIe11(o)
                        }
                    }, {
                        key: "cleanup",
                        value: function() {
                            var a = this.w,
                                o = a.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),
                                c = a.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),
                                d = a.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
                            Array.prototype.forEach.call(d, function(f) {
                                f.setAttribute("width", 0)
                            }), o && o[0] && (o[0].setAttribute("x", -500), o[0].setAttribute("x1", -500), o[0].setAttribute("x2", -500)), c && c[0] && (c[0].setAttribute("y", -100), c[0].setAttribute("y1", -100), c[0].setAttribute("y2", -100))
                        }
                    }, {
                        key: "svgUrl",
                        value: function() {
                            this.cleanup();
                            var a = this.getSvgString(),
                                o = new Blob([a], {
                                    type: "image/svg+xml;charset=utf-8"
                                });
                            return URL.createObjectURL(o)
                        }
                    }, {
                        key: "dataURI",
                        value: function(a) {
                            var o = this;
                            return new Promise(function(c) {
                                var d = o.w,
                                    f = a ? a.scale || a.width / d.globals.svgWidth : 1;
                                o.cleanup();
                                var p = document.createElement("canvas");
                                p.width = d.globals.svgWidth * f, p.height = parseInt(d.globals.dom.elWrap.style.height, 10) * f;
                                var m = "transparent" === d.config.chart.background ? "#fff" : d.config.chart.background,
                                    y = p.getContext("2d");
                                y.fillStyle = m, y.fillRect(0, 0, p.width * f, p.height * f);
                                var x = o.getSvgString(f);
                                if (window.canvg && te.isIE11()) {
                                    var w = window.canvg.Canvg.fromString(y, x, {
                                        ignoreClear: !0,
                                        ignoreDimensions: !0
                                    });
                                    w.start();
                                    var S = p.msToBlob();
                                    w.stop(), c({
                                        blob: S
                                    })
                                } else {
                                    var T = "data:image/svg+xml," + encodeURIComponent(x),
                                        k = new Image;
                                    k.crossOrigin = "anonymous", k.onload = function() {
                                        if (y.drawImage(k, 0, 0), p.msToBlob) {
                                            var O = p.msToBlob();
                                            c({
                                                blob: O
                                            })
                                        } else {
                                            var B = p.toDataURL("image/png");
                                            c({
                                                imgURI: B
                                            })
                                        }
                                    }, k.src = T
                                }
                            })
                        }
                    }, {
                        key: "exportToSVG",
                        value: function() {
                            this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg")
                        }
                    }, {
                        key: "exportToPng",
                        value: function() {
                            var a = this;
                            this.dataURI().then(function(o) {
                                var c = o.imgURI,
                                    d = o.blob;
                                d ? navigator.msSaveOrOpenBlob(d, a.w.globals.chartID + ".png") : a.triggerDownload(c, a.w.config.chart.toolbar.export.png.filename, ".png")
                            })
                        }
                    }, {
                        key: "exportToCSV",
                        value: function(a) {
                            var o = this,
                                c = a.series,
                                d = a.fileName,
                                f = a.columnDelimiter,
                                p = void 0 === f ? "," : f,
                                m = a.lineDelimiter,
                                y = void 0 === m ? "\n" : m,
                                x = this.w;
                            c || (c = x.config.series);
                            var w, S, T = [],
                                k = [],
                                O = "",
                                B = x.globals.series.map(function(X, be) {
                                    return -1 === x.globals.collapsedSeriesIndices.indexOf(be) ? X : []
                                }),
                                $ = function(X) {
                                    return "datetime" === x.config.xaxis.type && String(X).length >= 10
                                },
                                ne = Math.max.apply(Math, We(c.map(function(X) {
                                    return X.data ? X.data.length : 0
                                }))),
                                re = new Gt(this.ctx),
                                b = new kt(this.ctx),
                                A = function(X) {
                                    var be = "";
                                    if (x.globals.axisCharts) {
                                        if ("category" === x.config.xaxis.type || x.config.xaxis.convertedCatToNumeric)
                                            if (x.globals.isBarHorizontal) {
                                                var Se = x.globals.yLabelFormatters[0],
                                                    Le = new Ct(o.ctx).getActiveConfigSeriesIndex();
                                                be = Se(x.globals.labels[X], {
                                                    seriesIndex: Le,
                                                    dataPointIndex: X,
                                                    w: x
                                                })
                                            } else be = b.getLabel(x.globals.labels, x.globals.timescaleLabels, 0, X).text;
                                        "datetime" === x.config.xaxis.type && (x.config.xaxis.categories.length ? be = x.config.xaxis.categories[X] : x.config.labels.length && (be = x.config.labels[X]))
                                    } else be = x.config.labels[X];
                                    return Array.isArray(be) && (be = be.join(" ")), te.isNumber(be) ? be : be.split(p).join("")
                                };
                            T.push(x.config.chart.toolbar.export.csv.headerCategory), "boxPlot" === x.config.chart.type ? (T.push("minimum"), T.push("q1"), T.push("median"), T.push("q3"), T.push("maximum")) : "candlestick" === x.config.chart.type ? (T.push("open"), T.push("high"), T.push("low"), T.push("close")) : "rangeBar" === x.config.chart.type ? (T.push("minimum"), T.push("maximum")) : c.map(function(X, be) {
                                var Se = (X.name ? X.name : "series-".concat(be)) + "";
                                x.globals.axisCharts && T.push(Se.split(p).join("") ? Se.split(p).join("") : "series-".concat(be))
                            }), x.globals.axisCharts || (T.push(x.config.chart.toolbar.export.csv.headerValue), k.push(T.join(p))), x.globals.allSeriesHasEqualX || !x.globals.axisCharts || x.config.xaxis.categories.length || x.config.labels.length ? c.map(function(X, be) {
                                x.globals.axisCharts ? function(X, be) {
                                    if (T.length && 0 === be && k.push(T.join(p)), X.data) {
                                        X.data = X.data.length && X.data || We(Array(ne)).map(function() {
                                            return ""
                                        });
                                        for (var Se = 0; Se < X.data.length; Se++) {
                                            T = [];
                                            var Le = A(Se);
                                            if (Le || (re.isFormatXY() ? Le = c[be].data[Se].x : re.isFormat2DArray() && (Le = c[be].data[Se] ? c[be].data[Se][0] : "")), 0 === be) {
                                                T.push($(Le) ? x.config.chart.toolbar.export.csv.dateFormatter(Le) : te.isNumber(Le) ? Le : Le.split(p).join(""));
                                                for (var ze = 0; ze < x.globals.series.length; ze++) {
                                                    var nt;
                                                    re.isFormatXY() ? T.push(null === (nt = c[ze].data[Se]) || void 0 === nt ? void 0 : nt.y) : T.push(B[ze][Se])
                                                }
                                            }("candlestick" === x.config.chart.type || X.type && "candlestick" === X.type) && (T.pop(), T.push(x.globals.seriesCandleO[be][Se]), T.push(x.globals.seriesCandleH[be][Se]), T.push(x.globals.seriesCandleL[be][Se]), T.push(x.globals.seriesCandleC[be][Se])), ("boxPlot" === x.config.chart.type || X.type && "boxPlot" === X.type) && (T.pop(), T.push(x.globals.seriesCandleO[be][Se]), T.push(x.globals.seriesCandleH[be][Se]), T.push(x.globals.seriesCandleM[be][Se]), T.push(x.globals.seriesCandleL[be][Se]), T.push(x.globals.seriesCandleC[be][Se])), "rangeBar" === x.config.chart.type && (T.pop(), T.push(x.globals.seriesRangeStart[be][Se]), T.push(x.globals.seriesRangeEnd[be][Se])), T.length && k.push(T.join(p))
                                        }
                                    }
                                }(X, be) : ((T = []).push(x.globals.labels[be].split(p).join("")), T.push(B[be]), k.push(T.join(p)))
                            }) : (w = new Set, S = {}, c.forEach(function(X, be) {
                                X ? .data.forEach(function(Se) {
                                    var Le, ze;
                                    if (re.isFormatXY()) Le = Se.x, ze = Se.y;
                                    else {
                                        if (!re.isFormat2DArray()) return;
                                        Le = Se[0], ze = Se[1]
                                    }
                                    S[Le] || (S[Le] = Array(c.length).fill("")), S[Le][be] = ze, w.add(Le)
                                })
                            }), T.length && k.push(T.join(p)), Array.from(w).sort().forEach(function(X) {
                                k.push([$(X) && "datetime" === x.config.xaxis.type ? x.config.chart.toolbar.export.csv.dateFormatter(X) : te.isNumber(X) ? X : X.split(p).join(""), S[X].join(p)])
                            })), O += k.join(y), this.triggerDownload("data:text/csv; charset=utf-8," + encodeURIComponent("\ufeff" + O), d || x.config.chart.toolbar.export.csv.filename, ".csv")
                        }
                    }, {
                        key: "triggerDownload",
                        value: function(a, o, c) {
                            var d = document.createElement("a");
                            d.href = a, d.download = (o || this.w.globals.chartID) + c, document.body.appendChild(d), d.click(), document.body.removeChild(d)
                        }
                    }]), K
                }(),
                _n = function() {
                    function K(a, o) {
                        U(this, K), this.ctx = a, this.elgrid = o, this.w = a.w;
                        var c = this.w;
                        this.axesUtils = new kt(a), this.xaxisLabels = c.globals.labels.slice(), c.globals.timescaleLabels.length > 0 && !c.globals.isBarHorizontal && (this.xaxisLabels = c.globals.timescaleLabels.slice()), c.config.xaxis.overwriteCategories && (this.xaxisLabels = c.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], this.offY = "top" === c.config.xaxis.position ? 0 : c.globals.gridHeight + 1, this.offY = this.offY + c.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = "bar" === c.config.chart.type && c.config.plotOptions.bar.horizontal, this.xaxisFontSize = c.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = c.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = c.config.xaxis.labels.style.colors, this.xaxisBorderWidth = c.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = c.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth = this.xaxisBorderWidth.indexOf("%") > -1 ? c.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = c.config.xaxis.axisBorder.height, this.yaxis = c.config.yaxis[0]
                    }
                    return z(K, [{
                        key: "drawXaxis",
                        value: function() {
                            var a = this.w,
                                o = new J(this.ctx),
                                c = o.group({
                                    class: "apexcharts-xaxis",
                                    transform: "translate(".concat(a.config.xaxis.offsetX, ", ").concat(a.config.xaxis.offsetY, ")")
                                }),
                                d = o.group({
                                    class: "apexcharts-xaxis-texts-g",
                                    transform: "translate(".concat(a.globals.translateXAxisX, ", ").concat(a.globals.translateXAxisY, ")")
                                });
                            c.add(d);
                            for (var f = [], p = 0; p < this.xaxisLabels.length; p++) f.push(this.xaxisLabels[p]);
                            if (this.drawXAxisLabelAndGroup(!0, o, d, f, a.globals.isXNumeric, function(O, B) {
                                    return B
                                }), a.globals.hasXaxisGroups) {
                                var m = a.globals.groups;
                                f = [];
                                for (var y = 0; y < m.length; y++) f.push(m[y].title);
                                var x = {};
                                a.config.xaxis.group.style && (x.xaxisFontSize = a.config.xaxis.group.style.fontSize, x.xaxisFontFamily = a.config.xaxis.group.style.fontFamily, x.xaxisForeColors = a.config.xaxis.group.style.colors, x.fontWeight = a.config.xaxis.group.style.fontWeight, x.cssClass = a.config.xaxis.group.style.cssClass), this.drawXAxisLabelAndGroup(!1, o, d, f, !1, function(O, B) {
                                    return m[O].cols * B
                                }, x)
                            }
                            if (void 0 !== a.config.xaxis.title.text) {
                                var w = o.group({
                                        class: "apexcharts-xaxis-title"
                                    }),
                                    S = o.drawText({
                                        x: a.globals.gridWidth / 2 + a.config.xaxis.title.offsetX,
                                        y: this.offY + parseFloat(this.xaxisFontSize) + ("bottom" === a.config.xaxis.position ? a.globals.xAxisLabelsHeight : -a.globals.xAxisLabelsHeight - 10) + a.config.xaxis.title.offsetY,
                                        text: a.config.xaxis.title.text,
                                        textAnchor: "middle",
                                        fontSize: a.config.xaxis.title.style.fontSize,
                                        fontFamily: a.config.xaxis.title.style.fontFamily,
                                        fontWeight: a.config.xaxis.title.style.fontWeight,
                                        foreColor: a.config.xaxis.title.style.color,
                                        cssClass: "apexcharts-xaxis-title-text " + a.config.xaxis.title.style.cssClass
                                    });
                                w.add(S), c.add(w)
                            }
                            if (a.config.xaxis.axisBorder.show) {
                                var T = a.globals.barPadForNumericAxis,
                                    k = o.drawLine(a.globals.padHorizontal + a.config.xaxis.axisBorder.offsetX - T, this.offY, this.xaxisBorderWidth + T, this.offY, a.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
                                this.elgrid && this.elgrid.elGridBorders && a.config.grid.show ? this.elgrid.elGridBorders.add(k) : c.add(k)
                            }
                            return c
                        }
                    }, {
                        key: "drawXAxisLabelAndGroup",
                        value: function(a, o, c, d, f, p) {
                            var m, y = this,
                                x = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : {},
                                w = [],
                                S = [],
                                T = this.w,
                                k = x.xaxisFontSize || this.xaxisFontSize,
                                O = x.xaxisFontFamily || this.xaxisFontFamily,
                                B = x.xaxisForeColors || this.xaxisForeColors,
                                $ = x.fontWeight || T.config.xaxis.labels.style.fontWeight,
                                ne = x.cssClass || T.config.xaxis.labels.style.cssClass,
                                re = T.globals.padHorizontal,
                                b = d.length,
                                A = "category" === T.config.xaxis.type ? T.globals.dataPoints : b;
                            0 === A && b > A && (A = b), f ? (m = T.globals.gridWidth / Math.min(A > 1 ? A - 1 : A, b - 1), re = re + p(0, m) / 2 + T.config.xaxis.labels.offsetX) : re = re + p(0, m = T.globals.gridWidth / A) + T.config.xaxis.labels.offsetX;
                            for (var X = function(Se) {
                                    var Le = re - p(Se, m) / 2 + T.config.xaxis.labels.offsetX;
                                    0 === Se && 1 === b && m / 2 === re && 1 === A && (Le = T.globals.gridWidth / 2);
                                    var ze = y.axesUtils.getLabel(d, T.globals.timescaleLabels, Le, Se, w, k, a),
                                        nt = 28;
                                    if (T.globals.rotateXLabels && a && (nt = 22), T.config.xaxis.title.text && "top" === T.config.xaxis.position && (nt += parseFloat(T.config.xaxis.title.style.fontSize) + 2), a || (nt = nt + parseFloat(k) + (T.globals.xAxisLabelsHeight - T.globals.xAxisGroupLabelsHeight) + (T.globals.rotateXLabels ? 10 : 0)), ze = void 0 !== T.config.xaxis.tickAmount && "dataPoints" !== T.config.xaxis.tickAmount && "datetime" !== T.config.xaxis.type ? y.axesUtils.checkLabelBasedOnTickamount(Se, ze, b) : y.axesUtils.checkForOverflowingLabels(Se, ze, b, w, S), T.config.xaxis.labels.show) {
                                        var yt = o.drawText({
                                            x: ze.x,
                                            y: y.offY + T.config.xaxis.labels.offsetY + nt - ("top" === T.config.xaxis.position ? T.globals.xAxisHeight + T.config.xaxis.axisTicks.height - 2 : 0),
                                            text: ze.text,
                                            textAnchor: "middle",
                                            fontWeight: ze.isBold ? 600 : $,
                                            fontSize: k,
                                            fontFamily: O,
                                            foreColor: Array.isArray(B) ? a && T.config.xaxis.convertedCatToNumeric ? B[T.globals.minX + Se - 1] : B[Se] : B,
                                            isPlainText: !1,
                                            cssClass: (a ? "apexcharts-xaxis-label " : "apexcharts-xaxis-group-label ") + ne
                                        });
                                        if (c.add(yt), yt.on("click", function(Tt) {
                                                if ("function" == typeof T.config.chart.events.xAxisLabelClick) {
                                                    var wt = Object.assign({}, T, {
                                                        labelIndex: Se
                                                    });
                                                    T.config.chart.events.xAxisLabelClick(Tt, y.ctx, wt)
                                                }
                                            }), a) {
                                            var dt = document.createElementNS(T.globals.SVGNS, "title");
                                            dt.textContent = Array.isArray(ze.text) ? ze.text.join(" ") : ze.text, yt.node.appendChild(dt), "" !== ze.text && (w.push(ze.text), S.push(ze))
                                        }
                                    }
                                    Se < b - 1 && (re += p(Se + 1, m))
                                }, be = 0; be <= b - 1; be++) X(be)
                        }
                    }, {
                        key: "drawXaxisInversed",
                        value: function(a) {
                            var o, c, d = this,
                                f = this.w,
                                p = new J(this.ctx),
                                m = f.config.yaxis[0].opposite ? f.globals.translateYAxisX[a] : 0,
                                y = p.group({
                                    class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                                    rel: a
                                }),
                                x = p.group({
                                    class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                                    transform: "translate(" + m + ", 0)"
                                });
                            y.add(x);
                            var w = [];
                            if (f.config.yaxis[a].show)
                                for (var S = 0; S < this.xaxisLabels.length; S++) w.push(this.xaxisLabels[S]);
                            c = -(o = f.globals.gridHeight / w.length) / 2.2;
                            var T = f.globals.yLabelFormatters[0],
                                k = f.config.yaxis[0].labels;
                            if (k.show)
                                for (var O = function(F) {
                                        var X = void 0 === w[F] ? "" : w[F];
                                        X = T(X, {
                                            seriesIndex: a,
                                            dataPointIndex: F,
                                            w: f
                                        });
                                        var be = d.axesUtils.getYAxisForeColor(k.style.colors, a),
                                            Se = 0;
                                        Array.isArray(X) && (Se = X.length / 2 * parseInt(k.style.fontSize, 10));
                                        var Le = k.offsetX - 15,
                                            ze = "end";
                                        d.yaxis.opposite && (ze = "start"), "left" === f.config.yaxis[0].labels.align ? (Le = k.offsetX, ze = "start") : "center" === f.config.yaxis[0].labels.align ? (Le = k.offsetX, ze = "middle") : "right" === f.config.yaxis[0].labels.align && (ze = "end");
                                        var nt = p.drawText({
                                            x: Le,
                                            y: c + o + k.offsetY - Se,
                                            text: X,
                                            textAnchor: ze,
                                            foreColor: Array.isArray(be) ? be[F] : be,
                                            fontSize: k.style.fontSize,
                                            fontFamily: k.style.fontFamily,
                                            fontWeight: k.style.fontWeight,
                                            isPlainText: !1,
                                            cssClass: "apexcharts-yaxis-label " + k.style.cssClass,
                                            maxWidth: k.maxWidth
                                        });
                                        x.add(nt), nt.on("click", function(Tt) {
                                            if ("function" == typeof f.config.chart.events.xAxisLabelClick) {
                                                var wt = Object.assign({}, f, {
                                                    labelIndex: F
                                                });
                                                f.config.chart.events.xAxisLabelClick(Tt, d.ctx, wt)
                                            }
                                        });
                                        var yt = document.createElementNS(f.globals.SVGNS, "title");
                                        if (yt.textContent = Array.isArray(X) ? X.join(" ") : X, nt.node.appendChild(yt), 0 !== f.config.yaxis[a].labels.rotate) {
                                            var dt = p.rotateAroundCenter(nt.node);
                                            nt.node.setAttribute("transform", "rotate(".concat(f.config.yaxis[a].labels.rotate, " 0 ").concat(dt.y, ")"))
                                        }
                                        c += o
                                    }, B = 0; B <= w.length - 1; B++) O(B);
                            if (void 0 !== f.config.yaxis[0].title.text) {
                                var $ = p.group({
                                        class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                                        transform: "translate(" + m + ", 0)"
                                    }),
                                    ne = p.drawText({
                                        x: f.config.yaxis[0].title.offsetX,
                                        y: f.globals.gridHeight / 2 + f.config.yaxis[0].title.offsetY,
                                        text: f.config.yaxis[0].title.text,
                                        textAnchor: "middle",
                                        foreColor: f.config.yaxis[0].title.style.color,
                                        fontSize: f.config.yaxis[0].title.style.fontSize,
                                        fontWeight: f.config.yaxis[0].title.style.fontWeight,
                                        fontFamily: f.config.yaxis[0].title.style.fontFamily,
                                        cssClass: "apexcharts-yaxis-title-text " + f.config.yaxis[0].title.style.cssClass
                                    });
                                $.add(ne), y.add($)
                            }
                            var re = 0;
                            this.isCategoryBarHorizontal && f.config.yaxis[0].opposite && (re = f.globals.gridWidth);
                            var b = f.config.xaxis.axisBorder;
                            if (b.show) {
                                var A = p.drawLine(f.globals.padHorizontal + b.offsetX + re, 1 + b.offsetY, f.globals.padHorizontal + b.offsetX + re, f.globals.gridHeight + b.offsetY, b.color, 0);
                                this.elgrid && this.elgrid.elGridBorders && f.config.grid.show ? this.elgrid.elGridBorders.add(A) : y.add(A)
                            }
                            return f.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(re, w.length, f.config.yaxis[0].axisBorder, f.config.yaxis[0].axisTicks, 0, o, y), y
                        }
                    }, {
                        key: "drawXaxisTicks",
                        value: function(a, o, c) {
                            var d = this.w,
                                f = a;
                            if (!(a < 0 || a - 2 > d.globals.gridWidth)) {
                                var p = this.offY + d.config.xaxis.axisTicks.offsetY;
                                if (o = o + p + d.config.xaxis.axisTicks.height, "top" === d.config.xaxis.position && (o = p - d.config.xaxis.axisTicks.height), d.config.xaxis.axisTicks.show) {
                                    var m = new J(this.ctx).drawLine(a + d.config.xaxis.axisTicks.offsetX, p + d.config.xaxis.offsetY, f + d.config.xaxis.axisTicks.offsetX, o + d.config.xaxis.offsetY, d.config.xaxis.axisTicks.color);
                                    c.add(m), m.node.classList.add("apexcharts-xaxis-tick")
                                }
                            }
                        }
                    }, {
                        key: "getXAxisTicksPositions",
                        value: function() {
                            var a = this.w,
                                o = [],
                                c = this.xaxisLabels.length,
                                d = a.globals.padHorizontal;
                            if (a.globals.timescaleLabels.length > 0)
                                for (var f = 0; f < c; f++) o.push(d = this.xaxisLabels[f].position);
                            else
                                for (var p = c, m = 0; m < p; m++) {
                                    var y = p;
                                    a.globals.isXNumeric && "bar" !== a.config.chart.type && (y -= 1), o.push(d += a.globals.gridWidth / y)
                                }
                            return o
                        }
                    }, {
                        key: "xAxisLabelCorrections",
                        value: function() {
                            var a = this.w,
                                o = new J(this.ctx),
                                c = a.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),
                                d = a.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"),
                                f = a.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),
                                p = a.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
                            if (a.globals.rotateXLabels || a.config.xaxis.labels.rotateAlways)
                                for (var m = 0; m < d.length; m++) {
                                    var y = o.rotateAroundCenter(d[m]);
                                    y.y = y.y - 1, y.x = y.x + 1, d[m].setAttribute("transform", "rotate(".concat(a.config.xaxis.labels.rotate, " ").concat(y.x, " ").concat(y.y, ")")), d[m].setAttribute("text-anchor", "end"), c.setAttribute("transform", "translate(0, ".concat(-10, ")")), a.config.xaxis.labels.trim && Array.prototype.forEach.call(d[m].childNodes, function(k) {
                                        o.placeTextWithEllipsis(k, k.textContent, a.globals.xAxisLabelsHeight - ("bottom" === a.config.legend.position ? 20 : 10))
                                    })
                                } else ! function() {
                                    for (var k = a.globals.gridWidth / (a.globals.labels.length + 1), O = 0; O < d.length; O++) a.config.xaxis.labels.trim && "datetime" !== a.config.xaxis.type && Array.prototype.forEach.call(d[O].childNodes, function($) {
                                        o.placeTextWithEllipsis($, $.textContent, k)
                                    })
                                }();
                            if (f.length > 0) {
                                var w = f[f.length - 1].getBBox(),
                                    S = f[0].getBBox();
                                w.x < -20 && f[f.length - 1].parentNode.removeChild(f[f.length - 1]), S.x + S.width > a.globals.gridWidth && !a.globals.isBarHorizontal && f[0].parentNode.removeChild(f[0]);
                                for (var T = 0; T < p.length; T++) o.placeTextWithEllipsis(p[T], p[T].textContent, a.config.yaxis[0].labels.maxWidth - (a.config.yaxis[0].title.text ? 2 * parseFloat(a.config.yaxis[0].title.style.fontSize) : 0) - 15)
                            }
                        }
                    }]), K
                }(),
                Hn = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w;
                        var o = this.w;
                        this.xaxisLabels = o.globals.labels.slice(), this.axesUtils = new kt(a), this.isRangeBar = o.globals.seriesRange.length && o.globals.isBarHorizontal, o.globals.timescaleLabels.length > 0 && (this.xaxisLabels = o.globals.timescaleLabels.slice())
                    }
                    return z(K, [{
                        key: "drawGridArea",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                o = this.w,
                                c = new J(this.ctx);
                            null === a && (a = c.group({
                                class: "apexcharts-grid"
                            }));
                            var d = c.drawLine(o.globals.padHorizontal, 1, o.globals.padHorizontal, o.globals.gridHeight, "transparent"),
                                f = c.drawLine(o.globals.padHorizontal, o.globals.gridHeight, o.globals.gridWidth, o.globals.gridHeight, "transparent");
                            return a.add(f), a.add(d), a
                        }
                    }, {
                        key: "drawGrid",
                        value: function() {
                            var a = null;
                            return this.w.globals.axisCharts && (a = this.renderGrid(), this.drawGridArea(a.el)), a
                        }
                    }, {
                        key: "createGridMask",
                        value: function() {
                            var a = this.w,
                                o = a.globals,
                                c = new J(this.ctx),
                                d = Array.isArray(a.config.stroke.width) ? 0 : a.config.stroke.width;
                            if (Array.isArray(a.config.stroke.width)) {
                                var f = 0;
                                a.config.stroke.width.forEach(function(S) {
                                    f = Math.max(f, S)
                                }), d = f
                            }
                            o.dom.elGridRectMask = document.createElementNS(o.SVGNS, "clipPath"), o.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(o.cuid)), o.dom.elGridRectMarkerMask = document.createElementNS(o.SVGNS, "clipPath"), o.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(o.cuid)), o.dom.elForecastMask = document.createElementNS(o.SVGNS, "clipPath"), o.dom.elForecastMask.setAttribute("id", "forecastMask".concat(o.cuid)), o.dom.elNonForecastMask = document.createElementNS(o.SVGNS, "clipPath"), o.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(o.cuid));
                            var p = a.config.chart.type,
                                m = 0,
                                y = 0;
                            ("bar" === p || "rangeBar" === p || "candlestick" === p || "boxPlot" === p || a.globals.comboBarCount > 0) && a.globals.isXNumeric && !a.globals.isBarHorizontal && (y = a.config.grid.padding.right, o.barPadForNumericAxis > (m = a.config.grid.padding.left) && (m = o.barPadForNumericAxis, y = o.barPadForNumericAxis)), o.dom.elGridRect = c.drawRect(-d - m - 2, 2 * -d - 2, o.gridWidth + d + y + m + 4, o.gridHeight + 4 * d + 4, 0, "#fff");
                            var x = a.globals.markers.largestSize + 1;
                            o.dom.elGridRectMarker = c.drawRect(2 * -x, 2 * -x, o.gridWidth + 4 * x, o.gridHeight + 4 * x, 0, "#fff"), o.dom.elGridRectMask.appendChild(o.dom.elGridRect.node), o.dom.elGridRectMarkerMask.appendChild(o.dom.elGridRectMarker.node);
                            var w = o.dom.baseEl.querySelector("defs");
                            w.appendChild(o.dom.elGridRectMask), w.appendChild(o.dom.elForecastMask), w.appendChild(o.dom.elNonForecastMask), w.appendChild(o.dom.elGridRectMarkerMask)
                        }
                    }, {
                        key: "_drawGridLines",
                        value: function(a) {
                            var o = a.i,
                                c = a.x1,
                                m = a.xCount,
                                x = this.w;
                            if (!(0 === o && x.globals.skipFirstTimelinelabel || o === m - 1 && x.globals.skipLastTimelinelabel && !x.config.xaxis.labels.formatter || "radar" === x.config.chart.type)) {
                                x.config.grid.xaxis.lines.show && this._drawGridLine({
                                    i: o,
                                    x1: c,
                                    y1: a.y1,
                                    x2: a.x2,
                                    y2: a.y2,
                                    xCount: m,
                                    parent: a.parent
                                });
                                var w = 0;
                                if (x.globals.hasXaxisGroups && "between" === x.config.xaxis.tickPlacement) {
                                    var S = x.globals.groups;
                                    if (S) {
                                        for (var T = 0, k = 0; T < o && k < S.length; k++) T += S[k].cols;
                                        T === o && (w = .6 * x.globals.xAxisLabelsHeight)
                                    }
                                }
                                new _n(this.ctx).drawXaxisTicks(c, w, x.globals.dom.elGraphical)
                            }
                        }
                    }, {
                        key: "_drawGridLine",
                        value: function(a) {
                            var o = a.i,
                                c = a.x1,
                                d = a.y1,
                                f = a.x2,
                                p = a.y2,
                                m = a.xCount,
                                y = a.parent,
                                x = this.w,
                                w = !1,
                                S = y.node.classList.contains("apexcharts-gridlines-horizontal"),
                                T = x.config.grid.strokeDashArray,
                                k = x.globals.barPadForNumericAxis;
                            (0 === d && 0 === p || 0 === c && 0 === f) && (w = !0), d === x.globals.gridHeight && p === x.globals.gridHeight && (w = !0), !x.globals.isBarHorizontal || 0 !== o && o !== m - 1 || (w = !0);
                            var O = new J(this).drawLine(c - (S ? k : 0), d, f + (S ? k : 0), p, x.config.grid.borderColor, T);
                            O.node.classList.add("apexcharts-gridline"), w && x.config.grid.show ? this.elGridBorders.add(O) : y.add(O)
                        }
                    }, {
                        key: "_drawGridBandRect",
                        value: function(a) {
                            var o = a.c,
                                c = a.x1,
                                d = a.y1,
                                f = a.x2,
                                p = a.y2,
                                m = a.type,
                                y = this.w,
                                x = new J(this.ctx),
                                w = y.globals.barPadForNumericAxis;
                            if ("column" !== m || "datetime" !== y.config.xaxis.type) {
                                var T = x.drawRect(c - ("row" === m ? w : 0), d, f + ("row" === m ? 2 * w : 0), p, 0, y.config.grid[m].colors[o], y.config.grid[m].opacity);
                                this.elg.add(T), T.attr("clip-path", "url(#gridRectMask".concat(y.globals.cuid, ")")), T.node.classList.add("apexcharts-grid-".concat(m))
                            }
                        }
                    }, {
                        key: "_drawXYLines",
                        value: function(a) {
                            var o = this,
                                c = a.xCount,
                                d = a.tickAmount,
                                f = this.w;
                            if (f.config.grid.xaxis.lines.show || f.config.xaxis.axisTicks.show) {
                                var p, m = f.globals.padHorizontal,
                                    y = f.globals.gridHeight;
                                f.globals.timescaleLabels.length ? function(O) {
                                    for (var B = O.xC, ne = O.y1, b = O.y2, A = 0; A < B; A++) o._drawGridLines({
                                        i: A,
                                        x1: o.xaxisLabels[A].position,
                                        y1: ne,
                                        x2: o.xaxisLabels[A].position,
                                        y2: b,
                                        xCount: c,
                                        parent: o.elgridLinesV
                                    })
                                }({
                                    xC: c,
                                    x1: m,
                                    y1: 0,
                                    x2: p,
                                    y2: y
                                }) : (f.globals.isXNumeric && (c = f.globals.xAxisScale.result.length), function(O) {
                                    for (var B = O.xC, $ = O.x1, ne = O.y1, re = O.x2, b = O.y2, A = 0; A < B + (f.globals.isXNumeric ? 0 : 1); A++) 0 === A && 1 === B && 1 === f.globals.dataPoints && (re = $ = f.globals.gridWidth / 2), o._drawGridLines({
                                        i: A,
                                        x1: $,
                                        y1: ne,
                                        x2: re,
                                        y2: b,
                                        xCount: c,
                                        parent: o.elgridLinesV
                                    }), re = $ += f.globals.gridWidth / (f.globals.isXNumeric ? B - 1 : B)
                                }({
                                    xC: c,
                                    x1: m,
                                    y1: 0,
                                    x2: p,
                                    y2: y
                                }))
                            }
                            if (f.config.grid.yaxis.lines.show) {
                                var x = 0,
                                    w = 0,
                                    S = f.globals.gridWidth,
                                    T = d + 1;
                                this.isRangeBar && (T = f.globals.labels.length);
                                for (var k = 0; k < T + (this.isRangeBar ? 1 : 0); k++) this._drawGridLine({
                                    i: k,
                                    xCount: T + (this.isRangeBar ? 1 : 0),
                                    x1: 0,
                                    y1: x,
                                    x2: S,
                                    y2: w,
                                    parent: this.elgridLinesH
                                }), w = x += f.globals.gridHeight / (this.isRangeBar ? T : d)
                            }
                        }
                    }, {
                        key: "_drawInvertedXYLines",
                        value: function(a) {
                            var o = a.xCount,
                                c = this.w;
                            if (c.config.grid.xaxis.lines.show || c.config.xaxis.axisTicks.show)
                                for (var d, f = c.globals.padHorizontal, p = c.globals.gridHeight, m = 0; m < o + 1; m++) c.config.grid.xaxis.lines.show && this._drawGridLine({
                                    i: m,
                                    xCount: o + 1,
                                    x1: f,
                                    y1: 0,
                                    x2: d,
                                    y2: p,
                                    parent: this.elgridLinesV
                                }), new _n(this.ctx).drawXaxisTicks(f, 0, c.globals.dom.elGraphical), d = f = f + c.globals.gridWidth / o + .3;
                            if (c.config.grid.yaxis.lines.show)
                                for (var y = 0, x = 0, w = c.globals.gridWidth, S = 0; S < c.globals.dataPoints + 1; S++) this._drawGridLine({
                                    i: S,
                                    xCount: c.globals.dataPoints + 1,
                                    x1: 0,
                                    y1: y,
                                    x2: w,
                                    y2: x,
                                    parent: this.elgridLinesH
                                }), x = y += c.globals.gridHeight / c.globals.dataPoints
                        }
                    }, {
                        key: "renderGrid",
                        value: function() {
                            var a = this.w,
                                o = new J(this.ctx);
                            this.elg = o.group({
                                class: "apexcharts-grid"
                            }), this.elgridLinesH = o.group({
                                class: "apexcharts-gridlines-horizontal"
                            }), this.elgridLinesV = o.group({
                                class: "apexcharts-gridlines-vertical"
                            }), this.elGridBorders = o.group({
                                class: "apexcharts-grid-borders"
                            }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), a.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide(), this.elGridBorders.hide());
                            for (var c, d = a.globals.yAxisScale.length ? a.globals.yAxisScale[0].result.length - 1 : 5, f = 0; f < a.globals.series.length && (void 0 !== a.globals.yAxisScale[f] && (d = a.globals.yAxisScale[f].result.length - 1), !(d > 2)); f++);
                            return !a.globals.isBarHorizontal || this.isRangeBar ? (c = this.xaxisLabels.length, this.isRangeBar && (c--, d = a.globals.labels.length, a.config.xaxis.tickAmount && a.config.xaxis.labels.formatter && (c = a.config.xaxis.tickAmount)), this._drawXYLines({
                                xCount: c,
                                tickAmount: d
                            })) : this._drawInvertedXYLines({
                                xCount: c = d,
                                tickAmount: d = a.globals.xTickAmount
                            }), this.drawGridBands(c, d), {
                                el: this.elg,
                                elGridBorders: this.elGridBorders,
                                xAxisTickWidth: a.globals.gridWidth / c
                            }
                        }
                    }, {
                        key: "drawGridBands",
                        value: function(a, o) {
                            var c = this.w;
                            if (void 0 !== c.config.grid.row.colors && c.config.grid.row.colors.length > 0)
                                for (var d = 0, f = c.globals.gridHeight / o, p = c.globals.gridWidth, m = 0, y = 0; m < o; m++, y++) y >= c.config.grid.row.colors.length && (y = 0), this._drawGridBandRect({
                                    c: y,
                                    x1: 0,
                                    y1: d,
                                    x2: p,
                                    y2: f,
                                    type: "row"
                                }), d += c.globals.gridHeight / o;
                            if (void 0 !== c.config.grid.column.colors && c.config.grid.column.colors.length > 0)
                                for (var x = c.globals.isBarHorizontal || "on" !== c.config.xaxis.tickPlacement || "category" !== c.config.xaxis.type && !c.config.xaxis.convertedCatToNumeric ? a : a - 1, w = c.globals.padHorizontal, S = c.globals.padHorizontal + c.globals.gridWidth / x, T = c.globals.gridHeight, k = 0, O = 0; k < a; k++, O++) O >= c.config.grid.column.colors.length && (O = 0), this._drawGridBandRect({
                                    c: O,
                                    x1: w,
                                    y1: 0,
                                    x2: S,
                                    y2: T,
                                    type: "column"
                                }), w += c.globals.gridWidth / x
                        }
                    }]), K
                }(),
                vn = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "niceScale",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                                d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                                f = arguments.length > 4 ? arguments[4] : void 0,
                                p = this.w,
                                m = Math.abs(o - a);
                            if ("dataPoints" === (c = this._adjustTicksForSmallRange(c, d, m)) && (c = p.globals.dataPoints - 1), a === Number.MIN_VALUE && 0 === o || !te.isNumber(a) && !te.isNumber(o) || a === Number.MIN_VALUE && o === -Number.MAX_VALUE) return this.linearScale(a = 0, o = c, c);
                            a > o ? (console.warn("axis.min cannot be greater than axis.max"), o = a + .1) : a === o && (a = 0 === a ? 0 : a - .5, o = 0 === o ? 2 : o + .5);
                            var y = [];
                            m < 1 && f && ("candlestick" === p.config.chart.type || "candlestick" === p.config.series[d].type || "boxPlot" === p.config.chart.type || "boxPlot" === p.config.series[d].type || p.globals.isRangeData) && (o *= 1.01);
                            var x = c + 1;
                            x < 2 ? x = 2 : x > 2 && (x -= 2);
                            var w = m / x,
                                S = Math.floor(te.log10(w)),
                                T = Math.pow(10, S),
                                k = Math.round(w / T);
                            k < 1 && (k = 1);
                            var O = k * T,
                                B = O * Math.floor(a / O),
                                $ = O * Math.ceil(o / O),
                                ne = B;
                            if (f && m > 2) {
                                for (; y.push(te.stripNumber(ne, 7)), !((ne += O) > $););
                                return {
                                    result: y,
                                    niceMin: y[0],
                                    niceMax: y[y.length - 1]
                                }
                            }
                            var re = a;
                            (y = []).push(te.stripNumber(re, 7));
                            for (var b = Math.abs(o - a) / c, A = 0; A <= c; A++) y.push(re += b);
                            return y[y.length - 2] >= o && y.pop(), {
                                result: y,
                                niceMin: y[0],
                                niceMax: y[y.length - 1]
                            }
                        }
                    }, {
                        key: "linearScale",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                                d = arguments.length > 3 ? arguments[3] : void 0,
                                f = Math.abs(o - a);
                            "dataPoints" === (c = this._adjustTicksForSmallRange(c, d, f)) && (c = this.w.globals.dataPoints - 1);
                            var p = f / c;
                            c === Number.MAX_VALUE && (c = 10, p = 1);
                            for (var m = [], y = a; c >= 0;) m.push(y), y += p, c -= 1;
                            return {
                                result: m,
                                niceMin: m[0],
                                niceMax: m[m.length - 1]
                            }
                        }
                    }, {
                        key: "logarithmicScaleNice",
                        value: function(a, o, c) {
                            o <= 0 && (o = Math.max(a, c)), a <= 0 && (a = Math.min(o, c));
                            for (var d = [], f = Math.ceil(Math.log(o) / Math.log(c) + 1), p = Math.floor(Math.log(a) / Math.log(c)); p < f; p++) d.push(Math.pow(c, p));
                            return {
                                result: d,
                                niceMin: d[0],
                                niceMax: d[d.length - 1]
                            }
                        }
                    }, {
                        key: "logarithmicScale",
                        value: function(a, o, c) {
                            o <= 0 && (o = Math.max(a, c)), a <= 0 && (a = Math.min(o, c));
                            for (var d = [], f = Math.log(o) / Math.log(c), p = Math.log(a) / Math.log(c), m = f - p, y = Math.round(m), x = m / y, w = 0, S = p; w < y; w++, S += x) d.push(Math.pow(c, S));
                            return d.push(Math.pow(c, f)), {
                                result: d,
                                niceMin: a,
                                niceMax: o
                            }
                        }
                    }, {
                        key: "_adjustTicksForSmallRange",
                        value: function(a, o, c) {
                            var d = a;
                            if (void 0 !== o && this.w.config.yaxis[o].labels.formatter && void 0 === this.w.config.yaxis[o].tickAmount) {
                                var f = Number(this.w.config.yaxis[o].labels.formatter(1));
                                te.isNumber(f) && 0 === this.w.globals.yValueDecimal && (d = Math.ceil(c))
                            }
                            return d < a ? d : a
                        }
                    }, {
                        key: "setYScaleForIndex",
                        value: function(a, o, c) {
                            var d = this.w.globals,
                                f = this.w.config,
                                p = d.isBarHorizontal ? f.xaxis : f.yaxis[a];
                            void 0 === d.yAxisScale[a] && (d.yAxisScale[a] = []);
                            var m = Math.abs(c - o);
                            p.logarithmic && m <= 5 && (d.invalidLogScale = !0), p.logarithmic && m > 5 ? (d.allSeriesCollapsed = !1, d.yAxisScale[a] = this.logarithmicScale(o, c, p.logBase), d.yAxisScale[a] = p.forceNiceScale ? this.logarithmicScaleNice(o, c, p.logBase) : this.logarithmicScale(o, c, p.logBase)) : c !== -Number.MAX_VALUE && te.isNumber(c) ? (d.allSeriesCollapsed = !1, d.yAxisScale[a] = void 0 === p.min && void 0 === p.max || p.forceNiceScale ? this.niceScale(o, c, p.tickAmount ? p.tickAmount : m < 5 && m > 1 ? m + 1 : 5, a, void 0 === f.yaxis[a].max && void 0 === f.yaxis[a].min || f.yaxis[a].forceNiceScale) : this.linearScale(o, c, p.tickAmount, a)) : d.yAxisScale[a] = this.linearScale(0, 5, 5)
                        }
                    }, {
                        key: "setXScale",
                        value: function(a, o) {
                            var c = this.w,
                                d = c.globals,
                                f = c.config.xaxis,
                                p = Math.abs(o - a);
                            return d.xAxisScale = o !== -Number.MAX_VALUE && te.isNumber(o) ? this.linearScale(a, o, f.tickAmount ? f.tickAmount : p < 5 && p > 1 ? p + 1 : 5, 0) : this.linearScale(0, 5, 5), d.xAxisScale
                        }
                    }, {
                        key: "setMultipleYScales",
                        value: function() {
                            var a = this,
                                o = this.w.globals,
                                c = this.w.config,
                                d = o.minYArr.concat([]),
                                f = o.maxYArr.concat([]),
                                p = [];
                            c.yaxis.forEach(function(m, y) {
                                var x = y;
                                c.series.forEach(function(T, k) {
                                    T.name === m.seriesName && (x = k, p.push(y !== k ? {
                                        index: k,
                                        similarIndex: y,
                                        alreadyExists: !0
                                    } : {
                                        index: k
                                    }))
                                }), a.setYScaleForIndex(y, d[x], f[x])
                            }), this.sameScaleInMultipleAxes(d, f, p)
                        }
                    }, {
                        key: "sameScaleInMultipleAxes",
                        value: function(a, o, c) {
                            var d = this,
                                f = this.w.config,
                                p = this.w.globals,
                                m = [];
                            c.forEach(function(B) {
                                B.alreadyExists && (void 0 === m[B.index] && (m[B.index] = []), m[B.index].push(B.index), m[B.index].push(B.similarIndex))
                            }), p.yAxisSameScaleIndices = m, m.forEach(function(B, $) {
                                m.forEach(function(ne, re) {
                                    var b, A;
                                    $ !== re && (b = B, A = ne, b.filter(function(F) {
                                        return -1 !== A.indexOf(F)
                                    })).length > 0 && (m[$] = m[$].concat(m[re]))
                                })
                            });
                            var y = m.map(function(B) {
                                return B.filter(function($, ne) {
                                    return B.indexOf($) === ne
                                })
                            }).map(function(B) {
                                return B.sort()
                            });
                            m = m.filter(function(B) {
                                return !!B
                            });
                            var x = y.slice(),
                                w = x.map(function(B) {
                                    return JSON.stringify(B)
                                });
                            x = x.filter(function(B, $) {
                                return w.indexOf(JSON.stringify(B)) === $
                            });
                            var S = [],
                                T = [];
                            a.forEach(function(B, $) {
                                x.forEach(function(ne, re) {
                                    ne.indexOf($) > -1 && (void 0 === S[re] && (S[re] = [], T[re] = []), S[re].push({
                                        key: $,
                                        value: B
                                    }), T[re].push({
                                        key: $,
                                        value: o[$]
                                    }))
                                })
                            });
                            var k = Array.apply(null, Array(x.length)).map(Number.prototype.valueOf, Number.MIN_VALUE),
                                O = Array.apply(null, Array(x.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
                            S.forEach(function(B, $) {
                                B.forEach(function(ne, re) {
                                    k[$] = Math.min(ne.value, k[$])
                                })
                            }), T.forEach(function(B, $) {
                                B.forEach(function(ne, re) {
                                    O[$] = Math.max(ne.value, O[$])
                                })
                            }), a.forEach(function(B, $) {
                                T.forEach(function(ne, re) {
                                    var b = k[re],
                                        A = O[re];
                                    f.chart.stacked && (A = 0, ne.forEach(function(F, X) {
                                        F.value !== -Number.MAX_VALUE && (A += F.value), b !== Number.MIN_VALUE && (b += S[re][X].value)
                                    })), ne.forEach(function(F, X) {
                                        ne[X].key === $ && (void 0 !== f.yaxis[$].min && (b = "function" == typeof f.yaxis[$].min ? f.yaxis[$].min(p.minY) : f.yaxis[$].min), void 0 !== f.yaxis[$].max && (A = "function" == typeof f.yaxis[$].max ? f.yaxis[$].max(p.maxY) : f.yaxis[$].max), d.setYScaleForIndex($, b, A))
                                    })
                                })
                            })
                        }
                    }, {
                        key: "autoScaleY",
                        value: function(a, o, c) {
                            a || (a = this);
                            var d = a.w;
                            if (d.globals.isMultipleYAxis || d.globals.collapsedSeries.length) return console.warn("autoScaleYaxis not supported in a multi-yaxis chart."), o;
                            var f = d.globals.seriesX[0],
                                p = d.config.chart.stacked;
                            return o.forEach(function(m, y) {
                                for (var x = 0, w = 0; w < f.length; w++)
                                    if (f[w] >= c.xaxis.min) {
                                        x = w;
                                        break
                                    }
                                var S, T, k = d.globals.minYArr[y],
                                    O = d.globals.maxYArr[y],
                                    B = d.globals.stackedSeriesTotals;
                                d.globals.series.forEach(function($, ne) {
                                    var re = $[x];
                                    p ? (S = T = re = B[x], B.forEach(function(b, A) {
                                        f[A] <= c.xaxis.max && f[A] >= c.xaxis.min && (b > T && null !== b && (T = b), $[A] < S && null !== $[A] && (S = $[A]))
                                    })) : (S = T = re, $.forEach(function(b, A) {
                                        if (f[A] <= c.xaxis.max && f[A] >= c.xaxis.min) {
                                            var F = b,
                                                X = b;
                                            d.globals.series.forEach(function(be, Se) {
                                                null !== b && (F = Math.min(be[A], F), X = Math.max(be[A], X))
                                            }), X > T && null !== X && (T = X), F < S && null !== F && (S = F)
                                        }
                                    })), void 0 === S && void 0 === T && (S = k, T = O), T *= T < 0 ? .9 : 1.1, 0 == (S *= S < 0 ? 1.1 : .9) && 0 === T && (S = -1, T = 1), T < 0 && T < O && (T = O), S < 0 && S > k && (S = k), o.length > 1 ? (o[ne].min = void 0 === m.min ? S : m.min, o[ne].max = void 0 === m.max ? T : m.max) : (o[0].min = void 0 === m.min ? S : m.min, o[0].max = void 0 === m.max ? T : m.max)
                                })
                            }), o
                        }
                    }]), K
                }(),
                Kn = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.scales = new vn(a)
                    }
                    return z(K, [{
                        key: "init",
                        value: function() {
                            this.setYRange(), this.setXRange(), this.setZRange()
                        }
                    }, {
                        key: "getMinYMaxY",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE,
                                c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE,
                                d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                                f = this.w.config,
                                p = this.w.globals,
                                m = -Number.MAX_VALUE,
                                y = Number.MIN_VALUE;
                            null === d && (d = a + 1);
                            var x = p.series,
                                w = x,
                                S = x;
                            "candlestick" === f.chart.type ? (w = p.seriesCandleL, S = p.seriesCandleH) : "boxPlot" === f.chart.type ? (w = p.seriesCandleO, S = p.seriesCandleC) : p.isRangeData && (w = p.seriesRangeStart, S = p.seriesRangeEnd);
                            for (var T = a; T < d; T++) {
                                p.dataPoints = Math.max(p.dataPoints, x[T].length), p.categoryLabels.length && (p.dataPoints = p.categoryLabels.filter(function(B) {
                                    return void 0 !== B
                                }).length), p.labels.length && "datetime" !== f.xaxis.type && 0 !== p.series.reduce(function(B, $) {
                                    return B + $.length
                                }, 0) && (p.dataPoints = Math.max(p.dataPoints, p.labels.length));
                                for (var k = 0; k < p.series[T].length; k++) {
                                    var O = x[T][k];
                                    null !== O && te.isNumber(O) ? (void 0 !== S[T][k] && (m = Math.max(m, S[T][k]), o = Math.min(o, S[T][k])), void 0 !== w[T][k] && (o = Math.min(o, w[T][k]), c = Math.max(c, w[T][k])), "candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type && "rangeArea" === this.w.config.chart.type && "rangeBar" === this.w.config.chart.type || ("candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type || void 0 !== p.seriesCandleC[T][k] && (m = Math.max(m, p.seriesCandleO[T][k]), m = Math.max(m, p.seriesCandleH[T][k]), m = Math.max(m, p.seriesCandleL[T][k]), m = Math.max(m, p.seriesCandleC[T][k]), "boxPlot" === this.w.config.chart.type && (m = Math.max(m, p.seriesCandleM[T][k]))), !f.series[T].type || "candlestick" === f.series[T].type && "boxPlot" === f.series[T].type && "rangeArea" === f.series[T].type && "rangeBar" === f.series[T].type || (m = Math.max(m, p.series[T][k]), o = Math.min(o, p.series[T][k])), c = m), p.seriesGoals[T] && p.seriesGoals[T][k] && Array.isArray(p.seriesGoals[T][k]) && p.seriesGoals[T][k].forEach(function(B) {
                                        y !== Number.MIN_VALUE && (y = Math.min(y, B.value), o = y), m = Math.max(m, B.value), c = m
                                    }), te.isFloat(O) && (O = te.noExponents(O), p.yValueDecimal = Math.max(p.yValueDecimal, O.toString().split(".")[1].length)), y > w[T][k] && w[T][k] < 0 && (y = w[T][k])) : p.hasNullValues = !0
                                }
                            }
                            return "rangeBar" === f.chart.type && p.seriesRangeStart.length && p.isBarHorizontal && (y = o), "bar" === f.chart.type && (y < 0 && m < 0 && (m = 0), y === Number.MIN_VALUE && (y = 0)), {
                                minY: y,
                                maxY: m,
                                lowestY: o,
                                highestY: c
                            }
                        }
                    }, {
                        key: "setYRange",
                        value: function() {
                            var a = this.w.globals,
                                o = this.w.config;
                            a.maxY = -Number.MAX_VALUE, a.minY = Number.MIN_VALUE;
                            var c = Number.MAX_VALUE;
                            if (a.isMultipleYAxis)
                                for (var d = 0; d < a.series.length; d++) {
                                    var f = this.getMinYMaxY(d, c, null, d + 1);
                                    a.minYArr.push(f.minY), a.maxYArr.push(f.maxY), c = f.lowestY
                                }
                            var p = this.getMinYMaxY(0, c, null, a.series.length);
                            if (a.minY = p.minY, a.maxY = p.maxY, c = p.lowestY, o.chart.stacked && this._setStackedMinMax(), ("line" === o.chart.type || "area" === o.chart.type || "candlestick" === o.chart.type || "boxPlot" === o.chart.type || "rangeBar" === o.chart.type && !a.isBarHorizontal) && a.minY === Number.MIN_VALUE && c !== -Number.MAX_VALUE && c !== a.maxY) {
                                var m = a.maxY - c;
                                (c >= 0 && c <= 10 || void 0 !== o.yaxis[0].min || void 0 !== o.yaxis[0].max) && (m = 0), a.minY = c - 5 * m / 100, c > 0 && a.minY < 0 && (a.minY = 0), a.maxY = a.maxY + 5 * m / 100
                            }
                            return o.yaxis.forEach(function(y, x) {
                                void 0 !== y.max && ("number" == typeof y.max ? a.maxYArr[x] = y.max : "function" == typeof y.max && (a.maxYArr[x] = y.max(a.isMultipleYAxis ? a.maxYArr[x] : a.maxY)), a.maxY = a.maxYArr[x]), void 0 !== y.min && ("number" == typeof y.min ? a.minYArr[x] = y.min : "function" == typeof y.min && (a.minYArr[x] = y.min(a.isMultipleYAxis ? a.minYArr[x] === Number.MIN_VALUE ? 0 : a.minYArr[x] : a.minY)), a.minY = a.minYArr[x])
                            }), a.isBarHorizontal && ["min", "max"].forEach(function(y) {
                                void 0 !== o.xaxis[y] && "number" == typeof o.xaxis[y] && ("min" === y ? a.minY = o.xaxis[y] : a.maxY = o.xaxis[y])
                            }), a.isMultipleYAxis ? (this.scales.setMultipleYScales(), a.minY = c, a.yAxisScale.forEach(function(y, x) {
                                a.minYArr[x] = y.niceMin, a.maxYArr[x] = y.niceMax
                            })) : (this.scales.setYScaleForIndex(0, a.minY, a.maxY), a.minY = a.yAxisScale[0].niceMin, a.maxY = a.yAxisScale[0].niceMax, a.minYArr[0] = a.yAxisScale[0].niceMin, a.maxYArr[0] = a.yAxisScale[0].niceMax), {
                                minY: a.minY,
                                maxY: a.maxY,
                                minYArr: a.minYArr,
                                maxYArr: a.maxYArr,
                                yAxisScale: a.yAxisScale
                            }
                        }
                    }, {
                        key: "setXRange",
                        value: function() {
                            var a = this.w.globals,
                                o = this.w.config,
                                c = "numeric" === o.xaxis.type || "datetime" === o.xaxis.type || "category" === o.xaxis.type && !a.noLabelsProvided || a.noLabelsProvided || a.isXNumeric;
                            if (a.isXNumeric && function() {
                                    for (var m = 0; m < a.series.length; m++)
                                        if (a.labels[m])
                                            for (var y = 0; y < a.labels[m].length; y++) null !== a.labels[m][y] && te.isNumber(a.labels[m][y]) && (a.maxX = Math.max(a.maxX, a.labels[m][y]), a.initialMaxX = Math.max(a.maxX, a.labels[m][y]), a.minX = Math.min(a.minX, a.labels[m][y]), a.initialMinX = Math.min(a.minX, a.labels[m][y]))
                                }(), a.noLabelsProvided && 0 === o.xaxis.categories.length && (a.maxX = a.labels[a.labels.length - 1], a.initialMaxX = a.labels[a.labels.length - 1], a.minX = 1, a.initialMinX = 1), a.isXNumeric || a.noLabelsProvided || a.dataFormatXNumeric) {
                                var d;
                                if (void 0 === o.xaxis.tickAmount ? (d = Math.round(a.svgWidth / 150), "numeric" === o.xaxis.type && a.dataPoints < 30 && (d = a.dataPoints - 1), d > a.dataPoints && 0 !== a.dataPoints && (d = a.dataPoints - 1)) : "dataPoints" === o.xaxis.tickAmount ? (a.series.length > 1 && (d = a.series[a.maxValsInArrayIndex].length - 1), a.isXNumeric && (d = a.maxX - a.minX - 1)) : d = o.xaxis.tickAmount, a.xTickAmount = d, void 0 !== o.xaxis.max && "number" == typeof o.xaxis.max && (a.maxX = o.xaxis.max), void 0 !== o.xaxis.min && "number" == typeof o.xaxis.min && (a.minX = o.xaxis.min), void 0 !== o.xaxis.range && (a.minX = a.maxX - o.xaxis.range), a.minX !== Number.MAX_VALUE && a.maxX !== -Number.MAX_VALUE)
                                    if (o.xaxis.convertedCatToNumeric && !a.dataFormatXNumeric) {
                                        for (var f = [], p = a.minX - 1; p < a.maxX; p++) f.push(p + 1);
                                        a.xAxisScale = {
                                            result: f,
                                            niceMin: f[0],
                                            niceMax: f[f.length - 1]
                                        }
                                    } else a.xAxisScale = this.scales.setXScale(a.minX, a.maxX);
                                else a.xAxisScale = this.scales.linearScale(0, d, d), a.noLabelsProvided && a.labels.length > 0 && (a.xAxisScale = this.scales.linearScale(1, a.labels.length, d - 1), a.seriesX = a.labels.slice());
                                c && (a.labels = a.xAxisScale.result.slice())
                            }
                            return a.isBarHorizontal && a.labels.length && (a.xTickAmount = a.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), {
                                minX: a.minX,
                                maxX: a.maxX
                            }
                        }
                    }, {
                        key: "setZRange",
                        value: function() {
                            var a = this.w.globals;
                            if (a.isDataXYZ)
                                for (var o = 0; o < a.series.length; o++)
                                    if (void 0 !== a.seriesZ[o])
                                        for (var c = 0; c < a.seriesZ[o].length; c++) null !== a.seriesZ[o][c] && te.isNumber(a.seriesZ[o][c]) && (a.maxZ = Math.max(a.maxZ, a.seriesZ[o][c]), a.minZ = Math.min(a.minZ, a.seriesZ[o][c]))
                        }
                    }, {
                        key: "_handleSingleDataPoint",
                        value: function() {
                            var a = this.w.globals,
                                o = this.w.config;
                            if (a.minX === a.maxX) {
                                var c = new Ge(this.ctx);
                                if ("datetime" === o.xaxis.type) {
                                    var d = c.getDate(a.minX);
                                    o.xaxis.labels.datetimeUTC ? d.setUTCDate(d.getUTCDate() - 2) : d.setDate(d.getDate() - 2), a.minX = new Date(d).getTime();
                                    var f = c.getDate(a.maxX);
                                    o.xaxis.labels.datetimeUTC ? f.setUTCDate(f.getUTCDate() + 2) : f.setDate(f.getDate() + 2), a.maxX = new Date(f).getTime()
                                } else("numeric" === o.xaxis.type || "category" === o.xaxis.type && !a.noLabelsProvided) && (a.minX = a.minX - 2, a.initialMinX = a.minX, a.maxX = a.maxX + 2, a.initialMaxX = a.maxX)
                            }
                        }
                    }, {
                        key: "_getMinXDiff",
                        value: function() {
                            var a = this.w.globals;
                            a.isXNumeric && a.seriesX.forEach(function(o, c) {
                                1 === o.length && o.push(a.seriesX[a.maxValsInArrayIndex][a.seriesX[a.maxValsInArrayIndex].length - 1]);
                                var d = o.slice();
                                d.sort(function(f, p) {
                                    return f - p
                                }), d.forEach(function(f, p) {
                                    if (p > 0) {
                                        var m = f - d[p - 1];
                                        m > 0 && (a.minXDiff = Math.min(m, a.minXDiff))
                                    }
                                }), 1 !== a.dataPoints && a.minXDiff !== Number.MAX_VALUE || (a.minXDiff = .5)
                            })
                        }
                    }, {
                        key: "_setStackedMinMax",
                        value: function() {
                            var a = this,
                                o = this.w.globals;
                            if (o.series.length) {
                                var c = o.seriesGroups;
                                c.length || (c = [this.w.config.series.map(function(p) {
                                    return p.name
                                })]);
                                var d = {},
                                    f = {};
                                c.forEach(function(p) {
                                    d[p] = [], f[p] = [], a.w.config.series.map(function(m, y) {
                                        return p.indexOf(m.name) > -1 ? y : null
                                    }).filter(function(m) {
                                        return null !== m
                                    }).forEach(function(m) {
                                        for (var y = 0; y < o.series[o.maxValsInArrayIndex].length; y++) {
                                            var x, w;
                                            void 0 === d[p][y] && (d[p][y] = 0, f[p][y] = 0), (a.w.config.chart.stacked && !o.comboCharts || a.w.config.chart.stacked && o.comboCharts && (!a.w.config.chart.stackOnlyBar || "bar" === (null === (x = a.w.config.series) || void 0 === x || null === (w = x[m]) || void 0 === w ? void 0 : w.type))) && null !== o.series[m][y] && te.isNumber(o.series[m][y]) && (o.series[m][y] > 0 ? d[p][y] += parseFloat(o.series[m][y]) + 1e-4 : f[p][y] += parseFloat(o.series[m][y]))
                                        }
                                    })
                                }), Object.entries(d).forEach(function(p) {
                                    var m = Be(p, 1)[0];
                                    d[m].forEach(function(y, x) {
                                        o.maxY = Math.max(o.maxY, d[m][x]), o.minY = Math.min(o.minY, f[m][x])
                                    })
                                })
                            }
                        }
                    }]), K
                }(),
                ts = function() {
                    function K(a, o) {
                        U(this, K), this.ctx = a, this.elgrid = o, this.w = a.w;
                        var c = this.w;
                        this.xaxisFontSize = c.config.xaxis.labels.style.fontSize, this.axisFontFamily = c.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = c.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = "bar" === c.config.chart.type && c.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, "bottom" === c.config.xaxis.position && (this.xAxisoffX = c.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new kt(a)
                    }
                    return z(K, [{
                        key: "drawYaxis",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = new J(this.ctx),
                                f = c.config.yaxis[a].labels.style,
                                p = f.fontSize,
                                m = f.fontFamily,
                                y = f.fontWeight,
                                x = d.group({
                                    class: "apexcharts-yaxis",
                                    rel: a,
                                    transform: "translate(" + c.globals.translateYAxisX[a] + ", 0)"
                                });
                            if (this.axesUtils.isYAxisHidden(a)) return x;
                            var w = d.group({
                                class: "apexcharts-yaxis-texts-g"
                            });
                            x.add(w);
                            var S = c.globals.yAxisScale[a].result.length - 1,
                                T = c.globals.gridHeight / S,
                                k = c.globals.translateY,
                                O = c.globals.yLabelFormatters[a],
                                B = c.globals.yAxisScale[a].result.slice();
                            B = this.axesUtils.checkForReversedLabels(a, B);
                            var $ = "";
                            if (c.config.yaxis[a].labels.show)
                                for (var ne = function(Le) {
                                        var ze = B[Le];
                                        ze = O(ze, Le, c);
                                        var nt = c.config.yaxis[a].labels.padding;
                                        c.config.yaxis[a].opposite && 0 !== c.config.yaxis.length && (nt *= -1);
                                        var yt = "end";
                                        c.config.yaxis[a].opposite && (yt = "start"), "left" === c.config.yaxis[a].labels.align ? yt = "start" : "center" === c.config.yaxis[a].labels.align ? yt = "middle" : "right" === c.config.yaxis[a].labels.align && (yt = "end");
                                        var dt = o.axesUtils.getYAxisForeColor(f.colors, a),
                                            Tt = c.config.yaxis[a].labels.offsetY;
                                        "heatmap" === c.config.chart.type && (Tt -= (c.globals.gridHeight / c.globals.series.length - 1) / 2);
                                        var wt = d.drawText({
                                            x: nt,
                                            y: k + S / 10 + Tt + 1,
                                            text: ze,
                                            textAnchor: yt,
                                            fontSize: p,
                                            fontFamily: m,
                                            fontWeight: y,
                                            maxWidth: c.config.yaxis[a].labels.maxWidth,
                                            foreColor: Array.isArray(dt) ? dt[Le] : dt,
                                            isPlainText: !1,
                                            cssClass: "apexcharts-yaxis-label " + f.cssClass
                                        });
                                        Le === S && ($ = wt), w.add(wt);
                                        var ln = document.createElementNS(c.globals.SVGNS, "title");
                                        if (ln.textContent = Array.isArray(ze) ? ze.join(" ") : ze, wt.node.appendChild(ln), 0 !== c.config.yaxis[a].labels.rotate) {
                                            var Jt = d.rotateAroundCenter($.node),
                                                Qn = d.rotateAroundCenter(wt.node);
                                            wt.node.setAttribute("transform", "rotate(".concat(c.config.yaxis[a].labels.rotate, " ").concat(Jt.x, " ").concat(Qn.y, ")"))
                                        }
                                        k += T
                                    }, re = S; re >= 0; re--) ne(re);
                            if (void 0 !== c.config.yaxis[a].title.text) {
                                var b = d.group({
                                        class: "apexcharts-yaxis-title"
                                    }),
                                    A = 0;
                                c.config.yaxis[a].opposite && (A = c.globals.translateYAxisX[a]);
                                var F = d.drawText({
                                    x: A,
                                    y: c.globals.gridHeight / 2 + c.globals.translateY + c.config.yaxis[a].title.offsetY,
                                    text: c.config.yaxis[a].title.text,
                                    textAnchor: "end",
                                    foreColor: c.config.yaxis[a].title.style.color,
                                    fontSize: c.config.yaxis[a].title.style.fontSize,
                                    fontWeight: c.config.yaxis[a].title.style.fontWeight,
                                    fontFamily: c.config.yaxis[a].title.style.fontFamily,
                                    cssClass: "apexcharts-yaxis-title-text " + c.config.yaxis[a].title.style.cssClass
                                });
                                b.add(F), x.add(b)
                            }
                            var X = c.config.yaxis[a].axisBorder,
                                be = 31 + X.offsetX;
                            if (c.config.yaxis[a].opposite && (be = -31 - X.offsetX), X.show) {
                                var Se = d.drawLine(be, c.globals.translateY + X.offsetY - 2, be, c.globals.gridHeight + c.globals.translateY + X.offsetY + 2, X.color, 0, X.width);
                                x.add(Se)
                            }
                            return c.config.yaxis[a].axisTicks.show && this.axesUtils.drawYAxisTicks(be, S, X, c.config.yaxis[a].axisTicks, a, T, x), x
                        }
                    }, {
                        key: "drawYaxisInversed",
                        value: function(a) {
                            var o = this.w,
                                c = new J(this.ctx),
                                d = c.group({
                                    class: "apexcharts-xaxis apexcharts-yaxis-inversed"
                                }),
                                f = c.group({
                                    class: "apexcharts-xaxis-texts-g",
                                    transform: "translate(".concat(o.globals.translateXAxisX, ", ").concat(o.globals.translateXAxisY, ")")
                                });
                            d.add(f);
                            var p = o.globals.yAxisScale[a].result.length - 1,
                                m = o.globals.gridWidth / p + .1,
                                y = m + o.config.xaxis.labels.offsetX,
                                x = o.globals.xLabelFormatter,
                                w = o.globals.yAxisScale[a].result.slice(),
                                S = o.globals.timescaleLabels;
                            S.length > 0 && (this.xaxisLabels = S.slice(), p = (w = S.slice()).length), w = this.axesUtils.checkForReversedLabels(a, w);
                            var T = S.length;
                            if (o.config.xaxis.labels.show)
                                for (var k = T ? 0 : p; T ? k < T : k >= 0; T ? k++ : k--) {
                                    var O = w[k];
                                    O = x(O, k, o);
                                    var B = o.globals.gridWidth + o.globals.padHorizontal - (y - m + o.config.xaxis.labels.offsetX);
                                    if (S.length) {
                                        var $ = this.axesUtils.getLabel(w, S, B, k, this.drawnLabels, this.xaxisFontSize);
                                        B = $.x, O = $.text, this.drawnLabels.push($.text), 0 === k && o.globals.skipFirstTimelinelabel && (O = ""), k === w.length - 1 && o.globals.skipLastTimelinelabel && (O = "")
                                    }
                                    var ne = c.drawText({
                                        x: B,
                                        y: this.xAxisoffX + o.config.xaxis.labels.offsetY + 30 - ("top" === o.config.xaxis.position ? o.globals.xAxisHeight + o.config.xaxis.axisTicks.height - 2 : 0),
                                        text: O,
                                        textAnchor: "middle",
                                        foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[a] : this.xaxisForeColors,
                                        fontSize: this.xaxisFontSize,
                                        fontFamily: this.xaxisFontFamily,
                                        fontWeight: o.config.xaxis.labels.style.fontWeight,
                                        isPlainText: !1,
                                        cssClass: "apexcharts-xaxis-label " + o.config.xaxis.labels.style.cssClass
                                    });
                                    f.add(ne), ne.tspan(O);
                                    var re = document.createElementNS(o.globals.SVGNS, "title");
                                    re.textContent = O, ne.node.appendChild(re), y += m
                                }
                            return this.inversedYAxisTitleText(d), this.inversedYAxisBorder(d), d
                        }
                    }, {
                        key: "inversedYAxisBorder",
                        value: function(a) {
                            var o = this.w,
                                c = new J(this.ctx),
                                d = o.config.xaxis.axisBorder;
                            if (d.show) {
                                var f = 0;
                                "bar" === o.config.chart.type && o.globals.isXNumeric && (f -= 15);
                                var p = c.drawLine(o.globals.padHorizontal + f + d.offsetX, this.xAxisoffX, o.globals.gridWidth, this.xAxisoffX, d.color, 0, d.height);
                                this.elgrid && this.elgrid.elGridBorders && o.config.grid.show ? this.elgrid.elGridBorders.add(p) : a.add(p)
                            }
                        }
                    }, {
                        key: "inversedYAxisTitleText",
                        value: function(a) {
                            var o = this.w,
                                c = new J(this.ctx);
                            if (void 0 !== o.config.xaxis.title.text) {
                                var d = c.group({
                                        class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"
                                    }),
                                    f = c.drawText({
                                        x: o.globals.gridWidth / 2 + o.config.xaxis.title.offsetX,
                                        y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(o.config.xaxis.title.style.fontSize) + o.config.xaxis.title.offsetY + 20,
                                        text: o.config.xaxis.title.text,
                                        textAnchor: "middle",
                                        fontSize: o.config.xaxis.title.style.fontSize,
                                        fontFamily: o.config.xaxis.title.style.fontFamily,
                                        fontWeight: o.config.xaxis.title.style.fontWeight,
                                        foreColor: o.config.xaxis.title.style.color,
                                        cssClass: "apexcharts-xaxis-title-text " + o.config.xaxis.title.style.cssClass
                                    });
                                d.add(f), a.add(d)
                            }
                        }
                    }, {
                        key: "yAxisTitleRotate",
                        value: function(a, o) {
                            var c = this.w,
                                d = new J(this.ctx),
                                f = {
                                    width: 0,
                                    height: 0
                                },
                                p = {
                                    width: 0,
                                    height: 0
                                },
                                m = c.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(a, "'] .apexcharts-yaxis-texts-g"));
                            null !== m && (f = m.getBoundingClientRect());
                            var y = c.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(a, "'] .apexcharts-yaxis-title text"));
                            if (null !== y && (p = y.getBoundingClientRect()), null !== y) {
                                var x = this.xPaddingForYAxisTitle(a, f, p, o);
                                y.setAttribute("x", x.xPos - (o ? 10 : 0))
                            }
                            if (null !== y) {
                                var w = d.rotateAroundCenter(y);
                                y.setAttribute("transform", "rotate(".concat(o ? -1 * c.config.yaxis[a].title.rotate : c.config.yaxis[a].title.rotate, " ").concat(w.x, " ").concat(w.y, ")"))
                            }
                        }
                    }, {
                        key: "xPaddingForYAxisTitle",
                        value: function(a, o, c, d) {
                            var f = this.w,
                                p = 0,
                                m = 0,
                                y = 10;
                            return void 0 === f.config.yaxis[a].title.text || a < 0 ? {
                                xPos: m,
                                padd: 0
                            } : (d ? (m = o.width + f.config.yaxis[a].title.offsetX + c.width / 2 + y / 2, 0 === (p += 1) && (m -= y / 2)) : (m = -1 * o.width + f.config.yaxis[a].title.offsetX + y / 2 + c.width / 2, f.globals.isBarHorizontal && (m = -1 * o.width - f.config.yaxis[a].title.offsetX - (y = 25))), {
                                xPos: m,
                                padd: y
                            })
                        }
                    }, {
                        key: "setYAxisXPosition",
                        value: function(a, o) {
                            var c = this.w,
                                d = 0,
                                f = 0,
                                p = 18,
                                m = 1;
                            c.config.yaxis.length > 1 && (this.multipleYs = !0), c.config.yaxis.map(function(y, x) {
                                var w = c.globals.ignoreYAxisIndexes.indexOf(x) > -1 || !y.show || y.floating || 0 === a[x].width,
                                    S = a[x].width + o[x].width;
                                y.opposite ? c.globals.isBarHorizontal ? c.globals.translateYAxisX[x] = (f = c.globals.gridWidth + c.globals.translateX - 1) - y.labels.offsetX : (f = c.globals.gridWidth + c.globals.translateX + m, w || (m = m + S + 20), c.globals.translateYAxisX[x] = f - y.labels.offsetX + 20) : (d = c.globals.translateX - p, w || (p = p + S + 20), c.globals.translateYAxisX[x] = d + y.labels.offsetX)
                            })
                        }
                    }, {
                        key: "setYAxisTextAlignments",
                        value: function() {
                            var a = this.w,
                                o = a.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
                            (o = te.listToArray(o)).forEach(function(c, d) {
                                var f = a.config.yaxis[d];
                                if (f && !f.floating && void 0 !== f.labels.align) {
                                    var p = a.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(d, "'] .apexcharts-yaxis-texts-g")),
                                        m = a.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(d, "'] .apexcharts-yaxis-label"));
                                    m = te.listToArray(m);
                                    var y = p.getBoundingClientRect();
                                    "left" === f.labels.align ? (m.forEach(function(x, w) {
                                        x.setAttribute("text-anchor", "start")
                                    }), f.opposite || p.setAttribute("transform", "translate(-".concat(y.width, ", 0)"))) : "center" === f.labels.align ? (m.forEach(function(x, w) {
                                        x.setAttribute("text-anchor", "middle")
                                    }), p.setAttribute("transform", "translate(".concat(y.width / 2 * (f.opposite ? 1 : -1), ", 0)"))) : "right" === f.labels.align && (m.forEach(function(x, w) {
                                        x.setAttribute("text-anchor", "end")
                                    }), f.opposite && p.setAttribute("transform", "translate(".concat(y.width, ", 0)")))
                                }
                            })
                        }
                    }]), K
                }(),
                Vs = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.documentEvent = te.bind(this.documentEvent, this)
                    }
                    return z(K, [{
                        key: "addEventListener",
                        value: function(a, o) {
                            var c = this.w;
                            c.globals.events.hasOwnProperty(a) ? c.globals.events[a].push(o) : c.globals.events[a] = [o]
                        }
                    }, {
                        key: "removeEventListener",
                        value: function(a, o) {
                            var c = this.w;
                            if (c.globals.events.hasOwnProperty(a)) {
                                var d = c.globals.events[a].indexOf(o); - 1 !== d && c.globals.events[a].splice(d, 1)
                            }
                        }
                    }, {
                        key: "fireEvent",
                        value: function(a, o) {
                            var c = this.w;
                            if (c.globals.events.hasOwnProperty(a)) {
                                o && o.length || (o = []);
                                for (var d = c.globals.events[a], f = d.length, p = 0; p < f; p++) d[p].apply(null, o)
                            }
                        }
                    }, {
                        key: "setupEventHandlers",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = this.ctx,
                                d = o.globals.dom.baseEl.querySelector(o.globals.chartClass);
                            this.ctx.eventList.forEach(function(f) {
                                d.addEventListener(f, function(p) {
                                    var m = Object.assign({}, o, {
                                        seriesIndex: o.globals.capturedSeriesIndex,
                                        dataPointIndex: o.globals.capturedDataPointIndex
                                    });
                                    "mousemove" === p.type || "touchmove" === p.type ? "function" == typeof o.config.chart.events.mouseMove && o.config.chart.events.mouseMove(p, c, m) : "mouseleave" === p.type || "touchleave" === p.type ? "function" == typeof o.config.chart.events.mouseLeave && o.config.chart.events.mouseLeave(p, c, m) : ("mouseup" === p.type && 1 === p.which || "touchend" === p.type) && ("function" == typeof o.config.chart.events.click && o.config.chart.events.click(p, c, m), c.ctx.events.fireEvent("click", [p, c, m]))
                                }, {
                                    capture: !1,
                                    passive: !0
                                })
                            }), this.ctx.eventList.forEach(function(f) {
                                o.globals.dom.baseEl.addEventListener(f, a.documentEvent, {
                                    passive: !0
                                })
                            }), this.ctx.core.setupBrushHandler()
                        }
                    }, {
                        key: "documentEvent",
                        value: function(a) {
                            var o = this.w,
                                c = a.target.className;
                            if ("click" === a.type) {
                                var d = o.globals.dom.baseEl.querySelector(".apexcharts-menu");
                                d && d.classList.contains("apexcharts-menu-open") && "apexcharts-menu-icon" !== c && d.classList.remove("apexcharts-menu-open")
                            }
                            o.globals.clientX = "touchmove" === a.type ? a.touches[0].clientX : a.clientX, o.globals.clientY = "touchmove" === a.type ? a.touches[0].clientY : a.clientY
                        }
                    }]), K
                }(),
                Hi = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "setCurrentLocaleValues",
                        value: function(a) {
                            var o = this.w.config.chart.locales;
                            window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (o = this.w.config.chart.locales.concat(window.Apex.chart.locales));
                            var c = o.filter(function(f) {
                                return f.name === a
                            })[0];
                            if (!c) throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
                            var d = te.extend(Ze, c);
                            this.w.globals.locale = d.options
                        }
                    }]), K
                }(),
                Hs = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "drawAxis",
                        value: function(a, o) {
                            var c, d, f = this,
                                p = this.w.globals,
                                m = this.w.config,
                                y = new _n(this.ctx, o),
                                x = new ts(this.ctx, o);
                            p.axisCharts && "radar" !== a && (p.isBarHorizontal ? (d = x.drawYaxisInversed(0), c = y.drawXaxisInversed(0), p.dom.elGraphical.add(c), p.dom.elGraphical.add(d)) : (c = y.drawXaxis(), p.dom.elGraphical.add(c), m.yaxis.map(function(w, S) {
                                if (-1 === p.ignoreYAxisIndexes.indexOf(S) && (d = x.drawYaxis(S), p.dom.Paper.add(d), "back" === f.w.config.grid.position)) {
                                    var T = p.dom.Paper.children()[1];
                                    T.remove(), p.dom.Paper.add(T)
                                }
                            })))
                        }
                    }]), K
                }(),
                ui = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "drawXCrosshairs",
                        value: function() {
                            var a = this.w,
                                o = new J(this.ctx),
                                c = new Oe(this.ctx),
                                d = a.config.xaxis.crosshairs.fill.gradient,
                                f = a.config.xaxis.crosshairs.dropShadow,
                                T = f.enabled,
                                k = f.left,
                                O = f.top,
                                B = f.blur,
                                $ = f.color,
                                ne = f.opacity,
                                re = a.config.xaxis.crosshairs.fill.color;
                            if (a.config.xaxis.crosshairs.show) {
                                "gradient" === a.config.xaxis.crosshairs.fill.type && (re = o.drawGradient("vertical", d.colorFrom, d.colorTo, d.opacityFrom, d.opacityTo, null, d.stops, null));
                                var b = o.drawRect();
                                1 === a.config.xaxis.crosshairs.width && (b = o.drawLine());
                                var A = a.globals.gridHeight;
                                (!te.isNumber(A) || A < 0) && (A = 0);
                                var F = a.config.xaxis.crosshairs.width;
                                (!te.isNumber(F) || F < 0) && (F = 0), b.attr({
                                    class: "apexcharts-xcrosshairs",
                                    x: 0,
                                    y: 0,
                                    y2: A,
                                    width: F,
                                    height: A,
                                    fill: re,
                                    filter: "none",
                                    "fill-opacity": a.config.xaxis.crosshairs.opacity,
                                    stroke: a.config.xaxis.crosshairs.stroke.color,
                                    "stroke-width": a.config.xaxis.crosshairs.stroke.width,
                                    "stroke-dasharray": a.config.xaxis.crosshairs.stroke.dashArray
                                }), T && (b = c.dropShadow(b, {
                                    left: k,
                                    top: O,
                                    blur: B,
                                    color: $,
                                    opacity: ne
                                })), a.globals.dom.elGraphical.add(b)
                            }
                        }
                    }, {
                        key: "drawYCrosshairs",
                        value: function() {
                            var a = this.w,
                                o = new J(this.ctx),
                                c = a.config.yaxis[0].crosshairs,
                                d = a.globals.barPadForNumericAxis;
                            if (a.config.yaxis[0].crosshairs.show) {
                                var f = o.drawLine(-d, 0, a.globals.gridWidth + d, 0, c.stroke.color, c.stroke.dashArray, c.stroke.width);
                                f.attr({
                                    class: "apexcharts-ycrosshairs"
                                }), a.globals.dom.elGraphical.add(f)
                            }
                            var p = o.drawLine(-d, 0, a.globals.gridWidth + d, 0, c.stroke.color, 0, 0);
                            p.attr({
                                class: "apexcharts-ycrosshairs-hidden"
                            }), a.globals.dom.elGraphical.add(p)
                        }
                    }]), K
                }(),
                Yn = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "checkResponsiveConfig",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = c.config;
                            if (0 !== d.responsive.length) {
                                var f = d.responsive.slice();
                                f.sort(function(x, w) {
                                    return x.breakpoint > w.breakpoint ? 1 : w.breakpoint > x.breakpoint ? -1 : 0
                                }).reverse();
                                var p = new _t({}),
                                    m = function() {
                                        var x = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                            S = window.innerWidth > 0 ? window.innerWidth : screen.width;
                                        if (S > f[0].breakpoint) {
                                            var T = Ie.extendArrayProps(p, c.globals.initialConfig, c);
                                            x = te.extend(T, x), x = te.extend(c.config, x), o.overrideResponsiveOptions(x)
                                        } else
                                            for (var k = 0; k < f.length; k++) S < f[k].breakpoint && (x = Ie.extendArrayProps(p, f[k].options, c), x = te.extend(c.config, x), o.overrideResponsiveOptions(x))
                                    };
                                if (a) {
                                    var y = Ie.extendArrayProps(p, a, c);
                                    y = te.extend(c.config, y), m(y = te.extend(y, a))
                                } else m({})
                            }
                        }
                    }, {
                        key: "overrideResponsiveOptions",
                        value: function(a) {
                            var o = new _t(a).init({
                                responsiveOverride: !0
                            });
                            this.w.config = o
                        }
                    }]), K
                }(),
                ir = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.colors = [], this.w = a.w;
                        var o = this.w;
                        this.isColorFn = !1, this.isHeatmapDistributed = "treemap" === o.config.chart.type && o.config.plotOptions.treemap.distributed || "heatmap" === o.config.chart.type && o.config.plotOptions.heatmap.distributed, this.isBarDistributed = o.config.plotOptions.bar.distributed && ("bar" === o.config.chart.type || "rangeBar" === o.config.chart.type)
                    }
                    return z(K, [{
                        key: "init",
                        value: function() {
                            this.setDefaultColors()
                        }
                    }, {
                        key: "setDefaultColors",
                        value: function() {
                            var a, o = this,
                                c = this.w,
                                d = new te;
                            if (c.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(c.config.theme.mode)), void 0 === c.config.colors || 0 === (null === (a = c.config.colors) || void 0 === a ? void 0 : a.length) ? c.globals.colors = this.predefined() : (c.globals.colors = c.config.colors, Array.isArray(c.config.colors) && c.config.colors.length > 0 && "function" == typeof c.config.colors[0] && (c.globals.colors = c.config.series.map(function(O, B) {
                                    var $ = c.config.colors[B];
                                    return $ || ($ = c.config.colors[0]), "function" == typeof $ ? (o.isColorFn = !0, $({
                                        value: c.globals.axisCharts ? c.globals.series[B][0] ? c.globals.series[B][0] : 0 : c.globals.series[B],
                                        seriesIndex: B,
                                        dataPointIndex: B,
                                        w: c
                                    })) : $
                                }))), c.globals.seriesColors.map(function(O, B) {
                                    O && (c.globals.colors[B] = O)
                                }), c.config.theme.monochrome.enabled) {
                                var f = [],
                                    p = c.globals.series.length;
                                (this.isBarDistributed || this.isHeatmapDistributed) && (p = c.globals.series[0].length * c.globals.series.length);
                                for (var m = c.config.theme.monochrome.color, y = 1 / (p / c.config.theme.monochrome.shadeIntensity), x = c.config.theme.monochrome.shadeTo, w = 0, S = 0; S < p; S++) {
                                    var T = void 0;
                                    "dark" === x ? (T = d.shadeColor(-1 * w, m), w += y) : (T = d.shadeColor(w, m), w += y), f.push(T)
                                }
                                c.globals.colors = f.slice()
                            }
                            var k = c.globals.colors.slice();
                            this.pushExtraColors(c.globals.colors), ["fill", "stroke"].forEach(function(O) {
                                c.globals[O].colors = void 0 === c.config[O].colors ? o.isColorFn ? c.config.colors : k : c.config[O].colors.slice(), o.pushExtraColors(c.globals[O].colors)
                            }), c.globals.dataLabels.style.colors = void 0 === c.config.dataLabels.style.colors ? k : c.config.dataLabels.style.colors.slice(), this.pushExtraColors(c.globals.dataLabels.style.colors, 50), c.globals.radarPolygons.fill.colors = void 0 === c.config.plotOptions.radar.polygons.fill.colors ? ["dark" === c.config.theme.mode ? "#424242" : "none"] : c.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(c.globals.radarPolygons.fill.colors, 20), c.globals.markers.colors = void 0 === c.config.markers.colors ? k : c.config.markers.colors.slice(), this.pushExtraColors(c.globals.markers.colors)
                        }
                    }, {
                        key: "pushExtraColors",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                                d = this.w,
                                f = o || d.globals.series.length;
                            if (null === c && (c = this.isBarDistributed || this.isHeatmapDistributed || "heatmap" === d.config.chart.type && d.config.plotOptions.heatmap.colorScale.inverse), c && d.globals.series.length && (f = d.globals.series[d.globals.maxValsInArrayIndex].length * d.globals.series.length), a.length < f)
                                for (var p = f - a.length, m = 0; m < p; m++) a.push(a[m])
                        }
                    }, {
                        key: "updateThemeOptions",
                        value: function(a) {
                            a.chart = a.chart || {}, a.tooltip = a.tooltip || {};
                            var o = a.theme.mode || "light",
                                c = a.theme.palette ? a.theme.palette : "dark" === o ? "palette4" : "palette1",
                                d = a.chart.foreColor ? a.chart.foreColor : "dark" === o ? "#f6f7f8" : "#373d3f";
                            return a.tooltip.theme = o, a.chart.foreColor = d, a.theme.palette = c, a
                        }
                    }, {
                        key: "predefined",
                        value: function() {
                            switch (this.w.config.theme.palette) {
                                case "palette1":
                                default:
                                    this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
                                    break;
                                case "palette2":
                                    this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
                                    break;
                                case "palette3":
                                    this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
                                    break;
                                case "palette4":
                                    this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
                                    break;
                                case "palette5":
                                    this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
                                    break;
                                case "palette6":
                                    this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
                                    break;
                                case "palette7":
                                    this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
                                    break;
                                case "palette8":
                                    this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
                                    break;
                                case "palette9":
                                    this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
                                    break;
                                case "palette10":
                                    this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"]
                            }
                            return this.colors
                        }
                    }]), K
                }(),
                Ui = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "draw",
                        value: function() {
                            this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle")
                        }
                    }, {
                        key: "drawTitleSubtitle",
                        value: function(a) {
                            var o = this.w,
                                c = "title" === a ? o.config.title : o.config.subtitle,
                                d = o.globals.svgWidth / 2,
                                f = c.offsetY,
                                p = "middle";
                            if ("left" === c.align ? (d = 10, p = "start") : "right" === c.align && (d = o.globals.svgWidth - 10, p = "end"), d += c.offsetX, f = f + parseInt(c.style.fontSize, 10) + c.margin / 2, void 0 !== c.text) {
                                var m = new J(this.ctx).drawText({
                                    x: d,
                                    y: f,
                                    text: c.text,
                                    textAnchor: p,
                                    fontSize: c.style.fontSize,
                                    fontFamily: c.style.fontFamily,
                                    fontWeight: c.style.fontWeight,
                                    foreColor: c.style.color,
                                    opacity: 1
                                });
                                m.node.setAttribute("class", "apexcharts-".concat(a, "-text")), o.globals.dom.Paper.add(m)
                            }
                        }
                    }]), K
                }(),
                Ei = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.dCtx = a
                    }
                    return z(K, [{
                        key: "getTitleSubtitleCoords",
                        value: function(a) {
                            var o = this.w,
                                c = 0,
                                d = 0,
                                f = "title" === a ? o.config.title.floating : o.config.subtitle.floating,
                                p = o.globals.dom.baseEl.querySelector(".apexcharts-".concat(a, "-text"));
                            if (null !== p && !f) {
                                var m = p.getBoundingClientRect();
                                c = m.width, d = o.globals.axisCharts ? m.height + 5 : m.height
                            }
                            return {
                                width: c,
                                height: d
                            }
                        }
                    }, {
                        key: "getLegendsRect",
                        value: function() {
                            var a = this.w,
                                o = a.globals.dom.elLegendWrap;
                            a.config.legend.height || "top" !== a.config.legend.position && "bottom" !== a.config.legend.position || (o.style.maxHeight = a.globals.svgHeight / 2 + "px");
                            var c = Object.assign({}, te.getBoundingClientRect(o));
                            return this.dCtx.lgRect = null !== o && !a.config.legend.floating && a.config.legend.show ? {
                                x: c.x,
                                y: c.y,
                                height: c.height,
                                width: 0 === c.height ? 0 : c.width
                            } : {
                                x: 0,
                                y: 0,
                                height: 0,
                                width: 0
                            }, "left" !== a.config.legend.position && "right" !== a.config.legend.position || 1.5 * this.dCtx.lgRect.width > a.globals.svgWidth && (this.dCtx.lgRect.width = a.globals.svgWidth / 1.5), this.dCtx.lgRect
                        }
                    }, {
                        key: "getLargestStringFromMultiArr",
                        value: function(a, o) {
                            var c = a;
                            if (this.w.globals.isMultiLineX) {
                                var d = o.map(function(p, m) {
                                        return Array.isArray(p) ? p.length : 1
                                    }),
                                    f = Math.max.apply(Math, We(d));
                                c = o[d.indexOf(f)]
                            }
                            return c
                        }
                    }]), K
                }(),
                Ii = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.dCtx = a
                    }
                    return z(K, [{
                        key: "getxAxisLabelsCoords",
                        value: function() {
                            var a, o = this.w,
                                c = o.globals.labels.slice();
                            if (o.config.xaxis.convertedCatToNumeric && 0 === c.length && (c = o.globals.categoryLabels), o.globals.timescaleLabels.length > 0) {
                                var d = this.getxAxisTimeScaleLabelsCoords();
                                a = {
                                    width: d.width,
                                    height: d.height
                                }, o.globals.rotateXLabels = !1
                            } else {
                                this.dCtx.lgWidthForSideLegends = "left" !== o.config.legend.position && "right" !== o.config.legend.position || o.config.legend.floating ? 0 : this.dCtx.lgRect.width;
                                var f = o.globals.xLabelFormatter,
                                    p = te.getLargestStringFromArr(c),
                                    m = this.dCtx.dimHelpers.getLargestStringFromMultiArr(p, c);
                                o.globals.isBarHorizontal && (m = p = o.globals.yAxisScale[0].result.reduce(function(O, B) {
                                    return O.length > B.length ? O : B
                                }, 0));
                                var y = new ct(this.dCtx.ctx),
                                    x = p;
                                p = y.xLabelFormat(f, p, x, {
                                    i: void 0,
                                    dateFormatter: new Ge(this.dCtx.ctx).formatDate,
                                    w: o
                                }), m = y.xLabelFormat(f, m, x, {
                                    i: void 0,
                                    dateFormatter: new Ge(this.dCtx.ctx).formatDate,
                                    w: o
                                }), (o.config.xaxis.convertedCatToNumeric && void 0 === p || "" === String(p).trim()) && (m = p = "1");
                                var w = new J(this.dCtx.ctx),
                                    S = w.getTextRects(p, o.config.xaxis.labels.style.fontSize),
                                    T = S;
                                if (p !== m && (T = w.getTextRects(m, o.config.xaxis.labels.style.fontSize)), (a = {
                                        width: S.width >= T.width ? S.width : T.width,
                                        height: S.height >= T.height ? S.height : T.height
                                    }).width * c.length > o.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && 0 !== o.config.xaxis.labels.rotate || o.config.xaxis.labels.rotateAlways) {
                                    if (!o.globals.isBarHorizontal) {
                                        o.globals.rotateXLabels = !0;
                                        var k = function(O) {
                                            return w.getTextRects(O, o.config.xaxis.labels.style.fontSize, o.config.xaxis.labels.style.fontFamily, "rotate(".concat(o.config.xaxis.labels.rotate, " 0 0)"), !1)
                                        };
                                        S = k(p), p !== m && (T = k(m)), a.height = (S.height > T.height ? S.height : T.height) / 1.5, a.width = S.width > T.width ? S.width : T.width
                                    }
                                } else o.globals.rotateXLabels = !1
                            }
                            return o.config.xaxis.labels.show || (a = {
                                width: 0,
                                height: 0
                            }), {
                                width: a.width,
                                height: a.height
                            }
                        }
                    }, {
                        key: "getxAxisGroupLabelsCoords",
                        value: function() {
                            var a, o = this.w;
                            if (!o.globals.hasXaxisGroups) return {
                                width: 0,
                                height: 0
                            };
                            var c, d = (null === (a = o.config.xaxis.group.style) || void 0 === a ? void 0 : a.fontSize) || o.config.xaxis.labels.style.fontSize,
                                f = o.globals.groups.map(function(S) {
                                    return S.title
                                }),
                                p = te.getLargestStringFromArr(f),
                                m = this.dCtx.dimHelpers.getLargestStringFromMultiArr(p, f),
                                y = new J(this.dCtx.ctx),
                                x = y.getTextRects(p, d),
                                w = x;
                            return p !== m && (w = y.getTextRects(m, d)), c = {
                                width: x.width >= w.width ? x.width : w.width,
                                height: x.height >= w.height ? x.height : w.height
                            }, o.config.xaxis.labels.show || (c = {
                                width: 0,
                                height: 0
                            }), {
                                width: c.width,
                                height: c.height
                            }
                        }
                    }, {
                        key: "getxAxisTitleCoords",
                        value: function() {
                            var a = this.w,
                                o = 0,
                                c = 0;
                            if (void 0 !== a.config.xaxis.title.text) {
                                var d = new J(this.dCtx.ctx).getTextRects(a.config.xaxis.title.text, a.config.xaxis.title.style.fontSize);
                                o = d.width, c = d.height
                            }
                            return {
                                width: o,
                                height: c
                            }
                        }
                    }, {
                        key: "getxAxisTimeScaleLabelsCoords",
                        value: function() {
                            var a, o = this.w;
                            this.dCtx.timescaleLabels = o.globals.timescaleLabels.slice();
                            var c = this.dCtx.timescaleLabels.map(function(f) {
                                    return f.value
                                }),
                                d = c.reduce(function(f, p) {
                                    return void 0 === f ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : f.length > p.length ? f : p
                                }, 0);
                            return 1.05 * (a = new J(this.dCtx.ctx).getTextRects(d, o.config.xaxis.labels.style.fontSize)).width * c.length > o.globals.gridWidth && 0 !== o.config.xaxis.labels.rotate && (o.globals.overlappingXLabels = !0), a
                        }
                    }, {
                        key: "additionalPaddingXLabels",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = c.globals,
                                f = c.config,
                                p = f.xaxis.type,
                                m = a.width;
                            d.skipLastTimelinelabel = !1, d.skipFirstTimelinelabel = !1;
                            var y = c.config.yaxis[0].opposite && c.globals.isBarHorizontal;
                            f.yaxis.forEach(function(w, S) {
                                y ? (o.dCtx.gridPad.left < m && (o.dCtx.xPadLeft = m / 2 + 1), o.dCtx.xPadRight = m / 2 + 1) : function(w, S) {
                                    f.yaxis.length > 1 && -1 !== d.collapsedSeriesIndices.indexOf(S) || function(T) {
                                        if (o.dCtx.timescaleLabels && o.dCtx.timescaleLabels.length) {
                                            var B = o.dCtx.timescaleLabels[0].position - m / 1.75 + o.dCtx.yAxisWidthLeft;
                                            o.dCtx.timescaleLabels[o.dCtx.timescaleLabels.length - 1].position + m / 1.75 - o.dCtx.yAxisWidthRight > d.svgWidth - d.translateX - ("right" === c.config.legend.position && o.dCtx.lgRect.width > 0 ? o.dCtx.lgRect.width : 0) && (d.skipLastTimelinelabel = !0), B < -(T.show && !T.floating || "bar" !== f.chart.type && "candlestick" !== f.chart.type && "rangeBar" !== f.chart.type && "boxPlot" !== f.chart.type ? 10 : m / 1.75) && (d.skipFirstTimelinelabel = !0)
                                        } else "datetime" === p ? o.dCtx.gridPad.right < m && !d.rotateXLabels && (d.skipLastTimelinelabel = !0) : "datetime" !== p && o.dCtx.gridPad.right < m / 2 - o.dCtx.yAxisWidthRight && !d.rotateXLabels && !c.config.xaxis.labels.trim && ("between" !== c.config.xaxis.tickPlacement || c.globals.isBarHorizontal) && (o.dCtx.xPadRight = m / 2 + 1)
                                    }(w)
                                }(w, S)
                            })
                        }
                    }]), K
                }(),
                Mi = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.dCtx = a
                    }
                    return z(K, [{
                        key: "getyAxisLabelsCoords",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = [],
                                d = 10,
                                f = new kt(this.dCtx.ctx);
                            return o.config.yaxis.map(function(p, m) {
                                var y = {
                                        seriesIndex: m,
                                        dataPointIndex: -1,
                                        w: o
                                    },
                                    x = o.globals.yAxisScale[m],
                                    w = 0;
                                if (!f.isYAxisHidden(m) && p.labels.show && void 0 !== p.labels.minWidth && (w = p.labels.minWidth), !f.isYAxisHidden(m) && p.labels.show && x.result.length) {
                                    var S = o.globals.yLabelFormatters[m],
                                        k = x.result.reduce(function(A, F) {
                                            var X, be;
                                            return (null === (X = String(S(A, y))) || void 0 === X ? void 0 : X.length) > (null === (be = String(S(F, y))) || void 0 === be ? void 0 : be.length) ? A : F
                                        }, x.niceMin === Number.MIN_VALUE ? 0 : x.niceMin),
                                        O = k = S(k, y);
                                    if (void 0 !== k && 0 !== k.length || (k = x.niceMax), o.globals.isBarHorizontal) {
                                        d = 0;
                                        var B = o.globals.labels.slice();
                                        k = te.getLargestStringFromArr(B), k = S(k, {
                                            seriesIndex: m,
                                            dataPointIndex: -1,
                                            w: o
                                        }), O = a.dCtx.dimHelpers.getLargestStringFromMultiArr(k, B)
                                    }
                                    var $ = new J(a.dCtx.ctx),
                                        ne = "rotate(".concat(p.labels.rotate, " 0 0)"),
                                        re = $.getTextRects(k, p.labels.style.fontSize, p.labels.style.fontFamily, ne, !1),
                                        b = re;
                                    k !== O && (b = $.getTextRects(O, p.labels.style.fontSize, p.labels.style.fontFamily, ne, !1)), c.push({
                                        width: (w > b.width || w > re.width ? w : b.width > re.width ? b.width : re.width) + d,
                                        height: b.height > re.height ? b.height : re.height
                                    })
                                } else c.push({
                                    width: 0,
                                    height: 0
                                })
                            }), c
                        }
                    }, {
                        key: "getyAxisTitleCoords",
                        value: function() {
                            var a = this,
                                c = [];
                            return this.w.config.yaxis.map(function(d, f) {
                                if (d.show && void 0 !== d.title.text) {
                                    var p = new J(a.dCtx.ctx),
                                        m = "rotate(".concat(d.title.rotate, " 0 0)"),
                                        y = p.getTextRects(d.title.text, d.title.style.fontSize, d.title.style.fontFamily, m, !1);
                                    c.push({
                                        width: y.width,
                                        height: y.height
                                    })
                                } else c.push({
                                    width: 0,
                                    height: 0
                                })
                            }), c
                        }
                    }, {
                        key: "getTotalYAxisWidth",
                        value: function() {
                            var a = this.w,
                                o = 0,
                                c = 0,
                                d = 0,
                                f = a.globals.yAxisScale.length > 1 ? 10 : 0,
                                p = new kt(this.dCtx.ctx),
                                m = function(y, x) {
                                    var w = a.config.yaxis[x].floating,
                                        S = 0;
                                    y.width > 0 && !w ? (S = y.width + f, a.globals.ignoreYAxisIndexes.indexOf(x) > -1 && (S = S - y.width - f)) : S = w || p.isYAxisHidden(x) ? 0 : 5, a.config.yaxis[x].opposite ? d += S : c += S, o += S
                                };
                            return a.globals.yLabelsCoords.map(function(y, x) {
                                m(y, x)
                            }), a.globals.yTitleCoords.map(function(y, x) {
                                m(y, x)
                            }), a.globals.isBarHorizontal && !a.config.yaxis[0].floating && (o = a.globals.yLabelsCoords[0].width + a.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = c, this.dCtx.yAxisWidthRight = d, o
                        }
                    }]), K
                }(),
                fi = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.dCtx = a
                    }
                    return z(K, [{
                        key: "gridPadForColumnsInNumericAxis",
                        value: function(a) {
                            var o = this.w;
                            if (o.globals.noData || o.globals.allSeriesCollapsed) return 0;
                            var c = function(w) {
                                    return "bar" === w || "rangeBar" === w || "candlestick" === w || "boxPlot" === w
                                },
                                d = o.config.chart.type,
                                f = 0,
                                p = c(d) ? o.config.series.length : 1;
                            if (o.globals.comboBarCount > 0 && (p = o.globals.comboBarCount), o.globals.collapsedSeries.forEach(function(w) {
                                    c(w.type) && (p -= 1)
                                }), o.config.chart.stacked && (p = 1), (c(d) || o.globals.comboBarCount > 0) && o.globals.isXNumeric && !o.globals.isBarHorizontal && p > 0) {
                                var m, y, x = Math.abs(o.globals.initialMaxX - o.globals.initialMinX);
                                x <= 3 && (x = o.globals.dataPoints), m = x / a, o.globals.minXDiff && o.globals.minXDiff / m > 0 && (y = o.globals.minXDiff / m), y > a / 2 && (y /= 2), (f = y / p * parseInt(o.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (f = 1), o.globals.barPadForNumericAxis = f = f / (p > 1 ? 1 : 1.5) + 5
                            }
                            return f
                        }
                    }, {
                        key: "gridPadFortitleSubtitle",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = o.globals,
                                d = this.dCtx.isSparkline || !o.globals.axisCharts ? 0 : 10;
                            ["title", "subtitle"].forEach(function(m) {
                                d += void 0 !== o.config[m].text ? o.config[m].margin : a.dCtx.isSparkline || !o.globals.axisCharts ? 0 : 5
                            }), !o.config.legend.show || "bottom" !== o.config.legend.position || o.config.legend.floating || o.globals.axisCharts || (d += 10);
                            var f = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                                p = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
                            c.gridHeight = c.gridHeight - f.height - p.height - d, c.translateY = c.translateY + f.height + p.height + d
                        }
                    }, {
                        key: "setGridXPosForDualYAxis",
                        value: function(a, o) {
                            var c = this.w,
                                d = new kt(this.dCtx.ctx);
                            c.config.yaxis.map(function(f, p) {
                                -1 !== c.globals.ignoreYAxisIndexes.indexOf(p) || f.floating || d.isYAxisHidden(p) || (f.opposite && (c.globals.translateX = c.globals.translateX - (o[p].width + a[p].width) - parseInt(c.config.yaxis[p].labels.style.fontSize, 10) / 1.2 - 12), c.globals.translateX < 2 && (c.globals.translateX = 2))
                            })
                        }
                    }]), K
                }(),
                yi = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new Ei(this), this.dimYAxis = new Mi(this), this.dimXAxis = new Ii(this), this.dimGrid = new fi(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0
                    }
                    return z(K, [{
                        key: "plotCoords",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = o.globals;
                            this.lgRect = this.dimHelpers.getLegendsRect(), this.isSparkline && ((o.config.markers.discrete.length > 0 || o.config.markers.size > 0) && Object.entries(this.gridPad).forEach(function(f) {
                                var p = Be(f, 2);
                                a.gridPad[p[0]] = Math.max(p[1], a.w.globals.markers.largestSize / 1.5)
                            }), this.gridPad.top = Math.max(o.config.stroke.width / 2, this.gridPad.top), this.gridPad.bottom = Math.max(o.config.stroke.width / 2, this.gridPad.bottom)), c.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), c.gridHeight = c.gridHeight - this.gridPad.top - this.gridPad.bottom, c.gridWidth = c.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
                            var d = this.dimGrid.gridPadForColumnsInNumericAxis(c.gridWidth);
                            c.gridWidth = c.gridWidth - 2 * d, c.translateX = c.translateX + this.gridPad.left + this.xPadLeft + (d > 0 ? d + 4 : 0), c.translateY = c.translateY + this.gridPad.top
                        }
                    }, {
                        key: "setDimensionsForAxisCharts",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = o.globals,
                                d = this.dimYAxis.getyAxisLabelsCoords(),
                                f = this.dimYAxis.getyAxisTitleCoords();
                            o.globals.yLabelsCoords = [], o.globals.yTitleCoords = [], o.config.yaxis.map(function(k, O) {
                                o.globals.yLabelsCoords.push({
                                    width: d[O].width,
                                    index: O
                                }), o.globals.yTitleCoords.push({
                                    width: f[O].width,
                                    index: O
                                })
                            }), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
                            var p = this.dimXAxis.getxAxisLabelsCoords(),
                                m = this.dimXAxis.getxAxisGroupLabelsCoords(),
                                y = this.dimXAxis.getxAxisTitleCoords();
                            this.conditionalChecksForAxisCoords(p, y, m), c.translateXAxisY = o.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, c.translateXAxisX = o.globals.rotateXLabels && o.globals.isXNumeric && o.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, o.globals.isBarHorizontal && (c.rotateXLabels = !1, c.translateXAxisY = parseInt(o.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), c.translateXAxisY = c.translateXAxisY + o.config.xaxis.labels.offsetY, c.translateXAxisX = c.translateXAxisX + o.config.xaxis.labels.offsetX;
                            var x = this.yAxisWidth,
                                w = this.xAxisHeight;
                            c.xAxisLabelsHeight = this.xAxisHeight - y.height, c.xAxisGroupLabelsHeight = c.xAxisLabelsHeight - p.height, c.xAxisLabelsWidth = this.xAxisWidth, c.xAxisHeight = this.xAxisHeight;
                            var S = 10;
                            ("radar" === o.config.chart.type || this.isSparkline) && (x = 0, w = c.goldenPadding), this.isSparkline && (this.lgRect = {
                                height: 0,
                                width: 0
                            }), (this.isSparkline || "treemap" === o.config.chart.type) && (x = 0, w = 0, S = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(p);
                            var T = function() {
                                c.translateX = x, c.gridHeight = c.svgHeight - a.lgRect.height - w - (a.isSparkline || "treemap" === o.config.chart.type ? 0 : o.globals.rotateXLabels ? 10 : 15), c.gridWidth = c.svgWidth - x
                            };
                            switch ("top" === o.config.xaxis.position && (S = c.xAxisHeight - o.config.xaxis.axisTicks.height - 5), o.config.legend.position) {
                                case "bottom":
                                    c.translateY = S, T();
                                    break;
                                case "top":
                                    c.translateY = this.lgRect.height + S, T();
                                    break;
                                case "left":
                                    c.translateY = S, c.translateX = this.lgRect.width + x, c.gridHeight = c.svgHeight - w - 12, c.gridWidth = c.svgWidth - this.lgRect.width - x;
                                    break;
                                case "right":
                                    c.translateY = S, c.translateX = x, c.gridHeight = c.svgHeight - w - 12, c.gridWidth = c.svgWidth - this.lgRect.width - x - 5;
                                    break;
                                default:
                                    throw new Error("Legend position not supported")
                            }
                            this.dimGrid.setGridXPosForDualYAxis(f, d), new ts(this.ctx).setYAxisXPosition(d, f)
                        }
                    }, {
                        key: "setDimensionsForNonAxisCharts",
                        value: function() {
                            var a = this.w,
                                o = a.globals,
                                c = a.config,
                                d = 0;
                            a.config.legend.show && !a.config.legend.floating && (d = 20);
                            var f = "pie" === c.chart.type || "polarArea" === c.chart.type || "donut" === c.chart.type ? "pie" : "radialBar",
                                p = c.plotOptions[f].offsetY,
                                m = c.plotOptions[f].offsetX;
                            if (!c.legend.show || c.legend.floating) return o.gridHeight = o.svgHeight - c.grid.padding.left + c.grid.padding.right, o.gridWidth = o.gridHeight, o.translateY = p, void(o.translateX = m + (o.svgWidth - o.gridWidth) / 2);
                            switch (c.legend.position) {
                                case "bottom":
                                    o.gridHeight = o.svgHeight - this.lgRect.height - o.goldenPadding, o.gridWidth = o.svgWidth, o.translateY = p - 10, o.translateX = m + (o.svgWidth - o.gridWidth) / 2;
                                    break;
                                case "top":
                                    o.gridHeight = o.svgHeight - this.lgRect.height - o.goldenPadding, o.gridWidth = o.svgWidth, o.translateY = this.lgRect.height + p + 10, o.translateX = m + (o.svgWidth - o.gridWidth) / 2;
                                    break;
                                case "left":
                                    o.gridWidth = o.svgWidth - this.lgRect.width - d, o.gridHeight = "auto" !== c.chart.height ? o.svgHeight : o.gridWidth, o.translateY = p, o.translateX = m + this.lgRect.width + d;
                                    break;
                                case "right":
                                    o.gridWidth = o.svgWidth - this.lgRect.width - d - 5, o.gridHeight = "auto" !== c.chart.height ? o.svgHeight : o.gridWidth, o.translateY = p, o.translateX = m + 10;
                                    break;
                                default:
                                    throw new Error("Legend position not supported")
                            }
                        }
                    }, {
                        key: "conditionalChecksForAxisCoords",
                        value: function(a, o, c) {
                            var d = this.w;
                            this.xAxisHeight = (c.height + a.height + o.height) * (d.globals.isMultiLineX ? 1.2 : d.globals.LINE_HEIGHT_RATIO) + (d.globals.hasXaxisGroups ? 2 : 1) * (d.globals.rotateXLabels ? 22 : 10) + (d.globals.rotateXLabels && "bottom" === d.config.legend.position ? 10 : 0), this.xAxisWidth = a.width, this.xAxisHeight - o.height > d.config.xaxis.labels.maxHeight && (this.xAxisHeight = d.config.xaxis.labels.maxHeight), d.config.xaxis.labels.minHeight && this.xAxisHeight < d.config.xaxis.labels.minHeight && (this.xAxisHeight = d.config.xaxis.labels.minHeight), d.config.xaxis.floating && (this.xAxisHeight = 0);
                            var w = 0,
                                S = 0;
                            d.config.yaxis.forEach(function(T) {
                                w += T.labels.minWidth, S += T.labels.maxWidth
                            }), this.yAxisWidth < w && (this.yAxisWidth = w), this.yAxisWidth > S && (this.yAxisWidth = S)
                        }
                    }]), K
                }(),
                oi = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.lgCtx = a
                    }
                    return z(K, [{
                        key: "getLegendStyles",
                        value: function() {
                            var a, o, c, d = document.createElement("style");
                            d.setAttribute("type", "text/css");
                            var f = (null === (a = this.lgCtx.ctx) || void 0 === a || null === (o = a.opts) || void 0 === o || null === (c = o.chart) || void 0 === c ? void 0 : c.nonce) || this.w.config.chart.nonce;
                            f && d.setAttribute("nonce", f);
                            var p = document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");
                            return d.appendChild(p), d
                        }
                    }, {
                        key: "getLegendBBox",
                        value: function() {
                            var a = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect();
                            return {
                                clwh: a.height,
                                clww: a.width
                            }
                        }
                    }, {
                        key: "appendToForeignObject",
                        value: function() {
                            this.w.globals.dom.elLegendForeign.appendChild(this.getLegendStyles())
                        }
                    }, {
                        key: "toggleDataSeries",
                        value: function(a, o) {
                            var c = this,
                                d = this.w;
                            if (d.globals.axisCharts || "radialBar" === d.config.chart.type) {
                                d.globals.resized = !0;
                                var f = null,
                                    p = null;
                                d.globals.risingSeries = [], d.globals.axisCharts ? (f = d.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(a, "']")), p = parseInt(f.getAttribute("data:realIndex"), 10)) : (f = d.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a + 1, "']")), p = parseInt(f.getAttribute("rel"), 10) - 1), o ? [{
                                    cs: d.globals.collapsedSeries,
                                    csi: d.globals.collapsedSeriesIndices
                                }, {
                                    cs: d.globals.ancillaryCollapsedSeries,
                                    csi: d.globals.ancillaryCollapsedSeriesIndices
                                }].forEach(function(w) {
                                    c.riseCollapsedSeries(w.cs, w.csi, p)
                                }) : this.hideSeries({
                                    seriesEl: f,
                                    realIndex: p
                                })
                            } else {
                                var m = d.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(a + 1, "'] path")),
                                    y = d.config.chart.type;
                                if ("pie" === y || "polarArea" === y || "donut" === y) {
                                    var x = d.config.plotOptions.pie.donut.labels;
                                    new J(this.lgCtx.ctx).pathMouseDown(m.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(m.members[0].node, x)
                                }
                                m.fire("click")
                            }
                        }
                    }, {
                        key: "hideSeries",
                        value: function(a) {
                            var o = a.seriesEl,
                                c = a.realIndex,
                                d = this.w,
                                f = te.clone(d.config.series);
                            if (d.globals.axisCharts) {
                                var p = !1;
                                if (d.config.yaxis[c] && d.config.yaxis[c].show && d.config.yaxis[c].showAlways && (p = !0, d.globals.ancillaryCollapsedSeriesIndices.indexOf(c) < 0 && (d.globals.ancillaryCollapsedSeries.push({
                                        index: c,
                                        data: f[c].data.slice(),
                                        type: o.parentNode.className.baseVal.split("-")[1]
                                    }), d.globals.ancillaryCollapsedSeriesIndices.push(c))), !p) {
                                    d.globals.collapsedSeries.push({
                                        index: c,
                                        data: f[c].data.slice(),
                                        type: o.parentNode.className.baseVal.split("-")[1]
                                    }), d.globals.collapsedSeriesIndices.push(c);
                                    var m = d.globals.risingSeries.indexOf(c);
                                    d.globals.risingSeries.splice(m, 1)
                                }
                            } else d.globals.collapsedSeries.push({
                                index: c,
                                data: f[c]
                            }), d.globals.collapsedSeriesIndices.push(c);
                            for (var y = o.childNodes, x = 0; x < y.length; x++) y[x].classList.contains("apexcharts-series-markers-wrap") && (y[x].classList.contains("apexcharts-hide") ? y[x].classList.remove("apexcharts-hide") : y[x].classList.add("apexcharts-hide"));
                            d.globals.allSeriesCollapsed = d.globals.collapsedSeries.length === d.config.series.length, f = this._getSeriesBasedOnCollapsedState(f), this.lgCtx.ctx.updateHelpers._updateSeries(f, d.config.chart.animations.dynamicAnimation.enabled)
                        }
                    }, {
                        key: "riseCollapsedSeries",
                        value: function(a, o, c) {
                            var d = this.w,
                                f = te.clone(d.config.series);
                            if (a.length > 0) {
                                for (var p = 0; p < a.length; p++) a[p].index === c && (d.globals.axisCharts ? (f[c].data = a[p].data.slice(), a.splice(p, 1), o.splice(p, 1), d.globals.risingSeries.push(c)) : (f[c] = a[p].data, a.splice(p, 1), o.splice(p, 1), d.globals.risingSeries.push(c)));
                                f = this._getSeriesBasedOnCollapsedState(f), this.lgCtx.ctx.updateHelpers._updateSeries(f, d.config.chart.animations.dynamicAnimation.enabled)
                            }
                        }
                    }, {
                        key: "_getSeriesBasedOnCollapsedState",
                        value: function(a) {
                            var o = this.w;
                            return a.forEach(o.globals.axisCharts ? function(c, d) {
                                o.globals.collapsedSeriesIndices.indexOf(d) > -1 && (a[d].data = [])
                            } : function(c, d) {
                                o.globals.collapsedSeriesIndices.indexOf(d) > -1 && (a[d] = 0)
                            }), a
                        }
                    }]), K
                }(),
                bi = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = "bar" === this.w.config.chart.type && this.w.config.plotOptions.bar.distributed && 1 === this.w.config.series.length, this.legendHelpers = new oi(this)
                    }
                    return z(K, [{
                        key: "init",
                        value: function() {
                            var a = this.w,
                                o = a.globals,
                                c = a.config;
                            if ((c.legend.showForSingleSeries && 1 === o.series.length || this.isBarsDistributed || o.series.length > 1 || !o.axisCharts) && c.legend.show) {
                                for (; o.dom.elLegendWrap.firstChild;) o.dom.elLegendWrap.removeChild(o.dom.elLegendWrap.firstChild);
                                this.drawLegends(), te.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), "bottom" === c.legend.position || "top" === c.legend.position ? this.legendAlignHorizontal() : "right" !== c.legend.position && "left" !== c.legend.position || this.legendAlignVertical()
                            }
                        }
                    }, {
                        key: "drawLegends",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = o.config.legend.fontFamily,
                                d = o.globals.seriesNames,
                                f = o.globals.colors.slice();
                            if ("heatmap" === o.config.chart.type) {
                                var p = o.config.plotOptions.heatmap.colorScale.ranges;
                                d = p.map(function(dt) {
                                    return dt.name ? dt.name : dt.from + " - " + dt.to
                                }), f = p.map(function(dt) {
                                    return dt.color
                                })
                            } else this.isBarsDistributed && (d = o.globals.labels.slice());
                            o.config.legend.customLegendItems.length && (d = o.config.legend.customLegendItems);
                            for (var m = o.globals.legendFormatter, y = o.config.legend.inverseOrder, x = y ? d.length - 1 : 0; y ? x >= 0 : x <= d.length - 1; y ? x-- : x++) {
                                var w, S = m(d[x], {
                                        seriesIndex: x,
                                        w: o
                                    }),
                                    T = !1,
                                    k = !1;
                                if (o.globals.collapsedSeries.length > 0)
                                    for (var O = 0; O < o.globals.collapsedSeries.length; O++) o.globals.collapsedSeries[O].index === x && (T = !0);
                                if (o.globals.ancillaryCollapsedSeriesIndices.length > 0)
                                    for (var B = 0; B < o.globals.ancillaryCollapsedSeriesIndices.length; B++) o.globals.ancillaryCollapsedSeriesIndices[B] === x && (k = !0);
                                var $ = document.createElement("span");
                                $.classList.add("apexcharts-legend-marker");
                                var ne = o.config.legend.markers.offsetX,
                                    re = o.config.legend.markers.offsetY,
                                    b = o.config.legend.markers.height,
                                    A = o.config.legend.markers.width,
                                    F = o.config.legend.markers.strokeWidth,
                                    X = o.config.legend.markers.strokeColor,
                                    be = o.config.legend.markers.radius,
                                    Se = $.style;
                                Se.background = f[x], Se.color = f[x], Se.setProperty("background", f[x], "important"), o.config.legend.markers.fillColors && o.config.legend.markers.fillColors[x] && (Se.background = o.config.legend.markers.fillColors[x]), void 0 !== o.globals.seriesColors[x] && (Se.background = o.globals.seriesColors[x], Se.color = o.globals.seriesColors[x]), Se.height = Array.isArray(b) ? parseFloat(b[x]) + "px" : parseFloat(b) + "px", Se.width = Array.isArray(A) ? parseFloat(A[x]) + "px" : parseFloat(A) + "px", Se.left = (Array.isArray(ne) ? parseFloat(ne[x]) : parseFloat(ne)) + "px", Se.top = (Array.isArray(re) ? parseFloat(re[x]) : parseFloat(re)) + "px", Se.borderWidth = Array.isArray(F) ? F[x] : F, Se.borderColor = Array.isArray(X) ? X[x] : X, Se.borderRadius = Array.isArray(be) ? parseFloat(be[x]) + "px" : parseFloat(be) + "px", o.config.legend.markers.customHTML && (Array.isArray(o.config.legend.markers.customHTML) ? o.config.legend.markers.customHTML[x] && ($.innerHTML = o.config.legend.markers.customHTML[x]()) : $.innerHTML = o.config.legend.markers.customHTML()), J.setAttrs($, {
                                    rel: x + 1,
                                    "data:collapsed": T || k
                                }), (T || k) && $.classList.add("apexcharts-inactive-legend");
                                var Le = document.createElement("div"),
                                    ze = document.createElement("span");
                                ze.classList.add("apexcharts-legend-text"), ze.innerHTML = Array.isArray(S) ? S.join(" ") : S;
                                var nt = o.config.legend.labels.useSeriesColors ? o.globals.colors[x] : Array.isArray(o.config.legend.labels.colors) ? null === (w = o.config.legend.labels.colors) || void 0 === w ? void 0 : w[x] : o.config.legend.labels.colors;
                                nt || (nt = o.config.chart.foreColor), ze.style.color = nt, ze.style.fontSize = parseFloat(o.config.legend.fontSize) + "px", ze.style.fontWeight = o.config.legend.fontWeight, ze.style.fontFamily = c || o.config.chart.fontFamily, J.setAttrs(ze, {
                                    rel: x + 1,
                                    i: x,
                                    "data:default-text": encodeURIComponent(S),
                                    "data:collapsed": T || k
                                }), Le.appendChild($), Le.appendChild(ze);
                                var yt = new Ie(this.ctx);
                                o.config.legend.showForZeroSeries || 0 === yt.getSeriesTotalByIndex(x) && yt.seriesHaveSameValues(x) && !yt.isSeriesNull(x) && -1 === o.globals.collapsedSeriesIndices.indexOf(x) && -1 === o.globals.ancillaryCollapsedSeriesIndices.indexOf(x) && Le.classList.add("apexcharts-hidden-zero-series"), o.config.legend.showForNullSeries || yt.isSeriesNull(x) && -1 === o.globals.collapsedSeriesIndices.indexOf(x) && -1 === o.globals.ancillaryCollapsedSeriesIndices.indexOf(x) && Le.classList.add("apexcharts-hidden-null-series"), o.globals.dom.elLegendWrap.appendChild(Le), o.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(o.config.legend.horizontalAlign)), o.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + o.config.legend.position), Le.classList.add("apexcharts-legend-series"), Le.style.margin = "".concat(o.config.legend.itemMargin.vertical, "px ").concat(o.config.legend.itemMargin.horizontal, "px"), o.globals.dom.elLegendWrap.style.width = o.config.legend.width ? o.config.legend.width + "px" : "", o.globals.dom.elLegendWrap.style.height = o.config.legend.height ? o.config.legend.height + "px" : "", J.setAttrs(Le, {
                                    rel: x + 1,
                                    seriesName: te.escapeString(d[x]),
                                    "data:collapsed": T || k
                                }), (T || k) && Le.classList.add("apexcharts-inactive-legend"), o.config.legend.onItemClick.toggleDataSeries || Le.classList.add("apexcharts-no-click")
                            }
                            o.globals.dom.elWrap.addEventListener("click", a.onLegendClick, !0), o.config.legend.onItemHover.highlightDataSeries && 0 === o.config.legend.customLegendItems.length && (o.globals.dom.elWrap.addEventListener("mousemove", a.onLegendHovered, !0), o.globals.dom.elWrap.addEventListener("mouseout", a.onLegendHovered, !0))
                        }
                    }, {
                        key: "setLegendWrapXY",
                        value: function(a, o) {
                            var c = this.w,
                                d = c.globals.dom.elLegendWrap,
                                f = d.getBoundingClientRect(),
                                p = 0,
                                m = 0;
                            if ("bottom" === c.config.legend.position) m += c.globals.svgHeight - f.height / 2;
                            else if ("top" === c.config.legend.position) {
                                var y = new yi(this.ctx),
                                    x = y.dimHelpers.getTitleSubtitleCoords("title").height,
                                    w = y.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                                m = m + (x > 0 ? x - 10 : 0) + (w > 0 ? w - 10 : 0)
                            }
                            d.style.position = "absolute", m = m + o + c.config.legend.offsetY, d.style.left = (p = p + a + c.config.legend.offsetX) + "px", d.style.top = m + "px", "bottom" === c.config.legend.position ? (d.style.top = "auto", d.style.bottom = 5 - c.config.legend.offsetY + "px") : "right" === c.config.legend.position && (d.style.left = "auto", d.style.right = 25 + c.config.legend.offsetX + "px"), ["width", "height"].forEach(function(S) {
                                d.style[S] && (d.style[S] = parseInt(c.config.legend[S], 10) + "px")
                            })
                        }
                    }, {
                        key: "legendAlignHorizontal",
                        value: function() {
                            var a = this.w;
                            a.globals.dom.elLegendWrap.style.right = 0;
                            var o = this.legendHelpers.getLegendBBox(),
                                c = new yi(this.ctx),
                                d = c.dimHelpers.getTitleSubtitleCoords("title"),
                                f = c.dimHelpers.getTitleSubtitleCoords("subtitle"),
                                p = 0;
                            "bottom" === a.config.legend.position ? p = -o.clwh / 1.8 : "top" === a.config.legend.position && (p = d.height + f.height + a.config.title.margin + a.config.subtitle.margin - 10), this.setLegendWrapXY(20, p)
                        }
                    }, {
                        key: "legendAlignVertical",
                        value: function() {
                            var a = this.w,
                                o = this.legendHelpers.getLegendBBox(),
                                c = 0;
                            "left" === a.config.legend.position && (c = 20), "right" === a.config.legend.position && (c = a.globals.svgWidth - o.clww - 10), this.setLegendWrapXY(c, 20)
                        }
                    }, {
                        key: "onLegendHovered",
                        value: function(a) {
                            var o = this.w,
                                c = a.target.classList.contains("apexcharts-legend-series") || a.target.classList.contains("apexcharts-legend-text") || a.target.classList.contains("apexcharts-legend-marker");
                            if ("heatmap" === o.config.chart.type || this.isBarsDistributed) {
                                if (c) {
                                    var d = parseInt(a.target.getAttribute("rel"), 10) - 1;
                                    this.ctx.events.fireEvent("legendHover", [this.ctx, d, this.w]), new Ct(this.ctx).highlightRangeInSeries(a, a.target)
                                }
                            } else !a.target.classList.contains("apexcharts-inactive-legend") && c && new Ct(this.ctx).toggleSeriesOnHover(a, a.target)
                        }
                    }, {
                        key: "onLegendClick",
                        value: function(a) {
                            var o = this.w;
                            if (!o.config.legend.customLegendItems.length && (a.target.classList.contains("apexcharts-legend-series") || a.target.classList.contains("apexcharts-legend-text") || a.target.classList.contains("apexcharts-legend-marker"))) {
                                var c = parseInt(a.target.getAttribute("rel"), 10) - 1,
                                    d = "true" === a.target.getAttribute("data:collapsed"),
                                    f = this.w.config.chart.events.legendClick;
                                "function" == typeof f && f(this.ctx, c, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, c, this.w]);
                                var p = this.w.config.legend.markers.onClick;
                                "function" == typeof p && a.target.classList.contains("apexcharts-legend-marker") && (p(this.ctx, c, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, c, this.w])), "treemap" !== o.config.chart.type && "heatmap" !== o.config.chart.type && !this.isBarsDistributed && o.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(c, d)
                            }
                        }
                    }]), K
                }(),
                qn = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w;
                        var o = this.w;
                        this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = o.globals.minX, this.maxX = o.globals.maxX
                    }
                    return z(K, [{
                        key: "createToolbar",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = function() {
                                    return document.createElement("div")
                                },
                                d = c();
                            if (d.setAttribute("class", "apexcharts-toolbar"), d.style.top = o.config.chart.toolbar.offsetY + "px", d.style.right = 3 - o.config.chart.toolbar.offsetX + "px", o.globals.dom.elWrap.appendChild(d), this.elZoom = c(), this.elZoomIn = c(), this.elZoomOut = c(), this.elPan = c(), this.elSelection = c(), this.elZoomReset = c(), this.elMenuIcon = c(), this.elMenu = c(), this.elCustomIcons = [], this.t = o.config.chart.toolbar.tools, Array.isArray(this.t.customIcons))
                                for (var f = 0; f < this.t.customIcons.length; f++) this.elCustomIcons.push(c());
                            var p = [],
                                m = function(S, T, k) {
                                    var O = S.toLowerCase();
                                    a.t[O] && o.config.chart.zoom.enabled && p.push({
                                        el: T,
                                        icon: "string" == typeof a.t[O] ? a.t[O] : k,
                                        title: a.localeValues[S],
                                        class: "apexcharts-".concat(O, "-icon")
                                    })
                                };
                            m("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), m("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');
                            var y = function(S) {
                                a.t[S] && o.config.chart[S].enabled && p.push({
                                    el: "zoom" === S ? a.elZoom : a.elSelection,
                                    icon: "string" == typeof a.t[S] ? a.t[S] : "zoom" === S ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
                                    title: a.localeValues["zoom" === S ? "selectionZoom" : "selection"],
                                    class: o.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(S, "-icon")
                                })
                            };
                            y("zoom"), y("selection"), this.t.pan && o.config.chart.zoom.enabled && p.push({
                                el: this.elPan,
                                icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
                                title: this.localeValues.pan,
                                class: o.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon"
                            }), m("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && p.push({
                                el: this.elMenuIcon,
                                icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                                title: this.localeValues.menu,
                                class: "apexcharts-menu-icon"
                            });
                            for (var x = 0; x < this.elCustomIcons.length; x++) p.push({
                                el: this.elCustomIcons[x],
                                icon: this.t.customIcons[x].icon,
                                title: this.t.customIcons[x].title,
                                index: this.t.customIcons[x].index,
                                class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[x].class
                            });
                            p.forEach(function(S, T) {
                                S.index && te.moveIndexInArray(p, T, S.index)
                            });
                            for (var w = 0; w < p.length; w++) J.setAttrs(p[w].el, {
                                class: p[w].class,
                                title: p[w].title
                            }), p[w].el.innerHTML = p[w].icon, d.appendChild(p[w].el);
                            this._createHamburgerMenu(d), o.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : o.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : o.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners()
                        }
                    }, {
                        key: "_createHamburgerMenu",
                        value: function(a) {
                            this.elMenuItems = [], a.appendChild(this.elMenu), J.setAttrs(this.elMenu, {
                                class: "apexcharts-menu"
                            });
                            for (var o = [{
                                    name: "exportSVG",
                                    title: this.localeValues.exportToSVG
                                }, {
                                    name: "exportPNG",
                                    title: this.localeValues.exportToPNG
                                }, {
                                    name: "exportCSV",
                                    title: this.localeValues.exportToCSV
                                }], c = 0; c < o.length; c++) this.elMenuItems.push(document.createElement("div")), this.elMenuItems[c].innerHTML = o[c].title, J.setAttrs(this.elMenuItems[c], {
                                class: "apexcharts-menu-item ".concat(o[c].name),
                                title: o[c].title
                            }), this.elMenu.appendChild(this.elMenuItems[c])
                        }
                    }, {
                        key: "addToolbarEventListeners",
                        value: function() {
                            var a = this;
                            this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach(function(c) {
                                c.classList.contains("exportSVG") ? c.addEventListener("click", a.handleDownload.bind(a, "svg")) : c.classList.contains("exportPNG") ? c.addEventListener("click", a.handleDownload.bind(a, "png")) : c.classList.contains("exportCSV") && c.addEventListener("click", a.handleDownload.bind(a, "csv"))
                            });
                            for (var o = 0; o < this.t.customIcons.length; o++) this.elCustomIcons[o].addEventListener("click", this.t.customIcons[o].click.bind(this, this.ctx, this.ctx.w))
                        }
                    }, {
                        key: "toggleZoomSelection",
                        value: function(a) {
                            this.ctx.getSyncedCharts().forEach(function(o) {
                                o.ctx.toolbar.toggleOtherControls();
                                var c = "selection" === a ? o.ctx.toolbar.elSelection : o.ctx.toolbar.elZoom,
                                    d = "selection" === a ? "selectionEnabled" : "zoomEnabled";
                                o.w.globals[d] = !o.w.globals[d], c.classList.contains(o.ctx.toolbar.selectedClass) ? c.classList.remove(o.ctx.toolbar.selectedClass) : c.classList.add(o.ctx.toolbar.selectedClass)
                            })
                        }
                    }, {
                        key: "getToolbarIconsReference",
                        value: function() {
                            var a = this.w;
                            this.elZoom || (this.elZoom = a.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = a.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = a.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"))
                        }
                    }, {
                        key: "enableZoomPanFromToolbar",
                        value: function(a) {
                            this.toggleOtherControls(), "pan" === a ? this.w.globals.panEnabled = !0 : this.w.globals.zoomEnabled = !0;
                            var o = "pan" === a ? this.elPan : this.elZoom,
                                c = "pan" === a ? this.elZoom : this.elPan;
                            o && o.classList.add(this.selectedClass), c && c.classList.remove(this.selectedClass)
                        }
                    }, {
                        key: "togglePanning",
                        value: function() {
                            this.ctx.getSyncedCharts().forEach(function(a) {
                                a.ctx.toolbar.toggleOtherControls(), a.w.globals.panEnabled = !a.w.globals.panEnabled, a.ctx.toolbar.elPan.classList.contains(a.ctx.toolbar.selectedClass) ? a.ctx.toolbar.elPan.classList.remove(a.ctx.toolbar.selectedClass) : a.ctx.toolbar.elPan.classList.add(a.ctx.toolbar.selectedClass)
                            })
                        }
                    }, {
                        key: "toggleOtherControls",
                        value: function() {
                            var a = this,
                                o = this.w;
                            o.globals.panEnabled = !1, o.globals.zoomEnabled = !1, o.globals.selectionEnabled = !1, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach(function(c) {
                                c && c.classList.remove(a.selectedClass)
                            })
                        }
                    }, {
                        key: "handleZoomIn",
                        value: function() {
                            var a = this.w;
                            a.globals.isRangeBar && (this.minX = a.globals.minY, this.maxX = a.globals.maxY);
                            var o = (this.minX + this.maxX) / 2,
                                f = this._getNewMinXMaxX((this.minX + o) / 2, (this.maxX + o) / 2);
                            a.globals.disableZoomIn || this.zoomUpdateOptions(f.minX, f.maxX)
                        }
                    }, {
                        key: "handleZoomOut",
                        value: function() {
                            var a = this.w;
                            if (a.globals.isRangeBar && (this.minX = a.globals.minY, this.maxX = a.globals.maxY), !("datetime" === a.config.xaxis.type && new Date(this.minX).getUTCFullYear() < 1e3)) {
                                var o = (this.minX + this.maxX) / 2,
                                    f = this._getNewMinXMaxX(this.minX - (o - this.minX), this.maxX - (o - this.maxX));
                                a.globals.disableZoomOut || this.zoomUpdateOptions(f.minX, f.maxX)
                            }
                        }
                    }, {
                        key: "_getNewMinXMaxX",
                        value: function(a, o) {
                            var c = this.w.config.xaxis.convertedCatToNumeric;
                            return {
                                minX: c ? Math.floor(a) : a,
                                maxX: c ? Math.floor(o) : o
                            }
                        }
                    }, {
                        key: "zoomUpdateOptions",
                        value: function(a, o) {
                            var c = this.w;
                            if (void 0 !== a || void 0 !== o) {
                                if (!(c.config.xaxis.convertedCatToNumeric && (a < 1 && (a = 1, o = c.globals.dataPoints), o - a < 2))) {
                                    var d = {
                                            min: a,
                                            max: o
                                        },
                                        f = this.getBeforeZoomRange(d);
                                    f && (d = f.xaxis);
                                    var p = {
                                            xaxis: d
                                        },
                                        m = te.clone(c.globals.initialConfig.yaxis);
                                    c.config.chart.zoom.autoScaleYaxis && (m = new vn(this.ctx).autoScaleY(this.ctx, m, {
                                        xaxis: d
                                    })), c.config.chart.group || (p.yaxis = m), this.w.globals.zoomed = !0, this.ctx.updateHelpers._updateOptions(p, !1, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(d, m)
                                }
                            } else this.handleZoomReset()
                        }
                    }, {
                        key: "zoomCallback",
                        value: function(a, o) {
                            "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, {
                                xaxis: a,
                                yaxis: o
                            })
                        }
                    }, {
                        key: "getBeforeZoomRange",
                        value: function(a, o) {
                            var c = null;
                            return "function" == typeof this.ev.beforeZoom && (c = this.ev.beforeZoom(this, {
                                xaxis: a,
                                yaxis: o
                            })), c
                        }
                    }, {
                        key: "toggleMenu",
                        value: function() {
                            var a = this;
                            window.setTimeout(function() {
                                a.elMenu.classList.contains("apexcharts-menu-open") ? a.elMenu.classList.remove("apexcharts-menu-open") : a.elMenu.classList.add("apexcharts-menu-open")
                            }, 0)
                        }
                    }, {
                        key: "handleDownload",
                        value: function(a) {
                            var o = this.w,
                                c = new pn(this.ctx);
                            switch (a) {
                                case "svg":
                                    c.exportToSVG(this.ctx);
                                    break;
                                case "png":
                                    c.exportToPng(this.ctx);
                                    break;
                                case "csv":
                                    c.exportToCSV({
                                        series: o.config.series,
                                        columnDelimiter: o.config.chart.toolbar.export.csv.columnDelimiter
                                    })
                            }
                        }
                    }, {
                        key: "handleZoomReset",
                        value: function(a) {
                            this.ctx.getSyncedCharts().forEach(function(o) {
                                var c = o.w;
                                if (c.globals.lastXAxis.min = c.globals.initialConfig.xaxis.min, c.globals.lastXAxis.max = c.globals.initialConfig.xaxis.max, o.updateHelpers.revertDefaultAxisMinMax(), "function" == typeof c.config.chart.events.beforeResetZoom) {
                                    var d = c.config.chart.events.beforeResetZoom(o, c);
                                    d && o.updateHelpers.revertDefaultAxisMinMax(d)
                                }
                                "function" == typeof c.config.chart.events.zoomed && o.ctx.toolbar.zoomCallback({
                                    min: c.config.xaxis.min,
                                    max: c.config.xaxis.max
                                }), c.globals.zoomed = !1;
                                var f = o.ctx.series.emptyCollapsedSeries(te.clone(c.globals.initialSeries));
                                o.updateHelpers._updateSeries(f, c.config.chart.animations.dynamicAnimation.enabled)
                            })
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null
                        }
                    }]), K
                }(),
                Wi = function(K) {
                    ee(o, qn);
                    var a = Me(o);

                    function o(c) {
                        var d;
                        return U(this, o), (d = a.call(this, c)).ctx = c, d.w = c.w, d.dragged = !1, d.graphics = new J(d.ctx), d.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], d.clientX = 0, d.clientY = 0, d.startX = 0, d.endX = 0, d.dragX = 0, d.startY = 0, d.endY = 0, d.dragY = 0, d.moveDirection = "none", d
                    }
                    return z(o, [{
                        key: "init",
                        value: function(c) {
                            var d = this,
                                f = c.xyRatios,
                                p = this.w,
                                m = this;
                            this.xyRatios = f, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = p.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), p.globals.dom.elGraphical.add(this.zoomRect), p.globals.dom.elGraphical.add(this.selectionRect), this.slDraggableRect = "x" === p.config.chart.selection.type ? this.selectionRect.draggable({
                                minX: 0,
                                minY: 0,
                                maxX: p.globals.gridWidth,
                                maxY: p.globals.gridHeight
                            }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === p.config.chart.selection.type ? this.selectionRect.draggable({
                                minX: 0,
                                maxX: p.globals.gridWidth
                            }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = p.globals.dom.baseEl.querySelector("".concat(p.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach(function(y) {
                                d.hoverArea.addEventListener(y, m.svgMouseEvents.bind(m, f), {
                                    capture: !1,
                                    passive: !0
                                })
                            })
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this.slDraggableRect && (this.slDraggableRect.draggable(!1), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null
                        }
                    }, {
                        key: "svgMouseEvents",
                        value: function(c, d) {
                            var f = this.w,
                                p = this,
                                m = this.ctx.toolbar,
                                y = f.globals.zoomEnabled ? f.config.chart.zoom.type : f.config.chart.selection.type,
                                x = f.config.chart.toolbar.autoSelected;
                            if (d.shiftKey ? (this.shiftWasPressed = !0, m.enableZoomPanFromToolbar("pan" === x ? "zoom" : "pan")) : this.shiftWasPressed && (m.enableZoomPanFromToolbar(x), this.shiftWasPressed = !1), d.target) {
                                var w, S = d.target.classList;
                                if (d.target.parentNode && null !== d.target.parentNode && (w = d.target.parentNode.classList), !(S.contains("apexcharts-selection-rect") || S.contains("apexcharts-legend-marker") || S.contains("apexcharts-legend-text") || w && w.contains("apexcharts-toolbar"))) {
                                    if (p.clientX = "touchmove" === d.type || "touchstart" === d.type ? d.touches[0].clientX : "touchend" === d.type ? d.changedTouches[0].clientX : d.clientX, p.clientY = "touchmove" === d.type || "touchstart" === d.type ? d.touches[0].clientY : "touchend" === d.type ? d.changedTouches[0].clientY : d.clientY, "mousedown" === d.type && 1 === d.which) {
                                        var T = p.gridRect.getBoundingClientRect();
                                        p.startX = p.clientX - T.left, p.startY = p.clientY - T.top, p.dragged = !1, p.w.globals.mousedown = !0
                                    }
                                    if (("mousemove" === d.type && 1 === d.which || "touchmove" === d.type) && (p.dragged = !0, f.globals.panEnabled ? (f.globals.selection = null, p.w.globals.mousedown && p.panDragging({
                                            context: p,
                                            zoomtype: y,
                                            xyRatios: c
                                        })) : (p.w.globals.mousedown && f.globals.zoomEnabled || p.w.globals.mousedown && f.globals.selectionEnabled) && (p.selection = p.selectionDrawing({
                                            context: p,
                                            zoomtype: y
                                        }))), "mouseup" === d.type || "touchend" === d.type || "mouseleave" === d.type) {
                                        var k = p.gridRect.getBoundingClientRect();
                                        p.w.globals.mousedown && (p.endX = p.clientX - k.left, p.endY = p.clientY - k.top, p.dragX = Math.abs(p.endX - p.startX), p.dragY = Math.abs(p.endY - p.startY), (f.globals.zoomEnabled || f.globals.selectionEnabled) && p.selectionDrawn({
                                            context: p,
                                            zoomtype: y
                                        }), f.globals.panEnabled && f.config.xaxis.convertedCatToNumeric && p.delayedPanScrolled()), f.globals.zoomEnabled && p.hideSelectionRect(this.selectionRect), p.dragged = !1, p.w.globals.mousedown = !1
                                    }
                                    this.makeSelectionRectDraggable()
                                }
                            }
                        }
                    }, {
                        key: "makeSelectionRectDraggable",
                        value: function() {
                            var c = this.w;
                            if (this.selectionRect) {
                                var d = this.selectionRect.node.getBoundingClientRect();
                                d.width > 0 && d.height > 0 && this.slDraggableRect.selectize({
                                    points: "l, r",
                                    pointSize: 8,
                                    pointType: "rect"
                                }).resize({
                                    constraint: {
                                        minX: 0,
                                        minY: 0,
                                        maxX: c.globals.gridWidth,
                                        maxY: c.globals.gridHeight
                                    }
                                }).on("resizing", this.selectionDragging.bind(this, "resizing"))
                            }
                        }
                    }, {
                        key: "preselectedSelection",
                        value: function() {
                            var c = this.w,
                                d = this.xyRatios;
                            if (!c.globals.zoomEnabled)
                                if (null != c.globals.selection) this.drawSelectionRect(c.globals.selection);
                                else if (void 0 !== c.config.chart.selection.xaxis.min && void 0 !== c.config.chart.selection.xaxis.max) {
                                var f = (c.config.chart.selection.xaxis.min - c.globals.minX) / d.xRatio,
                                    p = c.globals.gridWidth - (c.globals.maxX - c.config.chart.selection.xaxis.max) / d.xRatio - f;
                                c.globals.isRangeBar && (f = (c.config.chart.selection.xaxis.min - c.globals.yAxisScale[0].niceMin) / d.invertedYRatio, p = (c.config.chart.selection.xaxis.max - c.config.chart.selection.xaxis.min) / d.invertedYRatio), this.drawSelectionRect({
                                    x: f,
                                    y: 0,
                                    width: p,
                                    height: c.globals.gridHeight,
                                    translateX: 0,
                                    translateY: 0,
                                    selectionEnabled: !0
                                }), this.makeSelectionRectDraggable(), "function" == typeof c.config.chart.events.selection && c.config.chart.events.selection(this.ctx, {
                                    xaxis: {
                                        min: c.config.chart.selection.xaxis.min,
                                        max: c.config.chart.selection.xaxis.max
                                    },
                                    yaxis: {}
                                })
                            }
                        }
                    }, {
                        key: "drawSelectionRect",
                        value: function(c) {
                            var d = c.x,
                                f = c.y,
                                p = c.width,
                                m = c.height,
                                y = c.translateX,
                                w = c.translateY,
                                T = this.w,
                                k = this.zoomRect,
                                O = this.selectionRect;
                            if (this.dragged || null !== T.globals.selection) {
                                var B = {
                                    transform: "translate(" + (void 0 === y ? 0 : y) + ", " + (void 0 === w ? 0 : w) + ")"
                                };
                                T.globals.zoomEnabled && this.dragged && (p < 0 && (p = 1), k.attr({
                                    x: d,
                                    y: f,
                                    width: p,
                                    height: m,
                                    fill: T.config.chart.zoom.zoomedArea.fill.color,
                                    "fill-opacity": T.config.chart.zoom.zoomedArea.fill.opacity,
                                    stroke: T.config.chart.zoom.zoomedArea.stroke.color,
                                    "stroke-width": T.config.chart.zoom.zoomedArea.stroke.width,
                                    "stroke-opacity": T.config.chart.zoom.zoomedArea.stroke.opacity
                                }), J.setAttrs(k.node, B)), T.globals.selectionEnabled && (O.attr({
                                    x: d,
                                    y: f,
                                    width: p > 0 ? p : 0,
                                    height: m > 0 ? m : 0,
                                    fill: T.config.chart.selection.fill.color,
                                    "fill-opacity": T.config.chart.selection.fill.opacity,
                                    stroke: T.config.chart.selection.stroke.color,
                                    "stroke-width": T.config.chart.selection.stroke.width,
                                    "stroke-dasharray": T.config.chart.selection.stroke.dashArray,
                                    "stroke-opacity": T.config.chart.selection.stroke.opacity
                                }), J.setAttrs(O.node, B))
                            }
                        }
                    }, {
                        key: "hideSelectionRect",
                        value: function(c) {
                            c && c.attr({
                                x: 0,
                                y: 0,
                                width: 0,
                                height: 0
                            })
                        }
                    }, {
                        key: "selectionDrawing",
                        value: function(c) {
                            var B, f = c.zoomtype,
                                p = this.w,
                                m = c.context,
                                y = this.gridRect.getBoundingClientRect(),
                                x = m.startX - 1,
                                w = m.startY,
                                S = !1,
                                T = !1,
                                k = m.clientX - y.left - x,
                                O = m.clientY - y.top - w;
                            return Math.abs(k + x) > p.globals.gridWidth ? k = p.globals.gridWidth - x : m.clientX - y.left < 0 && (k = x), x > m.clientX - y.left && (S = !0, k = Math.abs(k)), w > m.clientY - y.top && (T = !0, O = Math.abs(O)), m.drawSelectionRect(B = "x" === f ? {
                                x: S ? x - k : x,
                                y: 0,
                                width: k,
                                height: p.globals.gridHeight
                            } : "y" === f ? {
                                x: 0,
                                y: T ? w - O : w,
                                width: p.globals.gridWidth,
                                height: O
                            } : {
                                x: S ? x - k : x,
                                y: T ? w - O : w,
                                width: k,
                                height: O
                            }), m.selectionDragging("resizing"), B
                        }
                    }, {
                        key: "selectionDragging",
                        value: function(c, d) {
                            var f = this,
                                p = this.w,
                                m = this.xyRatios,
                                y = this.selectionRect,
                                x = 0;
                            "resizing" === c && (x = 30);
                            var w = function(T) {
                                    return parseFloat(y.node.getAttribute(T))
                                },
                                S = {
                                    x: w("x"),
                                    y: w("y"),
                                    width: w("width"),
                                    height: w("height")
                                };
                            p.globals.selection = S, "function" == typeof p.config.chart.events.selection && p.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout(function() {
                                var T, k, O, B, $ = f.gridRect.getBoundingClientRect(),
                                    ne = y.node.getBoundingClientRect();
                                p.globals.isRangeBar ? (T = p.globals.yAxisScale[0].niceMin + (ne.left - $.left) * m.invertedYRatio, k = p.globals.yAxisScale[0].niceMin + (ne.right - $.left) * m.invertedYRatio, O = 0, B = 1) : (T = p.globals.xAxisScale.niceMin + (ne.left - $.left) * m.xRatio, k = p.globals.xAxisScale.niceMin + (ne.right - $.left) * m.xRatio, O = p.globals.yAxisScale[0].niceMin + ($.bottom - ne.bottom) * m.yRatio[0], B = p.globals.yAxisScale[0].niceMax - (ne.top - $.top) * m.yRatio[0]);
                                var re = {
                                    xaxis: {
                                        min: T,
                                        max: k
                                    },
                                    yaxis: {
                                        min: O,
                                        max: B
                                    }
                                };
                                p.config.chart.events.selection(f.ctx, re), p.config.chart.brush.enabled && void 0 !== p.config.chart.events.brushScrolled && p.config.chart.events.brushScrolled(f.ctx, re)
                            }, x))
                        }
                    }, {
                        key: "selectionDrawn",
                        value: function(c) {
                            var f = c.zoomtype,
                                p = this.w,
                                m = c.context,
                                y = this.xyRatios,
                                x = this.ctx.toolbar;
                            if (m.startX > m.endX) {
                                var w = m.startX;
                                m.startX = m.endX, m.endX = w
                            }
                            if (m.startY > m.endY) {
                                var S = m.startY;
                                m.startY = m.endY, m.endY = S
                            }
                            var T = void 0,
                                k = void 0;
                            p.globals.isRangeBar ? (T = p.globals.yAxisScale[0].niceMin + m.startX * y.invertedYRatio, k = p.globals.yAxisScale[0].niceMin + m.endX * y.invertedYRatio) : (T = p.globals.xAxisScale.niceMin + m.startX * y.xRatio, k = p.globals.xAxisScale.niceMin + m.endX * y.xRatio);
                            var O = [],
                                B = [];
                            if (p.config.yaxis.forEach(function(be, Se) {
                                    O.push(p.globals.yAxisScale[Se].niceMax - y.yRatio[Se] * m.startY), B.push(p.globals.yAxisScale[Se].niceMax - y.yRatio[Se] * m.endY)
                                }), m.dragged && (m.dragX > 10 || m.dragY > 10) && T !== k)
                                if (p.globals.zoomEnabled) {
                                    var $ = te.clone(p.globals.initialConfig.yaxis),
                                        ne = te.clone(p.globals.initialConfig.xaxis);
                                    if (p.globals.zoomed = !0, p.config.xaxis.convertedCatToNumeric && (T = Math.floor(T), k = Math.floor(k), T < 1 && (T = 1, k = p.globals.dataPoints), k - T < 2 && (k = T + 1)), "xy" !== f && "x" !== f || (ne = {
                                            min: T,
                                            max: k
                                        }), "xy" !== f && "y" !== f || $.forEach(function(be, Se) {
                                            $[Se].min = B[Se], $[Se].max = O[Se]
                                        }), p.config.chart.zoom.autoScaleYaxis) {
                                        var re = new vn(m.ctx);
                                        $ = re.autoScaleY(m.ctx, $, {
                                            xaxis: ne
                                        })
                                    }
                                    if (x) {
                                        var b = x.getBeforeZoomRange(ne, $);
                                        b && (ne = b.xaxis ? b.xaxis : ne, $ = b.yaxis ? b.yaxis : $)
                                    }
                                    var A = {
                                        xaxis: ne
                                    };
                                    p.config.chart.group || (A.yaxis = $), m.ctx.updateHelpers._updateOptions(A, !1, m.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof p.config.chart.events.zoomed && x.zoomCallback(ne, $)
                                } else if (p.globals.selectionEnabled) {
                                var F, X = null;
                                F = {
                                    min: T,
                                    max: k
                                }, "xy" !== f && "y" !== f || (X = te.clone(p.config.yaxis)).forEach(function(be, Se) {
                                    X[Se].min = B[Se], X[Se].max = O[Se]
                                }), p.globals.selection = m.selection, "function" == typeof p.config.chart.events.selection && p.config.chart.events.selection(m.ctx, {
                                    xaxis: F,
                                    yaxis: X
                                })
                            }
                        }
                    }, {
                        key: "panDragging",
                        value: function(c) {
                            var f = this.w,
                                p = c.context;
                            if (void 0 !== f.globals.lastClientPosition.x) {
                                var m = f.globals.lastClientPosition.x - p.clientX,
                                    y = f.globals.lastClientPosition.y - p.clientY;
                                Math.abs(m) > Math.abs(y) && m > 0 ? this.moveDirection = "left" : Math.abs(m) > Math.abs(y) && m < 0 ? this.moveDirection = "right" : Math.abs(y) > Math.abs(m) && y > 0 ? this.moveDirection = "up" : Math.abs(y) > Math.abs(m) && y < 0 && (this.moveDirection = "down")
                            }
                            f.globals.lastClientPosition = {
                                x: p.clientX,
                                y: p.clientY
                            }, f.config.xaxis.convertedCatToNumeric || p.panScrolled(f.globals.isRangeBar ? f.globals.minY : f.globals.minX, f.globals.isRangeBar ? f.globals.maxY : f.globals.maxX)
                        }
                    }, {
                        key: "delayedPanScrolled",
                        value: function() {
                            var c = this.w,
                                d = c.globals.minX,
                                f = c.globals.maxX,
                                p = (c.globals.maxX - c.globals.minX) / 2;
                            "left" === this.moveDirection ? (d = c.globals.minX + p, f = c.globals.maxX + p) : "right" === this.moveDirection && (d = c.globals.minX - p, f = c.globals.maxX - p), d = Math.floor(d), f = Math.floor(f), this.updateScrolledChart({
                                xaxis: {
                                    min: d,
                                    max: f
                                }
                            }, d, f)
                        }
                    }, {
                        key: "panScrolled",
                        value: function(c, d) {
                            var f = this.w,
                                p = this.xyRatios,
                                m = te.clone(f.globals.initialConfig.yaxis),
                                y = p.xRatio,
                                x = f.globals.minX,
                                w = f.globals.maxX;
                            f.globals.isRangeBar && (y = p.invertedYRatio, x = f.globals.minY, w = f.globals.maxY), "left" === this.moveDirection ? (c = x + f.globals.gridWidth / 15 * y, d = w + f.globals.gridWidth / 15 * y) : "right" === this.moveDirection && (c = x - f.globals.gridWidth / 15 * y, d = w - f.globals.gridWidth / 15 * y), f.globals.isRangeBar || (c < f.globals.initialMinX || d > f.globals.initialMaxX) && (c = x, d = w);
                            var S = {
                                min: c,
                                max: d
                            };
                            f.config.chart.zoom.autoScaleYaxis && (m = new vn(this.ctx).autoScaleY(this.ctx, m, {
                                xaxis: S
                            }));
                            var T = {
                                xaxis: {
                                    min: c,
                                    max: d
                                }
                            };
                            f.config.chart.group || (T.yaxis = m), this.updateScrolledChart(T, c, d)
                        }
                    }, {
                        key: "updateScrolledChart",
                        value: function(c, d, f) {
                            var p = this.w;
                            this.ctx.updateHelpers._updateOptions(c, !1, !1), "function" == typeof p.config.chart.events.scrolled && p.config.chart.events.scrolled(this.ctx, {
                                xaxis: {
                                    min: d,
                                    max: f
                                }
                            })
                        }
                    }]), o
                }(),
                xi = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.ttCtx = a, this.ctx = a.ctx
                    }
                    return z(K, [{
                        key: "getNearestValues",
                        value: function(a) {
                            var o = a.hoverArea,
                                d = a.clientX,
                                f = a.clientY,
                                p = this.w,
                                m = a.elGrid.getBoundingClientRect(),
                                y = m.width,
                                x = m.height,
                                w = y / (p.globals.dataPoints - 1),
                                S = x / p.globals.dataPoints,
                                T = this.hasBars();
                            !p.globals.comboCharts && !T || p.config.xaxis.convertedCatToNumeric || (w = y / p.globals.dataPoints);
                            var k = d - m.left - p.globals.barPadForNumericAxis,
                                O = f - m.top;
                            k < 0 || O < 0 || k > y || O > x ? (o.classList.remove("hovering-zoom"), o.classList.remove("hovering-pan")) : p.globals.zoomEnabled ? (o.classList.remove("hovering-pan"), o.classList.add("hovering-zoom")) : p.globals.panEnabled && (o.classList.remove("hovering-zoom"), o.classList.add("hovering-pan"));
                            var B = Math.round(k / w),
                                $ = Math.floor(O / S);
                            T && !p.config.xaxis.convertedCatToNumeric && (B = Math.ceil(k / w), B -= 1);
                            var ne = null,
                                re = null,
                                b = p.globals.seriesXvalues.map(function(Se) {
                                    return Se.filter(function(Le) {
                                        return te.isNumber(Le)
                                    })
                                }),
                                A = p.globals.seriesYvalues.map(function(Se) {
                                    return Se.filter(function(Le) {
                                        return te.isNumber(Le)
                                    })
                                });
                            if (p.globals.isXNumeric) {
                                var F = this.ttCtx.getElGrid().getBoundingClientRect(),
                                    X = k * (F.width / y);
                                ne = (re = this.closestInMultiArray(X, O * (F.height / x), b, A)).index, B = re.j, null !== ne && (B = (re = this.closestInArray(X, b = p.globals.seriesXvalues[ne])).index)
                            }
                            return p.globals.capturedSeriesIndex = null === ne ? -1 : ne, (!B || B < 1) && (B = 0), p.globals.capturedDataPointIndex = p.globals.isBarHorizontal ? $ : B, {
                                capturedSeries: ne,
                                j: p.globals.isBarHorizontal ? $ : B,
                                hoverX: k,
                                hoverY: O
                            }
                        }
                    }, {
                        key: "closestInMultiArray",
                        value: function(a, o, c, d) {
                            var p = 0,
                                m = null,
                                y = -1;
                            this.w.globals.series.length > 1 ? p = this.getFirstActiveXArray(c) : m = 0;
                            var w = Math.abs(a - c[p][0]);
                            if (c.forEach(function(k) {
                                    k.forEach(function(O, B) {
                                        var $ = Math.abs(a - O);
                                        $ <= w && (w = $, y = B)
                                    })
                                }), -1 !== y) {
                                var T = Math.abs(o - d[p][y]);
                                m = p, d.forEach(function(k, O) {
                                    var B = Math.abs(o - k[y]);
                                    B <= T && (T = B, m = O)
                                })
                            }
                            return {
                                index: m,
                                j: y
                            }
                        }
                    }, {
                        key: "getFirstActiveXArray",
                        value: function(a) {
                            for (var o = this.w, c = 0, d = a.map(function(p, m) {
                                    return p.length > 0 ? m : -1
                                }), f = 0; f < d.length; f++)
                                if (-1 !== d[f] && -1 === o.globals.collapsedSeriesIndices.indexOf(f) && -1 === o.globals.ancillaryCollapsedSeriesIndices.indexOf(f)) {
                                    c = d[f];
                                    break
                                }
                            return c
                        }
                    }, {
                        key: "closestInArray",
                        value: function(a, o) {
                            for (var d = null, f = Math.abs(a - o[0]), p = 0; p < o.length; p++) {
                                var m = Math.abs(a - o[p]);
                                m < f && (f = m, d = p)
                            }
                            return {
                                index: d
                            }
                        }
                    }, {
                        key: "isXoverlap",
                        value: function(a) {
                            var o = [],
                                c = this.w.globals.seriesX.filter(function(f) {
                                    return void 0 !== f[0]
                                });
                            if (c.length > 0)
                                for (var d = 0; d < c.length - 1; d++) void 0 !== c[d][a] && void 0 !== c[d + 1][a] && c[d][a] !== c[d + 1][a] && o.push("unEqual");
                            return 0 === o.length
                        }
                    }, {
                        key: "isInitialSeriesSameLen",
                        value: function() {
                            for (var a = !0, o = this.w.globals.initialSeries, c = 0; c < o.length - 1; c++)
                                if (o[c].data.length !== o[c + 1].data.length) {
                                    a = !1;
                                    break
                                }
                            return a
                        }
                    }, {
                        key: "getBarsHeight",
                        value: function(a) {
                            return We(a).reduce(function(o, c) {
                                return o + c.getBBox().height
                            }, 0)
                        }
                    }, {
                        key: "getElMarkers",
                        value: function(a) {
                            return this.w.globals.dom.baseEl.querySelectorAll("number" == typeof a ? ".apexcharts-series[data\\:realIndex='".concat(a, "'] .apexcharts-series-markers-wrap > *") : ".apexcharts-series-markers-wrap > *")
                        }
                    }, {
                        key: "getAllMarkers",
                        value: function() {
                            var a = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
                            (a = We(a)).sort(function(c, d) {
                                var f = Number(c.getAttribute("data:realIndex")),
                                    p = Number(d.getAttribute("data:realIndex"));
                                return p < f ? 1 : p > f ? -1 : 0
                            });
                            var o = [];
                            return a.forEach(function(c) {
                                o.push(c.querySelector(".apexcharts-marker"))
                            }), o
                        }
                    }, {
                        key: "hasMarkers",
                        value: function(a) {
                            return this.getElMarkers(a).length > 0
                        }
                    }, {
                        key: "getElBars",
                        value: function() {
                            return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series")
                        }
                    }, {
                        key: "hasBars",
                        value: function() {
                            return this.getElBars().length > 0
                        }
                    }, {
                        key: "getHoverMarkerSize",
                        value: function(a) {
                            var o = this.w,
                                c = o.config.markers.hover.size;
                            return void 0 === c && (c = o.globals.markers.size[a] + o.config.markers.hover.sizeOffset), c
                        }
                    }, {
                        key: "toggleAllTooltipSeriesGroups",
                        value: function(a) {
                            var o = this.w,
                                c = this.ttCtx;
                            0 === c.allTooltipSeriesGroups.length && (c.allTooltipSeriesGroups = o.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
                            for (var d = c.allTooltipSeriesGroups, f = 0; f < d.length; f++) "enable" === a ? (d[f].classList.add("apexcharts-active"), d[f].style.display = o.config.tooltip.items.display) : (d[f].classList.remove("apexcharts-active"), d[f].style.display = "none")
                        }
                    }]), K
                }(),
                pi = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.ctx = a.ctx, this.ttCtx = a, this.tooltipUtil = new xi(a)
                    }
                    return z(K, [{
                        key: "drawSeriesTexts",
                        value: function(a) {
                            var o = a.shared,
                                c = void 0 === o || o,
                                d = a.ttItems,
                                f = a.i,
                                p = void 0 === f ? 0 : f,
                                m = a.j,
                                y = void 0 === m ? null : m,
                                S = a.e,
                                T = this.w;
                            void 0 !== T.config.tooltip.custom ? this.handleCustomTooltip({
                                i: p,
                                j: y,
                                y1: a.y1,
                                y2: a.y2,
                                w: T
                            }) : this.toggleActiveInactiveSeries(c);
                            var k = this.getValuesToPrint({
                                i: p,
                                j: y
                            });
                            this.printLabels({
                                i: p,
                                j: y,
                                values: k,
                                ttItems: d,
                                shared: c,
                                e: S
                            });
                            var O = this.ttCtx.getElTooltip();
                            this.ttCtx.tooltipRect.ttWidth = O.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = O.getBoundingClientRect().height
                        }
                    }, {
                        key: "printLabels",
                        value: function(a) {
                            var o, c = this,
                                d = a.i,
                                f = a.j,
                                p = a.values,
                                m = a.ttItems,
                                y = a.shared,
                                x = a.e,
                                w = this.w,
                                S = [],
                                T = function(F) {
                                    return w.globals.seriesGoals[F] && w.globals.seriesGoals[F][f] && Array.isArray(w.globals.seriesGoals[F][f])
                                },
                                k = p.xVal,
                                O = p.zVal,
                                B = p.xAxisTTVal,
                                $ = "",
                                ne = w.globals.colors[d];
                            null !== f && w.config.plotOptions.bar.distributed && (ne = w.globals.colors[f]);
                            for (var re = function(F, X) {
                                    var be = c.getFormatters(d);
                                    $ = c.getSeriesName({
                                        fn: be.yLbTitleFormatter,
                                        index: d,
                                        seriesIndex: d,
                                        j: f
                                    }), "treemap" === w.config.chart.type && ($ = be.yLbTitleFormatter(String(w.config.series[d].data[f].x), {
                                        series: w.globals.series,
                                        seriesIndex: d,
                                        dataPointIndex: f,
                                        w
                                    }));
                                    var Se = w.config.tooltip.inverseOrder ? X : F;
                                    if (w.globals.axisCharts) {
                                        var Le = function(yt) {
                                            var dt, Tt, wt, ln;
                                            return w.globals.isRangeData ? be.yLbFormatter(null === (dt = w.globals.seriesRangeStart) || void 0 === dt || null === (Tt = dt[yt]) || void 0 === Tt ? void 0 : Tt[f], {
                                                series: w.globals.seriesRangeStart,
                                                seriesIndex: yt,
                                                dataPointIndex: f,
                                                w
                                            }) + " - " + be.yLbFormatter(null === (wt = w.globals.seriesRangeEnd) || void 0 === wt || null === (ln = wt[yt]) || void 0 === ln ? void 0 : ln[f], {
                                                series: w.globals.seriesRangeEnd,
                                                seriesIndex: yt,
                                                dataPointIndex: f,
                                                w
                                            }) : be.yLbFormatter(w.globals.series[yt][f], {
                                                series: w.globals.series,
                                                seriesIndex: yt,
                                                dataPointIndex: f,
                                                w
                                            })
                                        };
                                        if (y) be = c.getFormatters(Se), $ = c.getSeriesName({
                                            fn: be.yLbTitleFormatter,
                                            index: Se,
                                            seriesIndex: d,
                                            j: f
                                        }), ne = w.globals.colors[Se], o = Le(Se), T(Se) && (S = w.globals.seriesGoals[Se][f].map(function(yt) {
                                            return {
                                                attrs: yt,
                                                val: be.yLbFormatter(yt.value, {
                                                    seriesIndex: Se,
                                                    dataPointIndex: f,
                                                    w
                                                })
                                            }
                                        }));
                                        else {
                                            var ze, nt = null == x || null === (ze = x.target) || void 0 === ze ? void 0 : ze.getAttribute("fill");
                                            nt && (ne = -1 !== nt.indexOf("url") ? document.querySelector(nt.substr(4).slice(0, -1)).childNodes[0].getAttribute("stroke") : nt), o = Le(d), T(d) && Array.isArray(w.globals.seriesGoals[d][f]) && (S = w.globals.seriesGoals[d][f].map(function(yt) {
                                                return {
                                                    attrs: yt,
                                                    val: be.yLbFormatter(yt.value, {
                                                        seriesIndex: d,
                                                        dataPointIndex: f,
                                                        w
                                                    })
                                                }
                                            }))
                                        }
                                    }
                                    null === f && (o = be.yLbFormatter(w.globals.series[d], ge(ge({}, w), {}, {
                                        seriesIndex: d,
                                        dataPointIndex: d
                                    }))), c.DOMHandling({
                                        i: d,
                                        t: Se,
                                        j: f,
                                        ttItems: m,
                                        values: {
                                            val: o,
                                            goalVals: S,
                                            xVal: k,
                                            xAxisTTVal: B,
                                            zVal: O
                                        },
                                        seriesName: $,
                                        shared: y,
                                        pColor: ne
                                    })
                                }, b = 0, A = w.globals.series.length - 1; b < w.globals.series.length; b++, A--) re(b, A)
                        }
                    }, {
                        key: "getFormatters",
                        value: function(a) {
                            var o, c = this.w,
                                d = c.globals.yLabelFormatters[a];
                            return void 0 !== c.globals.ttVal ? Array.isArray(c.globals.ttVal) ? (d = c.globals.ttVal[a] && c.globals.ttVal[a].formatter, o = c.globals.ttVal[a] && c.globals.ttVal[a].title && c.globals.ttVal[a].title.formatter) : (d = c.globals.ttVal.formatter, "function" == typeof c.globals.ttVal.title.formatter && (o = c.globals.ttVal.title.formatter)) : o = c.config.tooltip.y.title.formatter, "function" != typeof d && (d = c.globals.yLabelFormatters[0] ? c.globals.yLabelFormatters[0] : function(f) {
                                return f
                            }), "function" != typeof o && (o = function(f) {
                                return f
                            }), {
                                yLbFormatter: d,
                                yLbTitleFormatter: o
                            }
                        }
                    }, {
                        key: "getSeriesName",
                        value: function(a) {
                            var d = a.seriesIndex,
                                f = a.j,
                                p = this.w;
                            return (0, a.fn)(String(p.globals.seriesNames[a.index]), {
                                series: p.globals.series,
                                seriesIndex: d,
                                dataPointIndex: f,
                                w: p
                            })
                        }
                    }, {
                        key: "DOMHandling",
                        value: function(a) {
                            var o = a.t,
                                c = a.j,
                                d = a.ttItems,
                                f = a.values,
                                p = a.seriesName,
                                m = a.shared,
                                y = a.pColor,
                                x = this.w,
                                w = this.ttCtx,
                                S = f.val,
                                T = f.goalVals,
                                k = f.xVal,
                                O = f.xAxisTTVal,
                                B = f.zVal,
                                $ = null;
                            $ = d[o].children, x.config.tooltip.fillSeriesColor && (d[o].style.backgroundColor = y, $[0].style.display = "none"), w.showTooltipTitle && (null === w.tooltipTitle && (w.tooltipTitle = x.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), w.tooltipTitle.innerHTML = k), w.isXAxisTooltipEnabled && (w.xaxisTooltipText.innerHTML = "" !== O ? O : k);
                            var ne = d[o].querySelector(".apexcharts-tooltip-text-y-label");
                            ne && (ne.innerHTML = p || "");
                            var re = d[o].querySelector(".apexcharts-tooltip-text-y-value");
                            re && (re.innerHTML = void 0 !== S ? S : ""), $[0] && $[0].classList.contains("apexcharts-tooltip-marker") && (x.config.tooltip.marker.fillColors && Array.isArray(x.config.tooltip.marker.fillColors) && (y = x.config.tooltip.marker.fillColors[o]), $[0].style.backgroundColor = y), x.config.tooltip.marker.show || ($[0].style.display = "none");
                            var b = d[o].querySelector(".apexcharts-tooltip-text-goals-label"),
                                A = d[o].querySelector(".apexcharts-tooltip-text-goals-value");
                            if (T.length && x.globals.seriesGoals[o]) {
                                var F = function() {
                                    var Se = "<div >",
                                        Le = "<div>";
                                    T.forEach(function(ze, nt) {
                                        Se += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(ze.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(ze.attrs.name, "</div>"), Le += "<div>".concat(ze.val, "</div>")
                                    }), b.innerHTML = Se + "</div>", A.innerHTML = Le + "</div>"
                                };
                                m ? x.globals.seriesGoals[o][c] && Array.isArray(x.globals.seriesGoals[o][c]) ? F() : (b.innerHTML = "", A.innerHTML = "") : F()
                            } else b.innerHTML = "", A.innerHTML = "";
                            if (null !== B && (d[o].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = x.config.tooltip.z.title, d[o].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = void 0 !== B ? B : ""), m && $[0]) {
                                if (x.config.tooltip.hideEmptySeries) {
                                    var X = d[o].querySelector(".apexcharts-tooltip-marker"),
                                        be = d[o].querySelector(".apexcharts-tooltip-text");
                                    0 == parseFloat(S) ? (X.style.display = "none", be.style.display = "none") : (X.style.display = "block", be.style.display = "block")
                                }
                                $[0].parentNode.style.display = null == S || x.globals.ancillaryCollapsedSeriesIndices.indexOf(o) > -1 || x.globals.collapsedSeriesIndices.indexOf(o) > -1 ? "none" : x.config.tooltip.items.display
                            }
                        }
                    }, {
                        key: "toggleActiveInactiveSeries",
                        value: function(a) {
                            var o = this.w;
                            if (a) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
                            else {
                                this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                                var c = o.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
                                c && (c.classList.add("apexcharts-active"), c.style.display = o.config.tooltip.items.display)
                            }
                        }
                    }, {
                        key: "getValuesToPrint",
                        value: function(a) {
                            var o = a.i,
                                c = a.j,
                                d = this.w,
                                f = this.ctx.series.filteredSeriesX(),
                                p = "",
                                m = "",
                                y = null,
                                x = null,
                                w = {
                                    series: d.globals.series,
                                    seriesIndex: o,
                                    dataPointIndex: c,
                                    w: d
                                },
                                S = d.globals.ttZFormatter;
                            null === c ? x = d.globals.series[o] : d.globals.isXNumeric && "treemap" !== d.config.chart.type ? (p = f[o][c], 0 === f[o].length && (p = f[this.tooltipUtil.getFirstActiveXArray(f)][c])) : p = void 0 !== d.globals.labels[c] ? d.globals.labels[c] : "";
                            var T = p;
                            return p = d.globals.isXNumeric && "datetime" === d.config.xaxis.type ? new ct(this.ctx).xLabelFormat(d.globals.ttKeyFormatter, T, T, {
                                i: void 0,
                                dateFormatter: new Ge(this.ctx).formatDate,
                                w: this.w
                            }) : d.globals.isBarHorizontal ? d.globals.yLabelFormatters[0](T, w) : d.globals.xLabelFormatter(T, w), void 0 !== d.config.tooltip.x.formatter && (p = d.globals.ttKeyFormatter(T, w)), d.globals.seriesZ.length > 0 && d.globals.seriesZ[o].length > 0 && (y = S(d.globals.seriesZ[o][c], d)), m = "function" == typeof d.config.xaxis.tooltip.formatter ? d.globals.xaxisTooltipFormatter(T, w) : p, {
                                val: Array.isArray(x) ? x.join(" ") : x,
                                xVal: Array.isArray(p) ? p.join(" ") : p,
                                xAxisTTVal: Array.isArray(m) ? m.join(" ") : m,
                                zVal: y
                            }
                        }
                    }, {
                        key: "handleCustomTooltip",
                        value: function(a) {
                            var o = a.i,
                                c = a.j,
                                d = a.y1,
                                f = a.y2,
                                p = a.w,
                                m = this.ttCtx.getElTooltip(),
                                y = p.config.tooltip.custom;
                            Array.isArray(y) && y[o] && (y = y[o]), m.innerHTML = y({
                                ctx: this.ctx,
                                series: p.globals.series,
                                seriesIndex: o,
                                dataPointIndex: c,
                                y1: d,
                                y2: f,
                                w: p
                            })
                        }
                    }]), K
                }(),
                Li = function() {
                    function K(a) {
                        U(this, K), this.ttCtx = a, this.ctx = a.ctx, this.w = a.w
                    }
                    return z(K, [{
                        key: "moveXCrosshairs",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                                c = this.ttCtx,
                                d = this.w,
                                f = c.getElXCrosshairs(),
                                p = a - c.xcrosshairsWidth / 2,
                                m = d.globals.labels.slice().length;
                            if (null !== o && (p = d.globals.gridWidth / m * o), null === f || d.globals.isBarHorizontal || (f.setAttribute("x", p), f.setAttribute("x1", p), f.setAttribute("x2", p), f.setAttribute("y2", d.globals.gridHeight), f.classList.add("apexcharts-active")), p < 0 && (p = 0), p > d.globals.gridWidth && (p = d.globals.gridWidth), c.isXAxisTooltipEnabled) {
                                var y = p;
                                "tickWidth" !== d.config.xaxis.crosshairs.width && "barWidth" !== d.config.xaxis.crosshairs.width || (y = p + c.xcrosshairsWidth / 2), this.moveXAxisTooltip(y)
                            }
                        }
                    }, {
                        key: "moveYCrosshairs",
                        value: function(a) {
                            var o = this.ttCtx;
                            null !== o.ycrosshairs && J.setAttrs(o.ycrosshairs, {
                                y1: a,
                                y2: a
                            }), null !== o.ycrosshairsHidden && J.setAttrs(o.ycrosshairsHidden, {
                                y1: a,
                                y2: a
                            })
                        }
                    }, {
                        key: "moveXAxisTooltip",
                        value: function(a) {
                            var o = this.w,
                                c = this.ttCtx;
                            if (null !== c.xaxisTooltip && 0 !== c.xcrosshairsWidth) {
                                c.xaxisTooltip.classList.add("apexcharts-active");
                                var f, d = c.xaxisOffY + o.config.xaxis.tooltip.offsetY + o.globals.translateY + 1 + o.config.xaxis.offsetY;
                                a -= c.xaxisTooltip.getBoundingClientRect().width / 2, isNaN(a) || (a += o.globals.translateX, f = new J(this.ctx).getTextRects(c.xaxisTooltipText.innerHTML), c.xaxisTooltipText.style.minWidth = f.width + "px", c.xaxisTooltip.style.left = a + "px", c.xaxisTooltip.style.top = d + "px")
                            }
                        }
                    }, {
                        key: "moveYAxisTooltip",
                        value: function(a) {
                            var o = this.w,
                                c = this.ttCtx;
                            null === c.yaxisTTEls && (c.yaxisTTEls = o.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                            var d = parseInt(c.ycrosshairsHidden.getAttribute("y1"), 10),
                                f = o.globals.translateY + d,
                                p = c.yaxisTTEls[a].getBoundingClientRect().height,
                                m = o.globals.translateYAxisX[a] - 2;
                            o.config.yaxis[a].opposite && (m -= 26), f -= p / 2, -1 === o.globals.ignoreYAxisIndexes.indexOf(a) ? (c.yaxisTTEls[a].classList.add("apexcharts-active"), c.yaxisTTEls[a].style.top = f + "px", c.yaxisTTEls[a].style.left = m + o.config.yaxis[a].tooltip.offsetX + "px") : c.yaxisTTEls[a].classList.remove("apexcharts-active")
                        }
                    }, {
                        key: "moveTooltip",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                                d = this.w,
                                f = this.ttCtx,
                                p = f.getElTooltip(),
                                m = f.tooltipRect,
                                y = null !== c ? parseFloat(c) : 1,
                                x = parseFloat(a) + y + 5,
                                w = parseFloat(o) + y / 2;
                            if (x > d.globals.gridWidth / 2 && (x = x - m.ttWidth - y - 10), x > d.globals.gridWidth - m.ttWidth - 10 && (x = d.globals.gridWidth - m.ttWidth), x < -20 && (x = -20), d.config.tooltip.followCursor) {
                                var S = f.getElGrid().getBoundingClientRect();
                                (x = f.e.clientX - S.left) > d.globals.gridWidth / 2 && (x -= f.tooltipRect.ttWidth), (w = f.e.clientY + d.globals.translateY - S.top) > d.globals.gridHeight / 2 && (w -= f.tooltipRect.ttHeight)
                            } else d.globals.isBarHorizontal || m.ttHeight / 2 + w > d.globals.gridHeight && (w = d.globals.gridHeight - m.ttHeight + d.globals.translateY);
                            isNaN(x) || (p.style.left = (x += d.globals.translateX) + "px", p.style.top = w + "px")
                        }
                    }, {
                        key: "moveMarkers",
                        value: function(a, o) {
                            var c = this.w,
                                d = this.ttCtx;
                            if (c.globals.markers.size[a] > 0)
                                for (var f = c.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(a, "'] .apexcharts-marker")), p = 0; p < f.length; p++) parseInt(f[p].getAttribute("rel"), 10) === o && (d.marker.resetPointsSize(), d.marker.enlargeCurrentPoint(o, f[p]));
                            else d.marker.resetPointsSize(), this.moveDynamicPointOnHover(o, a)
                        }
                    }, {
                        key: "moveDynamicPointOnHover",
                        value: function(a, o) {
                            var c, d, f = this.w,
                                p = this.ttCtx,
                                m = f.globals.pointsArray,
                                y = p.tooltipUtil.getHoverMarkerSize(o),
                                x = f.config.series[o].type;
                            if (!x || "column" !== x && "candlestick" !== x && "boxPlot" !== x) {
                                c = m[o][a][0], d = m[o][a][1] ? m[o][a][1] : 0;
                                var w = f.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(o, "'] .apexcharts-series-markers circle"));
                                w && d < f.globals.gridHeight && d > 0 && (w.setAttribute("r", y), w.setAttribute("cx", c), w.setAttribute("cy", d)), this.moveXCrosshairs(c), p.fixedTooltip || this.moveTooltip(c, d, y)
                            }
                        }
                    }, {
                        key: "moveDynamicPointsOnHover",
                        value: function(a) {
                            var o, c = this.ttCtx,
                                d = c.w,
                                f = 0,
                                p = 0,
                                m = d.globals.pointsArray;
                            o = new Ct(this.ctx).getActiveConfigSeriesIndex("asc", ["line", "area", "scatter", "bubble"]);
                            var y = c.tooltipUtil.getHoverMarkerSize(o);
                            m[o] && (f = m[o][a][0], p = m[o][a][1]);
                            var x = c.tooltipUtil.getAllMarkers();
                            if (null !== x)
                                for (var w = 0; w < d.globals.series.length; w++) {
                                    var S = m[w];
                                    if (d.globals.comboCharts && void 0 === S && x.splice(w, 0, null), S && S.length) {
                                        var T = m[w][a][1];
                                        x[w].setAttribute("cx", f), "rangeArea" !== d.config.chart.type || d.globals.comboCharts || (T -= Math.abs(T - m[w][a + d.globals.series[w].length][1]) / 2), null !== T && !isNaN(T) && T < d.globals.gridHeight + y && T + y > 0 ? (x[w] && x[w].setAttribute("r", y), x[w] && x[w].setAttribute("cy", T)) : x[w] && x[w].setAttribute("r", 0)
                                    }
                                }
                            this.moveXCrosshairs(f), c.fixedTooltip || this.moveTooltip(f, p || d.globals.gridHeight, y)
                        }
                    }, {
                        key: "moveStickyTooltipOverBars",
                        value: function(a, o) {
                            var c = this.w,
                                d = this.ttCtx,
                                f = c.globals.columnSeries ? c.globals.columnSeries.length : c.globals.series.length,
                                p = f >= 2 && f % 2 == 0 ? Math.floor(f / 2) : Math.floor(f / 2) + 1;
                            c.globals.isBarHorizontal && (p = new Ct(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
                            var m = c.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(p, "'] path[j='").concat(a, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(p, "'] path[j='").concat(a, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(p, "'] path[j='").concat(a, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(p, "'] path[j='").concat(a, "']"));
                            m || "number" != typeof o || (m = c.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[data\\:realIndex='".concat(o, "'] path[j='").concat(a, "'],\n        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='").concat(o, "'] path[j='").concat(a, "'],\n        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='").concat(o, "'] path[j='").concat(a, "'],\n        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='").concat(o, "'] path[j='").concat(a, "']")));
                            var y = m ? parseFloat(m.getAttribute("cx")) : 0,
                                x = m ? parseFloat(m.getAttribute("cy")) : 0,
                                w = m ? parseFloat(m.getAttribute("barWidth")) : 0,
                                S = d.getElGrid().getBoundingClientRect(),
                                T = m && (m.classList.contains("apexcharts-candlestick-area") || m.classList.contains("apexcharts-boxPlot-area"));
                            c.globals.isXNumeric ? (m && !T && (y -= f % 2 != 0 ? w / 2 : 0), m && T && c.globals.comboCharts && (y -= w / 2)) : c.globals.isBarHorizontal || (y = d.xAxisTicksPositions[a - 1] + d.dataPointsDividedWidth / 2, isNaN(y) && (y = d.xAxisTicksPositions[a] - d.dataPointsDividedWidth / 2)), c.globals.isBarHorizontal ? x -= d.tooltipRect.ttHeight : c.config.tooltip.followCursor ? x = d.e.clientY - S.top - d.tooltipRect.ttHeight / 2 : x + d.tooltipRect.ttHeight + 15 > c.globals.gridHeight && (x = c.globals.gridHeight), c.globals.isBarHorizontal || this.moveXCrosshairs(y), d.fixedTooltip || this.moveTooltip(y, x || c.globals.gridHeight)
                        }
                    }]), K
                }(),
                Fi = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.ttCtx = a, this.ctx = a.ctx, this.tooltipPosition = new Li(a)
                    }
                    return z(K, [{
                        key: "drawDynamicPoints",
                        value: function() {
                            var a = this.w,
                                o = new J(this.ctx),
                                c = new St(this.ctx),
                                d = a.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                            d = We(d), a.config.chart.stacked && d.sort(function(S, T) {
                                return parseFloat(S.getAttribute("data:realIndex")) - parseFloat(T.getAttribute("data:realIndex"))
                            });
                            for (var f = 0; f < d.length; f++) {
                                var p = d[f].querySelector(".apexcharts-series-markers-wrap");
                                if (null !== p) {
                                    var m = void 0,
                                        y = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
                                    "line" !== a.config.chart.type && "area" !== a.config.chart.type || a.globals.comboCharts || a.config.tooltip.intersect || (y += " no-pointer-events");
                                    var x = c.getMarkerConfig({
                                        cssClass: y,
                                        seriesIndex: Number(p.getAttribute("data:realIndex"))
                                    });
                                    (m = o.drawMarker(0, 0, x)).node.setAttribute("default-marker-size", 0);
                                    var w = document.createElementNS(a.globals.SVGNS, "g");
                                    w.classList.add("apexcharts-series-markers"), w.appendChild(m.node), p.appendChild(w)
                                }
                            }
                        }
                    }, {
                        key: "enlargeCurrentPoint",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                                d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                                f = this.w;
                            "bubble" !== f.config.chart.type && this.newPointSize(a, o);
                            var p = o.getAttribute("cx"),
                                m = o.getAttribute("cy");
                            if (null !== c && null !== d && (p = c, m = d), this.tooltipPosition.moveXCrosshairs(p), !this.fixedTooltip) {
                                if ("radar" === f.config.chart.type) {
                                    var y = this.ttCtx.getElGrid().getBoundingClientRect();
                                    p = this.ttCtx.e.clientX - y.left
                                }
                                this.tooltipPosition.moveTooltip(p, m, f.config.markers.hover.size)
                            }
                        }
                    }, {
                        key: "enlargePoints",
                        value: function(a) {
                            for (var o = this.w, c = this, d = this.ttCtx, f = a, p = o.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), m = o.config.markers.hover.size, y = 0; y < p.length; y++) {
                                var x = p[y].getAttribute("rel"),
                                    w = p[y].getAttribute("index");
                                if (void 0 === m && (m = o.globals.markers.size[w] + o.config.markers.hover.sizeOffset), f === parseInt(x, 10)) {
                                    c.newPointSize(f, p[y]);
                                    var S = p[y].getAttribute("cx"),
                                        T = p[y].getAttribute("cy");
                                    c.tooltipPosition.moveXCrosshairs(S), d.fixedTooltip || c.tooltipPosition.moveTooltip(S, T, m)
                                } else c.oldPointSize(p[y])
                            }
                        }
                    }, {
                        key: "newPointSize",
                        value: function(a, o) {
                            var c = this.w,
                                d = c.config.markers.hover.size,
                                f = 0 === a ? o.parentNode.firstChild : o.parentNode.lastChild;
                            if ("0" !== f.getAttribute("default-marker-size")) {
                                var p = parseInt(f.getAttribute("index"), 10);
                                void 0 === d && (d = c.globals.markers.size[p] + c.config.markers.hover.sizeOffset), d < 0 && (d = 0), f.setAttribute("r", d)
                            }
                        }
                    }, {
                        key: "oldPointSize",
                        value: function(a) {
                            var o = parseFloat(a.getAttribute("default-marker-size"));
                            a.setAttribute("r", o)
                        }
                    }, {
                        key: "resetPointsSize",
                        value: function() {
                            for (var a = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), o = 0; o < a.length; o++) {
                                var c = parseFloat(a[o].getAttribute("default-marker-size"));
                                te.isNumber(c) && c >= 0 ? a[o].setAttribute("r", c) : a[o].setAttribute("r", 0)
                            }
                        }
                    }]), K
                }(),
                Si = function() {
                    function K(a) {
                        U(this, K), this.w = a.w;
                        var o = this.w;
                        this.ttCtx = a, this.isVerticalGroupedRangeBar = !o.globals.isBarHorizontal && "rangeBar" === o.config.chart.type && o.config.plotOptions.bar.rangeBarGroupRows
                    }
                    return z(K, [{
                        key: "getAttr",
                        value: function(a, o) {
                            return parseFloat(a.target.getAttribute(o))
                        }
                    }, {
                        key: "handleHeatTreeTooltip",
                        value: function(a) {
                            var o = a.e,
                                c = a.opt,
                                d = a.x,
                                f = a.y,
                                m = this.ttCtx,
                                y = this.w;
                            if (o.target.classList.contains("apexcharts-".concat(a.type, "-rect"))) {
                                var x = this.getAttr(o, "i"),
                                    w = this.getAttr(o, "j"),
                                    S = this.getAttr(o, "cx"),
                                    T = this.getAttr(o, "cy"),
                                    k = this.getAttr(o, "width"),
                                    O = this.getAttr(o, "height");
                                if (m.tooltipLabels.drawSeriesTexts({
                                        ttItems: c.ttItems,
                                        i: x,
                                        j: w,
                                        shared: !1,
                                        e: o
                                    }), y.globals.capturedSeriesIndex = x, y.globals.capturedDataPointIndex = w, d = S + m.tooltipRect.ttWidth / 2 + k, f = T + m.tooltipRect.ttHeight / 2 - O / 2, m.tooltipPosition.moveXCrosshairs(S + k / 2), d > y.globals.gridWidth / 2 && (d = S - m.tooltipRect.ttWidth / 2 + k), m.w.config.tooltip.followCursor) {
                                    var B = y.globals.dom.elWrap.getBoundingClientRect();
                                    d = y.globals.clientX - B.left - (d > y.globals.gridWidth / 2 ? m.tooltipRect.ttWidth : 0), f = y.globals.clientY - B.top - (f > y.globals.gridHeight / 2 ? m.tooltipRect.ttHeight : 0)
                                }
                            }
                            return {
                                x: d,
                                y: f
                            }
                        }
                    }, {
                        key: "handleMarkerTooltip",
                        value: function(a) {
                            var o, c, d = a.e,
                                f = a.opt,
                                p = a.x,
                                m = a.y,
                                y = this.w,
                                x = this.ttCtx;
                            if (d.target.classList.contains("apexcharts-marker")) {
                                var w = parseInt(f.paths.getAttribute("cx"), 10),
                                    S = parseInt(f.paths.getAttribute("cy"), 10),
                                    T = parseFloat(f.paths.getAttribute("val"));
                                if (c = parseInt(f.paths.getAttribute("rel"), 10), o = parseInt(f.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, x.intersect) {
                                    var k = te.findAncestor(f.paths, "apexcharts-series");
                                    k && (o = parseInt(k.getAttribute("data:realIndex"), 10))
                                }
                                if (x.tooltipLabels.drawSeriesTexts({
                                        ttItems: f.ttItems,
                                        i: o,
                                        j: c,
                                        shared: !x.showOnIntersect && y.config.tooltip.shared,
                                        e: d
                                    }), "mouseup" === d.type && x.markerClick(d, o, c), y.globals.capturedSeriesIndex = o, y.globals.capturedDataPointIndex = c, p = w, m = S + y.globals.translateY - 1.4 * x.tooltipRect.ttHeight, x.w.config.tooltip.followCursor) {
                                    var O = x.getElGrid().getBoundingClientRect();
                                    m = x.e.clientY + y.globals.translateY - O.top
                                }
                                T < 0 && (m = S), x.marker.enlargeCurrentPoint(c, f.paths, p, m)
                            }
                            return {
                                x: p,
                                y: m
                            }
                        }
                    }, {
                        key: "handleBarTooltip",
                        value: function(a) {
                            var o, c, d = a.e,
                                f = a.opt,
                                p = this.w,
                                m = this.ttCtx,
                                y = m.getElTooltip(),
                                x = 0,
                                w = 0,
                                S = 0,
                                T = this.getBarTooltipXY({
                                    e: d,
                                    opt: f
                                }),
                                k = T.barHeight,
                                O = T.j;
                            p.globals.capturedSeriesIndex = o = T.i, p.globals.capturedDataPointIndex = O, p.globals.isBarHorizontal && m.tooltipUtil.hasBars() || !p.config.tooltip.shared ? (w = T.x, S = T.y, c = Array.isArray(p.config.stroke.width) ? p.config.stroke.width[o] : p.config.stroke.width, x = w) : p.globals.comboCharts || p.config.tooltip.shared || (x /= 2), isNaN(S) && (S = p.globals.svgHeight - m.tooltipRect.ttHeight);
                            var B = parseInt(f.paths.parentNode.getAttribute("data:realIndex"), 10),
                                $ = p.globals.isMultipleYAxis ? p.config.yaxis[B] && p.config.yaxis[B].reversed : p.config.yaxis[0].reversed;
                            if (w + m.tooltipRect.ttWidth > p.globals.gridWidth && !$ ? w -= m.tooltipRect.ttWidth : w < 0 && (w = 0), m.w.config.tooltip.followCursor) {
                                var ne = m.getElGrid().getBoundingClientRect();
                                S = m.e.clientY - ne.top
                            }
                            null === m.tooltip && (m.tooltip = p.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), p.config.tooltip.shared || m.tooltipPosition.moveXCrosshairs(p.globals.comboBarCount > 0 ? x + c / 2 : x), !m.fixedTooltip && (!p.config.tooltip.shared || p.globals.isBarHorizontal && m.tooltipUtil.hasBars()) && ($ && (w -= m.tooltipRect.ttWidth) < 0 && (w = 0), !$ || p.globals.isBarHorizontal && m.tooltipUtil.hasBars() || (S = S + k - 2 * (p.globals.series[o][O] < 0 ? k : 0)), S = S + p.globals.translateY - m.tooltipRect.ttHeight / 2, y.style.left = w + p.globals.translateX + "px", y.style.top = S + "px")
                        }
                    }, {
                        key: "getBarTooltipXY",
                        value: function(a) {
                            var o = this,
                                c = a.e,
                                d = a.opt,
                                f = this.w,
                                p = null,
                                m = this.ttCtx,
                                y = 0,
                                x = 0,
                                w = 0,
                                S = 0,
                                T = 0,
                                k = c.target.classList;
                            if (k.contains("apexcharts-bar-area") || k.contains("apexcharts-candlestick-area") || k.contains("apexcharts-boxPlot-area") || k.contains("apexcharts-rangebar-area")) {
                                var O = c.target,
                                    B = O.getBoundingClientRect(),
                                    $ = d.elGrid.getBoundingClientRect(),
                                    ne = B.height;
                                T = B.height;
                                var re = B.width,
                                    b = parseInt(O.getAttribute("cx"), 10),
                                    A = parseInt(O.getAttribute("cy"), 10);
                                S = parseFloat(O.getAttribute("barWidth"));
                                var F = "touchmove" === c.type ? c.touches[0].clientX : c.clientX;
                                p = parseInt(O.getAttribute("j"), 10), y = parseInt(O.parentNode.getAttribute("rel"), 10) - 1;
                                var X = O.getAttribute("data-range-y1"),
                                    be = O.getAttribute("data-range-y2");
                                f.globals.comboCharts && (y = parseInt(O.parentNode.getAttribute("data:realIndex"), 10));
                                var Se = function(ze) {
                                        return f.globals.isXNumeric ? b - re / 2 : o.isVerticalGroupedRangeBar ? b + re / 2 : b - m.dataPointsDividedWidth + re / 2
                                    },
                                    Le = function() {
                                        return A - m.dataPointsDividedHeight + ne / 2 - m.tooltipRect.ttHeight / 2
                                    };
                                m.tooltipLabels.drawSeriesTexts({
                                    ttItems: d.ttItems,
                                    i: y,
                                    j: p,
                                    y1: X ? parseInt(X, 10) : null,
                                    y2: be ? parseInt(be, 10) : null,
                                    shared: !m.showOnIntersect && f.config.tooltip.shared,
                                    e: c
                                }), f.config.tooltip.followCursor ? f.globals.isBarHorizontal ? (x = F - $.left + 15, w = Le()) : (x = Se(), w = c.clientY - $.top - m.tooltipRect.ttHeight / 2 - 15) : f.globals.isBarHorizontal ? ((x = b) < m.xyRatios.baseLineInvertedY && (x = b - m.tooltipRect.ttWidth), w = Le()) : (x = Se(), w = A)
                            }
                            return {
                                x,
                                y: w,
                                barHeight: T,
                                barWidth: S,
                                i: y,
                                j: p
                            }
                        }
                    }]), K
                }(),
                Gi = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.ttCtx = a
                    }
                    return z(K, [{
                        key: "drawXaxisTooltip",
                        value: function() {
                            var a = this.w,
                                o = this.ttCtx,
                                c = "bottom" === a.config.xaxis.position;
                            o.xaxisOffY = c ? a.globals.gridHeight + 1 : -a.globals.xAxisHeight - a.config.xaxis.axisTicks.height + 3;
                            var d = c ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                                f = a.globals.dom.elWrap;
                            o.isXAxisTooltipEnabled && null === a.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (o.xaxisTooltip = document.createElement("div"), o.xaxisTooltip.setAttribute("class", d + " apexcharts-theme-" + a.config.tooltip.theme), f.appendChild(o.xaxisTooltip), o.xaxisTooltipText = document.createElement("div"), o.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), o.xaxisTooltipText.style.fontFamily = a.config.xaxis.tooltip.style.fontFamily || a.config.chart.fontFamily, o.xaxisTooltipText.style.fontSize = a.config.xaxis.tooltip.style.fontSize, o.xaxisTooltip.appendChild(o.xaxisTooltipText))
                        }
                    }, {
                        key: "drawYaxisTooltip",
                        value: function() {
                            for (var a = this.w, o = this.ttCtx, c = function(f) {
                                    var p = a.config.yaxis[f].opposite || a.config.yaxis[f].crosshairs.opposite;
                                    o.yaxisOffX = p ? a.globals.gridWidth + 1 : 1;
                                    var m = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(f, p ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
                                    a.globals.yAxisSameScaleIndices.map(function(x, w) {
                                        x.map(function(S, T) {
                                            T === f && (m += a.config.yaxis[T].show ? " " : " apexcharts-yaxistooltip-hidden")
                                        })
                                    });
                                    var y = a.globals.dom.elWrap;
                                    null === a.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(f)) && (o.yaxisTooltip = document.createElement("div"), o.yaxisTooltip.setAttribute("class", m + " apexcharts-theme-" + a.config.tooltip.theme), y.appendChild(o.yaxisTooltip), 0 === f && (o.yaxisTooltipText = []), o.yaxisTooltipText[f] = document.createElement("div"), o.yaxisTooltipText[f].classList.add("apexcharts-yaxistooltip-text"), o.yaxisTooltip.appendChild(o.yaxisTooltipText[f]))
                                }, d = 0; d < a.config.yaxis.length; d++) c(d)
                        }
                    }, {
                        key: "setXCrosshairWidth",
                        value: function() {
                            var a = this.w,
                                o = this.ttCtx,
                                c = o.getElXCrosshairs();
                            if (o.xcrosshairsWidth = parseInt(a.config.xaxis.crosshairs.width, 10), a.globals.comboCharts) {
                                var d = a.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                                if (null !== d && "barWidth" === a.config.xaxis.crosshairs.width) {
                                    var f = parseFloat(d.getAttribute("barWidth"));
                                    o.xcrosshairsWidth = f
                                } else "tickWidth" === a.config.xaxis.crosshairs.width && (o.xcrosshairsWidth = a.globals.gridWidth / a.globals.labels.length)
                            } else if ("tickWidth" === a.config.xaxis.crosshairs.width) o.xcrosshairsWidth = a.globals.gridWidth / a.globals.labels.length;
                            else if ("barWidth" === a.config.xaxis.crosshairs.width) {
                                var y = a.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
                                if (null !== y) {
                                    var x = parseFloat(y.getAttribute("barWidth"));
                                    o.xcrosshairsWidth = x
                                } else o.xcrosshairsWidth = 1
                            }
                            a.globals.isBarHorizontal && (o.xcrosshairsWidth = 0), null !== c && o.xcrosshairsWidth > 0 && c.setAttribute("width", o.xcrosshairsWidth)
                        }
                    }, {
                        key: "handleYCrosshair",
                        value: function() {
                            var a = this.w,
                                o = this.ttCtx;
                            o.ycrosshairs = a.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), o.ycrosshairsHidden = a.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden")
                        }
                    }, {
                        key: "drawYaxisTooltipText",
                        value: function(a, o, c) {
                            var d = this.ttCtx,
                                f = this.w,
                                p = f.globals.yLabelFormatters[a];
                            if (d.yaxisTooltips[a]) {
                                var m = d.getElGrid().getBoundingClientRect(),
                                    w = f.globals.minYArr[a] + (f.globals.maxYArr[a] - f.globals.minYArr[a] - (o - m.top) * c.yRatio[a]);
                                d.tooltipPosition.moveYCrosshairs(o - m.top), d.yaxisTooltipText[a].innerHTML = p(w), d.tooltipPosition.moveYAxisTooltip(a)
                            }
                        }
                    }]), K
                }(),
                Va = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w;
                        var o = this.w;
                        this.tConfig = o.config.tooltip, this.tooltipUtil = new xi(this), this.tooltipLabels = new pi(this), this.tooltipPosition = new Li(this), this.marker = new Fi(this), this.intersect = new Si(this), this.axesTooltip = new Gi(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !o.globals.isBarHorizontal && this.tConfig.shared, this.lastHoverTime = Date.now()
                    }
                    return z(K, [{
                        key: "getElTooltip",
                        value: function(a) {
                            return a || (a = this), a.w.globals.dom.baseEl ? a.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip") : null
                        }
                    }, {
                        key: "getElXCrosshairs",
                        value: function() {
                            return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs")
                        }
                    }, {
                        key: "getElGrid",
                        value: function() {
                            return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid")
                        }
                    }, {
                        key: "drawTooltip",
                        value: function(a) {
                            var o = this.w;
                            this.xyRatios = a, this.isXAxisTooltipEnabled = o.config.xaxis.tooltip.enabled && o.globals.axisCharts, this.yaxisTooltips = o.config.yaxis.map(function(p, m) {
                                return !!(p.show && p.tooltip.enabled && o.globals.axisCharts)
                            }), this.allTooltipSeriesGroups = [], o.globals.axisCharts || (this.showTooltipTitle = !1);
                            var c = document.createElement("div");
                            if (c.classList.add("apexcharts-tooltip"), o.config.tooltip.cssClass && c.classList.add(o.config.tooltip.cssClass), c.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), o.globals.dom.elWrap.appendChild(c), o.globals.axisCharts) {
                                this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
                                var d = new _n(this.ctx);
                                this.xAxisTicksPositions = d.getXAxisTicksPositions()
                            }
                            if (!o.globals.comboCharts && !this.tConfig.intersect && "rangeBar" !== o.config.chart.type || this.tConfig.shared || (this.showOnIntersect = !0), 0 !== o.config.markers.size && 0 !== o.globals.markers.largestSize || this.marker.drawDynamicPoints(this), o.globals.collapsedSeries.length !== o.globals.series.length) {
                                this.dataPointsDividedHeight = o.globals.gridHeight / o.globals.dataPoints, this.dataPointsDividedWidth = o.globals.gridWidth / o.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || o.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, c.appendChild(this.tooltipTitle));
                                var f = o.globals.series.length;
                                (o.globals.xyCharts || o.globals.comboCharts) && this.tConfig.shared && (f = this.showOnIntersect ? 1 : o.globals.series.length), this.legendLabels = o.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(f), this.addSVGEvents()
                            }
                        }
                    }, {
                        key: "createTTElements",
                        value: function(a) {
                            for (var o = this, c = this.w, d = [], f = this.getElTooltip(), p = function(y) {
                                    var x = document.createElement("div");
                                    x.classList.add("apexcharts-tooltip-series-group"), x.style.order = c.config.tooltip.inverseOrder ? a - y : y + 1, o.tConfig.shared && o.tConfig.enabledOnSeries && Array.isArray(o.tConfig.enabledOnSeries) && o.tConfig.enabledOnSeries.indexOf(y) < 0 && x.classList.add("apexcharts-tooltip-series-group-hidden");
                                    var w = document.createElement("span");
                                    w.classList.add("apexcharts-tooltip-marker"), w.style.backgroundColor = c.globals.colors[y], x.appendChild(w);
                                    var S = document.createElement("div");
                                    S.classList.add("apexcharts-tooltip-text"), S.style.fontFamily = o.tConfig.style.fontFamily || c.config.chart.fontFamily, S.style.fontSize = o.tConfig.style.fontSize, ["y", "goals", "z"].forEach(function(T) {
                                        var k = document.createElement("div");
                                        k.classList.add("apexcharts-tooltip-".concat(T, "-group"));
                                        var O = document.createElement("span");
                                        O.classList.add("apexcharts-tooltip-text-".concat(T, "-label")), k.appendChild(O);
                                        var B = document.createElement("span");
                                        B.classList.add("apexcharts-tooltip-text-".concat(T, "-value")), k.appendChild(B), S.appendChild(k)
                                    }), x.appendChild(S), f.appendChild(x), d.push(x)
                                }, m = 0; m < a; m++) p(m);
                            return d
                        }
                    }, {
                        key: "addSVGEvents",
                        value: function() {
                            var a = this.w,
                                o = a.config.chart.type,
                                c = this.getElTooltip(),
                                d = !("bar" !== o && "candlestick" !== o && "boxPlot" !== o && "rangeBar" !== o),
                                f = "area" === o || "line" === o || "scatter" === o || "bubble" === o || "radar" === o,
                                p = a.globals.dom.Paper.node,
                                m = this.getElGrid();
                            m && (this.seriesBound = m.getBoundingClientRect());
                            var y, x = [],
                                w = [],
                                S = {
                                    hoverArea: p,
                                    elGrid: m,
                                    tooltipEl: c,
                                    tooltipY: x,
                                    tooltipX: w,
                                    ttItems: this.ttItems
                                };
                            if (a.globals.axisCharts && (f ? y = a.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : d ? y = a.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" !== o && "treemap" !== o || (y = a.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), y && y.length))
                                for (var T = 0; T < y.length; T++) x.push(y[T].getAttribute("cy")), w.push(y[T].getAttribute("cx"));
                            if (a.globals.xyCharts && !this.showOnIntersect || a.globals.comboCharts && !this.showOnIntersect || d && this.tooltipUtil.hasBars() && this.tConfig.shared) this.addPathsEventListeners([p], S);
                            else if (d && !a.globals.comboCharts || f && this.showOnIntersect) this.addDatapointEventsListeners(S);
                            else if (!a.globals.axisCharts || "heatmap" === o || "treemap" === o) {
                                var k = a.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                                this.addPathsEventListeners(k, S)
                            }
                            if (this.showOnIntersect) {
                                var O = a.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
                                O.length > 0 && this.addPathsEventListeners(O, S), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(S)
                            }
                        }
                    }, {
                        key: "drawFixedTooltipRect",
                        value: function() {
                            var a = this.w,
                                o = this.getElTooltip(),
                                c = o.getBoundingClientRect(),
                                d = c.width + 10,
                                f = c.height + 10,
                                p = this.tConfig.fixed.offsetX,
                                m = this.tConfig.fixed.offsetY,
                                y = this.tConfig.fixed.position.toLowerCase();
                            return y.indexOf("right") > -1 && (p = p + a.globals.svgWidth - d + 10), y.indexOf("bottom") > -1 && (m = m + a.globals.svgHeight - f - 10), o.style.left = p + "px", o.style.top = m + "px", {
                                x: p,
                                y: m,
                                ttWidth: d,
                                ttHeight: f
                            }
                        }
                    }, {
                        key: "addDatapointEventsListeners",
                        value: function(a) {
                            var o = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
                            this.addPathsEventListeners(o, a)
                        }
                    }, {
                        key: "addPathsEventListeners",
                        value: function(a, o) {
                            for (var c = this, d = function(p) {
                                    var m = {
                                        paths: a[p],
                                        tooltipEl: o.tooltipEl,
                                        tooltipY: o.tooltipY,
                                        tooltipX: o.tooltipX,
                                        elGrid: o.elGrid,
                                        hoverArea: o.hoverArea,
                                        ttItems: o.ttItems
                                    };
                                    ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function(y) {
                                        return a[p].addEventListener(y, c.onSeriesHover.bind(c, m), {
                                            capture: !1,
                                            passive: !0
                                        })
                                    })
                                }, f = 0; f < a.length; f++) d(f)
                        }
                    }, {
                        key: "onSeriesHover",
                        value: function(a, o) {
                            var c = this,
                                d = Date.now() - this.lastHoverTime;
                            d >= 100 ? this.seriesHover(a, o) : (clearTimeout(this.seriesHoverTimeout), this.seriesHoverTimeout = setTimeout(function() {
                                c.seriesHover(a, o)
                            }, 100 - d))
                        }
                    }, {
                        key: "seriesHover",
                        value: function(a, o) {
                            var c = this;
                            this.lastHoverTime = Date.now();
                            var d = [],
                                f = this.w;
                            f.config.chart.group && (d = this.ctx.getGroupedCharts()), f.globals.axisCharts && (f.globals.minX === -1 / 0 && f.globals.maxX === 1 / 0 || 0 === f.globals.dataPoints) || (d.length ? d.forEach(function(p) {
                                var m = c.getElTooltip(p);
                                p.w.globals.minX === c.w.globals.minX && p.w.globals.maxX === c.w.globals.maxX && p.w.globals.tooltip.seriesHoverByContext({
                                    chartCtx: p,
                                    ttCtx: p.w.globals.tooltip,
                                    opt: {
                                        paths: a.paths,
                                        tooltipEl: m,
                                        tooltipY: a.tooltipY,
                                        tooltipX: a.tooltipX,
                                        elGrid: a.elGrid,
                                        hoverArea: a.hoverArea,
                                        ttItems: p.w.globals.tooltip.ttItems
                                    },
                                    e: o
                                })
                            }) : this.seriesHoverByContext({
                                chartCtx: this.ctx,
                                ttCtx: this.w.globals.tooltip,
                                opt: a,
                                e: o
                            }))
                        }
                    }, {
                        key: "seriesHoverByContext",
                        value: function(a) {
                            var o = a.chartCtx,
                                c = a.ttCtx,
                                d = a.opt,
                                f = a.e,
                                p = o.w,
                                m = this.getElTooltip();
                            m && (c.tooltipRect = {
                                x: 0,
                                y: 0,
                                ttWidth: m.getBoundingClientRect().width,
                                ttHeight: m.getBoundingClientRect().height
                            }, c.e = f, c.tooltipUtil.hasBars() && !p.globals.comboCharts && !c.isBarShared && this.tConfig.onDatasetHover.highlightDataSeries && new Ct(o).toggleSeriesOnHover(f, f.target.parentNode), c.fixedTooltip && c.drawFixedTooltipRect(), p.globals.axisCharts ? c.axisChartsTooltips({
                                e: f,
                                opt: d,
                                tooltipRect: c.tooltipRect
                            }) : c.nonAxisChartsTooltips({
                                e: f,
                                opt: d,
                                tooltipRect: c.tooltipRect
                            }))
                        }
                    }, {
                        key: "axisChartsTooltips",
                        value: function(a) {
                            var o, c, d = a.e,
                                f = a.opt,
                                p = this.w,
                                m = f.elGrid.getBoundingClientRect(),
                                y = "touchmove" === d.type ? d.touches[0].clientX : d.clientX,
                                x = "touchmove" === d.type ? d.touches[0].clientY : d.clientY;
                            if (this.clientY = x, this.clientX = y, p.globals.capturedSeriesIndex = -1, p.globals.capturedDataPointIndex = -1, x < m.top || x > m.top + m.height) this.handleMouseOut(f);
                            else {
                                if (Array.isArray(this.tConfig.enabledOnSeries) && !p.config.tooltip.shared) {
                                    var w = parseInt(f.paths.getAttribute("index"), 10);
                                    if (this.tConfig.enabledOnSeries.indexOf(w) < 0) return void this.handleMouseOut(f)
                                }
                                var S = this.getElTooltip(),
                                    T = this.getElXCrosshairs(),
                                    k = p.globals.xyCharts || "bar" === p.config.chart.type && !p.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || p.globals.comboCharts && this.tooltipUtil.hasBars();
                                if ("mousemove" === d.type || "touchmove" === d.type || "mouseup" === d.type) {
                                    if (p.globals.collapsedSeries.length + p.globals.ancillaryCollapsedSeries.length === p.globals.series.length) return;
                                    null !== T && T.classList.add("apexcharts-active");
                                    var O = this.yaxisTooltips.filter(function(ne) {
                                        return !0 === ne
                                    });
                                    if (null !== this.ycrosshairs && O.length && this.ycrosshairs.classList.add("apexcharts-active"), k && !this.showOnIntersect) this.handleStickyTooltip(d, y, x, f);
                                    else if ("heatmap" === p.config.chart.type || "treemap" === p.config.chart.type) {
                                        var B = this.intersect.handleHeatTreeTooltip({
                                            e: d,
                                            opt: f,
                                            x: o,
                                            y: c,
                                            type: p.config.chart.type
                                        });
                                        c = B.y, S.style.left = (o = B.x) + "px", S.style.top = c + "px"
                                    } else this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({
                                        e: d,
                                        opt: f
                                    }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({
                                        e: d,
                                        opt: f,
                                        x: o,
                                        y: c
                                    });
                                    if (this.yaxisTooltips.length)
                                        for (var $ = 0; $ < p.config.yaxis.length; $++) this.axesTooltip.drawYaxisTooltipText($, x, this.xyRatios);
                                    f.tooltipEl.classList.add("apexcharts-active")
                                } else "mouseout" !== d.type && "touchend" !== d.type || this.handleMouseOut(f)
                            }
                        }
                    }, {
                        key: "nonAxisChartsTooltips",
                        value: function(a) {
                            var o = a.e,
                                c = a.opt,
                                d = a.tooltipRect,
                                f = this.w,
                                p = c.paths.getAttribute("rel"),
                                m = this.getElTooltip(),
                                y = f.globals.dom.elWrap.getBoundingClientRect();
                            if ("mousemove" === o.type || "touchmove" === o.type) {
                                m.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({
                                    ttItems: c.ttItems,
                                    i: parseInt(p, 10) - 1,
                                    shared: !1
                                });
                                var w = f.globals.clientY - y.top - d.ttHeight - 10;
                                if (m.style.left = f.globals.clientX - y.left - d.ttWidth / 2 + "px", m.style.top = w + "px", f.config.legend.tooltipHoverFormatter) {
                                    var S = p - 1,
                                        T = (0, f.config.legend.tooltipHoverFormatter)(this.legendLabels[S].getAttribute("data:default-text"), {
                                            seriesIndex: S,
                                            dataPointIndex: S,
                                            w: f
                                        });
                                    this.legendLabels[S].innerHTML = T
                                }
                            } else "mouseout" !== o.type && "touchend" !== o.type || (m.classList.remove("apexcharts-active"), f.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function(k) {
                                var O = k.getAttribute("data:default-text");
                                k.innerHTML = decodeURIComponent(O)
                            }))
                        }
                    }, {
                        key: "handleStickyTooltip",
                        value: function(a, o, c, d) {
                            var f = this.w,
                                p = this.tooltipUtil.getNearestValues({
                                    context: this,
                                    hoverArea: d.hoverArea,
                                    elGrid: d.elGrid,
                                    clientX: o,
                                    clientY: c
                                }),
                                m = p.j,
                                y = p.capturedSeries;
                            f.globals.collapsedSeriesIndices.includes(y) && (y = null);
                            var x = d.elGrid.getBoundingClientRect();
                            if (p.hoverX < 0 || p.hoverX > x.width) this.handleMouseOut(d);
                            else if (null !== y) this.handleStickyCapturedSeries(a, y, d, m);
                            else if (this.tooltipUtil.isXoverlap(m) || f.globals.isBarHorizontal) {
                                var w = f.globals.series.findIndex(function(S, T) {
                                    return !f.globals.collapsedSeriesIndices.includes(T)
                                });
                                this.create(a, this, w, m, d.ttItems)
                            }
                        }
                    }, {
                        key: "handleStickyCapturedSeries",
                        value: function(a, o, c, d) {
                            var f = this.w;
                            if (this.tConfig.shared || null !== f.globals.series[o][d]) {
                                if (void 0 !== f.globals.series[o][d]) this.tConfig.shared && this.tooltipUtil.isXoverlap(d) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(a, this, o, d, c.ttItems) : this.create(a, this, o, d, c.ttItems, !1);
                                else if (this.tooltipUtil.isXoverlap(d)) {
                                    var p = f.globals.series.findIndex(function(m, y) {
                                        return !f.globals.collapsedSeriesIndices.includes(y)
                                    });
                                    this.create(a, this, p, d, c.ttItems)
                                }
                            } else this.handleMouseOut(c)
                        }
                    }, {
                        key: "deactivateHoverFilter",
                        value: function() {
                            for (var a = this.w, o = new J(this.ctx), c = a.globals.dom.Paper.select(".apexcharts-bar-area"), d = 0; d < c.length; d++) o.pathMouseLeave(c[d])
                        }
                    }, {
                        key: "handleMouseOut",
                        value: function(a) {
                            var o = this.w,
                                c = this.getElXCrosshairs();
                            if (a.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), "bubble" !== o.config.chart.type && this.marker.resetPointsSize(), null !== c && c.classList.remove("apexcharts-active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("apexcharts-active"), this.isXAxisTooltipEnabled && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
                                null === this.yaxisTTEls && (this.yaxisTTEls = o.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
                                for (var d = 0; d < this.yaxisTTEls.length; d++) this.yaxisTTEls[d].classList.remove("apexcharts-active")
                            }
                            o.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function(f) {
                                var p = f.getAttribute("data:default-text");
                                f.innerHTML = decodeURIComponent(p)
                            })
                        }
                    }, {
                        key: "markerClick",
                        value: function(a, o, c) {
                            var d = this.w;
                            "function" == typeof d.config.chart.events.markerClick && d.config.chart.events.markerClick(a, this.ctx, {
                                seriesIndex: o,
                                dataPointIndex: c,
                                w: d
                            }), this.ctx.events.fireEvent("markerClick", [a, this.ctx, {
                                seriesIndex: o,
                                dataPointIndex: c,
                                w: d
                            }])
                        }
                    }, {
                        key: "create",
                        value: function(a, o, c, d, f) {
                            var p, m, y, x, w, S, T, k, O, B, $, ne, re, b, A, F, X = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
                                be = this.w,
                                Se = o;
                            "mouseup" === a.type && this.markerClick(a, c, d), null === X && (X = this.tConfig.shared);
                            var Le = this.tooltipUtil.hasMarkers(c),
                                ze = this.tooltipUtil.getElBars();
                            if (be.config.legend.tooltipHoverFormatter) {
                                var nt = be.config.legend.tooltipHoverFormatter,
                                    yt = Array.from(this.legendLabels);
                                yt.forEach(function(qe) {
                                    var gt = qe.getAttribute("data:default-text");
                                    qe.innerHTML = decodeURIComponent(gt)
                                });
                                for (var dt = 0; dt < yt.length; dt++) {
                                    var Tt = yt[dt],
                                        wt = parseInt(Tt.getAttribute("i"), 10),
                                        ln = decodeURIComponent(Tt.getAttribute("data:default-text")),
                                        Jt = nt(ln, {
                                            seriesIndex: X ? wt : c,
                                            dataPointIndex: d,
                                            w: be
                                        });
                                    if (X) Tt.innerHTML = be.globals.collapsedSeriesIndices.indexOf(wt) < 0 ? Jt : ln;
                                    else if (Tt.innerHTML = wt === c ? Jt : ln, c === wt) break
                                }
                            }
                            var Qn = ge(ge({
                                ttItems: f,
                                i: c,
                                j: d
                            }, void 0 !== (null === (p = be.globals.seriesRange) || void 0 === p || null === (m = p[c]) || void 0 === m || null === (y = m[d]) || void 0 === y || null === (x = y.y[0]) || void 0 === x ? void 0 : x.y1) && {
                                y1: null === (w = be.globals.seriesRange) || void 0 === w || null === (S = w[c]) || void 0 === S || null === (T = S[d]) || void 0 === T || null === (k = T.y[0]) || void 0 === k ? void 0 : k.y1
                            }), void 0 !== (null === (O = be.globals.seriesRange) || void 0 === O || null === (B = O[c]) || void 0 === B || null === ($ = B[d]) || void 0 === $ || null === (ne = $.y[0]) || void 0 === ne ? void 0 : ne.y2) && {
                                y2: null === (re = be.globals.seriesRange) || void 0 === re || null === (b = re[c]) || void 0 === b || null === (A = b[d]) || void 0 === A || null === (F = A.y[0]) || void 0 === F ? void 0 : F.y2
                            });
                            if (X) {
                                if (Se.tooltipLabels.drawSeriesTexts(ge(ge({}, Qn), {}, {
                                        shared: !this.showOnIntersect && this.tConfig.shared
                                    })), Le) be.globals.markers.largestSize > 0 ? Se.marker.enlargePoints(d) : Se.tooltipPosition.moveDynamicPointsOnHover(d);
                                else if (this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(ze), this.barSeriesHeight > 0)) {
                                    var Ti = new J(this.ctx),
                                        ke = be.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(d, "']"));
                                    this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(d, c);
                                    for (var Ke = 0; Ke < ke.length; Ke++) Ti.pathMouseEnter(ke[Ke])
                                }
                            } else Se.tooltipLabels.drawSeriesTexts(ge({
                                shared: !1
                            }, Qn)), this.tooltipUtil.hasBars() && Se.tooltipPosition.moveStickyTooltipOverBars(d, c), Le && Se.tooltipPosition.moveMarkers(c, d)
                        }
                    }]), K
                }(),
                ro = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.barCtx = a, this.totalFormatter = this.w.config.plotOptions.bar.dataLabels.total.formatter, this.totalFormatter || (this.totalFormatter = this.w.config.dataLabels.formatter)
                    }
                    return z(K, [{
                        key: "handleBarDataLabels",
                        value: function(a) {
                            var o = a.x,
                                c = a.y,
                                d = a.y1,
                                f = a.y2,
                                p = a.i,
                                m = a.j,
                                y = a.realIndex,
                                x = a.groupIndex,
                                w = a.series,
                                S = a.barHeight,
                                T = a.barWidth,
                                k = a.barXPosition,
                                O = a.barYPosition,
                                B = a.visibleSeries,
                                $ = a.renderedPath,
                                ne = this.w,
                                re = new J(this.barCtx.ctx),
                                b = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[y] : this.barCtx.strokeWidth,
                                A = o + parseFloat(T * B),
                                F = c + parseFloat(S * B);
                            ne.globals.isXNumeric && !ne.globals.isBarHorizontal && (A = o + parseFloat(T * (B + 1)), F = c + parseFloat(S * (B + 1)) - b);
                            var X, ze, be = null,
                                Se = o,
                                Le = c,
                                nt = ne.config.dataLabels,
                                yt = this.barCtx.barOptions.dataLabels,
                                dt = this.barCtx.barOptions.dataLabels.total;
                            void 0 !== O && this.barCtx.isRangeBar && (F = O, Le = O), void 0 !== k && this.barCtx.isVerticalGroupedRangeBar && (A = k, Se = k);
                            var Tt = nt.offsetX,
                                wt = nt.offsetY,
                                ln = {
                                    width: 0,
                                    height: 0
                                };
                            ne.config.dataLabels.enabled && (ln = re.getTextRects(ne.globals.yLabelFormatters[0](this.barCtx.series[p][m]), parseFloat(nt.style.fontSize)));
                            var Qn = {
                                x: o,
                                y: c,
                                i: p,
                                j: m,
                                realIndex: y,
                                groupIndex: x || -1,
                                renderedPath: $,
                                bcx: A,
                                bcy: F,
                                barHeight: S,
                                barWidth: T,
                                textRects: ln,
                                strokeWidth: b,
                                dataLabelsX: Se,
                                dataLabelsY: Le,
                                dataLabelsConfig: nt,
                                barDataLabelsConfig: yt,
                                barTotalDataLabelsConfig: dt,
                                offX: Tt,
                                offY: wt
                            };
                            return ze = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(Qn) : this.calculateColumnsDataLabelsPosition(Qn), $.attr({
                                cy: ze.bcy,
                                cx: ze.bcx,
                                j: m,
                                val: w[p][m],
                                barHeight: S,
                                barWidth: T
                            }), X = this.drawCalculatedDataLabels({
                                x: ze.dataLabelsX,
                                y: ze.dataLabelsY,
                                val: this.barCtx.isRangeBar ? [d, f] : w[p][m],
                                i: y,
                                j: m,
                                barWidth: T,
                                barHeight: S,
                                textRects: ln,
                                dataLabelsConfig: nt
                            }), ne.config.chart.stacked && dt.enabled && (be = this.drawTotalDataLabels({
                                x: ze.totalDataLabelsX,
                                y: ze.totalDataLabelsY,
                                barWidth: T,
                                barHeight: S,
                                realIndex: y,
                                textAnchor: ze.totalDataLabelsAnchor,
                                val: this.getStackedTotalDataLabel({
                                    realIndex: y,
                                    j: m
                                }),
                                dataLabelsConfig: nt,
                                barTotalDataLabelsConfig: dt
                            })), {
                                dataLabels: X,
                                totalDataLabels: be
                            }
                        }
                    }, {
                        key: "getStackedTotalDataLabel",
                        value: function(a) {
                            var o = a.realIndex,
                                c = a.j,
                                d = this.w,
                                f = this.barCtx.stackedSeriesTotals[c];
                            return this.totalFormatter && (f = this.totalFormatter(f, ge(ge({}, d), {}, {
                                seriesIndex: o,
                                dataPointIndex: c,
                                w: d
                            }))), f
                        }
                    }, {
                        key: "calculateColumnsDataLabelsPosition",
                        value: function(a) {
                            var o, c, d = this.w,
                                f = a.i,
                                p = a.j,
                                m = a.realIndex,
                                y = a.groupIndex,
                                x = a.y,
                                w = a.bcx,
                                S = a.barWidth,
                                T = a.barHeight,
                                k = a.textRects,
                                O = a.dataLabelsX,
                                B = a.dataLabelsY,
                                $ = a.dataLabelsConfig,
                                ne = a.barDataLabelsConfig,
                                re = a.barTotalDataLabelsConfig,
                                b = a.strokeWidth,
                                A = a.offX,
                                F = a.offY;
                            T = Math.abs(T);
                            var X = "vertical" === d.config.plotOptions.bar.dataLabels.orientation,
                                be = this.barCtx.barHelpers.getZeroValueEncounters({
                                    i: f,
                                    j: p
                                }).zeroEncounters;
                            w = w - b / 2 + (-1 !== y ? y * S : 0), this.barCtx.isVerticalGroupedRangeBar ? O += S / 2 : (O = d.globals.isXNumeric ? w - S / 2 + A : w - d.globals.gridWidth / d.globals.dataPoints + S / 2 + A, be > 0 && d.config.plotOptions.bar.hideZeroBarsWhenGrouped && (O -= S * be)), X && (O = O + k.height / 2 - b / 2 - 2);
                            var Le = this.barCtx.series[f][p] < 0,
                                ze = x;
                            switch (this.barCtx.isReversed && (ze = x - T + (Le ? 2 * T : 0), x -= T), ne.position) {
                                case "center":
                                    B = X ? Le ? ze - T / 2 + F : ze + T / 2 - F : Le ? ze - T / 2 + k.height / 2 + F : ze + T / 2 + k.height / 2 - F;
                                    break;
                                case "bottom":
                                    B = X ? Le ? ze - T + F : ze + T - F : Le ? ze - T + k.height + b + F : ze + T - k.height / 2 + b - F;
                                    break;
                                case "top":
                                    B = X ? Le ? ze + F : ze - F : Le ? ze - k.height / 2 - F : ze + k.height + F
                            }
                            if (this.barCtx.lastActiveBarSerieIndex === m && re.enabled) {
                                var nt = new J(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
                                    realIndex: m,
                                    j: p
                                }), $.fontSize);
                                o = Le ? ze - nt.height / 2 - F - re.offsetY + 18 : ze + nt.height + F + re.offsetY - 18, c = O + re.offsetX
                            }
                            return d.config.chart.stacked || (B < 0 ? B = 0 + b : B + k.height / 3 > d.globals.gridHeight && (B = d.globals.gridHeight - b)), {
                                bcx: w,
                                bcy: x,
                                dataLabelsX: O,
                                dataLabelsY: B,
                                totalDataLabelsX: c,
                                totalDataLabelsY: o,
                                totalDataLabelsAnchor: "middle"
                            }
                        }
                    }, {
                        key: "calculateBarsDataLabelsPosition",
                        value: function(a) {
                            var o = this.w,
                                c = a.x,
                                d = a.i,
                                f = a.j,
                                p = a.realIndex,
                                m = a.groupIndex,
                                y = a.bcy,
                                x = a.barHeight,
                                w = a.barWidth,
                                S = a.textRects,
                                T = a.dataLabelsX,
                                k = a.strokeWidth,
                                O = a.dataLabelsConfig,
                                B = a.barDataLabelsConfig,
                                $ = a.barTotalDataLabelsConfig,
                                ne = a.offX,
                                re = a.offY,
                                b = o.globals.gridHeight / o.globals.dataPoints;
                            w = Math.abs(w);
                            var A, F, X = (y += -1 !== m ? m * x : 0) - (this.barCtx.isRangeBar ? 0 : b) + x / 2 + S.height / 2 + re - 3,
                                be = "start",
                                Se = this.barCtx.series[d][f] < 0,
                                Le = c;
                            switch (this.barCtx.isReversed && (Le = c + w - (Se ? 2 * w : 0), c = o.globals.gridWidth - w), B.position) {
                                case "center":
                                    T = Se ? Le + w / 2 - ne : Math.max(S.width / 2, Le - w / 2) + ne;
                                    break;
                                case "bottom":
                                    T = Se ? Le + w - k - Math.round(S.width / 2) - ne : Le - w + k + Math.round(S.width / 2) + ne;
                                    break;
                                case "top":
                                    T = Se ? Le - k + Math.round(S.width / 2) - ne : Le - k - Math.round(S.width / 2) + ne
                            }
                            if (this.barCtx.lastActiveBarSerieIndex === p && $.enabled) {
                                var ze = new J(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
                                    realIndex: p,
                                    j: f
                                }), O.fontSize);
                                Se ? (A = Le - k + Math.round(ze.width / 2) - ne - $.offsetX - 15, be = "end") : A = Le - k - Math.round(ze.width / 2) + ne + $.offsetX + 15, F = X + $.offsetY
                            }
                            return o.config.chart.stacked || (T < 0 ? T = T + S.width + k : T + S.width / 2 > o.globals.gridWidth && (T = o.globals.gridWidth - S.width - k)), {
                                bcx: c,
                                bcy: y,
                                dataLabelsX: T,
                                dataLabelsY: X,
                                totalDataLabelsX: A,
                                totalDataLabelsY: F,
                                totalDataLabelsAnchor: be
                            }
                        }
                    }, {
                        key: "drawCalculatedDataLabels",
                        value: function(a) {
                            var o = a.x,
                                c = a.y,
                                d = a.val,
                                f = a.i,
                                p = a.j,
                                m = a.textRects,
                                y = a.barHeight,
                                x = a.barWidth,
                                w = a.dataLabelsConfig,
                                S = this.w,
                                T = "rotate(0)";
                            "vertical" === S.config.plotOptions.bar.dataLabels.orientation && (T = "rotate(-90, ".concat(o, ", ").concat(c, ")"));
                            var k = new Dt(this.barCtx.ctx),
                                O = new J(this.barCtx.ctx),
                                B = w.formatter,
                                $ = null,
                                ne = S.globals.collapsedSeriesIndices.indexOf(f) > -1;
                            if (w.enabled && !ne) {
                                $ = O.group({
                                    class: "apexcharts-data-labels",
                                    transform: T
                                });
                                var re = "";
                                void 0 !== d && (re = B(d, ge(ge({}, S), {}, {
                                    seriesIndex: f,
                                    dataPointIndex: p,
                                    w: S
                                }))), !d && S.config.plotOptions.bar.hideZeroBarsWhenGrouped && (re = "");
                                var b = S.globals.series[f][p] < 0,
                                    A = S.config.plotOptions.bar.dataLabels.position;
                                "vertical" === S.config.plotOptions.bar.dataLabels.orientation && ("top" === A && (w.textAnchor = b ? "end" : "start"), "center" === A && (w.textAnchor = "middle"), "bottom" === A && (w.textAnchor = b ? "end" : "start")), this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && x < O.getTextRects(re, parseFloat(w.style.fontSize)).width && (re = ""), S.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? m.width / 1.6 > Math.abs(x) && (re = "") : m.height / 1.6 > Math.abs(y) && (re = ""));
                                var F = ge({}, w);
                                this.barCtx.isHorizontal && d < 0 && ("start" === w.textAnchor ? F.textAnchor = "end" : "end" === w.textAnchor && (F.textAnchor = "start")), k.plotDataLabelsText({
                                    x: o,
                                    y: c,
                                    text: re,
                                    i: f,
                                    j: p,
                                    parent: $,
                                    dataLabelsConfig: F,
                                    alwaysDrawDataLabel: !0,
                                    offsetCorrection: !0
                                })
                            }
                            return $
                        }
                    }, {
                        key: "drawTotalDataLabels",
                        value: function(a) {
                            var o, c = a.x,
                                d = a.y,
                                f = a.val,
                                p = a.barWidth,
                                m = a.barHeight,
                                y = a.realIndex,
                                x = a.textAnchor,
                                w = a.barTotalDataLabelsConfig,
                                S = this.w,
                                T = new J(this.barCtx.ctx);
                            return w.enabled && void 0 !== c && void 0 !== d && this.barCtx.lastActiveBarSerieIndex === y && (o = T.drawText({
                                x: c - (!S.globals.isBarHorizontal && S.globals.seriesGroups.length ? p / S.globals.seriesGroups.length : 0),
                                y: d - (S.globals.isBarHorizontal && S.globals.seriesGroups.length ? m / S.globals.seriesGroups.length : 0),
                                foreColor: w.style.color,
                                text: f,
                                textAnchor: x,
                                fontFamily: w.style.fontFamily,
                                fontSize: w.style.fontSize,
                                fontWeight: w.style.fontWeight
                            })), o
                        }
                    }]), K
                }(),
                ya = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.barCtx = a
                    }
                    return z(K, [{
                        key: "initVariables",
                        value: function(a) {
                            var o = this.w;
                            this.barCtx.series = a, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;
                            for (var c = 0; c < a.length; c++)
                                if (a[c].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += a[c].length), o.globals.isXNumeric)
                                    for (var d = 0; d < a[c].length; d++) o.globals.seriesX[c][d] > o.globals.minX && o.globals.seriesX[c][d] < o.globals.maxX && this.barCtx.visibleItems++;
                                else this.barCtx.visibleItems = o.globals.dataPoints;
                            0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], o.globals.comboCharts || this.checkZeroSeries({
                                series: a
                            })
                        }
                    }, {
                        key: "initialPositions",
                        value: function() {
                            var a, o, c, d, f, p, m, y, x = this.w,
                                w = x.globals.dataPoints;
                            this.barCtx.isRangeBar && (w = x.globals.labels.length);
                            var S = this.barCtx.seriesLen;
                            if (x.config.plotOptions.bar.rangeBarGroupRows && (S = 1), this.barCtx.isHorizontal) f = (c = x.globals.gridHeight / w) / S, x.globals.isXNumeric && (f = (c = x.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), f = f * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, -1 === String(this.barCtx.barOptions.barHeight).indexOf("%") && (f = parseInt(this.barCtx.barOptions.barHeight, 10)), y = this.barCtx.baseLineInvertedY + x.globals.padHorizontal + (this.barCtx.isReversed ? x.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), this.barCtx.isFunnel && (y = x.globals.gridWidth / 2), o = (c - f * this.barCtx.seriesLen) / 2;
                            else {
                                if (d = x.globals.gridWidth / this.barCtx.visibleItems, x.config.xaxis.convertedCatToNumeric && (d = x.globals.gridWidth / x.globals.dataPoints), p = d / S * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, x.globals.isXNumeric) {
                                    var T = this.barCtx.xRatio;
                                    x.config.xaxis.convertedCatToNumeric && (T = this.barCtx.initialXRatio), x.globals.minXDiff && .5 !== x.globals.minXDiff && x.globals.minXDiff / T > 0 && (d = x.globals.minXDiff / T), (p = d / S * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (p = 1)
                                } - 1 === String(this.barCtx.barOptions.columnWidth).indexOf("%") && (p = parseInt(this.barCtx.barOptions.columnWidth, 10)), m = x.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? x.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0), a = x.globals.padHorizontal + (d - p * this.barCtx.seriesLen) / 2
                            }
                            return {
                                x: a,
                                y: o,
                                yDivision: c,
                                xDivision: d,
                                barHeight: f,
                                barWidth: p,
                                zeroH: m,
                                zeroW: y
                            }
                        }
                    }, {
                        key: "initializeStackedPrevVars",
                        value: function(a) {
                            var o = a.w;
                            o.globals.hasSeriesGroups ? o.globals.seriesGroups.forEach(function(c) {
                                a[c] || (a[c] = {}), a[c].prevY = [], a[c].prevX = [], a[c].prevYF = [], a[c].prevXF = [], a[c].prevYVal = [], a[c].prevXVal = []
                            }) : (a.prevY = [], a.prevX = [], a.prevYF = [], a.prevXF = [], a.prevYVal = [], a.prevXVal = [])
                        }
                    }, {
                        key: "initializeStackedXYVars",
                        value: function(a) {
                            var o = a.w;
                            o.globals.hasSeriesGroups ? o.globals.seriesGroups.forEach(function(c) {
                                a[c] || (a[c] = {}), a[c].xArrj = [], a[c].xArrjF = [], a[c].xArrjVal = [], a[c].yArrj = [], a[c].yArrjF = [], a[c].yArrjVal = []
                            }) : (a.xArrj = [], a.xArrjF = [], a.xArrjVal = [], a.yArrj = [], a.yArrjF = [], a.yArrjVal = [])
                        }
                    }, {
                        key: "getPathFillColor",
                        value: function(a, o, c, d) {
                            var f, p, m, y, x = this.w,
                                w = new He(this.barCtx.ctx),
                                S = null,
                                T = this.barCtx.barOptions.distributed ? c : o;
                            return this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map(function(k) {
                                a[o][c] >= k.from && a[o][c] <= k.to && (S = k.color)
                            }), x.config.series[o].data[c] && x.config.series[o].data[c].fillColor && (S = x.config.series[o].data[c].fillColor), w.fillPath({
                                seriesNumber: this.barCtx.barOptions.distributed ? T : d,
                                dataPointIndex: c,
                                color: S,
                                value: a[o][c],
                                fillConfig: null === (f = x.config.series[o].data[c]) || void 0 === f ? void 0 : f.fill,
                                fillType: null !== (p = x.config.series[o].data[c]) && void 0 !== p && null !== (m = p.fill) && void 0 !== m && m.type ? null === (y = x.config.series[o].data[c]) || void 0 === y ? void 0 : y.fill.type : Array.isArray(x.config.fill.type) ? x.config.fill.type[o] : x.config.fill.type
                            })
                        }
                    }, {
                        key: "getStrokeWidth",
                        value: function(a, o, c) {
                            var d = 0,
                                f = this.w;
                            return this.barCtx.isNullValue = !this.barCtx.series[a][o], f.config.stroke.show && (this.barCtx.isNullValue || (d = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[c] : this.barCtx.strokeWidth)), d
                        }
                    }, {
                        key: "shouldApplyRadius",
                        value: function(a) {
                            var o = this.w,
                                c = !1;
                            return o.config.plotOptions.bar.borderRadius > 0 && (o.config.chart.stacked && "last" === o.config.plotOptions.bar.borderRadiusWhenStacked ? this.barCtx.lastActiveBarSerieIndex === a && (c = !0) : c = !0), c
                        }
                    }, {
                        key: "barBackground",
                        value: function(a) {
                            var o = a.j,
                                c = a.i,
                                d = a.x1,
                                f = a.x2,
                                p = a.y1,
                                m = a.y2,
                                y = a.elSeries,
                                x = this.w,
                                w = new J(this.barCtx.ctx),
                                S = new Ct(this.barCtx.ctx).getActiveConfigSeriesIndex();
                            if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && S === c) {
                                o >= this.barCtx.barOptions.colors.backgroundBarColors.length && (o %= this.barCtx.barOptions.colors.backgroundBarColors.length);
                                var k = w.drawRect(void 0 !== d ? d : 0, void 0 !== p ? p : 0, void 0 !== f ? f : x.globals.gridWidth, void 0 !== m ? m : x.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, this.barCtx.barOptions.colors.backgroundBarColors[o], this.barCtx.barOptions.colors.backgroundBarOpacity);
                                y.add(k), k.node.classList.add("apexcharts-backgroundBar")
                            }
                        }
                    }, {
                        key: "getColumnPaths",
                        value: function(a) {
                            var o, c = a.barWidth,
                                d = a.barXPosition,
                                f = a.y1,
                                p = a.y2,
                                m = a.strokeWidth,
                                y = a.seriesGroup,
                                x = a.realIndex,
                                w = a.i,
                                S = a.j,
                                T = a.w,
                                k = new J(this.barCtx.ctx);
                            (m = Array.isArray(m) ? m[x] : m) || (m = 0);
                            var O = c,
                                B = d;
                            null !== (o = T.config.series[x].data[S]) && void 0 !== o && o.columnWidthOffset && (B = d - T.config.series[x].data[S].columnWidthOffset / 2, O = c + T.config.series[x].data[S].columnWidthOffset);
                            var $ = B,
                                ne = B + O;
                            p += .001;
                            var re = k.move($, f += .001),
                                b = k.move($, f),
                                A = k.line(ne - m, f);
                            if (T.globals.previousPaths.length > 0 && (b = this.barCtx.getPreviousPath(x, S, !1)), re = re + k.line($, p) + k.line(ne - m, p) + k.line(ne - m, f) + ("around" === T.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), b = b + k.line($, f) + A + A + A + A + A + k.line($, f) + ("around" === T.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(x) && (re = k.roundPathCorners(re, T.config.plotOptions.bar.borderRadius)), T.config.chart.stacked) {
                                var F = this.barCtx;
                                T.globals.hasSeriesGroups && y && (F = this.barCtx[y]), F.yArrj.push(p), F.yArrjF.push(Math.abs(f - p)), F.yArrjVal.push(this.barCtx.series[w][S])
                            }
                            return {
                                pathTo: re,
                                pathFrom: b
                            }
                        }
                    }, {
                        key: "getBarpaths",
                        value: function(a) {
                            var o, c = a.barYPosition,
                                d = a.barHeight,
                                f = a.x1,
                                p = a.x2,
                                m = a.strokeWidth,
                                y = a.seriesGroup,
                                x = a.realIndex,
                                w = a.i,
                                S = a.j,
                                T = a.w,
                                k = new J(this.barCtx.ctx);
                            (m = Array.isArray(m) ? m[x] : m) || (m = 0);
                            var O = c,
                                B = d;
                            null !== (o = T.config.series[x].data[S]) && void 0 !== o && o.barHeightOffset && (O = c - T.config.series[x].data[S].barHeightOffset / 2, B = d + T.config.series[x].data[S].barHeightOffset);
                            var $ = O,
                                ne = O + B;
                            p += .001;
                            var re = k.move(f += .001, $),
                                b = k.move(f, $);
                            T.globals.previousPaths.length > 0 && (b = this.barCtx.getPreviousPath(x, S, !1));
                            var A = k.line(f, ne - m);
                            if (re = re + k.line(p, $) + k.line(p, ne - m) + A + ("around" === T.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), b = b + k.line(f, $) + A + A + A + A + A + k.line(f, $) + ("around" === T.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(x) && (re = k.roundPathCorners(re, T.config.plotOptions.bar.borderRadius)), T.config.chart.stacked) {
                                var F = this.barCtx;
                                T.globals.hasSeriesGroups && y && (F = this.barCtx[y]), F.xArrj.push(p), F.xArrjF.push(Math.abs(f - p)), F.xArrjVal.push(this.barCtx.series[w][S])
                            }
                            return {
                                pathTo: re,
                                pathFrom: b
                            }
                        }
                    }, {
                        key: "checkZeroSeries",
                        value: function(a) {
                            for (var o = a.series, c = this.w, d = 0; d < o.length; d++) {
                                for (var f = 0, p = 0; p < o[c.globals.maxValsInArrayIndex].length; p++) f += o[d][p];
                                0 === f && this.barCtx.zeroSerieses.push(d)
                            }
                        }
                    }, {
                        key: "getXForValue",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] && !arguments[2] ? null : o;
                            return null != a && (c = o + a / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? a / this.barCtx.invertedYRatio : 0)), c
                        }
                    }, {
                        key: "getYForValue",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] && !arguments[2] ? null : o;
                            return null != a && (c = o - a / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? a / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)), c
                        }
                    }, {
                        key: "getGoalValues",
                        value: function(a, o, c, d, f) {
                            var p = this,
                                m = this.w,
                                y = [],
                                x = function(T, k) {
                                    var O;
                                    y.push((ie(O = {}, a, "x" === a ? p.getXForValue(T, o, !1) : p.getYForValue(T, c, !1)), ie(O, "attrs", k), O))
                                };
                            if (m.globals.seriesGoals[d] && m.globals.seriesGoals[d][f] && Array.isArray(m.globals.seriesGoals[d][f]) && m.globals.seriesGoals[d][f].forEach(function(T) {
                                    x(T.value, T)
                                }), this.barCtx.barOptions.isDumbbell && m.globals.seriesRange.length) {
                                var w = this.barCtx.barOptions.dumbbellColors ? this.barCtx.barOptions.dumbbellColors : m.globals.colors,
                                    S = {
                                        strokeHeight: "x" === a ? 0 : m.globals.markers.size[d],
                                        strokeWidth: "x" === a ? m.globals.markers.size[d] : 0,
                                        strokeDashArray: 0,
                                        strokeLineCap: "round",
                                        strokeColor: Array.isArray(w[d]) ? w[d][0] : w[d]
                                    };
                                x(m.globals.seriesRangeStart[d][f], S), x(m.globals.seriesRangeEnd[d][f], ge(ge({}, S), {}, {
                                    strokeColor: Array.isArray(w[d]) ? w[d][1] : w[d]
                                }))
                            }
                            return y
                        }
                    }, {
                        key: "drawGoalLine",
                        value: function(a) {
                            var o = a.barXPosition,
                                c = a.barYPosition,
                                d = a.goalX,
                                f = a.goalY,
                                p = a.barWidth,
                                m = a.barHeight,
                                y = new J(this.barCtx.ctx),
                                x = y.group({
                                    className: "apexcharts-bar-goals-groups"
                                });
                            x.node.classList.add("apexcharts-element-hidden"), this.barCtx.w.globals.delayedElements.push({
                                el: x.node
                            }), x.attr("clip-path", "url(#gridRectMarkerMask".concat(this.barCtx.w.globals.cuid, ")"));
                            var w = null;
                            return this.barCtx.isHorizontal ? Array.isArray(d) && d.forEach(function(S) {
                                var T = void 0 !== S.attrs.strokeHeight ? S.attrs.strokeHeight : m / 2,
                                    k = c + T + m / 2;
                                w = y.drawLine(S.x, k - 2 * T, S.x, k, S.attrs.strokeColor ? S.attrs.strokeColor : void 0, S.attrs.strokeDashArray, S.attrs.strokeWidth ? S.attrs.strokeWidth : 2, S.attrs.strokeLineCap), x.add(w)
                            }) : Array.isArray(f) && f.forEach(function(S) {
                                var T = void 0 !== S.attrs.strokeWidth ? S.attrs.strokeWidth : p / 2,
                                    k = o + T + p / 2;
                                w = y.drawLine(k - 2 * T, S.y, k, S.y, S.attrs.strokeColor ? S.attrs.strokeColor : void 0, S.attrs.strokeDashArray, S.attrs.strokeHeight ? S.attrs.strokeHeight : 2, S.attrs.strokeLineCap), x.add(w)
                            }), x
                        }
                    }, {
                        key: "drawBarShadow",
                        value: function(a) {
                            var o = a.prevPaths,
                                c = a.currPaths,
                                d = a.color,
                                f = this.w,
                                p = o.x,
                                m = o.x1,
                                x = c.x,
                                w = c.x1,
                                S = c.barYPosition,
                                T = o.barYPosition + c.barHeight,
                                k = new J(this.barCtx.ctx),
                                O = new te,
                                B = k.move(m, T) + k.line(p, T) + k.line(x, S) + k.line(w, S) + k.line(m, T) + ("around" === f.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z");
                            return k.drawPath({
                                d: B,
                                fill: O.shadeColor(.5, te.rgb2hex(d)),
                                stroke: "none",
                                strokeWidth: 0,
                                fillOpacity: 1,
                                classes: "apexcharts-bar-shadows"
                            })
                        }
                    }, {
                        key: "getZeroValueEncounters",
                        value: function(a) {
                            var o = a.i,
                                c = a.j,
                                f = 0,
                                p = 0;
                            return this.w.globals.seriesPercent.forEach(function(m, y) {
                                m[c] && f++, y < o && 0 === m[c] && p++
                            }), {
                                nonZeroColumns: f,
                                zeroEncounters: p
                            }
                        }
                    }]), K
                }(),
                vr = function() {
                    function K(a, o) {
                        U(this, K), this.ctx = a, this.w = a.w;
                        var c = this.w;
                        this.barOptions = c.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = c.config.stroke.width, this.isNullValue = !1, this.isRangeBar = c.globals.seriesRange.length && this.isHorizontal, this.isVerticalGroupedRangeBar = !c.globals.isBarHorizontal && c.globals.seriesRange.length && c.config.plotOptions.bar.rangeBarGroupRows, this.isFunnel = this.barOptions.isFunnel, this.xyRatios = o, null !== this.xyRatios && (this.xRatio = o.xRatio, this.initialXRatio = o.initialXRatio, this.yRatio = o.yRatio, this.invertedXRatio = o.invertedXRatio, this.invertedYRatio = o.invertedYRatio, this.baseLineY = o.baseLineY, this.baseLineInvertedY = o.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0, this.pathArr = [];
                        var d = new Ct(this.ctx);
                        this.lastActiveBarSerieIndex = d.getActiveConfigSeriesIndex("desc", ["bar", "column"]);
                        var f = d.getBarSeriesIndices(),
                            p = new Ie(this.ctx);
                        this.stackedSeriesTotals = p.getStackedSeriesTotals(this.w.config.series.map(function(m, y) {
                            return -1 === f.indexOf(y) ? y : -1
                        }).filter(function(m) {
                            return -1 !== m
                        })), this.barHelpers = new ya(this)
                    }
                    return z(K, [{
                        key: "draw",
                        value: function(a, o) {
                            var c = this.w,
                                d = new J(this.ctx),
                                f = new Ie(this.ctx, c);
                            a = f.getLogSeries(a), this.series = a, this.yRatio = f.getLogYRatios(this.yRatio), this.barHelpers.initVariables(a);
                            var p = d.group({
                                class: "apexcharts-bar-series apexcharts-plot-series"
                            });
                            c.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts");
                            for (var m = 0, y = 0; m < a.length; m++, y++) {
                                var x, w, S, T, k = void 0,
                                    O = void 0,
                                    B = [],
                                    $ = [],
                                    ne = c.globals.comboCharts ? o[m] : m,
                                    re = d.group({
                                        class: "apexcharts-series",
                                        rel: m + 1,
                                        seriesName: te.escapeString(c.globals.seriesNames[ne]),
                                        "data:realIndex": ne
                                    });
                                this.ctx.series.addCollapsedClassToSeries(re, ne), a[m].length > 0 && (this.visibleI = this.visibleI + 1);
                                var b = 0,
                                    A = 0;
                                this.yRatio.length > 1 && (this.yaxisIndex = ne), this.isReversed = c.config.yaxis[this.yaxisIndex] && c.config.yaxis[this.yaxisIndex].reversed;
                                var F = this.barHelpers.initialPositions();
                                O = F.y, b = F.barHeight, w = F.yDivision, T = F.zeroW, k = F.x, A = F.barWidth, x = F.xDivision, S = F.zeroH, this.horizontal || $.push(k + A / 2);
                                var X = d.group({
                                    class: "apexcharts-datalabels",
                                    "data:realIndex": ne
                                });
                                c.globals.delayedElements.push({
                                    el: X.node
                                }), X.node.classList.add("apexcharts-element-hidden");
                                var be = d.group({
                                        class: "apexcharts-bar-goals-markers"
                                    }),
                                    Se = d.group({
                                        class: "apexcharts-bar-shadows"
                                    });
                                c.globals.delayedElements.push({
                                    el: Se.node
                                }), Se.node.classList.add("apexcharts-element-hidden");
                                for (var Le = 0; Le < c.globals.dataPoints; Le++) {
                                    var ze = this.barHelpers.getStrokeWidth(m, Le, ne),
                                        nt = null,
                                        yt = {
                                            indexes: {
                                                i: m,
                                                j: Le,
                                                realIndex: ne,
                                                bc: y
                                            },
                                            x: k,
                                            y: O,
                                            strokeWidth: ze,
                                            elSeries: re
                                        };
                                    this.isHorizontal ? (nt = this.drawBarPaths(ge(ge({}, yt), {}, {
                                        barHeight: b,
                                        zeroW: T,
                                        yDivision: w
                                    })), A = this.series[m][Le] / this.invertedYRatio) : (nt = this.drawColumnPaths(ge(ge({}, yt), {}, {
                                        xDivision: x,
                                        barWidth: A,
                                        zeroH: S
                                    })), b = this.series[m][Le] / this.yRatio[this.yaxisIndex]);
                                    var dt = this.barHelpers.getPathFillColor(a, m, Le, ne);
                                    if (this.isFunnel && this.barOptions.isFunnel3d && this.pathArr.length && Le > 0) {
                                        var Tt = this.barHelpers.drawBarShadow({
                                            color: "string" == typeof dt && -1 === dt ? .indexOf("url") ? dt : te.hexToRgba(c.globals.colors[m]),
                                            prevPaths: this.pathArr[this.pathArr.length - 1],
                                            currPaths: nt
                                        });
                                        Tt && Se.add(Tt)
                                    }
                                    this.pathArr.push(nt);
                                    var wt = this.barHelpers.drawGoalLine({
                                        barXPosition: nt.barXPosition,
                                        barYPosition: nt.barYPosition,
                                        goalX: nt.goalX,
                                        goalY: nt.goalY,
                                        barHeight: b,
                                        barWidth: A
                                    });
                                    wt && be.add(wt), O = nt.y, k = nt.x, Le > 0 && $.push(k + A / 2), B.push(O), this.renderSeries({
                                        realIndex: ne,
                                        pathFill: dt,
                                        j: Le,
                                        i: m,
                                        pathFrom: nt.pathFrom,
                                        pathTo: nt.pathTo,
                                        strokeWidth: ze,
                                        elSeries: re,
                                        x: k,
                                        y: O,
                                        series: a,
                                        barHeight: nt.barHeight ? nt.barHeight : b,
                                        barWidth: nt.barWidth ? nt.barWidth : A,
                                        elDataLabelsWrap: X,
                                        elGoalsMarkers: be,
                                        elBarShadows: Se,
                                        visibleSeries: this.visibleI,
                                        type: "bar"
                                    })
                                }
                                c.globals.seriesXvalues[ne] = $, c.globals.seriesYvalues[ne] = B, p.add(re)
                            }
                            return p
                        }
                    }, {
                        key: "renderSeries",
                        value: function(a) {
                            var o = a.realIndex,
                                c = a.pathFill,
                                d = a.lineFill,
                                f = a.j,
                                p = a.i,
                                m = a.groupIndex,
                                y = a.pathFrom,
                                x = a.pathTo,
                                w = a.strokeWidth,
                                S = a.elSeries,
                                T = a.x,
                                k = a.y,
                                O = a.y1,
                                B = a.y2,
                                $ = a.series,
                                ne = a.barHeight,
                                re = a.barWidth,
                                b = a.barXPosition,
                                A = a.barYPosition,
                                F = a.elDataLabelsWrap,
                                X = a.elGoalsMarkers,
                                be = a.elBarShadows,
                                Se = a.visibleSeries,
                                Le = a.type,
                                ze = this.w,
                                nt = new J(this.ctx);
                            d || (d = this.barOptions.distributed ? ze.globals.stroke.colors[f] : ze.globals.stroke.colors[o]), ze.config.series[p].data[f] && ze.config.series[p].data[f].strokeColor && (d = ze.config.series[p].data[f].strokeColor), this.isNullValue && (c = "none");
                            var dt = nt.renderPaths({
                                i: p,
                                j: f,
                                realIndex: o,
                                pathFrom: y,
                                pathTo: x,
                                stroke: d,
                                strokeWidth: w,
                                strokeLineCap: ze.config.stroke.lineCap,
                                fill: c,
                                animationDelay: f / ze.config.chart.animations.animateGradually.delay * (ze.config.chart.animations.speed / ze.globals.dataPoints) / 2.4,
                                initialSpeed: ze.config.chart.animations.speed,
                                dataChangeSpeed: ze.config.chart.animations.dynamicAnimation.speed,
                                className: "apexcharts-".concat(Le, "-area")
                            });
                            dt.attr("clip-path", "url(#gridRectMask".concat(ze.globals.cuid, ")"));
                            var Tt = ze.config.forecastDataPoints;
                            Tt.count > 0 && f >= ze.globals.dataPoints - Tt.count && (dt.node.setAttribute("stroke-dasharray", Tt.dashArray), dt.node.setAttribute("stroke-width", Tt.strokeWidth), dt.node.setAttribute("fill-opacity", Tt.fillOpacity)), void 0 !== O && void 0 !== B && (dt.attr("data-range-y1", O), dt.attr("data-range-y2", B)), new Oe(this.ctx).setSelectionFilter(dt, o, f), S.add(dt);
                            var wt = new ro(this).handleBarDataLabels({
                                x: T,
                                y: k,
                                y1: O,
                                y2: B,
                                i: p,
                                j: f,
                                series: $,
                                realIndex: o,
                                groupIndex: m,
                                barHeight: ne,
                                barWidth: re,
                                barXPosition: b,
                                barYPosition: A,
                                renderedPath: dt,
                                visibleSeries: Se
                            });
                            return null !== wt.dataLabels && F.add(wt.dataLabels), wt.totalDataLabels && F.add(wt.totalDataLabels), S.add(F), X && S.add(X), be && S.add(be), S
                        }
                    }, {
                        key: "drawBarPaths",
                        value: function(a) {
                            var o, m, c = a.indexes,
                                d = a.barHeight,
                                f = a.strokeWidth,
                                p = a.zeroW,
                                y = a.y,
                                x = a.yDivision,
                                w = a.elSeries,
                                S = this.w,
                                T = c.i,
                                k = c.j;
                            if (S.globals.isXNumeric) o = (y = (S.globals.seriesX[T][k] - S.globals.minX) / this.invertedXRatio - d) + d * this.visibleI;
                            else if (S.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                                var O = 0,
                                    B = 0;
                                S.globals.seriesPercent.forEach(function(ne, re) {
                                    ne[k] && O++, re < T && 0 === ne[k] && B++
                                }), O > 0 && (d = this.seriesLen * d / O), o = y + d * this.visibleI, o -= d * B
                            } else o = y + d * this.visibleI;
                            this.isFunnel && (p -= (this.barHelpers.getXForValue(this.series[T][k], p) - p) / 2), m = this.barHelpers.getXForValue(this.series[T][k], p);
                            var $ = this.barHelpers.getBarpaths({
                                barYPosition: o,
                                barHeight: d,
                                x1: p,
                                x2: m,
                                strokeWidth: f,
                                series: this.series,
                                realIndex: c.realIndex,
                                i: T,
                                j: k,
                                w: S
                            });
                            return S.globals.isXNumeric || (y += x), this.barHelpers.barBackground({
                                j: k,
                                i: T,
                                y1: o - d * this.visibleI,
                                y2: d * this.seriesLen,
                                elSeries: w
                            }), {
                                pathTo: $.pathTo,
                                pathFrom: $.pathFrom,
                                x1: p,
                                x: m,
                                y,
                                goalX: this.barHelpers.getGoalValues("x", p, null, T, k),
                                barYPosition: o,
                                barHeight: d
                            }
                        }
                    }, {
                        key: "drawColumnPaths",
                        value: function(a) {
                            var o, f, c = a.indexes,
                                d = a.x,
                                p = a.xDivision,
                                m = a.barWidth,
                                y = a.zeroH,
                                x = a.strokeWidth,
                                w = a.elSeries,
                                S = this.w,
                                k = c.i,
                                O = c.j,
                                B = c.bc;
                            if (S.globals.isXNumeric) {
                                var $ = this.getBarXForNumericXAxis({
                                    x: d,
                                    j: O,
                                    realIndex: c.realIndex,
                                    barWidth: m
                                });
                                d = $.x, o = $.barXPosition
                            } else if (S.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                                var ne = this.barHelpers.getZeroValueEncounters({
                                        i: k,
                                        j: O
                                    }),
                                    re = ne.nonZeroColumns;
                                re > 0 && (m = this.seriesLen * m / re), o = d + m * this.visibleI, o -= m * ne.zeroEncounters
                            } else o = d + m * this.visibleI;
                            f = this.barHelpers.getYForValue(this.series[k][O], y);
                            var A = this.barHelpers.getColumnPaths({
                                barXPosition: o,
                                barWidth: m,
                                y1: y,
                                y2: f,
                                strokeWidth: x,
                                series: this.series,
                                realIndex: c.realIndex,
                                i: k,
                                j: O,
                                w: S
                            });
                            return S.globals.isXNumeric || (d += p), this.barHelpers.barBackground({
                                bc: B,
                                j: O,
                                i: k,
                                x1: o - x / 2 - m * this.visibleI,
                                x2: m * this.seriesLen + x / 2,
                                elSeries: w
                            }), {
                                pathTo: A.pathTo,
                                pathFrom: A.pathFrom,
                                x: d,
                                y: f,
                                goalY: this.barHelpers.getGoalValues("y", null, y, k, O),
                                barXPosition: o,
                                barWidth: m
                            }
                        }
                    }, {
                        key: "getBarXForNumericXAxis",
                        value: function(a) {
                            var o = a.x,
                                c = a.barWidth,
                                d = a.realIndex,
                                f = a.j,
                                p = this.w,
                                m = d;
                            return p.globals.seriesX[d].length || (m = p.globals.maxValsInArrayIndex), p.globals.seriesX[m][f] && (o = (p.globals.seriesX[m][f] - p.globals.minX) / this.xRatio - c * this.seriesLen / 2), {
                                barXPosition: o + c * this.visibleI,
                                x: o
                            }
                        }
                    }, {
                        key: "getPreviousPath",
                        value: function(a, o) {
                            for (var c, d = this.w, f = 0; f < d.globals.previousPaths.length; f++) {
                                var p = d.globals.previousPaths[f];
                                p.paths && p.paths.length > 0 && parseInt(p.realIndex, 10) === parseInt(a, 10) && void 0 !== d.globals.previousPaths[f].paths[o] && (c = d.globals.previousPaths[f].paths[o].d)
                            }
                            return c
                        }
                    }]), K
                }(),
                bs = function(K) {
                    ee(o, vr);
                    var a = Me(o);

                    function o() {
                        return U(this, o), a.apply(this, arguments)
                    }
                    return z(o, [{
                        key: "draw",
                        value: function(c, d) {
                            var f = this,
                                p = this.w;
                            this.graphics = new J(this.ctx), this.bar = new vr(this.ctx, this.xyRatios);
                            var m = new Ie(this.ctx, p);
                            c = m.getLogSeries(c), this.yRatio = m.getLogYRatios(this.yRatio), this.barHelpers.initVariables(c), "100%" === p.config.chart.stackType && (c = p.globals.seriesPercent.slice()), this.series = c, this.barHelpers.initializeStackedPrevVars(this);
                            for (var y = this.graphics.group({
                                    class: "apexcharts-bar-series apexcharts-plot-series"
                                }), x = 0, w = 0, S = function(O, B) {
                                    var $ = void 0,
                                        ne = void 0,
                                        re = void 0,
                                        b = void 0,
                                        A = -1;
                                    f.groupCtx = f, p.globals.seriesGroups.forEach(function(ke, Ke) {
                                        ke.indexOf(p.config.series[O].name) > -1 && (A = Ke)
                                    }), -1 !== A && (f.groupCtx = f[p.globals.seriesGroups[A]]);
                                    var F = [],
                                        X = [],
                                        be = p.globals.comboCharts ? d[O] : O;
                                    f.yRatio.length > 1 && (f.yaxisIndex = be), f.isReversed = p.config.yaxis[f.yaxisIndex] && p.config.yaxis[f.yaxisIndex].reversed;
                                    var Se = f.graphics.group({
                                        class: "apexcharts-series",
                                        seriesName: te.escapeString(p.globals.seriesNames[be]),
                                        rel: O + 1,
                                        "data:realIndex": be
                                    });
                                    f.ctx.series.addCollapsedClassToSeries(Se, be);
                                    var Le = f.graphics.group({
                                            class: "apexcharts-datalabels",
                                            "data:realIndex": be
                                        }),
                                        ze = f.graphics.group({
                                            class: "apexcharts-bar-goals-markers"
                                        }),
                                        nt = 0,
                                        yt = 0,
                                        dt = f.initialPositions(x, w, $, ne, re, b);
                                    w = dt.y, nt = dt.barHeight, ne = dt.yDivision, b = dt.zeroW, x = dt.x, yt = dt.barWidth, $ = dt.xDivision, re = dt.zeroH, f.barHelpers.initializeStackedXYVars(f), 1 === f.groupCtx.prevY.length && f.groupCtx.prevY[0].every(function(ke) {
                                        return isNaN(ke)
                                    }) && (f.groupCtx.prevY[0] = f.groupCtx.prevY[0].map(function(ke) {
                                        return re
                                    }), f.groupCtx.prevYF[0] = f.groupCtx.prevYF[0].map(function(ke) {
                                        return 0
                                    }));
                                    for (var Tt = 0; Tt < p.globals.dataPoints; Tt++) {
                                        var wt = f.barHelpers.getStrokeWidth(O, Tt, be),
                                            ln = {
                                                indexes: {
                                                    i: O,
                                                    j: Tt,
                                                    realIndex: be,
                                                    bc: B
                                                },
                                                strokeWidth: wt,
                                                x,
                                                y: w,
                                                elSeries: Se,
                                                groupIndex: A,
                                                seriesGroup: p.globals.seriesGroups[A]
                                            },
                                            Jt = null;
                                        f.isHorizontal ? (Jt = f.drawStackedBarPaths(ge(ge({}, ln), {}, {
                                            zeroW: b,
                                            barHeight: nt,
                                            yDivision: ne
                                        })), yt = f.series[O][Tt] / f.invertedYRatio) : (Jt = f.drawStackedColumnPaths(ge(ge({}, ln), {}, {
                                            xDivision: $,
                                            barWidth: yt,
                                            zeroH: re
                                        })), nt = f.series[O][Tt] / f.yRatio[f.yaxisIndex]);
                                        var Qn = f.barHelpers.drawGoalLine({
                                            barXPosition: Jt.barXPosition,
                                            barYPosition: Jt.barYPosition,
                                            goalX: Jt.goalX,
                                            goalY: Jt.goalY,
                                            barHeight: nt,
                                            barWidth: yt
                                        });
                                        Qn && ze.add(Qn), w = Jt.y, F.push(x = Jt.x), X.push(w);
                                        var Ti = f.barHelpers.getPathFillColor(c, O, Tt, be);
                                        Se = f.renderSeries({
                                            realIndex: be,
                                            pathFill: Ti,
                                            j: Tt,
                                            i: O,
                                            groupIndex: A,
                                            pathFrom: Jt.pathFrom,
                                            pathTo: Jt.pathTo,
                                            strokeWidth: wt,
                                            elSeries: Se,
                                            x,
                                            y: w,
                                            series: c,
                                            barHeight: nt,
                                            barWidth: yt,
                                            elDataLabelsWrap: Le,
                                            elGoalsMarkers: ze,
                                            type: "bar",
                                            visibleSeries: 0
                                        })
                                    }
                                    p.globals.seriesXvalues[be] = F, p.globals.seriesYvalues[be] = X, f.groupCtx.prevY.push(f.groupCtx.yArrj), f.groupCtx.prevYF.push(f.groupCtx.yArrjF), f.groupCtx.prevYVal.push(f.groupCtx.yArrjVal), f.groupCtx.prevX.push(f.groupCtx.xArrj), f.groupCtx.prevXF.push(f.groupCtx.xArrjF), f.groupCtx.prevXVal.push(f.groupCtx.xArrjVal), y.add(Se)
                                }, T = 0, k = 0; T < c.length; T++, k++) S(T, k);
                            return y
                        }
                    }, {
                        key: "initialPositions",
                        value: function(c, d, f, p, m, y) {
                            var x, w, S, T, k = this.w;
                            return this.isHorizontal ? (S = (S = p = k.globals.gridHeight / k.globals.dataPoints) * parseInt(k.config.plotOptions.bar.barHeight, 10) / 100, -1 === String(k.config.plotOptions.bar.barHeight).indexOf("%") && (S = parseInt(k.config.plotOptions.bar.barHeight, 10)), y = this.baseLineInvertedY + k.globals.padHorizontal + (this.isReversed ? k.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), d = (p - S) / 2) : (T = f = k.globals.gridWidth / k.globals.dataPoints, T = k.globals.isXNumeric && k.globals.dataPoints > 1 ? (f = k.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : T * parseInt(k.config.plotOptions.bar.columnWidth, 10) / 100, -1 === String(k.config.plotOptions.bar.columnWidth).indexOf("%") && (T = parseInt(k.config.plotOptions.bar.columnWidth, 10)), m = k.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? k.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), c = k.globals.padHorizontal + (f - T) / 2), {
                                x: c,
                                y: d,
                                yDivision: p,
                                xDivision: f,
                                barHeight: null !== (x = k.globals.seriesGroups) && void 0 !== x && x.length ? S / k.globals.seriesGroups.length : S,
                                barWidth: null !== (w = k.globals.seriesGroups) && void 0 !== w && w.length ? T / k.globals.seriesGroups.length : T,
                                zeroH: m,
                                zeroW: y
                            }
                        }
                    }, {
                        key: "drawStackedBarPaths",
                        value: function(c) {
                            for (var d, x, f = c.indexes, p = c.barHeight, m = c.strokeWidth, y = c.zeroW, w = c.y, S = c.groupIndex, T = c.seriesGroup, k = c.yDivision, O = c.elSeries, B = this.w, $ = w + (-1 !== S ? S * p : 0), ne = f.i, re = f.j, b = 0, A = 0; A < this.groupCtx.prevXF.length; A++) b += this.groupCtx.prevXF[A][re];
                            var F = ne;
                            if (T && (F = T.indexOf(B.config.series[ne].name)), F > 0) {
                                var X = y;
                                this.groupCtx.prevXVal[F - 1][re] < 0 ? X = this.series[ne][re] >= 0 ? this.groupCtx.prevX[F - 1][re] + b - 2 * (this.isReversed ? b : 0) : this.groupCtx.prevX[F - 1][re] : this.groupCtx.prevXVal[F - 1][re] >= 0 && (X = this.series[ne][re] >= 0 ? this.groupCtx.prevX[F - 1][re] : this.groupCtx.prevX[F - 1][re] - b + 2 * (this.isReversed ? b : 0)), d = X
                            } else d = y;
                            var be = this.barHelpers.getBarpaths({
                                barYPosition: $,
                                barHeight: p,
                                x1: d,
                                x2: x = null === this.series[ne][re] ? d : d + this.series[ne][re] / this.invertedYRatio - 2 * (this.isReversed ? this.series[ne][re] / this.invertedYRatio : 0),
                                strokeWidth: m,
                                series: this.series,
                                realIndex: f.realIndex,
                                seriesGroup: T,
                                i: ne,
                                j: re,
                                w: B
                            });
                            return this.barHelpers.barBackground({
                                j: re,
                                i: ne,
                                y1: $,
                                y2: p,
                                elSeries: O
                            }), w += k, {
                                pathTo: be.pathTo,
                                pathFrom: be.pathFrom,
                                goalX: this.barHelpers.getGoalValues("x", y, null, ne, re),
                                barYPosition: $,
                                x,
                                y: w
                            }
                        }
                    }, {
                        key: "drawStackedColumnPaths",
                        value: function(c) {
                            var p, d = c.indexes,
                                f = c.x,
                                m = c.xDivision,
                                y = c.barWidth,
                                x = c.zeroH,
                                w = c.groupIndex,
                                S = c.seriesGroup,
                                T = c.elSeries,
                                k = this.w,
                                O = d.i,
                                B = d.j,
                                $ = d.bc;
                            if (k.globals.isXNumeric) {
                                var ne = k.globals.seriesX[O][B];
                                ne || (ne = 0), f = (ne - k.globals.minX) / this.xRatio - y / 2, k.globals.seriesGroups.length && (f = (ne - k.globals.minX) / this.xRatio - y / 2 * k.globals.seriesGroups.length)
                            }
                            for (var re, b = f + (-1 !== w ? w * y : 0), A = 0, F = 0; F < this.groupCtx.prevYF.length; F++) A += isNaN(this.groupCtx.prevYF[F][B]) ? 0 : this.groupCtx.prevYF[F][B];
                            var X = O;
                            if (S && (X = S.indexOf(k.config.series[O].name)), X > 0 && !k.globals.isXNumeric || X > 0 && k.globals.isXNumeric && k.globals.seriesX[O - 1][B] === k.globals.seriesX[O][B]) {
                                var be, Se, Le, ze = Math.min(this.yRatio.length + 1, O + 1);
                                if (void 0 !== this.groupCtx.prevY[X - 1] && this.groupCtx.prevY[X - 1].length)
                                    for (var nt = 1; nt < ze; nt++) {
                                        var yt;
                                        if (!isNaN(null === (yt = this.groupCtx.prevY[X - nt]) || void 0 === yt ? void 0 : yt[B])) {
                                            Le = this.groupCtx.prevY[X - nt][B];
                                            break
                                        }
                                    }
                                for (var dt = 1; dt < ze; dt++) {
                                    var Tt, wt;
                                    if ((null === (Tt = this.groupCtx.prevYVal[X - dt]) || void 0 === Tt ? void 0 : Tt[B]) < 0) {
                                        Se = this.series[O][B] >= 0 ? Le - A + 2 * (this.isReversed ? A : 0) : Le;
                                        break
                                    }
                                    if ((null === (wt = this.groupCtx.prevYVal[X - dt]) || void 0 === wt ? void 0 : wt[B]) >= 0) {
                                        Se = this.series[O][B] >= 0 ? Le : Le + A - 2 * (this.isReversed ? A : 0);
                                        break
                                    }
                                }
                                void 0 === Se && (Se = k.globals.gridHeight), re = null !== (be = this.groupCtx.prevYF[0]) && void 0 !== be && be.every(function(Jt) {
                                    return 0 === Jt
                                }) && this.groupCtx.prevYF.slice(1, X).every(function(Jt) {
                                    return Jt.every(function(Qn) {
                                        return isNaN(Qn)
                                    })
                                }) ? x : Se
                            } else re = x;
                            var ln = this.barHelpers.getColumnPaths({
                                barXPosition: b,
                                barWidth: y,
                                y1: re,
                                y2: p = this.series[O][B] ? re - this.series[O][B] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[O][B] / this.yRatio[this.yaxisIndex] : 0) : re,
                                yRatio: this.yRatio[this.yaxisIndex],
                                strokeWidth: this.strokeWidth,
                                series: this.series,
                                seriesGroup: S,
                                realIndex: d.realIndex,
                                i: O,
                                j: B,
                                w: k
                            });
                            return this.barHelpers.barBackground({
                                bc: $,
                                j: B,
                                i: O,
                                x1: b,
                                x2: y,
                                elSeries: T
                            }), f += m, {
                                pathTo: ln.pathTo,
                                pathFrom: ln.pathFrom,
                                goalY: this.barHelpers.getGoalValues("y", null, x, O, B),
                                barXPosition: b,
                                x: k.globals.isXNumeric ? f - m : f,
                                y: p
                            }
                        }
                    }]), o
                }(),
                As = function(K) {
                    ee(o, vr);
                    var a = Me(o);

                    function o() {
                        return U(this, o), a.apply(this, arguments)
                    }
                    return z(o, [{
                        key: "draw",
                        value: function(c, d, f) {
                            var p = this,
                                m = this.w,
                                y = new J(this.ctx),
                                x = m.globals.comboCharts ? d : m.config.chart.type,
                                w = new He(this.ctx);
                            this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot, this.isHorizontal = m.config.plotOptions.bar.horizontal;
                            var S = new Ie(this.ctx, m);
                            c = S.getLogSeries(c), this.series = c, this.yRatio = S.getLogYRatios(this.yRatio), this.barHelpers.initVariables(c);
                            for (var T = y.group({
                                    class: "apexcharts-".concat(x, "-series apexcharts-plot-series")
                                }), k = function(B) {
                                    p.isBoxPlot = "boxPlot" === m.config.chart.type || "boxPlot" === m.config.series[B].type;
                                    var $, ne, re, b, ze, nt, A = void 0,
                                        F = void 0,
                                        X = [],
                                        be = [],
                                        Se = m.globals.comboCharts ? f[B] : B,
                                        Le = y.group({
                                            class: "apexcharts-series",
                                            seriesName: te.escapeString(m.globals.seriesNames[Se]),
                                            rel: B + 1,
                                            "data:realIndex": Se
                                        });
                                    p.ctx.series.addCollapsedClassToSeries(Le, Se), c[B].length > 0 && (p.visibleI = p.visibleI + 1), p.yRatio.length > 1 && (p.yaxisIndex = Se);
                                    var yt = p.barHelpers.initialPositions();
                                    F = yt.y, ze = yt.barHeight, ne = yt.yDivision, b = yt.zeroW, $ = yt.xDivision, re = yt.zeroH, be.push((A = yt.x) + (nt = yt.barWidth) / 2);
                                    for (var dt = y.group({
                                            class: "apexcharts-datalabels",
                                            "data:realIndex": Se
                                        }), Tt = function(ln) {
                                            var Jt = p.barHelpers.getStrokeWidth(B, ln, Se),
                                                Qn = null,
                                                Ti = {
                                                    indexes: {
                                                        i: B,
                                                        j: ln,
                                                        realIndex: Se
                                                    },
                                                    x: A,
                                                    y: F,
                                                    strokeWidth: Jt,
                                                    elSeries: Le
                                                };
                                            Qn = p.isHorizontal ? p.drawHorizontalBoxPaths(ge(ge({}, Ti), {}, {
                                                yDivision: ne,
                                                barHeight: ze,
                                                zeroW: b
                                            })) : p.drawVerticalBoxPaths(ge(ge({}, Ti), {}, {
                                                xDivision: $,
                                                barWidth: nt,
                                                zeroH: re
                                            })), F = Qn.y, A = Qn.x, ln > 0 && be.push(A + nt / 2), X.push(F), Qn.pathTo.forEach(function(ke, Ke) {
                                                var qe = !p.isBoxPlot && p.candlestickOptions.wick.useFillColor ? Qn.color[Ke] : m.globals.stroke.colors[B],
                                                    gt = w.fillPath({
                                                        seriesNumber: Se,
                                                        dataPointIndex: ln,
                                                        color: Qn.color[Ke],
                                                        value: c[B][ln]
                                                    });
                                                p.renderSeries({
                                                    realIndex: Se,
                                                    pathFill: gt,
                                                    lineFill: qe,
                                                    j: ln,
                                                    i: B,
                                                    pathFrom: Qn.pathFrom,
                                                    pathTo: ke,
                                                    strokeWidth: Jt,
                                                    elSeries: Le,
                                                    x: A,
                                                    y: F,
                                                    series: c,
                                                    barHeight: ze,
                                                    barWidth: nt,
                                                    elDataLabelsWrap: dt,
                                                    visibleSeries: p.visibleI,
                                                    type: m.config.chart.type
                                                })
                                            })
                                        }, wt = 0; wt < m.globals.dataPoints; wt++) Tt(wt);
                                    m.globals.seriesXvalues[Se] = be, m.globals.seriesYvalues[Se] = X, T.add(Le)
                                }, O = 0; O < c.length; O++) k(O);
                            return T
                        }
                    }, {
                        key: "drawVerticalBoxPaths",
                        value: function(c) {
                            var d = c.indexes,
                                f = c.x,
                                p = c.xDivision,
                                m = c.barWidth,
                                y = c.zeroH,
                                x = c.strokeWidth,
                                w = this.w,
                                S = new J(this.ctx),
                                T = d.i,
                                k = d.j,
                                O = !0,
                                B = w.config.plotOptions.candlestick.colors.upward,
                                $ = w.config.plotOptions.candlestick.colors.downward,
                                ne = "";
                            this.isBoxPlot && (ne = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                            var re = this.yRatio[this.yaxisIndex],
                                b = d.realIndex,
                                A = this.getOHLCValue(b, k),
                                F = y,
                                X = y;
                            A.o > A.c && (O = !1);
                            var be = Math.min(A.o, A.c),
                                Se = Math.max(A.o, A.c),
                                Le = A.m;
                            w.globals.isXNumeric && (f = (w.globals.seriesX[b][k] - w.globals.minX) / this.xRatio - m / 2);
                            var ze = f + m * this.visibleI;
                            null == this.series[T][k] ? (be = y, Se = y) : (be = y - be / re, Se = y - Se / re, F = y - A.h / re, X = y - A.l / re, Le = y - A.m / re);
                            var nt = S.move(ze, y),
                                yt = S.move(ze + m / 2, be);
                            return w.globals.previousPaths.length > 0 && (yt = this.getPreviousPath(b, k, !0)), nt = this.isBoxPlot ? [S.move(ze, be) + S.line(ze + m / 2, be) + S.line(ze + m / 2, F) + S.line(ze + m / 4, F) + S.line(ze + m - m / 4, F) + S.line(ze + m / 2, F) + S.line(ze + m / 2, be) + S.line(ze + m, be) + S.line(ze + m, Le) + S.line(ze, Le) + S.line(ze, be + x / 2), S.move(ze, Le) + S.line(ze + m, Le) + S.line(ze + m, Se) + S.line(ze + m / 2, Se) + S.line(ze + m / 2, X) + S.line(ze + m - m / 4, X) + S.line(ze + m / 4, X) + S.line(ze + m / 2, X) + S.line(ze + m / 2, Se) + S.line(ze, Se) + S.line(ze, Le) + "z"] : [S.move(ze, Se) + S.line(ze + m / 2, Se) + S.line(ze + m / 2, F) + S.line(ze + m / 2, Se) + S.line(ze + m, Se) + S.line(ze + m, be) + S.line(ze + m / 2, be) + S.line(ze + m / 2, X) + S.line(ze + m / 2, be) + S.line(ze, be) + S.line(ze, Se - x / 2)], yt += S.move(ze, be), w.globals.isXNumeric || (f += p), {
                                pathTo: nt,
                                pathFrom: yt,
                                x: f,
                                y: Se,
                                barXPosition: ze,
                                color: this.isBoxPlot ? ne : O ? [B] : [$]
                            }
                        }
                    }, {
                        key: "drawHorizontalBoxPaths",
                        value: function(c) {
                            var d = c.indexes,
                                f = c.y,
                                p = c.yDivision,
                                m = c.barHeight,
                                y = c.zeroW,
                                x = c.strokeWidth,
                                w = this.w,
                                S = new J(this.ctx),
                                T = d.i,
                                k = d.j,
                                O = this.boxOptions.colors.lower;
                            this.isBoxPlot && (O = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
                            var B = this.invertedYRatio,
                                $ = d.realIndex,
                                ne = this.getOHLCValue($, k),
                                re = y,
                                b = y,
                                A = Math.min(ne.o, ne.c),
                                F = Math.max(ne.o, ne.c),
                                X = ne.m;
                            w.globals.isXNumeric && (f = (w.globals.seriesX[$][k] - w.globals.minX) / this.invertedXRatio - m / 2);
                            var be = f + m * this.visibleI;
                            null == this.series[T][k] ? (A = y, F = y) : (A = y + A / B, F = y + F / B, re = y + ne.h / B, b = y + ne.l / B, X = y + ne.m / B);
                            var Se = S.move(y, be),
                                Le = S.move(A, be + m / 2);
                            return w.globals.previousPaths.length > 0 && (Le = this.getPreviousPath($, k, !0)), Se = [S.move(A, be) + S.line(A, be + m / 2) + S.line(re, be + m / 2) + S.line(re, be + m / 2 - m / 4) + S.line(re, be + m / 2 + m / 4) + S.line(re, be + m / 2) + S.line(A, be + m / 2) + S.line(A, be + m) + S.line(X, be + m) + S.line(X, be) + S.line(A + x / 2, be), S.move(X, be) + S.line(X, be + m) + S.line(F, be + m) + S.line(F, be + m / 2) + S.line(b, be + m / 2) + S.line(b, be + m - m / 4) + S.line(b, be + m / 4) + S.line(b, be + m / 2) + S.line(F, be + m / 2) + S.line(F, be) + S.line(X, be) + "z"], Le += S.move(A, be), w.globals.isXNumeric || (f += p), {
                                pathTo: Se,
                                pathFrom: Le,
                                x: F,
                                y: f,
                                barYPosition: be,
                                color: O
                            }
                        }
                    }, {
                        key: "getOHLCValue",
                        value: function(c, d) {
                            var f = this.w;
                            return {
                                o: this.isBoxPlot ? f.globals.seriesCandleH[c][d] : f.globals.seriesCandleO[c][d],
                                h: this.isBoxPlot ? f.globals.seriesCandleO[c][d] : f.globals.seriesCandleH[c][d],
                                m: f.globals.seriesCandleM[c][d],
                                l: this.isBoxPlot ? f.globals.seriesCandleC[c][d] : f.globals.seriesCandleL[c][d],
                                c: this.isBoxPlot ? f.globals.seriesCandleL[c][d] : f.globals.seriesCandleC[c][d]
                            }
                        }
                    }]), o
                }(),
                _l = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "checkColorRange",
                        value: function() {
                            var a = this.w,
                                o = !1,
                                c = a.config.plotOptions[a.config.chart.type];
                            return c.colorScale.ranges.length > 0 && c.colorScale.ranges.map(function(d, f) {
                                d.from <= 0 && (o = !0)
                            }), o
                        }
                    }, {
                        key: "getShadeColor",
                        value: function(a, o, c, d) {
                            var f = this.w,
                                p = 1,
                                m = f.config.plotOptions[a].shadeIntensity,
                                y = this.determineColor(a, o, c);
                            f.globals.hasNegs || d ? p = f.config.plotOptions[a].reverseNegativeShade ? y.percent < 0 ? y.percent / 100 * (1.25 * m) : 1.25 * m * (1 - y.percent / 100) : y.percent <= 0 ? 1 - (1 + y.percent / 100) * m : (1 - y.percent / 100) * m : (p = 1 - y.percent / 100, "treemap" === a && (p = 1.25 * m * (1 - y.percent / 100)));
                            var x = y.color,
                                w = new te;
                            return f.config.plotOptions[a].enableShades && (x = te.hexToRgba(w.shadeColor("dark" === this.w.config.theme.mode ? -1 * p : p, y.color), f.config.fill.opacity)), {
                                color: x,
                                colorProps: y
                            }
                        }
                    }, {
                        key: "determineColor",
                        value: function(a, o, c) {
                            var d = this.w,
                                f = d.globals.series[o][c],
                                p = d.config.plotOptions[a],
                                m = p.colorScale.inverse ? c : o;
                            p.distributed && "treemap" === d.config.chart.type && (m = c);
                            var y = d.globals.colors[m],
                                x = null,
                                w = Math.min.apply(Math, We(d.globals.series[o])),
                                S = Math.max.apply(Math, We(d.globals.series[o]));
                            p.distributed || "heatmap" !== a || (w = d.globals.minY, S = d.globals.maxY), void 0 !== p.colorScale.min && (w = p.colorScale.min < d.globals.minY ? p.colorScale.min : d.globals.minY, S = p.colorScale.max > d.globals.maxY ? p.colorScale.max : d.globals.maxY);
                            var T = Math.abs(S) + Math.abs(w),
                                k = 100 * f / (0 === T ? T - 1e-6 : T);
                            return p.colorScale.ranges.length > 0 && p.colorScale.ranges.map(function(O, B) {
                                if (f >= O.from && f <= O.to) {
                                    y = O.color, x = O.foreColor ? O.foreColor : null, w = O.from, S = O.to;
                                    var $ = Math.abs(S) + Math.abs(w);
                                    k = 100 * f / (0 === $ ? $ - 1e-6 : $)
                                }
                            }), {
                                color: y,
                                foreColor: x,
                                percent: k
                            }
                        }
                    }, {
                        key: "calculateDataLabels",
                        value: function(a) {
                            var o = a.text,
                                c = a.x,
                                d = a.y,
                                f = a.i,
                                p = a.j,
                                m = a.colorProps,
                                y = a.fontSize,
                                x = this.w.config.dataLabels,
                                w = new J(this.ctx),
                                S = new Dt(this.ctx),
                                T = null;
                            if (x.enabled) {
                                T = w.group({
                                    class: "apexcharts-data-labels"
                                });
                                var O = x.offsetY,
                                    B = c + x.offsetX,
                                    $ = d + parseFloat(x.style.fontSize) / 3 + O;
                                S.plotDataLabelsText({
                                    x: B,
                                    y: $,
                                    text: o,
                                    i: f,
                                    j: p,
                                    color: m.foreColor,
                                    parent: T,
                                    fontSize: y,
                                    dataLabelsConfig: x
                                })
                            }
                            return T
                        }
                    }, {
                        key: "addListeners",
                        value: function(a) {
                            var o = new J(this.ctx);
                            a.node.addEventListener("mouseenter", o.pathMouseEnter.bind(this, a)), a.node.addEventListener("mouseleave", o.pathMouseLeave.bind(this, a)), a.node.addEventListener("mousedown", o.pathMouseDown.bind(this, a))
                        }
                    }]), K
                }(),
                xs = function() {
                    function K(a, o) {
                        U(this, K), this.ctx = a, this.w = a.w, this.xRatio = o.xRatio, this.yRatio = o.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new _l(a), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0
                    }
                    return z(K, [{
                        key: "draw",
                        value: function(a) {
                            var o = this.w,
                                c = new J(this.ctx),
                                d = c.group({
                                    class: "apexcharts-heatmap"
                                });
                            d.attr("clip-path", "url(#gridRectMask".concat(o.globals.cuid, ")"));
                            var f = o.globals.gridWidth / o.globals.dataPoints,
                                p = o.globals.gridHeight / o.globals.series.length,
                                m = 0,
                                y = !1;
                            this.negRange = this.helpers.checkColorRange();
                            var x = a.slice();
                            o.config.yaxis[0].reversed && (y = !0, x.reverse());
                            for (var w = y ? 0 : x.length - 1; y ? w < x.length : w >= 0; y ? w++ : w--) {
                                var S = c.group({
                                    class: "apexcharts-series apexcharts-heatmap-series",
                                    seriesName: te.escapeString(o.globals.seriesNames[w]),
                                    rel: w + 1,
                                    "data:realIndex": w
                                });
                                if (this.ctx.series.addCollapsedClassToSeries(S, w), o.config.chart.dropShadow.enabled) {
                                    var T = o.config.chart.dropShadow;
                                    new Oe(this.ctx).dropShadow(S, T, w)
                                }
                                for (var k = 0, O = o.config.plotOptions.heatmap.shadeIntensity, B = 0; B < x[w].length; B++) {
                                    var $ = this.helpers.getShadeColor(o.config.chart.type, w, B, this.negRange),
                                        ne = $.color,
                                        re = $.colorProps;
                                    "image" === o.config.fill.type && (ne = new He(this.ctx).fillPath({
                                        seriesNumber: w,
                                        dataPointIndex: B,
                                        opacity: o.globals.hasNegs ? re.percent < 0 ? 1 - (1 + re.percent / 100) : O + re.percent / 100 : re.percent / 100,
                                        patternID: te.randomId(),
                                        width: o.config.fill.image.width ? o.config.fill.image.width : f,
                                        height: o.config.fill.image.height ? o.config.fill.image.height : p
                                    }));
                                    var A = c.drawRect(k, m, f, p, this.rectRadius);
                                    if (A.attr({
                                            cx: k,
                                            cy: m
                                        }), A.node.classList.add("apexcharts-heatmap-rect"), S.add(A), A.attr({
                                            fill: ne,
                                            i: w,
                                            index: w,
                                            j: B,
                                            val: a[w][B],
                                            "stroke-width": this.strokeWidth,
                                            stroke: o.config.plotOptions.heatmap.useFillColorAsStroke ? ne : o.globals.stroke.colors[0],
                                            color: ne
                                        }), this.helpers.addListeners(A), o.config.chart.animations.enabled && !o.globals.dataChanged) {
                                        var F = 1;
                                        o.globals.resized || (F = o.config.chart.animations.speed), this.animateHeatMap(A, k, m, f, p, F)
                                    }
                                    if (o.globals.dataChanged) {
                                        var X = 1;
                                        if (this.dynamicAnim.enabled && o.globals.shouldAnimate) {
                                            X = this.dynamicAnim.speed;
                                            var be = o.globals.previousPaths[w] && o.globals.previousPaths[w][B] && o.globals.previousPaths[w][B].color;
                                            be || (be = "rgba(255, 255, 255, 0)"), this.animateHeatColor(A, te.isColorHex(be) ? be : te.rgb2hex(be), te.isColorHex(ne) ? ne : te.rgb2hex(ne), X)
                                        }
                                    }
                                    var Se = (0, o.config.dataLabels.formatter)(o.globals.series[w][B], {
                                            value: o.globals.series[w][B],
                                            seriesIndex: w,
                                            dataPointIndex: B,
                                            w: o
                                        }),
                                        Le = this.helpers.calculateDataLabels({
                                            text: Se,
                                            x: k + f / 2,
                                            y: m + p / 2,
                                            i: w,
                                            j: B,
                                            colorProps: re,
                                            series: x
                                        });
                                    null !== Le && S.add(Le), k += f
                                }
                                m += p, d.add(S)
                            }
                            var ze = o.globals.yAxisScale[0].result.slice();
                            return o.config.yaxis[0].reversed ? ze.unshift("") : ze.push(""), o.globals.yAxisScale[0].result = ze, d
                        }
                    }, {
                        key: "animateHeatMap",
                        value: function(a, o, c, d, f, p) {
                            var m = new Pe(this.ctx);
                            m.animateRect(a, {
                                x: o + d / 2,
                                y: c + f / 2,
                                width: 0,
                                height: 0
                            }, {
                                x: o,
                                y: c,
                                width: d,
                                height: f
                            }, p, function() {
                                m.animationCompleted(a)
                            })
                        }
                    }, {
                        key: "animateHeatColor",
                        value: function(a, o, c, d) {
                            a.attr({
                                fill: o
                            }).animate(d).attr({
                                fill: c
                            })
                        }
                    }]), K
                }(),
                ea = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "drawYAxisTexts",
                        value: function(a, o, c, d) {
                            var f = this.w,
                                p = f.config.yaxis[0],
                                m = f.globals.yLabelFormatters[0];
                            return new J(this.ctx).drawText({
                                x: a + p.labels.offsetX,
                                y: o + p.labels.offsetY,
                                text: m(d, c),
                                textAnchor: "middle",
                                fontSize: p.labels.style.fontSize,
                                fontFamily: p.labels.style.fontFamily,
                                foreColor: Array.isArray(p.labels.style.colors) ? p.labels.style.colors[c] : p.labels.style.colors
                            })
                        }
                    }]), K
                }(),
                Ha = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w;
                        var o = this.w;
                        this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = void 0 !== o.globals.stroke.colors ? o.globals.stroke.colors : o.globals.colors, this.defaultSize = Math.min(o.globals.gridWidth, o.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = o.globals.gridWidth / 2, this.fullAngle = "radialBar" === o.config.chart.type ? 360 : Math.abs(o.config.plotOptions.pie.endAngle - o.config.plotOptions.pie.startAngle), this.initialAngle = o.config.plotOptions.pie.startAngle % this.fullAngle, o.globals.radialSize = this.defaultSize / 2.05 - o.config.stroke.width - (o.config.chart.sparkline.enabled ? 0 : o.config.chart.dropShadow.blur), this.donutSize = o.globals.radialSize * parseInt(o.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = []
                    }
                    return z(K, [{
                        key: "draw",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = new J(this.ctx);
                            if (this.ret = d.group({
                                    class: "apexcharts-pie"
                                }), c.globals.noData) return this.ret;
                            for (var f = 0, p = 0; p < a.length; p++) f += te.negToZero(a[p]);
                            var m = [],
                                y = d.group();
                            0 === f && (f = 1e-5), a.forEach(function(be) {
                                o.maxY = Math.max(o.maxY, be)
                            }), c.config.yaxis[0].max && (this.maxY = c.config.yaxis[0].max), "back" === c.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret);
                            for (var x = 0; x < a.length; x++) {
                                var w = this.fullAngle * te.negToZero(a[x]) / f;
                                m.push(w), "polarArea" === this.chartType ? (m[x] = this.fullAngle / a.length, this.sliceSizes.push(c.globals.radialSize * a[x] / this.maxY)) : this.sliceSizes.push(c.globals.radialSize)
                            }
                            if (c.globals.dataChanged) {
                                for (var S, T = 0, k = 0; k < c.globals.previousPaths.length; k++) T += te.negToZero(c.globals.previousPaths[k]);
                                for (var O = 0; O < c.globals.previousPaths.length; O++) S = this.fullAngle * te.negToZero(c.globals.previousPaths[O]) / T, this.prevSectorAngleArr.push(S)
                            }
                            this.donutSize < 0 && (this.donutSize = 0);
                            var B = c.config.plotOptions.pie.customScale,
                                re = c.globals.gridWidth / 2 - c.globals.gridWidth / 2 * B,
                                b = c.globals.gridHeight / 2 - c.globals.gridHeight / 2 * B;
                            if ("donut" === this.chartType) {
                                var A = d.drawCircle(this.donutSize);
                                A.attr({
                                    cx: this.centerX,
                                    cy: this.centerY,
                                    fill: c.config.plotOptions.pie.donut.background ? c.config.plotOptions.pie.donut.background : "transparent"
                                }), y.add(A)
                            }
                            var F = this.drawArcs(m, a);
                            if (this.sliceLabels.forEach(function(be) {
                                    F.add(be)
                                }), y.attr({
                                    transform: "translate(".concat(re, ", ").concat(b, ") scale(").concat(B, ")")
                                }), y.add(F), this.ret.add(y), this.donutDataLabels.show) {
                                var X = this.renderInnerDataLabels(this.donutDataLabels, {
                                    hollowSize: this.donutSize,
                                    centerX: this.centerX,
                                    centerY: this.centerY,
                                    opacity: this.donutDataLabels.show,
                                    translateX: re,
                                    translateY: b
                                });
                                this.ret.add(X)
                            }
                            return "front" === c.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret), this.ret
                        }
                    }, {
                        key: "drawArcs",
                        value: function(a, o) {
                            var c = this.w,
                                d = new Oe(this.ctx),
                                f = new J(this.ctx),
                                p = new He(this.ctx),
                                m = f.group({
                                    class: "apexcharts-slices"
                                }),
                                y = this.initialAngle,
                                x = this.initialAngle,
                                w = this.initialAngle,
                                S = this.initialAngle;
                            this.strokeWidth = c.config.stroke.show ? c.config.stroke.width : 0;
                            for (var T = 0; T < a.length; T++) {
                                var k = f.group({
                                    class: "apexcharts-series apexcharts-pie-series",
                                    seriesName: te.escapeString(c.globals.seriesNames[T]),
                                    rel: T + 1,
                                    "data:realIndex": T
                                });
                                m.add(k), w = (y = w) + a[T], S = (x = S) + this.prevSectorAngleArr[T];
                                var O = w < y ? this.fullAngle + w - y : w - y,
                                    B = p.fillPath({
                                        seriesNumber: T,
                                        size: this.sliceSizes[T],
                                        value: o[T]
                                    }),
                                    $ = this.getChangedPath(x, S),
                                    ne = f.drawPath({
                                        d: $,
                                        stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[T] : this.lineColorArr,
                                        strokeWidth: 0,
                                        fill: B,
                                        fillOpacity: c.config.fill.opacity,
                                        classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(T)
                                    });
                                ne.attr({
                                    index: 0,
                                    j: T
                                }), d.setSelectionFilter(ne, 0, T), c.config.chart.dropShadow.enabled && d.dropShadow(ne, c.config.chart.dropShadow, T), this.addListeners(ne, this.donutDataLabels), J.setAttrs(ne.node, {
                                    "data:angle": O,
                                    "data:startAngle": y,
                                    "data:strokeWidth": this.strokeWidth,
                                    "data:value": o[T]
                                });
                                var b = {
                                    x: 0,
                                    y: 0
                                };
                                "pie" === this.chartType || "polarArea" === this.chartType ? b = te.polarToCartesian(this.centerX, this.centerY, c.globals.radialSize / 1.25 + c.config.plotOptions.pie.dataLabels.offset, (y + O / 2) % this.fullAngle) : "donut" === this.chartType && (b = te.polarToCartesian(this.centerX, this.centerY, (c.globals.radialSize + this.donutSize) / 2 + c.config.plotOptions.pie.dataLabels.offset, (y + O / 2) % this.fullAngle)), k.add(ne);
                                var A = 0;
                                if (!this.initialAnim || c.globals.resized || c.globals.dataChanged ? this.animBeginArr.push(0) : (0 == (A = O / this.fullAngle * c.config.chart.animations.speed) && (A = 1), this.animDur = A + this.animDur, this.animBeginArr.push(this.animDur)), this.animatePaths(ne, this.dynamicAnim && c.globals.dataChanged ? {
                                        size: this.sliceSizes[T],
                                        endAngle: w,
                                        startAngle: y,
                                        prevStartAngle: x,
                                        prevEndAngle: S,
                                        animateStartingPos: !0,
                                        i: T,
                                        animBeginArr: this.animBeginArr,
                                        shouldSetPrevPaths: !0,
                                        dur: c.config.chart.animations.dynamicAnimation.speed
                                    } : {
                                        size: this.sliceSizes[T],
                                        endAngle: w,
                                        startAngle: y,
                                        i: T,
                                        totalItems: a.length - 1,
                                        animBeginArr: this.animBeginArr,
                                        dur: A
                                    }), c.config.plotOptions.pie.expandOnClick && "polarArea" !== this.chartType && ne.click(this.pieClicked.bind(this, T)), void 0 !== c.globals.selectedDataPoints[0] && c.globals.selectedDataPoints[0].indexOf(T) > -1 && this.pieClicked(T), c.config.dataLabels.enabled) {
                                    var F = b.x,
                                        X = b.y,
                                        be = 100 * O / this.fullAngle + "%";
                                    if (0 !== O && c.config.plotOptions.pie.dataLabels.minAngleToShowLabel < a[T]) {
                                        var Se = c.config.dataLabels.formatter;
                                        void 0 !== Se && (be = Se(c.globals.seriesPercent[T][0], {
                                            seriesIndex: T,
                                            w: c
                                        }));
                                        var Le = c.globals.dataLabels.style.colors[T],
                                            ze = f.group({
                                                class: "apexcharts-datalabels"
                                            }),
                                            nt = f.drawText({
                                                x: F,
                                                y: X,
                                                text: be,
                                                textAnchor: "middle",
                                                fontSize: c.config.dataLabels.style.fontSize,
                                                fontFamily: c.config.dataLabels.style.fontFamily,
                                                fontWeight: c.config.dataLabels.style.fontWeight,
                                                foreColor: Le
                                            });
                                        ze.add(nt), c.config.dataLabels.dropShadow.enabled && d.dropShadow(nt, c.config.dataLabels.dropShadow), nt.node.classList.add("apexcharts-pie-label"), c.config.chart.animations.animate && !1 === c.globals.resized && (nt.node.classList.add("apexcharts-pie-label-delay"), nt.node.style.animationDelay = c.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(ze)
                                    }
                                }
                            }
                            return m
                        }
                    }, {
                        key: "addListeners",
                        value: function(a, o) {
                            var c = new J(this.ctx);
                            a.node.addEventListener("mouseenter", c.pathMouseEnter.bind(this, a)), a.node.addEventListener("mouseleave", c.pathMouseLeave.bind(this, a)), a.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, a.node, o)), a.node.addEventListener("mousedown", c.pathMouseDown.bind(this, a)), this.donutDataLabels.total.showAlways || (a.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, a.node, o)), a.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, a.node, o)))
                        }
                    }, {
                        key: "animatePaths",
                        value: function(a, o) {
                            var d = o.endAngle < o.startAngle ? this.fullAngle + o.endAngle - o.startAngle : o.endAngle - o.startAngle,
                                f = d,
                                p = o.startAngle,
                                m = o.startAngle;
                            void 0 !== o.prevStartAngle && void 0 !== o.prevEndAngle && (p = o.prevEndAngle, f = o.prevEndAngle < o.prevStartAngle ? this.fullAngle + o.prevEndAngle - o.prevStartAngle : o.prevEndAngle - o.prevStartAngle), o.i === this.w.config.series.length - 1 && (d + m > this.fullAngle ? o.endAngle = o.endAngle - (d + m) : d + m < this.fullAngle && (o.endAngle = o.endAngle + (this.fullAngle - (d + m)))), d === this.fullAngle && (d = this.fullAngle - .01), this.animateArc(a, p, m, d, f, o)
                        }
                    }, {
                        key: "animateArc",
                        value: function(a, o, c, d, f, p) {
                            var m, y = this,
                                x = this.w,
                                w = new Pe(this.ctx),
                                S = p.size;
                            (isNaN(o) || isNaN(f)) && (o = c, f = d, p.dur = 0);
                            var T = d,
                                k = c,
                                O = o < c ? this.fullAngle + o - c : o - c;
                            x.globals.dataChanged && p.shouldSetPrevPaths && p.prevEndAngle && (m = y.getPiePath({
                                me: y,
                                startAngle: p.prevStartAngle,
                                angle: p.prevEndAngle < p.prevStartAngle ? this.fullAngle + p.prevEndAngle - p.prevStartAngle : p.prevEndAngle - p.prevStartAngle,
                                size: S
                            }), a.attr({
                                d: m
                            })), 0 !== p.dur ? a.animate(p.dur, x.globals.easing, p.animBeginArr[p.i]).afterAll(function() {
                                "pie" !== y.chartType && "donut" !== y.chartType && "polarArea" !== y.chartType || this.animate(x.config.chart.animations.dynamicAnimation.speed).attr({
                                    "stroke-width": y.strokeWidth
                                }), p.i === x.config.series.length - 1 && w.animationCompleted(a)
                            }).during(function(B) {
                                T = O + (d - O) * B, p.animateStartingPos && (T = f + (d - f) * B, k = o - f + (c - (o - f)) * B), m = y.getPiePath({
                                    me: y,
                                    startAngle: k,
                                    angle: T,
                                    size: S
                                }), a.node.setAttribute("data:pathOrig", m), a.attr({
                                    d: m
                                })
                            }) : (m = y.getPiePath({
                                me: y,
                                startAngle: k,
                                angle: d,
                                size: S
                            }), p.isTrack || (x.globals.animationEnded = !0), a.node.setAttribute("data:pathOrig", m), a.attr({
                                d: m,
                                "stroke-width": y.strokeWidth
                            }))
                        }
                    }, {
                        key: "pieClicked",
                        value: function(a) {
                            var o, c = this.w,
                                d = this,
                                f = d.sliceSizes[a] + (c.config.plotOptions.pie.expandOnClick ? 4 : 0),
                                p = c.globals.dom.Paper.select(".apexcharts-".concat(d.chartType.toLowerCase(), "-slice-").concat(a)).members[0];
                            if ("true" !== p.attr("data:pieClicked")) {
                                var m = c.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
                                Array.prototype.forEach.call(m, function(S) {
                                    S.setAttribute("data:pieClicked", "false");
                                    var T = S.getAttribute("data:pathOrig");
                                    T && S.setAttribute("d", T)
                                }), p.attr("data:pieClicked", "true");
                                var y = parseInt(p.attr("data:startAngle"), 10),
                                    x = parseInt(p.attr("data:angle"), 10);
                                o = d.getPiePath({
                                    me: d,
                                    startAngle: y,
                                    angle: x,
                                    size: f
                                }), 360 !== x && p.plot(o)
                            } else {
                                p.attr({
                                    "data:pieClicked": "false"
                                }), this.revertDataLabelsInner(p.node, this.donutDataLabels);
                                var w = p.attr("data:pathOrig");
                                p.attr({
                                    d: w
                                })
                            }
                        }
                    }, {
                        key: "getChangedPath",
                        value: function(a, o) {
                            var c = "";
                            return this.dynamicAnim && this.w.globals.dataChanged && (c = this.getPiePath({
                                me: this,
                                startAngle: a,
                                angle: o - a,
                                size: this.size
                            })), c
                        }
                    }, {
                        key: "getPiePath",
                        value: function(a) {
                            var o, c = a.me,
                                d = a.startAngle,
                                f = a.angle,
                                p = a.size,
                                m = new J(this.ctx),
                                y = d,
                                x = Math.PI * (y - 90) / 180,
                                w = f + d;
                            Math.ceil(w) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (w = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - .01), Math.ceil(w) > this.fullAngle && (w -= this.fullAngle);
                            var S = Math.PI * (w - 90) / 180,
                                T = c.centerX + p * Math.cos(x),
                                k = c.centerY + p * Math.sin(x),
                                O = c.centerX + p * Math.cos(S),
                                B = c.centerY + p * Math.sin(S),
                                $ = te.polarToCartesian(c.centerX, c.centerY, c.donutSize, w),
                                ne = te.polarToCartesian(c.centerX, c.centerY, c.donutSize, y),
                                re = f > 180 ? 1 : 0,
                                b = ["M", T, k, "A", p, p, 0, re, 1, O, B];
                            return o = "donut" === c.chartType ? [].concat(b, ["L", $.x, $.y, "A", c.donutSize, c.donutSize, 0, re, 0, ne.x, ne.y, "L", T, k, "z"]).join(" ") : "pie" === c.chartType || "polarArea" === c.chartType ? [].concat(b, ["L", c.centerX, c.centerY, "L", T, k]).join(" ") : [].concat(b).join(" "), m.roundPathCorners(o, 2 * this.strokeWidth)
                        }
                    }, {
                        key: "drawPolarElements",
                        value: function(a) {
                            var o = this.w,
                                c = new vn(this.ctx),
                                d = new J(this.ctx),
                                f = new ea(this.ctx),
                                p = d.group(),
                                m = d.group(),
                                y = c.niceScale(0, Math.ceil(this.maxY), o.config.yaxis[0].tickAmount, 0, !0),
                                x = y.result.reverse(),
                                w = y.result.length;
                            this.maxY = y.niceMax;
                            for (var S = o.globals.radialSize, T = S / (w - 1), k = 0; k < w - 1; k++) {
                                var O = d.drawCircle(S);
                                if (O.attr({
                                        cx: this.centerX,
                                        cy: this.centerY,
                                        fill: "none",
                                        "stroke-width": o.config.plotOptions.polarArea.rings.strokeWidth,
                                        stroke: o.config.plotOptions.polarArea.rings.strokeColor
                                    }), o.config.yaxis[0].show) {
                                    var B = f.drawYAxisTexts(this.centerX, this.centerY - S + parseInt(o.config.yaxis[0].labels.style.fontSize, 10) / 2, k, x[k]);
                                    m.add(B)
                                }
                                p.add(O), S -= T
                            }
                            this.drawSpokes(a), a.add(p), a.add(m)
                        }
                    }, {
                        key: "renderInnerDataLabels",
                        value: function(a, o) {
                            var c = this.w,
                                d = new J(this.ctx),
                                f = d.group({
                                    class: "apexcharts-datalabels-group",
                                    transform: "translate(".concat(o.translateX ? o.translateX : 0, ", ").concat(o.translateY ? o.translateY : 0, ") scale(").concat(c.config.plotOptions.pie.customScale, ")")
                                }),
                                p = a.total.show;
                            f.node.style.opacity = o.opacity;
                            var m, y, x = o.centerX,
                                w = o.centerY;
                            m = void 0 === a.name.color ? c.globals.colors[0] : a.name.color;
                            var S = a.name.fontSize,
                                T = a.name.fontFamily,
                                k = a.name.fontWeight;
                            y = void 0 === a.value.color ? c.config.chart.foreColor : a.value.color;
                            var O = a.value.formatter,
                                B = "",
                                $ = "";
                            if (p ? (m = a.total.color, S = a.total.fontSize, T = a.total.fontFamily, k = a.total.fontWeight, $ = a.total.label, B = a.total.formatter(c)) : 1 === c.globals.series.length && (B = O(c.globals.series[0], c), $ = c.globals.seriesNames[0]), $ && ($ = a.name.formatter($, a.total.show, c)), a.name.show) {
                                var ne = d.drawText({
                                    x,
                                    y: w + parseFloat(a.name.offsetY),
                                    text: $,
                                    textAnchor: "middle",
                                    foreColor: m,
                                    fontSize: S,
                                    fontWeight: k,
                                    fontFamily: T
                                });
                                ne.node.classList.add("apexcharts-datalabel-label"), f.add(ne)
                            }
                            if (a.value.show) {
                                var re = a.name.show ? parseFloat(a.value.offsetY) + 16 : a.value.offsetY,
                                    b = d.drawText({
                                        x,
                                        y: w + re,
                                        text: B,
                                        textAnchor: "middle",
                                        foreColor: y,
                                        fontWeight: a.value.fontWeight,
                                        fontSize: a.value.fontSize,
                                        fontFamily: a.value.fontFamily
                                    });
                                b.node.classList.add("apexcharts-datalabel-value"), f.add(b)
                            }
                            return f
                        }
                    }, {
                        key: "printInnerLabels",
                        value: function(a, o, c, d) {
                            var f, p = this.w;
                            d ? f = void 0 === a.name.color ? p.globals.colors[parseInt(d.parentNode.getAttribute("rel"), 10) - 1] : a.name.color : p.globals.series.length > 1 && a.total.show && (f = a.total.color);
                            var m = p.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),
                                y = p.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
                            c = (0, a.value.formatter)(c, p), d || "function" != typeof a.total.formatter || (c = a.total.formatter(p)), o = a.name.formatter(o, o === a.total.label, p), null !== m && (m.textContent = o), null !== y && (y.textContent = c), null !== m && (m.style.fill = f)
                        }
                    }, {
                        key: "printDataLabelsInner",
                        value: function(a, o) {
                            var c = this.w,
                                d = a.getAttribute("data:value"),
                                f = c.globals.seriesNames[parseInt(a.parentNode.getAttribute("rel"), 10) - 1];
                            c.globals.series.length > 1 && this.printInnerLabels(o, f, d, a);
                            var p = c.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
                            null !== p && (p.style.opacity = 1)
                        }
                    }, {
                        key: "drawSpokes",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = new J(this.ctx),
                                f = c.config.plotOptions.polarArea.spokes;
                            if (0 !== f.strokeWidth) {
                                for (var p = [], m = 360 / c.globals.series.length, y = 0; y < c.globals.series.length; y++) p.push(te.polarToCartesian(this.centerX, this.centerY, c.globals.radialSize, c.config.plotOptions.pie.startAngle + m * y));
                                p.forEach(function(x, w) {
                                    var S = d.drawLine(x.x, x.y, o.centerX, o.centerY, Array.isArray(f.connectorColors) ? f.connectorColors[w] : f.connectorColors);
                                    a.add(S)
                                })
                            }
                        }
                    }, {
                        key: "revertDataLabelsInner",
                        value: function(a, o, c) {
                            var d = this,
                                f = this.w,
                                p = f.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),
                                m = !1,
                                y = f.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"),
                                x = function(T) {
                                    var k = T.makeSliceOut,
                                        O = T.printLabel;
                                    Array.prototype.forEach.call(y, function(B) {
                                        "true" === B.getAttribute("data:pieClicked") && (k && (m = !0), O && d.printDataLabelsInner(B, o))
                                    })
                                };
                            if (x({
                                    makeSliceOut: !0,
                                    printLabel: !1
                                }), o.total.show && f.globals.series.length > 1) m && !o.total.showAlways ? x({
                                makeSliceOut: !1,
                                printLabel: !0
                            }) : this.printInnerLabels(o, o.total.label, o.total.formatter(f));
                            else if (x({
                                    makeSliceOut: !1,
                                    printLabel: !0
                                }), !m)
                                if (f.globals.selectedDataPoints.length && f.globals.series.length > 1)
                                    if (f.globals.selectedDataPoints[0].length > 0) {
                                        var w = f.globals.selectedDataPoints[0],
                                            S = f.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(w));
                                        this.printDataLabelsInner(S, o)
                                    } else p && f.globals.selectedDataPoints.length && 0 === f.globals.selectedDataPoints[0].length && (p.style.opacity = 0);
                            else p && f.globals.series.length > 1 && (p.style.opacity = 0)
                        }
                    }]), K
                }(),
                ao = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
                        var o = this.w;
                        this.graphics = new J(this.ctx), this.lineColorArr = void 0 !== o.globals.stroke.colors ? o.globals.stroke.colors : o.globals.colors, this.defaultSize = o.globals.svgHeight < o.globals.svgWidth ? o.globals.gridHeight + 1.5 * o.globals.goldenPadding : o.globals.gridWidth, this.isLog = o.config.yaxis[0].logarithmic, this.coreUtils = new Ie(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(o.globals.maxY, 0) : o.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : o.globals.minY, this.polygons = o.config.plotOptions.radar.polygons, this.strokeWidth = o.config.stroke.show ? o.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - o.config.chart.dropShadow.blur, o.config.xaxis.labels.show && (this.size = this.size - o.globals.xAxisLabelsWidth / 1.75), void 0 !== o.config.plotOptions.radar.size && (this.size = o.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = []
                    }
                    return z(K, [{
                        key: "draw",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = new He(this.ctx),
                                f = [],
                                p = new Dt(this.ctx);
                            a.length && (this.dataPointsLen = a[c.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
                            var w = c.globals.gridHeight / 2 + c.config.plotOptions.radar.offsetY,
                                S = this.graphics.group({
                                    class: "apexcharts-radar-series apexcharts-plot-series",
                                    transform: "translate(".concat(c.globals.gridWidth / 2 + c.config.plotOptions.radar.offsetX || 0, ", ").concat(w || 0, ")")
                                }),
                                T = [],
                                k = null,
                                O = null;
                            if (this.yaxisLabels = this.graphics.group({
                                    class: "apexcharts-yaxis"
                                }), a.forEach(function($, ne) {
                                    var re = $.length === c.globals.dataPoints,
                                        b = o.graphics.group().attr({
                                            class: "apexcharts-series",
                                            "data:longestSeries": re,
                                            seriesName: te.escapeString(c.globals.seriesNames[ne]),
                                            rel: ne + 1,
                                            "data:realIndex": ne
                                        });
                                    o.dataRadiusOfPercent[ne] = [], o.dataRadius[ne] = [], o.angleArr[ne] = [], $.forEach(function(dt, Tt) {
                                        var wt = Math.abs(o.maxValue - o.minValue);
                                        dt += Math.abs(o.minValue), o.isLog && (dt = o.coreUtils.getLogVal(dt, 0)), o.dataRadiusOfPercent[ne][Tt] = dt / wt, o.dataRadius[ne][Tt] = o.dataRadiusOfPercent[ne][Tt] * o.size, o.angleArr[ne][Tt] = Tt * o.disAngle
                                    }), T = o.getDataPointsPos(o.dataRadius[ne], o.angleArr[ne]);
                                    var A = o.createPaths(T, {
                                        x: 0,
                                        y: 0
                                    });
                                    k = o.graphics.group({
                                        class: "apexcharts-series-markers-wrap apexcharts-element-hidden"
                                    }), O = o.graphics.group({
                                        class: "apexcharts-datalabels",
                                        "data:realIndex": ne
                                    }), c.globals.delayedElements.push({
                                        el: k.node,
                                        index: ne
                                    });
                                    var F = {
                                            i: ne,
                                            realIndex: ne,
                                            animationDelay: ne,
                                            initialSpeed: c.config.chart.animations.speed,
                                            dataChangeSpeed: c.config.chart.animations.dynamicAnimation.speed,
                                            className: "apexcharts-radar",
                                            shouldClipToGrid: !1,
                                            bindEventsOnPaths: !1,
                                            stroke: c.globals.stroke.colors[ne],
                                            strokeLineCap: c.config.stroke.lineCap
                                        },
                                        X = null;
                                    c.globals.previousPaths.length > 0 && (X = o.getPreviousPath(ne));
                                    for (var be = 0; be < A.linePathsTo.length; be++) {
                                        var Se = o.graphics.renderPaths(ge(ge({}, F), {}, {
                                            pathFrom: null === X ? A.linePathsFrom[be] : X,
                                            pathTo: A.linePathsTo[be],
                                            strokeWidth: Array.isArray(o.strokeWidth) ? o.strokeWidth[ne] : o.strokeWidth,
                                            fill: "none",
                                            drawShadow: !1
                                        }));
                                        b.add(Se);
                                        var Le = d.fillPath({
                                                seriesNumber: ne
                                            }),
                                            ze = o.graphics.renderPaths(ge(ge({}, F), {}, {
                                                pathFrom: null === X ? A.areaPathsFrom[be] : X,
                                                pathTo: A.areaPathsTo[be],
                                                strokeWidth: 0,
                                                fill: Le,
                                                drawShadow: !1
                                            }));
                                        c.config.chart.dropShadow.enabled && new Oe(o.ctx).dropShadow(ze, Object.assign({}, c.config.chart.dropShadow, {
                                            noUserSpaceOnUse: !0
                                        }), ne), b.add(ze)
                                    }
                                    $.forEach(function(dt, Tt) {
                                        var wt = new St(o.ctx).getMarkerConfig({
                                                cssClass: "apexcharts-marker",
                                                seriesIndex: ne,
                                                dataPointIndex: Tt
                                            }),
                                            ln = o.graphics.drawMarker(T[Tt].x, T[Tt].y, wt);
                                        ln.attr("rel", Tt), ln.attr("j", Tt), ln.attr("index", ne), ln.node.setAttribute("default-marker-size", wt.pSize);
                                        var Jt = o.graphics.group({
                                            class: "apexcharts-series-markers"
                                        });
                                        Jt && Jt.add(ln), k.add(Jt), b.add(k);
                                        var Qn = c.config.dataLabels;
                                        if (Qn.enabled) {
                                            var Ti = Qn.formatter(c.globals.series[ne][Tt], {
                                                seriesIndex: ne,
                                                dataPointIndex: Tt,
                                                w: c
                                            });
                                            p.plotDataLabelsText({
                                                x: T[Tt].x,
                                                y: T[Tt].y,
                                                text: Ti,
                                                textAnchor: "middle",
                                                i: ne,
                                                j: ne,
                                                parent: O,
                                                offsetCorrection: !1,
                                                dataLabelsConfig: ge({}, Qn)
                                            })
                                        }
                                        b.add(O)
                                    }), f.push(b)
                                }), this.drawPolygons({
                                    parent: S
                                }), c.config.xaxis.labels.show) {
                                var B = this.drawXAxisTexts();
                                S.add(B)
                            }
                            return f.forEach(function($) {
                                S.add($)
                            }), S.add(this.yaxisLabels), S
                        }
                    }, {
                        key: "drawPolygons",
                        value: function(a) {
                            for (var o = this, c = this.w, d = a.parent, f = new ea(this.ctx), p = c.globals.yAxisScale[0].result.reverse(), m = p.length, y = [], x = this.size / (m - 1), w = 0; w < m; w++) y[w] = x * w;
                            y.reverse();
                            var S = [],
                                T = [];
                            y.forEach(function(k, O) {
                                var B = te.getPolygonPos(k, o.dataPointsLen),
                                    $ = "";
                                B.forEach(function(ne, re) {
                                    if (0 === O) {
                                        var b = o.graphics.drawLine(ne.x, ne.y, 0, 0, Array.isArray(o.polygons.connectorColors) ? o.polygons.connectorColors[re] : o.polygons.connectorColors);
                                        T.push(b)
                                    }
                                    0 === re && o.yaxisLabelsTextsPos.push({
                                        x: ne.x,
                                        y: ne.y
                                    }), $ += ne.x + "," + ne.y + " "
                                }), S.push($)
                            }), S.forEach(function(k, O) {
                                var B = o.polygons.strokeColors,
                                    $ = o.polygons.strokeWidth,
                                    ne = o.graphics.drawPolygon(k, Array.isArray(B) ? B[O] : B, Array.isArray($) ? $[O] : $, c.globals.radarPolygons.fill.colors[O]);
                                d.add(ne)
                            }), T.forEach(function(k) {
                                d.add(k)
                            }), c.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function(k, O) {
                                var B = f.drawYAxisTexts(k.x, k.y, O, p[O]);
                                o.yaxisLabels.add(B)
                            })
                        }
                    }, {
                        key: "drawXAxisTexts",
                        value: function() {
                            var a = this,
                                o = this.w,
                                c = o.config.xaxis.labels,
                                d = this.graphics.group({
                                    class: "apexcharts-xaxis"
                                }),
                                f = te.getPolygonPos(this.size, this.dataPointsLen);
                            return o.globals.labels.forEach(function(p, m) {
                                var y = o.config.xaxis.labels.formatter,
                                    x = new Dt(a.ctx);
                                if (f[m]) {
                                    var w = a.getTextPos(f[m], a.size),
                                        S = y(p, {
                                            seriesIndex: -1,
                                            dataPointIndex: m,
                                            w: o
                                        });
                                    x.plotDataLabelsText({
                                        x: w.newX,
                                        y: w.newY,
                                        text: S,
                                        textAnchor: w.textAnchor,
                                        i: m,
                                        j: m,
                                        parent: d,
                                        color: Array.isArray(c.style.colors) && c.style.colors[m] ? c.style.colors[m] : "#a8a8a8",
                                        dataLabelsConfig: ge({
                                            textAnchor: w.textAnchor,
                                            dropShadow: {
                                                enabled: !1
                                            }
                                        }, c),
                                        offsetCorrection: !1
                                    })
                                }
                            }), d
                        }
                    }, {
                        key: "createPaths",
                        value: function(a, o) {
                            var c = this,
                                d = [],
                                f = [],
                                p = [],
                                m = [];
                            if (a.length) {
                                f = [this.graphics.move(o.x, o.y)], m = [this.graphics.move(o.x, o.y)];
                                var y = this.graphics.move(a[0].x, a[0].y),
                                    x = this.graphics.move(a[0].x, a[0].y);
                                a.forEach(function(w, S) {
                                    y += c.graphics.line(w.x, w.y), x += c.graphics.line(w.x, w.y), S === a.length - 1 && (y += "Z", x += "Z")
                                }), d.push(y), p.push(x)
                            }
                            return {
                                linePathsFrom: f,
                                linePathsTo: d,
                                areaPathsFrom: m,
                                areaPathsTo: p
                            }
                        }
                    }, {
                        key: "getTextPos",
                        value: function(a, o) {
                            var c = "middle",
                                d = a.x,
                                f = a.y;
                            return Math.abs(a.x) >= 10 ? a.x > 0 ? (c = "start", d += 10) : a.x < 0 && (c = "end", d -= 10) : c = "middle", Math.abs(a.y) >= o - 10 && (a.y < 0 ? f -= 10 : a.y > 0 && (f += 10)), {
                                textAnchor: c,
                                newX: d,
                                newY: f
                            }
                        }
                    }, {
                        key: "getPreviousPath",
                        value: function(a) {
                            for (var o = this.w, c = null, d = 0; d < o.globals.previousPaths.length; d++) {
                                var f = o.globals.previousPaths[d];
                                f.paths.length > 0 && parseInt(f.realIndex, 10) === parseInt(a, 10) && void 0 !== o.globals.previousPaths[d].paths[0] && (c = o.globals.previousPaths[d].paths[0].d)
                            }
                            return c
                        }
                    }, {
                        key: "getDataPointsPos",
                        value: function(a, o) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
                            a = a || [], o = o || [];
                            for (var d = [], f = 0; f < c; f++) {
                                var p = {};
                                p.x = a[f] * Math.sin(o[f]), p.y = -a[f] * Math.cos(o[f]), d.push(p)
                            }
                            return d
                        }
                    }]), K
                }(),
                Un = function(K) {
                    ee(o, Ha);
                    var a = Me(o);

                    function o(c) {
                        var d;
                        U(this, o), (d = a.call(this, c)).ctx = c, d.w = c.w, d.animBeginArr = [0], d.animDur = 0;
                        var f = d.w;
                        return d.startAngle = f.config.plotOptions.radialBar.startAngle, d.endAngle = f.config.plotOptions.radialBar.endAngle, d.totalAngle = Math.abs(f.config.plotOptions.radialBar.endAngle - f.config.plotOptions.radialBar.startAngle), d.trackStartAngle = f.config.plotOptions.radialBar.track.startAngle, d.trackEndAngle = f.config.plotOptions.radialBar.track.endAngle, d.barLabels = d.w.config.plotOptions.radialBar.barLabels, d.donutDataLabels = d.w.config.plotOptions.radialBar.dataLabels, d.radialDataLabels = d.donutDataLabels, d.trackStartAngle || (d.trackStartAngle = d.startAngle), d.trackEndAngle || (d.trackEndAngle = d.endAngle), 360 === d.endAngle && (d.endAngle = 359.99), d.margin = parseInt(f.config.plotOptions.radialBar.track.margin, 10), d.onBarLabelClick = d.onBarLabelClick.bind(Te(d)), d
                    }
                    return z(o, [{
                        key: "draw",
                        value: function(c) {
                            var d = this.w,
                                f = new J(this.ctx),
                                p = f.group({
                                    class: "apexcharts-radialbar"
                                });
                            if (d.globals.noData) return p;
                            var m = f.group(),
                                y = this.defaultSize / 2,
                                x = d.globals.gridWidth / 2,
                                w = this.defaultSize / 2.05;
                            d.config.chart.sparkline.enabled || (w = w - d.config.stroke.width - d.config.chart.dropShadow.blur);
                            var S = d.globals.fill.colors;
                            if (d.config.plotOptions.radialBar.track.show) {
                                var T = this.drawTracks({
                                    size: w,
                                    centerX: x,
                                    centerY: y,
                                    colorArr: S,
                                    series: c
                                });
                                m.add(T)
                            }
                            var k = this.drawArcs({
                                    size: w,
                                    centerX: x,
                                    centerY: y,
                                    colorArr: S,
                                    series: c
                                }),
                                O = 360;
                            d.config.plotOptions.radialBar.startAngle < 0 && (O = this.totalAngle);
                            var B = (360 - O) / 360;
                            if (d.globals.radialSize = w - w * B, this.radialDataLabels.value.show) {
                                var $ = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
                                d.globals.radialSize += $ * B
                            }
                            return m.add(k.g), "front" === d.config.plotOptions.radialBar.hollow.position && (k.g.add(k.elHollow), k.dataLabels && k.g.add(k.dataLabels)), p.add(m), p
                        }
                    }, {
                        key: "drawTracks",
                        value: function(c) {
                            var d = this.w,
                                f = new J(this.ctx),
                                p = f.group({
                                    class: "apexcharts-tracks"
                                }),
                                m = new Oe(this.ctx),
                                y = new He(this.ctx),
                                x = this.getStrokeWidth(c);
                            c.size = c.size - x / 2;
                            for (var w = 0; w < c.series.length; w++) {
                                var S = f.group({
                                    class: "apexcharts-radialbar-track apexcharts-track"
                                });
                                p.add(S), S.attr({
                                    rel: w + 1
                                }), c.size = c.size - x - this.margin;
                                var T = d.config.plotOptions.radialBar.track,
                                    k = y.fillPath({
                                        seriesNumber: 0,
                                        size: c.size,
                                        fillColors: Array.isArray(T.background) ? T.background[w] : T.background,
                                        solid: !0
                                    }),
                                    O = this.trackStartAngle,
                                    B = this.trackEndAngle;
                                Math.abs(B) + Math.abs(O) >= 360 && (B = 360 - Math.abs(this.startAngle) - .1);
                                var $ = f.drawPath({
                                    d: "",
                                    stroke: k,
                                    strokeWidth: x * parseInt(T.strokeWidth, 10) / 100,
                                    fill: "none",
                                    strokeOpacity: T.opacity,
                                    classes: "apexcharts-radialbar-area"
                                });
                                T.dropShadow.enabled && m.dropShadow($, T.dropShadow), S.add($), $.attr("id", "apexcharts-radialbarTrack-" + w), this.animatePaths($, {
                                    centerX: c.centerX,
                                    centerY: c.centerY,
                                    endAngle: B,
                                    startAngle: O,
                                    size: c.size,
                                    i: w,
                                    totalItems: 2,
                                    animBeginArr: 0,
                                    dur: 0,
                                    isTrack: !0,
                                    easing: d.globals.easing
                                })
                            }
                            return p
                        }
                    }, {
                        key: "drawArcs",
                        value: function(c) {
                            var d = this.w,
                                f = new J(this.ctx),
                                p = new He(this.ctx),
                                m = new Oe(this.ctx),
                                y = f.group(),
                                x = this.getStrokeWidth(c);
                            c.size = c.size - x / 2;
                            var w = d.config.plotOptions.radialBar.hollow.background,
                                S = c.size - x * c.series.length - this.margin * c.series.length - x * parseInt(d.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2,
                                T = S - d.config.plotOptions.radialBar.hollow.margin;
                            void 0 !== d.config.plotOptions.radialBar.hollow.image && (w = this.drawHollowImage(c, y, S, w));
                            var k = this.drawHollow({
                                size: T,
                                centerX: c.centerX,
                                centerY: c.centerY,
                                fill: w || "transparent"
                            });
                            d.config.plotOptions.radialBar.hollow.dropShadow.enabled && m.dropShadow(k, d.config.plotOptions.radialBar.hollow.dropShadow);
                            var B = 1;
                            !this.radialDataLabels.total.show && d.globals.series.length > 1 && (B = 0);
                            var $ = null;
                            this.radialDataLabels.show && ($ = this.renderInnerDataLabels(this.radialDataLabels, {
                                hollowSize: S,
                                centerX: c.centerX,
                                centerY: c.centerY,
                                opacity: B
                            })), "back" === d.config.plotOptions.radialBar.hollow.position && (y.add(k), $ && y.add($));
                            var ne = !1;
                            d.config.plotOptions.radialBar.inverseOrder && (ne = !0);
                            for (var re = ne ? c.series.length - 1 : 0; ne ? re >= 0 : re < c.series.length; ne ? re-- : re++) {
                                var b = f.group({
                                    class: "apexcharts-series apexcharts-radial-series",
                                    seriesName: te.escapeString(d.globals.seriesNames[re])
                                });
                                y.add(b), b.attr({
                                    rel: re + 1,
                                    "data:realIndex": re
                                }), this.ctx.series.addCollapsedClassToSeries(b, re), c.size = c.size - x - this.margin;
                                var A = p.fillPath({
                                        seriesNumber: re,
                                        size: c.size,
                                        value: c.series[re]
                                    }),
                                    F = this.startAngle,
                                    X = void 0,
                                    be = te.negToZero(c.series[re] > 100 ? 100 : c.series[re]) / 100,
                                    Se = Math.round(this.totalAngle * be) + this.startAngle,
                                    Le = void 0;
                                d.globals.dataChanged && (X = this.startAngle, Le = Math.round(this.totalAngle * te.negToZero(d.globals.previousPaths[re]) / 100) + X), Math.abs(Se) + Math.abs(F) >= 360 && (Se -= .01), Math.abs(Le) + Math.abs(X) >= 360 && (Le -= .01);
                                var ze = Se - F,
                                    nt = Array.isArray(d.config.stroke.dashArray) ? d.config.stroke.dashArray[re] : d.config.stroke.dashArray,
                                    yt = f.drawPath({
                                        d: "",
                                        stroke: A,
                                        strokeWidth: x,
                                        fill: "none",
                                        fillOpacity: d.config.fill.opacity,
                                        classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + re,
                                        strokeDashArray: nt
                                    });
                                if (J.setAttrs(yt.node, {
                                        "data:angle": ze,
                                        "data:value": c.series[re]
                                    }), d.config.chart.dropShadow.enabled && m.dropShadow(yt, d.config.chart.dropShadow, re), m.setSelectionFilter(yt, 0, re), this.addListeners(yt, this.radialDataLabels), b.add(yt), yt.attr({
                                        index: 0,
                                        j: re
                                    }), this.barLabels.enabled) {
                                    var Tt = te.polarToCartesian(c.centerX, c.centerY, c.size, F),
                                        wt = this.barLabels.formatter(d.globals.seriesNames[re], {
                                            seriesIndex: re,
                                            w: d
                                        }),
                                        ln = ["apexcharts-radialbar-label"];
                                    this.barLabels.onClick || ln.push("apexcharts-no-click");
                                    var Jt = this.barLabels.useSeriesColors ? d.globals.colors[re] : d.config.chart.foreColor;
                                    Jt || (Jt = d.config.chart.foreColor);
                                    var Qn = Tt.x - this.barLabels.margin,
                                        Ti = Tt.y,
                                        ke = f.drawText({
                                            x: Qn,
                                            y: Ti,
                                            text: wt,
                                            textAnchor: "end",
                                            dominantBaseline: "middle",
                                            fontFamily: this.barLabels.fontFamily,
                                            fontWeight: this.barLabels.fontWeight,
                                            fontSize: this.barLabels.fontSize,
                                            foreColor: Jt,
                                            cssClass: ln.join(" ")
                                        });
                                    ke.on("click", this.onBarLabelClick), ke.attr({
                                        rel: re + 1
                                    }), 0 !== F && ke.attr({
                                        "transform-origin": "".concat(Qn, " ").concat(Ti),
                                        transform: "rotate(".concat(F, " 0 0)")
                                    }), b.add(ke)
                                }
                                var Ke = 0;
                                !this.initialAnim || d.globals.resized || d.globals.dataChanged || (Ke = d.config.chart.animations.speed), d.globals.dataChanged && (Ke = d.config.chart.animations.dynamicAnimation.speed), this.animDur = Ke / (1.2 * c.series.length) + this.animDur, this.animBeginArr.push(this.animDur), this.animatePaths(yt, {
                                    centerX: c.centerX,
                                    centerY: c.centerY,
                                    endAngle: Se,
                                    startAngle: F,
                                    prevEndAngle: Le,
                                    prevStartAngle: X,
                                    size: c.size,
                                    i: re,
                                    totalItems: 2,
                                    animBeginArr: this.animBeginArr,
                                    dur: Ke,
                                    shouldSetPrevPaths: !0,
                                    easing: d.globals.easing
                                })
                            }
                            return {
                                g: y,
                                elHollow: k,
                                dataLabels: $
                            }
                        }
                    }, {
                        key: "drawHollow",
                        value: function(c) {
                            var d = new J(this.ctx).drawCircle(2 * c.size);
                            return d.attr({
                                class: "apexcharts-radialbar-hollow",
                                cx: c.centerX,
                                cy: c.centerY,
                                r: c.size,
                                fill: c.fill
                            }), d
                        }
                    }, {
                        key: "drawHollowImage",
                        value: function(c, d, f, p) {
                            var m = this.w,
                                y = new He(this.ctx),
                                x = te.randomId(),
                                w = m.config.plotOptions.radialBar.hollow.image;
                            if (m.config.plotOptions.radialBar.hollow.imageClipped) y.clippedImgArea({
                                width: f,
                                height: f,
                                image: w,
                                patternID: "pattern".concat(m.globals.cuid).concat(x)
                            }), p = "url(#pattern".concat(m.globals.cuid).concat(x, ")");
                            else {
                                var S = m.config.plotOptions.radialBar.hollow.imageWidth,
                                    T = m.config.plotOptions.radialBar.hollow.imageHeight;
                                if (void 0 === S && void 0 === T) {
                                    var k = m.globals.dom.Paper.image(w).loaded(function(B) {
                                        this.move(c.centerX - B.width / 2 + m.config.plotOptions.radialBar.hollow.imageOffsetX, c.centerY - B.height / 2 + m.config.plotOptions.radialBar.hollow.imageOffsetY)
                                    });
                                    d.add(k)
                                } else {
                                    var O = m.globals.dom.Paper.image(w).loaded(function(B) {
                                        this.move(c.centerX - S / 2 + m.config.plotOptions.radialBar.hollow.imageOffsetX, c.centerY - T / 2 + m.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(S, T)
                                    });
                                    d.add(O)
                                }
                            }
                            return p
                        }
                    }, {
                        key: "getStrokeWidth",
                        value: function(c) {
                            return c.size * (100 - parseInt(this.w.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (c.series.length + 1) - this.margin
                        }
                    }, {
                        key: "onBarLabelClick",
                        value: function(c) {
                            var d = parseInt(c.target.getAttribute("rel"), 10) - 1,
                                f = this.barLabels.onClick,
                                p = this.w;
                            f && f(p.globals.seriesNames[d], {
                                w: p,
                                seriesIndex: d
                            })
                        }
                    }]), o
                }(),
                zs = function(K) {
                    ee(o, vr);
                    var a = Me(o);

                    function o() {
                        return U(this, o), a.apply(this, arguments)
                    }
                    return z(o, [{
                        key: "draw",
                        value: function(c, d) {
                            var f = this.w,
                                p = new J(this.ctx);
                            this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = c, this.seriesRangeStart = f.globals.seriesRangeStart, this.seriesRangeEnd = f.globals.seriesRangeEnd, this.barHelpers.initVariables(c);
                            for (var m = p.group({
                                    class: "apexcharts-rangebar-series apexcharts-plot-series"
                                }), y = 0; y < c.length; y++) {
                                var x, w, S, T, k = void 0,
                                    O = void 0,
                                    B = f.globals.comboCharts ? d[y] : y,
                                    $ = p.group({
                                        class: "apexcharts-series",
                                        seriesName: te.escapeString(f.globals.seriesNames[B]),
                                        rel: y + 1,
                                        "data:realIndex": B
                                    });
                                this.ctx.series.addCollapsedClassToSeries($, B), c[y].length > 0 && (this.visibleI = this.visibleI + 1);
                                var ne = 0,
                                    re = 0;
                                this.yRatio.length > 1 && (this.yaxisIndex = B);
                                var b = this.barHelpers.initialPositions();
                                O = b.y, T = b.zeroW, k = b.x, re = b.barWidth, ne = b.barHeight, x = b.xDivision, w = b.yDivision, S = b.zeroH;
                                for (var A = p.group({
                                        class: "apexcharts-datalabels",
                                        "data:realIndex": B
                                    }), F = p.group({
                                        class: "apexcharts-rangebar-goals-markers"
                                    }), X = 0; X < f.globals.dataPoints; X++) {
                                    var be, Se = this.barHelpers.getStrokeWidth(y, X, B),
                                        Le = this.seriesRangeStart[y][X],
                                        ze = this.seriesRangeEnd[y][X],
                                        nt = null,
                                        yt = null,
                                        dt = null,
                                        Tt = {
                                            x: k,
                                            y: O,
                                            strokeWidth: Se,
                                            elSeries: $
                                        },
                                        wt = this.seriesLen;
                                    if (f.config.plotOptions.bar.rangeBarGroupRows && (wt = 1), void 0 === f.config.series[y].data[X]) break;
                                    if (this.isHorizontal) {
                                        if (dt = O + ne * this.visibleI, f.config.series[y].data[X].x) {
                                            var Jt = this.detectOverlappingBars({
                                                i: y,
                                                j: X,
                                                barYPosition: dt,
                                                srty: (w - ne * wt) / 2,
                                                barHeight: ne,
                                                yDivision: w,
                                                initPositions: b
                                            });
                                            ne = Jt.barHeight, dt = Jt.barYPosition
                                        }
                                        re = (nt = this.drawRangeBarPaths(ge({
                                            indexes: {
                                                i: y,
                                                j: X,
                                                realIndex: B
                                            },
                                            barHeight: ne,
                                            barYPosition: dt,
                                            zeroW: T,
                                            yDivision: w,
                                            y1: Le,
                                            y2: ze
                                        }, Tt))).barWidth
                                    } else {
                                        if (f.globals.isXNumeric && (k = (f.globals.seriesX[y][X] - f.globals.minX) / this.xRatio - re / 2), yt = k + re * this.visibleI, f.config.series[y].data[X].x) {
                                            var Ti = this.detectOverlappingBars({
                                                i: y,
                                                j: X,
                                                barXPosition: yt,
                                                srtx: (x - re * wt) / 2,
                                                barWidth: re,
                                                xDivision: x,
                                                initPositions: b
                                            });
                                            re = Ti.barWidth, yt = Ti.barXPosition
                                        }
                                        ne = (nt = this.drawRangeColumnPaths(ge({
                                            indexes: {
                                                i: y,
                                                j: X,
                                                realIndex: B
                                            },
                                            barWidth: re,
                                            barXPosition: yt,
                                            zeroH: S,
                                            xDivision: x
                                        }, Tt))).barHeight
                                    }
                                    var ke = this.barHelpers.drawGoalLine({
                                        barXPosition: nt.barXPosition,
                                        barYPosition: dt,
                                        goalX: nt.goalX,
                                        goalY: nt.goalY,
                                        barHeight: ne,
                                        barWidth: re
                                    });
                                    ke && F.add(ke), O = nt.y, k = nt.x;
                                    var Ke = this.barHelpers.getPathFillColor(c, y, X, B);
                                    this.renderSeries((ie(be = {
                                        realIndex: B,
                                        pathFill: Ke,
                                        lineFill: f.globals.stroke.colors[B],
                                        j: X,
                                        i: y,
                                        x: k,
                                        y: O,
                                        y1: Le,
                                        y2: ze,
                                        pathFrom: nt.pathFrom,
                                        pathTo: nt.pathTo,
                                        strokeWidth: Se,
                                        elSeries: $,
                                        series: c,
                                        barHeight: ne,
                                        barWidth: re,
                                        barXPosition: yt,
                                        barYPosition: dt
                                    }, "barWidth", re), ie(be, "elDataLabelsWrap", A), ie(be, "elGoalsMarkers", F), ie(be, "visibleSeries", this.visibleI), ie(be, "type", "rangebar"), be))
                                }
                                m.add($)
                            }
                            return m
                        }
                    }, {
                        key: "detectOverlappingBars",
                        value: function(c) {
                            var d = c.i,
                                f = c.j,
                                p = c.barYPosition,
                                m = c.barXPosition,
                                y = c.srty,
                                x = c.srtx,
                                w = c.barHeight,
                                S = c.barWidth,
                                T = c.yDivision,
                                k = c.xDivision,
                                O = c.initPositions,
                                B = this.w,
                                $ = [],
                                ne = B.config.series[d].data[f].rangeName,
                                re = B.config.series[d].data[f].x,
                                b = Array.isArray(re) ? re.join(" ") : re,
                                A = B.globals.labels.map(function(X) {
                                    return Array.isArray(X) ? X.join(" ") : X
                                }).indexOf(b),
                                F = B.globals.seriesRange[d].findIndex(function(X) {
                                    return X.x === b && X.overlaps.length > 0
                                });
                            return this.isHorizontal ? (p = B.config.plotOptions.bar.rangeBarGroupRows ? y + T * A : y + w * this.visibleI + T * A, F > -1 && !B.config.plotOptions.bar.rangeBarOverlap && ($ = B.globals.seriesRange[d][F].overlaps).indexOf(ne) > -1 && (p = (w = O.barHeight / $.length) * this.visibleI + T * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + w * (this.visibleI + $.indexOf(ne)) + T * A)) : (A > -1 && (m = B.config.plotOptions.bar.rangeBarGroupRows ? x + k * A : x + S * this.visibleI + k * A), F > -1 && !B.config.plotOptions.bar.rangeBarOverlap && ($ = B.globals.seriesRange[d][F].overlaps).indexOf(ne) > -1 && (m = (S = O.barWidth / $.length) * this.visibleI + k * (100 - parseInt(this.barOptions.barWidth, 10)) / 100 / 2 + S * (this.visibleI + $.indexOf(ne)) + k * A)), {
                                barYPosition: p,
                                barXPosition: m,
                                barHeight: w,
                                barWidth: S
                            }
                        }
                    }, {
                        key: "drawRangeColumnPaths",
                        value: function(c) {
                            var d = c.indexes,
                                f = c.x,
                                p = c.xDivision,
                                m = c.barWidth,
                                y = c.barXPosition,
                                x = c.zeroH,
                                w = this.w,
                                S = d.i,
                                T = d.j,
                                k = this.yRatio[this.yaxisIndex],
                                O = d.realIndex,
                                B = this.getRangeValue(O, T),
                                $ = Math.min(B.start, B.end),
                                ne = Math.max(B.start, B.end);
                            null == this.series[S][T] ? $ = x : ($ = x - $ / k, ne = x - ne / k);
                            var re = Math.abs(ne - $),
                                b = this.barHelpers.getColumnPaths({
                                    barXPosition: y,
                                    barWidth: m,
                                    y1: $,
                                    y2: ne,
                                    strokeWidth: this.strokeWidth,
                                    series: this.seriesRangeEnd,
                                    realIndex: d.realIndex,
                                    i: O,
                                    j: T,
                                    w
                                });
                            if (w.globals.isXNumeric) {
                                var A = this.getBarXForNumericXAxis({
                                    x: f,
                                    j: T,
                                    realIndex: O,
                                    barWidth: m
                                });
                                f = A.x, y = A.barXPosition
                            } else f += p;
                            return {
                                pathTo: b.pathTo,
                                pathFrom: b.pathFrom,
                                barHeight: re,
                                x: f,
                                y: ne,
                                goalY: this.barHelpers.getGoalValues("y", null, x, S, T),
                                barXPosition: y
                            }
                        }
                    }, {
                        key: "drawRangeBarPaths",
                        value: function(c) {
                            var d = c.indexes,
                                f = c.y,
                                y = c.yDivision,
                                x = c.barHeight,
                                w = c.barYPosition,
                                S = c.zeroW,
                                T = this.w,
                                k = S + c.y1 / this.invertedYRatio,
                                O = S + c.y2 / this.invertedYRatio,
                                B = Math.abs(O - k),
                                $ = this.barHelpers.getBarpaths({
                                    barYPosition: w,
                                    barHeight: x,
                                    x1: k,
                                    x2: O,
                                    strokeWidth: this.strokeWidth,
                                    series: this.seriesRangeEnd,
                                    i: d.realIndex,
                                    realIndex: d.realIndex,
                                    j: d.j,
                                    w: T
                                });
                            return T.globals.isXNumeric || (f += y), {
                                pathTo: $.pathTo,
                                pathFrom: $.pathFrom,
                                barWidth: B,
                                x: O,
                                goalX: this.barHelpers.getGoalValues("x", S, null, d.realIndex, d.j),
                                y: f
                            }
                        }
                    }, {
                        key: "getRangeValue",
                        value: function(c, d) {
                            var f = this.w;
                            return {
                                start: f.globals.seriesRangeStart[c][d],
                                end: f.globals.seriesRangeEnd[c][d]
                            }
                        }
                    }]), o
                }(),
                Ys = function() {
                    function K(a) {
                        U(this, K), this.w = a.w, this.lineCtx = a
                    }
                    return z(K, [{
                        key: "sameValueSeriesFix",
                        value: function(a, o) {
                            var c = this.w;
                            if (("gradient" === c.config.fill.type || "gradient" === c.config.fill.type[a]) && new Ie(this.lineCtx.ctx, c).seriesHaveSameValues(a)) {
                                var d = o[a].slice();
                                d[d.length - 1] = d[d.length - 1] + 1e-6, o[a] = d
                            }
                            return o
                        }
                    }, {
                        key: "calculatePoints",
                        value: function(a) {
                            var o = a.series,
                                d = a.x,
                                f = a.y,
                                p = a.i,
                                m = a.j,
                                y = a.prevY,
                                x = this.w,
                                w = [],
                                S = [];
                            if (0 === m) {
                                var T = this.lineCtx.categoryAxisCorrection + x.config.markers.offsetX;
                                x.globals.isXNumeric && (T = (x.globals.seriesX[a.realIndex][0] - x.globals.minX) / this.lineCtx.xRatio + x.config.markers.offsetX), w.push(T), S.push(te.isNumber(o[p][0]) ? y + x.config.markers.offsetY : null), w.push(d + x.config.markers.offsetX), S.push(te.isNumber(o[p][m + 1]) ? f + x.config.markers.offsetY : null)
                            } else w.push(d + x.config.markers.offsetX), S.push(te.isNumber(o[p][m + 1]) ? f + x.config.markers.offsetY : null);
                            return {
                                x: w,
                                y: S
                            }
                        }
                    }, {
                        key: "checkPreviousPaths",
                        value: function(a) {
                            for (var o = a.pathFromLine, c = a.pathFromArea, d = a.realIndex, f = this.w, p = 0; p < f.globals.previousPaths.length; p++) {
                                var m = f.globals.previousPaths[p];
                                ("line" === m.type || "area" === m.type) && m.paths.length > 0 && parseInt(m.realIndex, 10) === parseInt(d, 10) && ("line" === m.type ? (this.lineCtx.appendPathFrom = !1, o = f.globals.previousPaths[p].paths[0].d) : "area" === m.type && (this.lineCtx.appendPathFrom = !1, c = f.globals.previousPaths[p].paths[0].d, f.config.stroke.show && f.globals.previousPaths[p].paths[1] && (o = f.globals.previousPaths[p].paths[1].d)))
                            }
                            return {
                                pathFromLine: o,
                                pathFromArea: c
                            }
                        }
                    }, {
                        key: "determineFirstPrevY",
                        value: function(a) {
                            var o, c, d = a.i,
                                f = a.series,
                                p = a.prevY,
                                m = a.lineYPosition,
                                y = this.w,
                                x = y.config.chart.stacked && !y.globals.comboCharts || y.config.chart.stacked && y.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || "bar" === (null === (o = this.w.config.series[d]) || void 0 === o ? void 0 : o.type));
                            if (void 0 !== (null === (c = f[d]) || void 0 === c ? void 0 : c[0])) p = (m = x && d > 0 ? this.lineCtx.prevSeriesY[d - 1][0] : this.lineCtx.zeroY) - f[d][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? f[d][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);
                            else if (x && d > 0 && void 0 === f[d][0])
                                for (var w = d - 1; w >= 0; w--)
                                    if (null != f[w][0]) {
                                        p = m = this.lineCtx.prevSeriesY[w][0];
                                        break
                                    }
                            return {
                                prevY: p,
                                lineYPosition: m
                            }
                        }
                    }]), K
                }(),
                et = function(K, a) {
                    for (var o = "", c = 0; c < K.length; c++) {
                        var d = K[c],
                            f = K[c - 1],
                            p = d.length,
                            m = f ? .length;
                        c > 1 && Math.abs(d[p - 2] - f[m - 2]) < a / 25 ? o += "L".concat(d[2], ", ").concat(d[3]) : p > 4 ? (o += "C".concat(d[0], ", ").concat(d[1]), o += ", ".concat(d[2], ", ").concat(d[3]), o += ", ".concat(d[4], ", ").concat(d[5])) : p > 2 && (o += "S".concat(d[0], ", ").concat(d[1]), o += ", ".concat(d[2], ", ").concat(d[3]))
                    }
                    return o
                },
                st = function(K) {
                    var a = function(K) {
                            for (var a, o, c, d, f = function(w) {
                                    for (var S = [], T = w[0], k = w[1], O = S[0] = pt(T, k), B = 1, $ = w.length - 1; B < $; B++) S[B] = .5 * (O + (O = pt(T = k, k = w[B + 1])));
                                    return S[B] = O, S
                                }(K), p = K.length - 1, m = [], y = 0; y < p; y++) c = pt(K[y], K[y + 1]), Math.abs(c) < 1e-6 ? f[y] = f[y + 1] = 0 : (d = (a = f[y] / c) * a + (o = f[y + 1] / c) * o) > 9 && (d = 3 * c / Math.sqrt(d), f[y] = d * a, f[y + 1] = d * o);
                            for (var x = 0; x <= p; x++) d = (K[Math.min(p, x + 1)][0] - K[Math.max(0, x - 1)][0]) / (6 * (1 + f[x] * f[x])), m.push([d || 0, f[x] * d || 0]);
                            return m
                        }(K),
                        o = K[1],
                        c = K[0],
                        d = [],
                        f = a[1],
                        p = a[0];
                    d.push(c, [c[0] + p[0], c[1] + p[1], o[0] - f[0], o[1] - f[1], o[0], o[1]]);
                    for (var m = 2, y = a.length; m < y; m++) {
                        var x = K[m],
                            w = a[m];
                        d.push([x[0] - w[0], x[1] - w[1], x[0], x[1]])
                    }
                    return d
                };

            function pt(K, a) {
                return (a[1] - K[1]) / (a[0] - K[0])
            }
            var Vt = function() {
                function K(a, o, c) {
                    U(this, K), this.ctx = a, this.w = a.w, this.xyRatios = o, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || c, this.scatter = new Ft(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new Ys(this), this.markers = new St(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0
                }
                return z(K, [{
                    key: "draw",
                    value: function(a, o, c, d) {
                        var f, p = this.w,
                            m = new J(this.ctx),
                            y = p.globals.comboCharts ? o : p.config.chart.type,
                            x = m.group({
                                class: "apexcharts-".concat(y, "-series apexcharts-plot-series")
                            }),
                            w = new Ie(this.ctx, p);
                        this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, a = w.getLogSeries(a), this.yRatio = w.getLogYRatios(this.yRatio);
                        for (var S = [], T = 0; T < a.length; T++) {
                            a = this.lineHelpers.sameValueSeriesFix(T, a);
                            var k = p.globals.comboCharts ? c[T] : T;
                            this._initSerieVariables(a, T, k);
                            var O = [],
                                B = [],
                                $ = [],
                                ne = p.globals.padHorizontal + this.categoryAxisCorrection;
                            this.ctx.series.addCollapsedClassToSeries(this.elSeries, k), p.globals.isXNumeric && p.globals.seriesX.length > 0 && (ne = (p.globals.seriesX[k][0] - p.globals.minX) / this.xRatio), $.push(ne);
                            var re = ne,
                                b = this.zeroY,
                                A = this.zeroY;
                            b = this.lineHelpers.determineFirstPrevY({
                                i: T,
                                series: a,
                                prevY: b,
                                lineYPosition: 0
                            }).prevY, O.push("smooth" === p.config.stroke.curve && null === a[T][0] ? null : b), "rangeArea" === y && (A = this.lineHelpers.determineFirstPrevY({
                                i: T,
                                series: d,
                                prevY: A,
                                lineYPosition: 0
                            }).prevY, B.push(A));
                            var F = {
                                    type: y,
                                    series: a,
                                    realIndex: k,
                                    i: T,
                                    x: ne,
                                    y: 1,
                                    pathsFrom: this._calculatePathsFrom({
                                        type: y,
                                        series: a,
                                        i: T,
                                        realIndex: k,
                                        prevX: re,
                                        prevY: b,
                                        prevY2: A
                                    }),
                                    linePaths: [],
                                    areaPaths: [],
                                    seriesIndex: c,
                                    lineYPosition: 0,
                                    xArrj: $,
                                    yArrj: O,
                                    y2Arrj: B,
                                    seriesRangeEnd: d
                                },
                                X = this._iterateOverDataPoints(ge(ge({}, F), {}, {
                                    iterations: "rangeArea" === y ? a[T].length - 1 : void 0,
                                    isRangeStart: !0
                                }));
                            if ("rangeArea" === y) {
                                var be = this._calculatePathsFrom({
                                        series: d,
                                        i: T,
                                        realIndex: k,
                                        prevX: re,
                                        prevY: A
                                    }),
                                    Se = this._iterateOverDataPoints(ge(ge({}, F), {}, {
                                        series: d,
                                        pathsFrom: be,
                                        iterations: d[T].length - 1,
                                        isRangeStart: !1
                                    }));
                                X.linePaths[0] = Se.linePath + X.linePath, X.pathFromLine = Se.pathFromLine + X.pathFromLine
                            }
                            this._handlePaths({
                                type: y,
                                realIndex: k,
                                i: T,
                                paths: X
                            }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), S.push(this.elSeries)
                        }
                        if (void 0 !== (null === (f = p.config.series[0]) || void 0 === f ? void 0 : f.zIndex) && S.sort(function(nt, yt) {
                                return Number(nt.node.getAttribute("zIndex")) - Number(yt.node.getAttribute("zIndex"))
                            }), p.config.chart.stacked)
                            for (var Le = S.length; Le > 0; Le--) x.add(S[Le - 1]);
                        else
                            for (var ze = 0; ze < S.length; ze++) x.add(S[ze]);
                        return x
                    }
                }, {
                    key: "_initSerieVariables",
                    value: function(a, o, c) {
                        var d = this.w,
                            f = new J(this.ctx);
                        this.xDivision = d.globals.gridWidth / (d.globals.dataPoints - ("on" === d.config.xaxis.tickPlacement ? 1 : 0)), this.strokeWidth = Array.isArray(d.config.stroke.width) ? d.config.stroke.width[c] : d.config.stroke.width, this.yRatio.length > 1 && (this.yaxisIndex = c), this.isReversed = d.config.yaxis[this.yaxisIndex] && d.config.yaxis[this.yaxisIndex].reversed, this.zeroY = d.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? d.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), this.areaBottomY = this.zeroY, (this.zeroY > d.globals.gridHeight || "end" === d.config.plotOptions.area.fillTo) && (this.areaBottomY = d.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = f.group({
                            class: "apexcharts-series",
                            zIndex: void 0 !== d.config.series[c].zIndex ? d.config.series[c].zIndex : c,
                            seriesName: te.escapeString(d.globals.seriesNames[c])
                        }), this.elPointsMain = f.group({
                            class: "apexcharts-series-markers-wrap",
                            "data:realIndex": c
                        }), this.elDataLabelsWrap = f.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": c
                        }), this.elSeries.attr({
                            "data:longestSeries": a[o].length === d.globals.dataPoints,
                            rel: o + 1,
                            "data:realIndex": c
                        }), this.appendPathFrom = !0
                    }
                }, {
                    key: "_calculatePathsFrom",
                    value: function(a) {
                        var o, c, d, f, p = a.type,
                            m = a.series,
                            y = a.i,
                            x = a.realIndex,
                            w = a.prevX,
                            S = a.prevY,
                            T = a.prevY2,
                            k = this.w,
                            O = new J(this.ctx);
                        if (null === m[y][0]) {
                            for (var B = 0; B < m[y].length; B++)
                                if (null !== m[y][B]) {
                                    o = O.move(w = this.xDivision * B, S = this.zeroY - m[y][B] / this.yRatio[this.yaxisIndex]), c = O.move(w, this.areaBottomY);
                                    break
                                }
                        } else o = O.move(w, S), "rangeArea" === p && (o = O.move(w, T) + O.line(w, S)), c = O.move(w, this.areaBottomY) + O.line(w, S);
                        if (d = O.move(-1, this.zeroY) + O.line(-1, this.zeroY), f = O.move(-1, this.zeroY) + O.line(-1, this.zeroY), k.globals.previousPaths.length > 0) {
                            var $ = this.lineHelpers.checkPreviousPaths({
                                pathFromLine: d,
                                pathFromArea: f,
                                realIndex: x
                            });
                            d = $.pathFromLine, f = $.pathFromArea
                        }
                        return {
                            prevX: w,
                            prevY: S,
                            linePath: o,
                            areaPath: c,
                            pathFromLine: d,
                            pathFromArea: f
                        }
                    }
                }, {
                    key: "_handlePaths",
                    value: function(a) {
                        var o = a.type,
                            c = a.realIndex,
                            d = a.i,
                            f = a.paths,
                            p = this.w,
                            m = new J(this.ctx),
                            y = new He(this.ctx);
                        this.prevSeriesY.push(f.yArrj), p.globals.seriesXvalues[c] = f.xArrj, p.globals.seriesYvalues[c] = f.yArrj;
                        var x = p.config.forecastDataPoints;
                        if (x.count > 0 && "rangeArea" !== o) {
                            var w = p.globals.seriesXvalues[c][p.globals.seriesXvalues[c].length - x.count - 1],
                                S = m.drawRect(w, 0, p.globals.gridWidth, p.globals.gridHeight, 0);
                            p.globals.dom.elForecastMask.appendChild(S.node);
                            var T = m.drawRect(0, 0, w, p.globals.gridHeight, 0);
                            p.globals.dom.elNonForecastMask.appendChild(T.node)
                        }
                        this.pointsChart || p.globals.delayedElements.push({
                            el: this.elPointsMain.node,
                            index: c
                        });
                        var k = {
                            i: d,
                            realIndex: c,
                            animationDelay: d,
                            initialSpeed: p.config.chart.animations.speed,
                            dataChangeSpeed: p.config.chart.animations.dynamicAnimation.speed,
                            className: "apexcharts-".concat(o)
                        };
                        if ("area" === o)
                            for (var O = y.fillPath({
                                    seriesNumber: c
                                }), B = 0; B < f.areaPaths.length; B++) {
                                var $ = m.renderPaths(ge(ge({}, k), {}, {
                                    pathFrom: f.pathFromArea,
                                    pathTo: f.areaPaths[B],
                                    stroke: "none",
                                    strokeWidth: 0,
                                    strokeLineCap: null,
                                    fill: O
                                }));
                                this.elSeries.add($)
                            }
                        if (p.config.stroke.show && !this.pointsChart) {
                            var ne = null;
                            if ("line" === o) ne = y.fillPath({
                                seriesNumber: c,
                                i: d
                            });
                            else if ("solid" === p.config.stroke.fill.type) ne = p.globals.stroke.colors[c];
                            else {
                                var re = p.config.fill;
                                p.config.fill = p.config.stroke.fill, ne = y.fillPath({
                                    seriesNumber: c,
                                    i: d
                                }), p.config.fill = re
                            }
                            for (var b = 0; b < f.linePaths.length; b++) {
                                var A = ne;
                                "rangeArea" === o && (A = y.fillPath({
                                    seriesNumber: c
                                }));
                                var F = ge(ge({}, k), {}, {
                                        pathFrom: f.pathFromLine,
                                        pathTo: f.linePaths[b],
                                        stroke: ne,
                                        strokeWidth: this.strokeWidth,
                                        strokeLineCap: p.config.stroke.lineCap,
                                        fill: "rangeArea" === o ? A : "none"
                                    }),
                                    X = m.renderPaths(F);
                                if (this.elSeries.add(X), X.attr("fill-rule", "evenodd"), x.count > 0 && "rangeArea" !== o) {
                                    var be = m.renderPaths(F);
                                    be.node.setAttribute("stroke-dasharray", x.dashArray), x.strokeWidth && be.node.setAttribute("stroke-width", x.strokeWidth), this.elSeries.add(be), be.attr("clip-path", "url(#forecastMask".concat(p.globals.cuid, ")")), X.attr("clip-path", "url(#nonForecastMask".concat(p.globals.cuid, ")"))
                                }
                            }
                        }
                    }
                }, {
                    key: "_iterateOverDataPoints",
                    value: function(a) {
                        var o, c = this,
                            d = a.type,
                            f = a.series,
                            p = a.iterations,
                            m = a.realIndex,
                            y = a.i,
                            x = a.x,
                            w = a.y,
                            S = a.pathsFrom,
                            T = a.linePaths,
                            k = a.areaPaths,
                            O = a.seriesIndex,
                            B = a.lineYPosition,
                            $ = a.xArrj,
                            ne = a.yArrj,
                            re = a.y2Arrj,
                            b = a.isRangeStart,
                            A = a.seriesRangeEnd,
                            F = this.w,
                            X = new J(this.ctx),
                            be = this.yRatio,
                            Se = S.prevY,
                            Le = S.linePath,
                            ze = S.areaPath,
                            nt = S.pathFromLine,
                            yt = S.pathFromArea,
                            dt = te.isNumber(F.globals.minYArr[m]) ? F.globals.minYArr[m] : F.globals.minY;
                        p || (p = F.globals.dataPoints > 1 ? F.globals.dataPoints - 1 : F.globals.dataPoints);
                        for (var Tt = function(qe, gt) {
                                return gt - qe / be[c.yaxisIndex] + 2 * (c.isReversed ? qe / be[c.yaxisIndex] : 0)
                            }, wt = w, ln = F.config.chart.stacked && !F.globals.comboCharts || F.config.chart.stacked && F.globals.comboCharts && (!this.w.config.chart.stackOnlyBar || "bar" === (null === (o = this.w.config.series[m]) || void 0 === o ? void 0 : o.type)), Jt = 0; Jt < p; Jt++) {
                            var Qn = null == f[y][Jt + 1];
                            if (F.globals.isXNumeric) {
                                var Ti = F.globals.seriesX[m][Jt + 1];
                                void 0 === F.globals.seriesX[m][Jt + 1] && (Ti = F.globals.seriesX[m][p - 1]), x = (Ti - F.globals.minX) / this.xRatio
                            } else x += this.xDivision;
                            B = ln && y > 0 && F.globals.collapsedSeries.length < F.config.series.length - 1 ? this.prevSeriesY[function(qe) {
                                for (var gt = qe, jt = 0; jt < F.globals.series.length; jt++)
                                    if (F.globals.collapsedSeriesIndices.indexOf(qe) > -1) {
                                        gt--;
                                        break
                                    }
                                return gt >= 0 ? gt : 0
                            }(y - 1)][Jt + 1] : this.zeroY, Qn ? w = Tt(dt, B) : (w = Tt(f[y][Jt + 1], B), "rangeArea" === d && (wt = Tt(A[y][Jt + 1], B))), $.push(x), ne.push(Qn && "smooth" === F.config.stroke.curve ? null : w), re.push(wt);
                            var ke = this.lineHelpers.calculatePoints({
                                    series: f,
                                    x,
                                    y: w,
                                    realIndex: m,
                                    i: y,
                                    j: Jt,
                                    prevY: Se
                                }),
                                Ke = this._createPaths({
                                    type: d,
                                    series: f,
                                    i: y,
                                    realIndex: m,
                                    j: Jt,
                                    x,
                                    y: w,
                                    y2: wt,
                                    xArrj: $,
                                    yArrj: ne,
                                    y2Arrj: re,
                                    linePath: Le,
                                    areaPath: ze,
                                    linePaths: T,
                                    areaPaths: k,
                                    seriesIndex: O,
                                    isRangeStart: b
                                });
                            k = Ke.areaPaths, T = Ke.linePaths, ze = Ke.areaPath, Le = Ke.linePath, !this.appendPathFrom || "smooth" === F.config.stroke.curve && "rangeArea" === d || (nt += X.line(x, this.zeroY), yt += X.line(x, this.zeroY)), this.handleNullDataPoints(f, ke, y, Jt, m), this._handleMarkersAndLabels({
                                type: d,
                                pointsPos: ke,
                                i: y,
                                j: Jt,
                                realIndex: m,
                                isRangeStart: b
                            })
                        }
                        return {
                            yArrj: ne,
                            xArrj: $,
                            pathFromArea: yt,
                            areaPaths: k,
                            pathFromLine: nt,
                            linePaths: T,
                            linePath: Le,
                            areaPath: ze
                        }
                    }
                }, {
                    key: "_handleMarkersAndLabels",
                    value: function(a) {
                        var o = a.type,
                            c = a.pointsPos,
                            d = a.isRangeStart,
                            f = a.i,
                            p = a.j,
                            m = a.realIndex,
                            y = this.w,
                            x = new Dt(this.ctx);
                        if (this.pointsChart) this.scatter.draw(this.elSeries, p, {
                            realIndex: m,
                            pointsPos: c,
                            zRatio: this.zRatio,
                            elParent: this.elPointsMain
                        });
                        else {
                            y.globals.series[f].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
                            var w = this.markers.plotChartMarkers(c, m, p + 1);
                            null !== w && this.elPointsMain.add(w)
                        }
                        var S = x.drawDataLabel({
                            type: o,
                            isRangeStart: d,
                            pos: c,
                            i: m,
                            j: p + 1
                        });
                        null !== S && this.elDataLabelsWrap.add(S)
                    }
                }, {
                    key: "_createPaths",
                    value: function(a) {
                        var o = a.type,
                            c = a.series,
                            d = a.i,
                            f = a.realIndex,
                            p = a.j,
                            m = a.x,
                            y = a.y,
                            x = a.xArrj,
                            w = a.yArrj,
                            S = a.y2,
                            T = a.y2Arrj,
                            k = a.linePath,
                            O = a.areaPath,
                            B = a.linePaths,
                            $ = a.areaPaths,
                            ne = a.seriesIndex,
                            re = a.isRangeStart,
                            b = this.w,
                            A = new J(this.ctx),
                            F = b.config.stroke.curve,
                            X = this.areaBottomY;
                        if (Array.isArray(b.config.stroke.curve) && (F = Array.isArray(ne) ? b.config.stroke.curve[ne[d]] : b.config.stroke.curve[d]), "rangeArea" === o && (b.globals.hasNullValues || b.config.forecastDataPoints.count > 0) && "smooth" === F && (F = "straight"), "smooth" === F) {
                            var be = "rangeArea" === o ? x.length === b.globals.dataPoints : p === c[d].length - 2,
                                Se = x.map(function(wt, ln) {
                                    return [x[ln], w[ln]]
                                }).filter(function(wt) {
                                    return null !== wt[1]
                                });
                            if (be && Se.length > 1) {
                                var Le = st(Se);
                                if (k += et(Le, b.globals.gridWidth), null === c[d][0] ? O = k : O += et(Le, b.globals.gridWidth), "rangeArea" === o && re) {
                                    k += A.line(x[x.length - 1], T[T.length - 1]);
                                    var ze = x.slice().reverse(),
                                        nt = T.slice().reverse(),
                                        yt = ze.map(function(wt, ln) {
                                            return [ze[ln], nt[ln]]
                                        }),
                                        dt = st(yt);
                                    O = k += et(dt, b.globals.gridWidth)
                                } else O += A.line(Se[Se.length - 1][0], X) + A.line(Se[0][0], X) + A.move(Se[0][0], Se[0][1]) + "z";
                                B.push(k), $.push(O)
                            }
                        } else null === c[d][p + 1] && (k += A.move(m, y), O = O + A.line(b.globals.isXNumeric ? (b.globals.seriesX[f][p] - b.globals.minX) / this.xRatio : m - this.xDivision, X) + A.move(m, y) + "z"), null === c[d][p] && (k += A.move(m, y), O += A.move(m, X)), "stepline" === F ? (k = k + A.line(m, null, "H") + A.line(null, y, "V"), O = O + A.line(m, null, "H") + A.line(null, y, "V")) : "straight" === F && (k += A.line(m, y), O += A.line(m, y)), p === c[d].length - 2 && (O = O + A.line(m, X) + A.move(m, y) + "z", "rangeArea" === o && re ? k = k + A.line(m, S) + A.move(m, S) + "z" : (B.push(k), $.push(O)));
                        return {
                            linePaths: B,
                            areaPaths: $,
                            linePath: k,
                            areaPath: O
                        }
                    }
                }, {
                    key: "handleNullDataPoints",
                    value: function(a, o, c, d, f) {
                        var p = this.w;
                        if (null === a[c][d] && p.config.markers.showNullDataPoints || 1 === a[c].length) {
                            var m = this.markers.plotChartMarkers(o, f, d + 1, this.strokeWidth - p.config.markers.strokeWidth / 2, !0);
                            null !== m && this.elPointsMain.add(m)
                        }
                    }
                }]), K
            }();
            window.TreemapSquared = {}, window.TreemapSquared.generate = function() {
                function K(m, y, x, w) {
                    this.xoffset = m, this.yoffset = y, this.height = w, this.width = x, this.shortestEdge = function() {
                        return Math.min(this.height, this.width)
                    }, this.getCoordinates = function(S) {
                        var T, k = [],
                            O = this.xoffset,
                            B = this.yoffset,
                            $ = f(S) / this.height,
                            ne = f(S) / this.width;
                        if (this.width >= this.height)
                            for (T = 0; T < S.length; T++) k.push([O, B, O + $, B + S[T] / $]), B += S[T] / $;
                        else
                            for (T = 0; T < S.length; T++) k.push([O, B, O + S[T] / ne, B + ne]), O += S[T] / ne;
                        return k
                    }, this.cutArea = function(S) {
                        var T;
                        if (this.width >= this.height) {
                            var k = S / this.height;
                            T = new K(this.xoffset + k, this.yoffset, this.width - k, this.height)
                        } else {
                            var B = S / this.width;
                            T = new K(this.xoffset, this.yoffset + B, this.width, this.height - B)
                        }
                        return T
                    }
                }

                function a(m, y, x, w, S) {
                    return w = void 0 === w ? 0 : w, S = void 0 === S ? 0 : S,
                        function(k) {
                            var O, B, $ = [];
                            for (O = 0; O < k.length; O++)
                                for (B = 0; B < k[O].length; B++) $.push(k[O][B]);
                            return $
                        }(o(function(k, O) {
                            var B, $ = [],
                                ne = O / f(k);
                            for (B = 0; B < k.length; B++) $[B] = k[B] * ne;
                            return $
                        }(m, y * x), [], new K(w, S, y, x), []))
                }

                function o(m, y, x, w) {
                    var S, T, k, O, B, $, ne;
                    if (0 !== m.length) return S = x.shortestEdge(), B = T = m[0], $ = S, 0 === (O = y).length || ((ne = O.slice()).push(B), c(O, $) >= c(ne, $)) ? (y.push(T), o(m.slice(1), y, x, w)) : (k = x.cutArea(f(y), w), w.push(x.getCoordinates(y)), o(m, [], k, w)), w;
                    w.push(x.getCoordinates(y))
                }

                function c(m, y) {
                    var x = Math.min.apply(Math, m),
                        w = Math.max.apply(Math, m),
                        S = f(m);
                    return Math.max(Math.pow(y, 2) * w / Math.pow(S, 2), Math.pow(S, 2) / (Math.pow(y, 2) * x))
                }

                function d(m) {
                    return m && m.constructor === Array
                }

                function f(m) {
                    var y, x = 0;
                    for (y = 0; y < m.length; y++) x += m[y];
                    return x
                }

                function p(m) {
                    var y, x = 0;
                    if (d(m[0]))
                        for (y = 0; y < m.length; y++) x += p(m[y]);
                    else x = f(m);
                    return x
                }
                return function m(y, x, w, S, T) {
                    S = void 0 === S ? 0 : S, T = void 0 === T ? 0 : T;
                    var k, O, B = [],
                        $ = [];
                    if (d(y[0])) {
                        for (O = 0; O < y.length; O++) B[O] = p(y[O]);
                        for (k = a(B, x, w, S, T), O = 0; O < y.length; O++) $.push(m(y[O], k[O][2] - k[O][0], k[O][3] - k[O][1], k[O][0], k[O][1]))
                    } else $ = a(y, x, w, S, T);
                    return $
                }
            }();
            var Zt, gn, Tn = function() {
                    function K(a, o) {
                        U(this, K), this.ctx = a, this.w = a.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new _l(a), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = []
                    }
                    return z(K, [{
                        key: "draw",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = new J(this.ctx),
                                f = new He(this.ctx),
                                p = d.group({
                                    class: "apexcharts-treemap"
                                });
                            if (c.globals.noData) return p;
                            var m = [];
                            return a.forEach(function(y) {
                                var x = y.map(function(w) {
                                    return Math.abs(w)
                                });
                                m.push(x)
                            }), this.negRange = this.helpers.checkColorRange(), c.config.series.forEach(function(y, x) {
                                y.data.forEach(function(w) {
                                    Array.isArray(o.labels[x]) || (o.labels[x] = []), o.labels[x].push(w.x)
                                })
                            }), window.TreemapSquared.generate(m, c.globals.gridWidth, c.globals.gridHeight).forEach(function(y, x) {
                                var w = d.group({
                                    class: "apexcharts-series apexcharts-treemap-series",
                                    seriesName: te.escapeString(c.globals.seriesNames[x]),
                                    rel: x + 1,
                                    "data:realIndex": x
                                });
                                if (c.config.chart.dropShadow.enabled) {
                                    var S = c.config.chart.dropShadow;
                                    new Oe(o.ctx).dropShadow(p, S, x)
                                }
                                var T = d.group({
                                    class: "apexcharts-data-labels"
                                });
                                y.forEach(function(k, O) {
                                    var B = k[0],
                                        $ = k[1],
                                        ne = k[2],
                                        re = k[3],
                                        b = d.drawRect(B, $, ne - B, re - $, 0, "#fff", 1, o.strokeWidth, c.config.plotOptions.treemap.useFillColorAsStroke ? F : c.globals.stroke.colors[x]);
                                    b.attr({
                                        cx: B,
                                        cy: $,
                                        index: x,
                                        i: x,
                                        j: O,
                                        width: ne - B,
                                        height: re - $
                                    });
                                    var A = o.helpers.getShadeColor(c.config.chart.type, x, O, o.negRange),
                                        F = A.color;
                                    void 0 !== c.config.series[x].data[O] && c.config.series[x].data[O].fillColor && (F = c.config.series[x].data[O].fillColor);
                                    var X = f.fillPath({
                                        color: F,
                                        seriesNumber: x,
                                        dataPointIndex: O
                                    });
                                    b.node.classList.add("apexcharts-treemap-rect"), b.attr({
                                        fill: X
                                    }), o.helpers.addListeners(b);
                                    var be = {
                                            x: B + (ne - B) / 2,
                                            y: $ + (re - $) / 2,
                                            width: 0,
                                            height: 0
                                        },
                                        Se = {
                                            x: B,
                                            y: $,
                                            width: ne - B,
                                            height: re - $
                                        };
                                    if (c.config.chart.animations.enabled && !c.globals.dataChanged) {
                                        var Le = 1;
                                        c.globals.resized || (Le = c.config.chart.animations.speed), o.animateTreemap(b, be, Se, Le)
                                    }
                                    c.globals.dataChanged && o.dynamicAnim.enabled && c.globals.shouldAnimate && (c.globals.previousPaths[x] && c.globals.previousPaths[x][O] && c.globals.previousPaths[x][O].rect && (be = c.globals.previousPaths[x][O].rect), o.animateTreemap(b, be, Se, o.dynamicAnim.speed));
                                    var nt = o.getFontSize(k),
                                        yt = c.config.dataLabels.formatter(o.labels[x][O], {
                                            value: c.globals.series[x][O],
                                            seriesIndex: x,
                                            dataPointIndex: O,
                                            w: c
                                        });
                                    "truncate" === c.config.plotOptions.treemap.dataLabels.format && (nt = parseInt(c.config.dataLabels.style.fontSize, 10), yt = o.truncateLabels(yt, nt, B, $, ne, re));
                                    var dt = o.helpers.calculateDataLabels({
                                        text: yt,
                                        x: (B + ne) / 2,
                                        y: ($ + re) / 2 + o.strokeWidth / 2 + nt / 3,
                                        i: x,
                                        j: O,
                                        colorProps: A,
                                        fontSize: nt,
                                        series: a
                                    });
                                    c.config.dataLabels.enabled && dt && o.rotateToFitLabel(dt, nt, yt, B, $, ne, re), w.add(b), null !== dt && w.add(dt)
                                }), w.add(T), p.add(w)
                            }), p
                        }
                    }, {
                        key: "getFontSize",
                        value: function(a) {
                            var p, o = this.w,
                                m = function y(x) {
                                    var w, S = 0;
                                    if (Array.isArray(x[0]))
                                        for (w = 0; w < x.length; w++) S += y(x[w]);
                                    else
                                        for (w = 0; w < x.length; w++) S += x[w].length;
                                    return S
                                }(this.labels) / function y(x) {
                                    var w, S = 0;
                                    if (Array.isArray(x[0]))
                                        for (w = 0; w < x.length; w++) S += y(x[w]);
                                    else
                                        for (w = 0; w < x.length; w++) S += 1;
                                    return S
                                }(this.labels);
                            return p = Math.pow((a[2] - a[0]) * (a[3] - a[1]), .5), Math.min(p / m, parseInt(o.config.dataLabels.style.fontSize, 10))
                        }
                    }, {
                        key: "rotateToFitLabel",
                        value: function(a, o, c, d, f, p, m) {
                            var y = new J(this.ctx),
                                x = y.getTextRects(c, o);
                            if (x.width + this.w.config.stroke.width + 5 > p - d && x.width <= m - f) {
                                var w = y.rotateAroundCenter(a.node);
                                a.node.setAttribute("transform", "rotate(-90 ".concat(w.x, " ").concat(w.y, ") translate(").concat(x.height / 3, ")"))
                            }
                        }
                    }, {
                        key: "truncateLabels",
                        value: function(a, o, c, d, f, p) {
                            var m = new J(this.ctx),
                                y = m.getTextRects(a, o).width + this.w.config.stroke.width + 5 > f - c && p - d > f - c ? p - d : f - c,
                                x = m.getTextBasedOnMaxWidth({
                                    text: a,
                                    maxWidth: y,
                                    fontSize: o
                                });
                            return a.length !== x.length && y / o < 5 ? "" : x
                        }
                    }, {
                        key: "animateTreemap",
                        value: function(a, o, c, d) {
                            var f = new Pe(this.ctx);
                            f.animateRect(a, {
                                x: o.x,
                                y: o.y,
                                width: o.width,
                                height: o.height
                            }, {
                                x: c.x,
                                y: c.y,
                                width: c.width,
                                height: c.height
                            }, d, function() {
                                f.animationCompleted(a)
                            })
                        }
                    }]), K
                }(),
                yr = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC
                    }
                    return z(K, [{
                        key: "calculateTimeScaleTicks",
                        value: function(a, o) {
                            var c = this,
                                d = this.w;
                            if (d.globals.allSeriesCollapsed) return d.globals.labels = [], d.globals.timescaleLabels = [], [];
                            var f = new Ge(this.ctx),
                                p = (o - a) / 864e5;
                            this.determineInterval(p), d.globals.disableZoomIn = !1, d.globals.disableZoomOut = !1, p < .00011574074074074075 ? d.globals.disableZoomIn = !0 : p > 5e4 && (d.globals.disableZoomOut = !0);
                            var m = f.getTimeUnitsfromTimestamp(a, o, this.utc),
                                y = d.globals.gridWidth / p,
                                x = y / 24,
                                w = x / 60,
                                S = w / 60,
                                T = Math.floor(24 * p),
                                k = Math.floor(1440 * p),
                                O = Math.floor(86400 * p),
                                B = Math.floor(p),
                                $ = Math.floor(p / 30),
                                ne = Math.floor(p / 365),
                                re = {
                                    minMillisecond: m.minMillisecond,
                                    minSecond: m.minSecond,
                                    minMinute: m.minMinute,
                                    minHour: m.minHour,
                                    minDate: m.minDate,
                                    minMonth: m.minMonth,
                                    minYear: m.minYear
                                },
                                b = {
                                    firstVal: re,
                                    currentMillisecond: re.minMillisecond,
                                    currentSecond: re.minSecond,
                                    currentMinute: re.minMinute,
                                    currentHour: re.minHour,
                                    currentMonthDate: re.minDate,
                                    currentDate: re.minDate,
                                    currentMonth: re.minMonth,
                                    currentYear: re.minYear,
                                    daysWidthOnXAxis: y,
                                    hoursWidthOnXAxis: x,
                                    minutesWidthOnXAxis: w,
                                    secondsWidthOnXAxis: S,
                                    numberOfSeconds: O,
                                    numberOfMinutes: k,
                                    numberOfHours: T,
                                    numberOfDays: B,
                                    numberOfMonths: $,
                                    numberOfYears: ne
                                };
                            switch (this.tickInterval) {
                                case "years":
                                    this.generateYearScale(b);
                                    break;
                                case "months":
                                case "half_year":
                                    this.generateMonthScale(b);
                                    break;
                                case "months_days":
                                case "months_fortnight":
                                case "days":
                                case "week_days":
                                    this.generateDayScale(b);
                                    break;
                                case "hours":
                                    this.generateHourScale(b);
                                    break;
                                case "minutes_fives":
                                case "minutes":
                                    this.generateMinuteScale(b);
                                    break;
                                case "seconds_tens":
                                case "seconds_fives":
                                case "seconds":
                                    this.generateSecondScale(b)
                            }
                            var A = this.timeScaleArray.map(function(F) {
                                var X = {
                                    position: F.position,
                                    unit: F.unit,
                                    year: F.year,
                                    day: F.day ? F.day : 1,
                                    hour: F.hour ? F.hour : 0,
                                    month: F.month + 1
                                };
                                return "month" === F.unit ? ge(ge({}, X), {}, {
                                    day: 1,
                                    value: F.value + 1
                                }) : "day" === F.unit || "hour" === F.unit ? ge(ge({}, X), {}, {
                                    value: F.value
                                }) : "minute" === F.unit ? ge(ge({}, X), {}, {
                                    value: F.value,
                                    minute: F.value
                                }) : "second" === F.unit ? ge(ge({}, X), {}, {
                                    value: F.value,
                                    minute: F.minute,
                                    second: F.second
                                }) : F
                            });
                            return A.filter(function(F) {
                                var X = 1,
                                    be = Math.ceil(d.globals.gridWidth / 120),
                                    Se = F.value;
                                void 0 !== d.config.xaxis.tickAmount && (be = d.config.xaxis.tickAmount), A.length > be && (X = Math.floor(A.length / be));
                                var Le = !1,
                                    ze = !1;
                                switch (c.tickInterval) {
                                    case "years":
                                        "year" === F.unit && (Le = !0);
                                        break;
                                    case "half_year":
                                        X = 7, "year" === F.unit && (Le = !0);
                                        break;
                                    case "months":
                                        X = 1, "year" === F.unit && (Le = !0);
                                        break;
                                    case "months_fortnight":
                                        X = 15, "year" !== F.unit && "month" !== F.unit || (Le = !0), 30 === Se && (ze = !0);
                                        break;
                                    case "months_days":
                                        X = 10, "month" === F.unit && (Le = !0), 30 === Se && (ze = !0);
                                        break;
                                    case "week_days":
                                        X = 8, "month" === F.unit && (Le = !0);
                                        break;
                                    case "days":
                                        X = 1, "month" === F.unit && (Le = !0);
                                        break;
                                    case "hours":
                                        "day" === F.unit && (Le = !0);
                                        break;
                                    case "minutes_fives":
                                    case "seconds_fives":
                                        Se % 5 != 0 && (ze = !0);
                                        break;
                                    case "seconds_tens":
                                        Se % 10 != 0 && (ze = !0)
                                }
                                if ("hours" === c.tickInterval || "minutes_fives" === c.tickInterval || "seconds_tens" === c.tickInterval || "seconds_fives" === c.tickInterval) {
                                    if (!ze) return !0
                                } else if ((Se % X == 0 || Le) && !ze) return !0
                            })
                        }
                    }, {
                        key: "recalcDimensionsBasedOnFormat",
                        value: function(a, o) {
                            var c = this.w,
                                d = this.formatDates(a),
                                f = this.removeOverlappingTS(d);
                            c.globals.timescaleLabels = f.slice(), new yi(this.ctx).plotCoords()
                        }
                    }, {
                        key: "determineInterval",
                        value: function(a) {
                            var o = 24 * a,
                                c = 60 * o;
                            switch (!0) {
                                case a / 365 > 5:
                                    this.tickInterval = "years";
                                    break;
                                case a > 800:
                                    this.tickInterval = "half_year";
                                    break;
                                case a > 180:
                                    this.tickInterval = "months";
                                    break;
                                case a > 90:
                                    this.tickInterval = "months_fortnight";
                                    break;
                                case a > 60:
                                    this.tickInterval = "months_days";
                                    break;
                                case a > 30:
                                    this.tickInterval = "week_days";
                                    break;
                                case a > 2:
                                    this.tickInterval = "days";
                                    break;
                                case o > 2.4:
                                    this.tickInterval = "hours";
                                    break;
                                case c > 15:
                                    this.tickInterval = "minutes_fives";
                                    break;
                                case c > 5:
                                    this.tickInterval = "minutes";
                                    break;
                                case c > 1:
                                    this.tickInterval = "seconds_tens";
                                    break;
                                case 60 * c > 20:
                                    this.tickInterval = "seconds_fives";
                                    break;
                                default:
                                    this.tickInterval = "seconds"
                            }
                        }
                    }, {
                        key: "generateYearScale",
                        value: function(a) {
                            var o = a.firstVal,
                                c = a.currentMonth,
                                d = a.currentYear,
                                f = a.daysWidthOnXAxis,
                                p = a.numberOfYears,
                                m = o.minYear,
                                y = 0,
                                x = new Ge(this.ctx),
                                w = "year";
                            if (o.minDate > 1 || o.minMonth > 0) {
                                var S = x.determineRemainingDaysOfYear(o.minYear, o.minMonth, o.minDate);
                                y = (x.determineDaysOfYear(o.minYear) - S + 1) * f, this.timeScaleArray.push({
                                    position: y,
                                    value: m = o.minYear + 1,
                                    unit: w,
                                    year: m,
                                    month: te.monthMod(c + 1)
                                })
                            } else 1 === o.minDate && 0 === o.minMonth && this.timeScaleArray.push({
                                position: y,
                                value: m,
                                unit: w,
                                year: d,
                                month: te.monthMod(c + 1)
                            });
                            for (var T = m, k = y, O = 0; O < p; O++) T++, k = x.determineDaysOfYear(T - 1) * f + k, this.timeScaleArray.push({
                                position: k,
                                value: T,
                                unit: w,
                                year: T,
                                month: 1
                            })
                        }
                    }, {
                        key: "generateMonthScale",
                        value: function(a) {
                            var o = a.firstVal,
                                c = a.currentMonthDate,
                                d = a.currentMonth,
                                f = a.currentYear,
                                p = a.daysWidthOnXAxis,
                                m = a.numberOfMonths,
                                y = d,
                                x = 0,
                                w = new Ge(this.ctx),
                                S = "month",
                                T = 0;
                            if (o.minDate > 1) {
                                x = (w.determineDaysOfMonths(d + 1, o.minYear) - c + 1) * p, y = te.monthMod(d + 1);
                                var k = f + T,
                                    O = te.monthMod(y),
                                    B = y;
                                0 === y && (S = "year", B = k, O = 1, k += T += 1), this.timeScaleArray.push({
                                    position: x,
                                    value: B,
                                    unit: S,
                                    year: k,
                                    month: O
                                })
                            } else this.timeScaleArray.push({
                                position: x,
                                value: y,
                                unit: S,
                                year: f,
                                month: te.monthMod(d)
                            });
                            for (var $ = y + 1, ne = x, re = 0, b = 1; re < m; re++, b++) {
                                0 === ($ = te.monthMod($)) ? (S = "year", T += 1) : S = "month";
                                var A = this._getYear(f, $, T);
                                ne = w.determineDaysOfMonths($, A) * p + ne, this.timeScaleArray.push({
                                    position: ne,
                                    value: 0 === $ ? A : $,
                                    unit: S,
                                    year: A,
                                    month: 0 === $ ? 1 : $
                                }), $++
                            }
                        }
                    }, {
                        key: "generateDayScale",
                        value: function(a) {
                            var o = a.firstVal,
                                c = a.currentMonth,
                                d = a.currentYear,
                                f = a.hoursWidthOnXAxis,
                                p = a.numberOfDays,
                                m = new Ge(this.ctx),
                                y = "day",
                                x = o.minDate + 1,
                                w = x,
                                S = function(b, A, F) {
                                    return b > m.determineDaysOfMonths(A + 1, F) && (w = 1, y = "month", k = A += 1), A
                                },
                                T = (24 - o.minHour) * f,
                                k = x,
                                O = S(w, c, d);
                            0 === o.minHour && 1 === o.minDate ? (T = 0, k = te.monthMod(o.minMonth), y = "month", w = o.minDate) : 1 !== o.minDate && 0 === o.minHour && 0 === o.minMinute && (T = 0, k = x = o.minDate, O = S(w = x, c, d)), this.timeScaleArray.push({
                                position: T,
                                value: k,
                                unit: y,
                                year: this._getYear(d, O, 0),
                                month: te.monthMod(O),
                                day: w
                            });
                            for (var B = T, $ = 0; $ < p; $++) {
                                y = "day", O = S(w += 1, O, this._getYear(d, O, 0));
                                var ne = this._getYear(d, O, 0);
                                B = 24 * f + B;
                                var re = 1 === w ? te.monthMod(O) : w;
                                this.timeScaleArray.push({
                                    position: B,
                                    value: re,
                                    unit: y,
                                    year: ne,
                                    month: te.monthMod(O),
                                    day: re
                                })
                            }
                        }
                    }, {
                        key: "generateHourScale",
                        value: function(a) {
                            var o = a.firstVal,
                                c = a.currentDate,
                                d = a.currentMonth,
                                f = a.currentYear,
                                p = a.minutesWidthOnXAxis,
                                m = a.numberOfHours,
                                y = new Ge(this.ctx),
                                x = "hour",
                                w = function(X, be) {
                                    return X > y.determineDaysOfMonths(be + 1, f) && ($ = 1, be += 1), {
                                        month: be,
                                        date: $
                                    }
                                },
                                S = function(X, be) {
                                    return X > y.determineDaysOfMonths(be + 1, f) ? be += 1 : be
                                },
                                T = 60 - (o.minMinute + o.minSecond / 60),
                                k = T * p,
                                O = o.minHour + 1,
                                B = O;
                            60 === T && (k = 0, B = (O = o.minHour) + 1);
                            var $ = c;
                            B >= 24 && (B = 0, $ += 1, x = "day");
                            var ne = w($, d).month;
                            ne = S($, ne), this.timeScaleArray.push({
                                position: k,
                                value: O,
                                unit: x,
                                day: $,
                                hour: B,
                                year: f,
                                month: te.monthMod(ne)
                            }), B++;
                            for (var re = k, b = 0; b < m; b++) {
                                x = "hour", B >= 24 && (B = 0, x = "day", ne = w($ += 1, ne).month, ne = S($, ne));
                                var A = this._getYear(f, ne, 0);
                                this.timeScaleArray.push({
                                    position: re = 60 * p + re,
                                    value: 0 === B ? $ : B,
                                    unit: x,
                                    hour: B,
                                    day: $,
                                    year: A,
                                    month: te.monthMod(ne)
                                }), B++
                            }
                        }
                    }, {
                        key: "generateMinuteScale",
                        value: function(a) {
                            for (var x = a.minutesWidthOnXAxis, S = a.numberOfMinutes, T = a.currentMinute + 1, k = a.currentDate, O = a.currentMonth, B = a.currentYear, $ = a.currentHour, ne = (60 - a.currentSecond - a.currentMillisecond / 1e3) * a.secondsWidthOnXAxis, re = 0; re < S; re++) T >= 60 && (T = 0, 24 === ($ += 1) && ($ = 0)), this.timeScaleArray.push({
                                position: ne,
                                value: T,
                                unit: "minute",
                                hour: $,
                                minute: T,
                                day: k,
                                year: this._getYear(B, O, 0),
                                month: te.monthMod(O)
                            }), ne += x, T++
                        }
                    }, {
                        key: "generateSecondScale",
                        value: function(a) {
                            for (var x = a.secondsWidthOnXAxis, w = a.numberOfSeconds, S = a.currentSecond + 1, T = a.currentMinute, k = a.currentDate, O = a.currentMonth, B = a.currentYear, $ = a.currentHour, ne = (1e3 - a.currentMillisecond) / 1e3 * x, re = 0; re < w; re++) S >= 60 && (S = 0, ++T >= 60 && (T = 0, 24 == ++$ && ($ = 0))), this.timeScaleArray.push({
                                position: ne,
                                value: S,
                                unit: "second",
                                hour: $,
                                minute: T,
                                second: S,
                                day: k,
                                year: this._getYear(B, O, 0),
                                month: te.monthMod(O)
                            }), ne += x, S++
                        }
                    }, {
                        key: "createRawDateString",
                        value: function(a, o) {
                            var c = a.year;
                            return 0 === a.month && (a.month = 1), c += "-" + ("0" + a.month.toString()).slice(-2), c += "day" === a.unit ? "day" === a.unit ? "-" + ("0" + o).slice(-2) : "-01" : "-" + ("0" + (a.day ? a.day : "1")).slice(-2), c += "hour" === a.unit ? "hour" === a.unit ? "T" + ("0" + o).slice(-2) : "T00" : "T" + ("0" + (a.hour ? a.hour : "0")).slice(-2), c += "minute" === a.unit ? ":" + ("0" + o).slice(-2) : ":" + (a.minute ? ("0" + a.minute).slice(-2) : "00"), c += "second" === a.unit ? ":" + ("0" + o).slice(-2) : ":00", this.utc && (c += ".000Z"), c
                        }
                    }, {
                        key: "formatDates",
                        value: function(a) {
                            var o = this,
                                c = this.w;
                            return a.map(function(d) {
                                var f = d.value.toString(),
                                    p = new Ge(o.ctx),
                                    m = o.createRawDateString(d, f),
                                    y = p.getDate(p.parseDate(m));
                                if (o.utc || (y = p.getDate(p.parseDateWithTimezone(m))), void 0 === c.config.xaxis.labels.format) {
                                    var x = "dd MMM",
                                        w = c.config.xaxis.labels.datetimeFormatter;
                                    "year" === d.unit && (x = w.year), "month" === d.unit && (x = w.month), "day" === d.unit && (x = w.day), "hour" === d.unit && (x = w.hour), "minute" === d.unit && (x = w.minute), "second" === d.unit && (x = w.second), f = p.formatDate(y, x)
                                } else f = p.formatDate(y, c.config.xaxis.labels.format);
                                return {
                                    dateString: m,
                                    position: d.position,
                                    value: f,
                                    unit: d.unit,
                                    year: d.year,
                                    month: d.month
                                }
                            })
                        }
                    }, {
                        key: "removeOverlappingTS",
                        value: function(a) {
                            var o, c = this,
                                d = new J(this.ctx),
                                f = !1;
                            a.length > 0 && a[0].value && a.every(function(y) {
                                return y.value.length === a[0].value.length
                            }) && (f = !0, o = d.getTextRects(a[0].value).width);
                            var p = 0;
                            return a.map(function(y, x) {
                                if (x > 0 && c.w.config.xaxis.labels.hideOverlappingLabels) {
                                    var w = f ? o : d.getTextRects(a[p].value).width;
                                    return y.position > a[p].position + w + 10 ? (p = x, y) : null
                                }
                                return y
                            }).filter(function(y) {
                                return null !== y
                            })
                        }
                    }, {
                        key: "_getYear",
                        value: function(a, o, c) {
                            return a + Math.floor(o / 12) + c
                        }
                    }]), K
                }(),
                br = function() {
                    function K(a, o) {
                        U(this, K), this.ctx = o, this.w = o.w, this.el = a
                    }
                    return z(K, [{
                        key: "setupElements",
                        value: function() {
                            var a = this.w.globals,
                                o = this.w.config,
                                c = o.chart.type;
                            a.axisCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(c) > -1, a.xyCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(c) > -1, a.isBarHorizontal = ("bar" === o.chart.type || "rangeBar" === o.chart.type || "boxPlot" === o.chart.type) && o.plotOptions.bar.horizontal, a.chartClass = ".apexcharts" + a.chartID, a.dom.baseEl = this.el, a.dom.elWrap = document.createElement("div"), J.setAttrs(a.dom.elWrap, {
                                id: a.chartClass.substring(1),
                                class: "apexcharts-canvas " + a.chartClass.substring(1)
                            }), this.el.appendChild(a.dom.elWrap), a.dom.Paper = new window.SVG.Doc(a.dom.elWrap), a.dom.Paper.attr({
                                class: "apexcharts-svg",
                                "xmlns:data": "ApexChartsNS",
                                transform: "translate(".concat(o.chart.offsetX, ", ").concat(o.chart.offsetY, ")")
                            }), a.dom.Paper.node.style.background = "dark" !== o.theme.mode || o.chart.background ? o.chart.background : "rgba(0, 0, 0, 0.8)", this.setSVGDimensions(), a.dom.elLegendForeign = document.createElementNS(a.SVGNS, "foreignObject"), J.setAttrs(a.dom.elLegendForeign, {
                                x: 0,
                                y: 0,
                                width: a.svgWidth,
                                height: a.svgHeight
                            }), a.dom.elLegendWrap = document.createElement("div"), a.dom.elLegendWrap.classList.add("apexcharts-legend"), a.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), a.dom.elLegendForeign.appendChild(a.dom.elLegendWrap), a.dom.Paper.node.appendChild(a.dom.elLegendForeign), a.dom.elGraphical = a.dom.Paper.group().attr({
                                class: "apexcharts-inner apexcharts-graphical"
                            }), a.dom.elDefs = a.dom.Paper.defs(), a.dom.Paper.add(a.dom.elGraphical), a.dom.elGraphical.add(a.dom.elDefs)
                        }
                    }, {
                        key: "plotChartType",
                        value: function(a, o) {
                            var c = this.w,
                                d = c.config,
                                f = c.globals,
                                p = {
                                    series: [],
                                    i: []
                                },
                                m = {
                                    series: [],
                                    i: []
                                },
                                y = {
                                    series: [],
                                    i: []
                                },
                                x = {
                                    series: [],
                                    i: []
                                },
                                w = {
                                    series: [],
                                    i: []
                                },
                                S = {
                                    series: [],
                                    i: []
                                },
                                T = {
                                    series: [],
                                    i: []
                                },
                                k = {
                                    series: [],
                                    i: []
                                },
                                O = {
                                    series: [],
                                    seriesRangeEnd: [],
                                    i: []
                                };
                            f.series.map(function(be, Se) {
                                var Le = 0;
                                void 0 !== a[Se].type ? ("column" === a[Se].type || "bar" === a[Se].type ? (f.series.length > 1 && d.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), w.series.push(be), w.i.push(Se), Le++, c.globals.columnSeries = w.series) : "area" === a[Se].type ? (m.series.push(be), m.i.push(Se), Le++) : "line" === a[Se].type ? (p.series.push(be), p.i.push(Se), Le++) : "scatter" === a[Se].type ? (y.series.push(be), y.i.push(Se)) : "bubble" === a[Se].type ? (x.series.push(be), x.i.push(Se), Le++) : "candlestick" === a[Se].type ? (S.series.push(be), S.i.push(Se), Le++) : "boxPlot" === a[Se].type ? (T.series.push(be), T.i.push(Se), Le++) : "rangeBar" === a[Se].type ? (k.series.push(be), k.i.push(Se), Le++) : "rangeArea" === a[Se].type ? (O.series.push(f.seriesRangeStart[Se]), O.seriesRangeEnd.push(f.seriesRangeEnd[Se]), O.i.push(Se), Le++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"), Le > 1 && (f.comboCharts = !0)) : (p.series.push(be), p.i.push(Se))
                            });
                            var B = new Vt(this.ctx, o),
                                $ = new As(this.ctx, o);
                            this.ctx.pie = new Ha(this.ctx);
                            var ne = new Un(this.ctx);
                            this.ctx.rangeBar = new zs(this.ctx, o);
                            var re = new ao(this.ctx),
                                b = [];
                            if (f.comboCharts) {
                                if (m.series.length > 0 && b.push(B.draw(m.series, "area", m.i)), w.series.length > 0)
                                    if (c.config.chart.stacked) {
                                        var A = new bs(this.ctx, o);
                                        b.push(A.draw(w.series, w.i))
                                    } else this.ctx.bar = new vr(this.ctx, o), b.push(this.ctx.bar.draw(w.series, w.i));
                                if (O.series.length > 0 && b.push(B.draw(O.series, "rangeArea", O.i, O.seriesRangeEnd)), p.series.length > 0 && b.push(B.draw(p.series, "line", p.i)), S.series.length > 0 && b.push($.draw(S.series, "candlestick", S.i)), T.series.length > 0 && b.push($.draw(T.series, "boxPlot", T.i)), k.series.length > 0 && b.push(this.ctx.rangeBar.draw(k.series, k.i)), y.series.length > 0) {
                                    var F = new Vt(this.ctx, o, !0);
                                    b.push(F.draw(y.series, "scatter", y.i))
                                }
                                if (x.series.length > 0) {
                                    var X = new Vt(this.ctx, o, !0);
                                    b.push(X.draw(x.series, "bubble", x.i))
                                }
                            } else switch (d.chart.type) {
                                case "line":
                                    b = B.draw(f.series, "line");
                                    break;
                                case "area":
                                    b = B.draw(f.series, "area");
                                    break;
                                case "bar":
                                    d.chart.stacked ? b = new bs(this.ctx, o).draw(f.series) : (this.ctx.bar = new vr(this.ctx, o), b = this.ctx.bar.draw(f.series));
                                    break;
                                case "candlestick":
                                    b = new As(this.ctx, o).draw(f.series, "candlestick");
                                    break;
                                case "boxPlot":
                                    b = new As(this.ctx, o).draw(f.series, d.chart.type);
                                    break;
                                case "rangeBar":
                                    b = this.ctx.rangeBar.draw(f.series);
                                    break;
                                case "rangeArea":
                                    b = B.draw(f.seriesRangeStart, "rangeArea", void 0, f.seriesRangeEnd);
                                    break;
                                case "heatmap":
                                    b = new xs(this.ctx, o).draw(f.series);
                                    break;
                                case "treemap":
                                    b = new Tn(this.ctx, o).draw(f.series);
                                    break;
                                case "pie":
                                case "donut":
                                case "polarArea":
                                    b = this.ctx.pie.draw(f.series);
                                    break;
                                case "radialBar":
                                    b = ne.draw(f.series);
                                    break;
                                case "radar":
                                    b = re.draw(f.series);
                                    break;
                                default:
                                    b = B.draw(f.series)
                            }
                            return b
                        }
                    }, {
                        key: "setSVGDimensions",
                        value: function() {
                            var a = this.w.globals,
                                o = this.w.config;
                            a.svgWidth = o.chart.width, a.svgHeight = o.chart.height;
                            var c = te.getDimensions(this.el),
                                d = o.chart.width.toString().split(/[0-9]+/g).pop();
                            "%" === d ? te.isNumber(c[0]) && (0 === c[0].width && (c = te.getDimensions(this.el.parentNode)), a.svgWidth = c[0] * parseInt(o.chart.width, 10) / 100) : "px" !== d && "" !== d || (a.svgWidth = parseInt(o.chart.width, 10));
                            var f = o.chart.height.toString().split(/[0-9]+/g).pop();
                            if ("auto" !== a.svgHeight && "" !== a.svgHeight)
                                if ("%" === f) {
                                    var p = te.getDimensions(this.el.parentNode);
                                    a.svgHeight = p[1] * parseInt(o.chart.height, 10) / 100
                                } else a.svgHeight = parseInt(o.chart.height, 10);
                            else a.svgHeight = a.axisCharts ? a.svgWidth / 1.61 : a.svgWidth / 1.2;
                            a.svgWidth < 0 && (a.svgWidth = 0), a.svgHeight < 0 && (a.svgHeight = 0), J.setAttrs(a.dom.Paper.node, {
                                width: a.svgWidth,
                                height: a.svgHeight
                            }), "%" !== f && (a.dom.Paper.node.parentNode.parentNode.style.minHeight = a.svgHeight + (o.chart.sparkline.enabled ? 0 : a.axisCharts ? o.chart.parentHeightOffset : 0) + "px"), a.dom.elWrap.style.width = a.svgWidth + "px", a.dom.elWrap.style.height = a.svgHeight + "px"
                        }
                    }, {
                        key: "shiftGraphPosition",
                        value: function() {
                            var a = this.w.globals;
                            J.setAttrs(a.dom.elGraphical.node, {
                                transform: "translate(" + a.translateX + ", " + a.translateY + ")"
                            })
                        }
                    }, {
                        key: "resizeNonAxisCharts",
                        value: function() {
                            var a = this.w,
                                o = a.globals,
                                c = 0,
                                d = a.config.chart.sparkline.enabled ? 1 : 15;
                            d += a.config.grid.padding.bottom, "top" !== a.config.legend.position && "bottom" !== a.config.legend.position || !a.config.legend.show || a.config.legend.floating || (c = new bi(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
                            var f = a.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),
                                p = 2.05 * a.globals.radialSize;
                            if (f && !a.config.chart.sparkline.enabled && 0 !== a.config.plotOptions.radialBar.startAngle) {
                                var m = te.getBoundingClientRect(f);
                                p = m.bottom, p = Math.max(2.05 * a.globals.radialSize, m.bottom - m.top)
                            }
                            var x = p + o.translateY + c + d;
                            o.dom.elLegendForeign && o.dom.elLegendForeign.setAttribute("height", x), a.config.chart.height && String(a.config.chart.height).indexOf("%") > 0 || (o.dom.elWrap.style.height = x + "px", J.setAttrs(o.dom.Paper.node, {
                                height: x
                            }), o.dom.Paper.node.parentNode.parentNode.style.minHeight = x + "px")
                        }
                    }, {
                        key: "coreCalculations",
                        value: function() {
                            new Kn(this.ctx).init()
                        }
                    }, {
                        key: "resetGlobals",
                        value: function() {
                            var a = this,
                                o = function() {
                                    return a.w.config.series.map(function(f) {
                                        return []
                                    })
                                },
                                c = new Mt,
                                d = this.w.globals;
                            c.initGlobalVars(d), d.seriesXvalues = o(), d.seriesYvalues = o()
                        }
                    }, {
                        key: "isMultipleY",
                        value: function() {
                            if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) return this.w.globals.isMultipleYAxis = !0, !0
                        }
                    }, {
                        key: "xySettings",
                        value: function() {
                            var a = null,
                                o = this.w;
                            if (o.globals.axisCharts) {
                                if ("back" === o.config.xaxis.crosshairs.position && new ui(this.ctx).drawXCrosshairs(), "back" === o.config.yaxis[0].crosshairs.position && new ui(this.ctx).drawYCrosshairs(), "datetime" === o.config.xaxis.type && void 0 === o.config.xaxis.labels.formatter) {
                                    this.ctx.timeScale = new yr(this.ctx);
                                    var c = [];
                                    isFinite(o.globals.minX) && isFinite(o.globals.maxX) && !o.globals.isBarHorizontal ? c = this.ctx.timeScale.calculateTimeScaleTicks(o.globals.minX, o.globals.maxX) : o.globals.isBarHorizontal && (c = this.ctx.timeScale.calculateTimeScaleTicks(o.globals.minY, o.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(c)
                                }
                                a = new Ie(this.ctx).getCalculatedRatios()
                            }
                            return a
                        }
                    }, {
                        key: "updateSourceChart",
                        value: function(a) {
                            this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({
                                chart: {
                                    selection: {
                                        xaxis: {
                                            min: a.w.globals.minX,
                                            max: a.w.globals.maxX
                                        }
                                    }
                                }
                            }, !1, !1)
                        }
                    }, {
                        key: "setupBrushHandler",
                        value: function() {
                            var a = this,
                                o = this.w;
                            if (o.config.chart.brush.enabled && "function" != typeof o.config.chart.events.selection) {
                                var c = Array.isArray(o.config.chart.brush.targets) || [o.config.chart.brush.target];
                                c.forEach(function(d) {
                                    var f = ApexCharts.getChartByID(d);
                                    f.w.globals.brushSource = a.ctx, "function" != typeof f.w.config.chart.events.zoomed && (f.w.config.chart.events.zoomed = function() {
                                        a.updateSourceChart(f)
                                    }), "function" != typeof f.w.config.chart.events.scrolled && (f.w.config.chart.events.scrolled = function() {
                                        a.updateSourceChart(f)
                                    })
                                }), o.config.chart.events.selection = function(d, f) {
                                    c.forEach(function(p) {
                                        var m = ApexCharts.getChartByID(p),
                                            y = te.clone(o.config.yaxis);
                                        if (o.config.chart.brush.autoScaleYaxis && 1 === m.w.globals.series.length) {
                                            var x = new vn(m);
                                            y = x.autoScaleY(m, y, f)
                                        }
                                        var w = m.w.config.yaxis.reduce(function(S, T, k) {
                                            return [].concat(We(S), [ge(ge({}, m.w.config.yaxis[k]), {}, {
                                                min: y[0].min,
                                                max: y[0].max
                                            })])
                                        }, []);
                                        m.ctx.updateHelpers._updateOptions({
                                            xaxis: {
                                                min: f.xaxis.min,
                                                max: f.xaxis.max
                                            },
                                            yaxis: w
                                        }, !1, !1, !1, !1)
                                    })
                                }
                            }
                        }
                    }]), K
                }(),
                as = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "_updateOptions",
                        value: function(a) {
                            var o = this,
                                c = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                d = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                                f = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                                p = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                            return new Promise(function(m) {
                                var y = [o.ctx];
                                f && (y = o.ctx.getSyncedCharts()), o.ctx.w.globals.isExecCalled && (y = [o.ctx], o.ctx.w.globals.isExecCalled = !1), y.forEach(function(x, w) {
                                    var S = x.w;
                                    if (S.globals.shouldAnimate = d, c || (S.globals.resized = !0, S.globals.dataChanged = !0, d && x.series.getPreviousPaths()), a && "object" === Ce(a) && (x.config = new _t(a), a = Ie.extendArrayProps(x.config, a, S), x.w.globals.chartID !== o.ctx.w.globals.chartID && delete a.series, S.config = te.extend(S.config, a), p && (S.globals.lastXAxis = a.xaxis ? te.clone(a.xaxis) : [], S.globals.lastYAxis = a.yaxis ? te.clone(a.yaxis) : [], S.globals.initialConfig = te.extend({}, S.config), S.globals.initialSeries = te.clone(S.config.series), a.series))) {
                                        for (var T = 0; T < S.globals.collapsedSeriesIndices.length; T++) {
                                            var k = S.config.series[S.globals.collapsedSeriesIndices[T]];
                                            S.globals.collapsedSeries[T].data = S.globals.axisCharts ? k.data.slice() : k
                                        }
                                        for (var O = 0; O < S.globals.ancillaryCollapsedSeriesIndices.length; O++) {
                                            var B = S.config.series[S.globals.ancillaryCollapsedSeriesIndices[O]];
                                            S.globals.ancillaryCollapsedSeries[O].data = S.globals.axisCharts ? B.data.slice() : B
                                        }
                                        x.series.emptyCollapsedSeries(S.config.series)
                                    }
                                    return x.update(a).then(function() {
                                        w === y.length - 1 && m(x)
                                    })
                                })
                            })
                        }
                    }, {
                        key: "_updateSeries",
                        value: function(a, o) {
                            var c = this,
                                d = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                            return new Promise(function(f) {
                                var p, m = c.w;
                                return m.globals.shouldAnimate = o, m.globals.dataChanged = !0, o && c.ctx.series.getPreviousPaths(), m.globals.axisCharts ? (0 === (p = a.map(function(y, x) {
                                    return c._extendSeries(y, x)
                                })).length && (p = [{
                                    data: []
                                }]), m.config.series = p) : m.config.series = a.slice(), d && (m.globals.initialConfig.series = te.clone(m.config.series), m.globals.initialSeries = te.clone(m.config.series)), c.ctx.update().then(function() {
                                    f(c.ctx)
                                })
                            })
                        }
                    }, {
                        key: "_extendSeries",
                        value: function(a, o) {
                            var c = this.w,
                                d = c.config.series[o];
                            return ge(ge({}, c.config.series[o]), {}, {
                                name: a.name ? a.name : d ? .name,
                                color: a.color ? a.color : d ? .color,
                                type: a.type ? a.type : d ? .type,
                                group: a.group ? a.group : d ? .group,
                                data: a.data ? a.data : d ? .data,
                                zIndex: void 0 !== a.zIndex ? a.zIndex : o
                            })
                        }
                    }, {
                        key: "toggleDataPointSelection",
                        value: function(a, o) {
                            var c = this.w,
                                d = null,
                                f = ".apexcharts-series[data\\:realIndex='".concat(a, "']");
                            return c.globals.axisCharts ? d = c.globals.dom.Paper.select("".concat(f, " path[j='").concat(o, "'], ").concat(f, " circle[j='").concat(o, "'], ").concat(f, " rect[j='").concat(o, "']")).members[0] : void 0 === o && (d = c.globals.dom.Paper.select("".concat(f, " path[j='").concat(a, "']")).members[0], "pie" !== c.config.chart.type && "polarArea" !== c.config.chart.type && "donut" !== c.config.chart.type || this.ctx.pie.pieClicked(a)), d ? (new J(this.ctx).pathMouseDown(d, null), d.node ? d.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null)
                        }
                    }, {
                        key: "forceXAxisUpdate",
                        value: function(a) {
                            var o = this.w;
                            if (["min", "max"].forEach(function(d) {
                                    void 0 !== a.xaxis[d] && (o.config.xaxis[d] = a.xaxis[d], o.globals.lastXAxis[d] = a.xaxis[d])
                                }), a.xaxis.categories && a.xaxis.categories.length && (o.config.xaxis.categories = a.xaxis.categories), o.config.xaxis.convertedCatToNumeric) {
                                var c = new je(a);
                                a = c.convertCatToNumericXaxis(a, this.ctx)
                            }
                            return a
                        }
                    }, {
                        key: "forceYAxisUpdate",
                        value: function(a) {
                            return a.chart && a.chart.stacked && "100%" === a.chart.stackType && (Array.isArray(a.yaxis) ? a.yaxis.forEach(function(o, c) {
                                a.yaxis[c].min = 0, a.yaxis[c].max = 100
                            }) : (a.yaxis.min = 0, a.yaxis.max = 100)), a
                        }
                    }, {
                        key: "revertDefaultAxisMinMax",
                        value: function(a) {
                            var o = this,
                                c = this.w,
                                d = c.globals.lastXAxis,
                                f = c.globals.lastYAxis;
                            a && a.xaxis && (d = a.xaxis), a && a.yaxis && (f = a.yaxis), c.config.xaxis.min = d.min, c.config.xaxis.max = d.max, c.config.yaxis.map(function(m, y) {
                                c.globals.zoomed || void 0 !== f[y] ? function(m) {
                                    void 0 !== f[m] && (c.config.yaxis[m].min = f[m].min, c.config.yaxis[m].max = f[m].max)
                                }(y) : void 0 !== o.ctx.opts.yaxis[y] && (m.min = o.ctx.opts.yaxis[y].min, m.max = o.ctx.opts.yaxis[y].max)
                            })
                        }
                    }]), K
                }();
            Zt = typeof window < "u" ? window : void 0, gn = function(K, a) {
                    var o = (void 0 !== this ? this : K).SVG = function(b) {
                        if (o.supported) return b = new o.Doc(b), o.parser.draw || o.prepare(), b
                    };
                    if (o.ns = "http://www.w3.org/2000/svg", o.xmlns = "http://www.w3.org/2000/xmlns/", o.xlink = "http://www.w3.org/1999/xlink", o.svgjs = "http://svgjs.dev", o.supported = !0, !o.supported) return !1;
                    o.did = 1e3, o.eid = function(b) {
                        return "Svgjs" + w(b) + o.did++
                    }, o.create = function(b) {
                        var A = a.createElementNS(this.ns, b);
                        return A.setAttribute("id", this.eid(b)), A
                    }, o.extend = function() {
                        var b, A;
                        A = (b = [].slice.call(arguments)).pop();
                        for (var F = b.length - 1; F >= 0; F--)
                            if (b[F])
                                for (var X in A) b[F].prototype[X] = A[X];
                        o.Set && o.Set.inherit && o.Set.inherit()
                    }, o.invent = function(b) {
                        var A = "function" == typeof b.create ? b.create : function() {
                            this.constructor.call(this, o.create(b.create))
                        };
                        return b.inherit && (A.prototype = new b.inherit), b.extend && o.extend(A, b.extend), b.construct && o.extend(b.parent || o.Container, b.construct), A
                    }, o.adopt = function(b) {
                        return b ? b.instance ? b.instance : ((A = "svg" == b.nodeName ? b.parentNode instanceof K.SVGElement ? new o.Nested : new o.Doc : "linearGradient" == b.nodeName ? new o.Gradient("linear") : "radialGradient" == b.nodeName ? new o.Gradient("radial") : o[w(b.nodeName)] ? new(o[w(b.nodeName)]) : new o.Element(b)).type = b.nodeName, A.node = b, b.instance = A, A instanceof o.Doc && A.namespace().defs(), A.setData(JSON.parse(b.getAttribute("svgjs:data")) || {}), A) : null;
                        var A
                    }, o.prepare = function() {
                        var b = a.getElementsByTagName("body")[0],
                            A = (b ? new o.Doc(b) : o.adopt(a.documentElement).nested()).size(2, 0);
                        o.parser = {
                            body: b || a.documentElement,
                            draw: A.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
                            poly: A.polyline().node,
                            path: A.path().node,
                            native: o.create("svg")
                        }
                    }, o.parser = {
                        native: o.create("svg")
                    }, a.addEventListener("DOMContentLoaded", function() {
                        o.parser.draw || o.prepare()
                    }, !1), o.regex = {
                        numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
                        hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
                        rgb: /rgb\((\d+),(\d+),(\d+)\)/,
                        reference: /#([a-z0-9\-_]+)/i,
                        transforms: /\)\s*,?\s*/,
                        whitespace: /\s/g,
                        isHex: /^#[a-f0-9]{3,6}$/i,
                        isRgb: /^rgb\(/,
                        isCss: /[^:]+:[^;]+;?/,
                        isBlank: /^(\s+)?$/,
                        isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
                        isPercent: /^-?[\d\.]+%$/,
                        isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
                        delimiter: /[\s,]+/,
                        hyphen: /([^e])\-/gi,
                        pathLetters: /[MLHVCSQTAZ]/gi,
                        isPathLetter: /[MLHVCSQTAZ]/i,
                        numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
                        dots: /\./g
                    }, o.utils = {
                        map: function(b, A) {
                            for (var F = b.length, X = [], be = 0; be < F; be++) X.push(A(b[be]));
                            return X
                        },
                        filter: function(b, A) {
                            for (var F = b.length, X = [], be = 0; be < F; be++) A(b[be]) && X.push(b[be]);
                            return X
                        },
                        filterSVGElements: function(b) {
                            return this.filter(b, function(A) {
                                return A instanceof K.SVGElement
                            })
                        }
                    }, o.defaults = {
                        attrs: {
                            "fill-opacity": 1,
                            "stroke-opacity": 1,
                            "stroke-width": 0,
                            "stroke-linejoin": "miter",
                            "stroke-linecap": "butt",
                            fill: "#000000",
                            stroke: "#000000",
                            opacity: 1,
                            x: 0,
                            y: 0,
                            cx: 0,
                            cy: 0,
                            width: 0,
                            height: 0,
                            r: 0,
                            rx: 0,
                            ry: 0,
                            offset: 0,
                            "stop-opacity": 1,
                            "stop-color": "#000000",
                            "font-size": 16,
                            "font-family": "Helvetica, Arial, sans-serif",
                            "text-anchor": "start"
                        }
                    }, o.Color = function(b) {
                        var A, F;
                        this.r = 0, this.g = 0, this.b = 0, b && ("string" == typeof b ? o.regex.isRgb.test(b) ? (A = o.regex.rgb.exec(b.replace(o.regex.whitespace, "")), this.r = parseInt(A[1]), this.g = parseInt(A[2]), this.b = parseInt(A[3])) : o.regex.isHex.test(b) && (A = o.regex.hex.exec(4 == (F = b).length ? ["#", F.substring(1, 2), F.substring(1, 2), F.substring(2, 3), F.substring(2, 3), F.substring(3, 4), F.substring(3, 4)].join("") : F), this.r = parseInt(A[1], 16), this.g = parseInt(A[2], 16), this.b = parseInt(A[3], 16)) : "object" === Ce(b) && (this.r = b.r, this.g = b.g, this.b = b.b))
                    }, o.extend(o.Color, {
                        toString: function() {
                            return this.toHex()
                        },
                        toHex: function() {
                            return "#" + S(this.r) + S(this.g) + S(this.b)
                        },
                        toRgb: function() {
                            return "rgb(" + [this.r, this.g, this.b].join() + ")"
                        },
                        brightness: function() {
                            return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
                        },
                        morph: function(b) {
                            return this.destination = new o.Color(b), this
                        },
                        at: function(b) {
                            return this.destination ? new o.Color({
                                r: ~~(this.r + (this.destination.r - this.r) * (b = b < 0 ? 0 : b > 1 ? 1 : b)),
                                g: ~~(this.g + (this.destination.g - this.g) * b),
                                b: ~~(this.b + (this.destination.b - this.b) * b)
                            }) : this
                        }
                    }), o.Color.test = function(b) {
                        return o.regex.isHex.test(b += "") || o.regex.isRgb.test(b)
                    }, o.Color.isRgb = function(b) {
                        return b && "number" == typeof b.r && "number" == typeof b.g && "number" == typeof b.b
                    }, o.Color.isColor = function(b) {
                        return o.Color.isRgb(b) || o.Color.test(b)
                    }, o.Array = function(b, A) {
                        0 == (b = (b || []).valueOf()).length && A && (b = A.valueOf()), this.value = this.parse(b)
                    }, o.extend(o.Array, {
                        toString: function() {
                            return this.value.join(" ")
                        },
                        valueOf: function() {
                            return this.value
                        },
                        parse: function(b) {
                            return b = b.valueOf(), Array.isArray(b) ? b : this.split(b)
                        }
                    }), o.PointArray = function(b, A) {
                        o.Array.call(this, b, A || [
                            [0, 0]
                        ])
                    }, o.PointArray.prototype = new o.Array, o.PointArray.prototype.constructor = o.PointArray;
                    for (var c = {
                            M: function(b, A, F) {
                                return A.x = F.x = b[0], A.y = F.y = b[1], ["M", A.x, A.y]
                            },
                            L: function(b, A) {
                                return A.x = b[0], A.y = b[1], ["L", b[0], b[1]]
                            },
                            H: function(b, A) {
                                return A.x = b[0], ["H", b[0]]
                            },
                            V: function(b, A) {
                                return A.y = b[0], ["V", b[0]]
                            },
                            C: function(b, A) {
                                return A.x = b[4], A.y = b[5], ["C", b[0], b[1], b[2], b[3], b[4], b[5]]
                            },
                            Q: function(b, A) {
                                return A.x = b[2], A.y = b[3], ["Q", b[0], b[1], b[2], b[3]]
                            },
                            S: function(b, A) {
                                return A.x = b[2], A.y = b[3], ["S", b[0], b[1], b[2], b[3]]
                            },
                            Z: function(b, A, F) {
                                return A.x = F.x, A.y = F.y, ["Z"]
                            }
                        }, d = "mlhvqtcsaz".split(""), f = 0, p = d.length; f < p; ++f) c[d[f]] = function(b) {
                        return function(A, F, X) {
                            if ("H" == b) A[0] = A[0] + F.x;
                            else if ("V" == b) A[0] = A[0] + F.y;
                            else if ("A" == b) A[5] = A[5] + F.x, A[6] = A[6] + F.y;
                            else
                                for (var be = 0, Se = A.length; be < Se; ++be) A[be] = A[be] + (be % 2 ? F.y : F.x);
                            if (c && "function" == typeof c[b]) return c[b](A, F, X)
                        }
                    }(d[f].toUpperCase());
                    o.PathArray = function(b, A) {
                        o.Array.call(this, b, A || [
                            ["M", 0, 0]
                        ])
                    }, o.PathArray.prototype = new o.Array, o.PathArray.prototype.constructor = o.PathArray, o.extend(o.PathArray, {
                        toString: function() {
                            return function(b) {
                                for (var A = 0, F = b.length, X = ""; A < F; A++) X += b[A][0], null != b[A][1] && (X += b[A][1], null != b[A][2] && (X += " ", X += b[A][2], null != b[A][3] && (X += " ", X += b[A][3], X += " ", X += b[A][4], null != b[A][5] && (X += " ", X += b[A][5], X += " ", X += b[A][6], null != b[A][7] && (X += " ", X += b[A][7])))));
                                return X + " "
                            }(this.value)
                        },
                        move: function(b, A) {
                            return this.bbox(), this
                        },
                        at: function(b) {
                            if (!this.destination) return this;
                            for (var A = this.value, F = this.destination.value, X = [], be = new o.PathArray, Se = 0, Le = A.length; Se < Le; Se++) {
                                X[Se] = [A[Se][0]];
                                for (var ze = 1, nt = A[Se].length; ze < nt; ze++) X[Se][ze] = A[Se][ze] + (F[Se][ze] - A[Se][ze]) * b;
                                "A" === X[Se][0] && (X[Se][4] = +(0 != X[Se][4]), X[Se][5] = +(0 != X[Se][5]))
                            }
                            return be.value = X, be
                        },
                        parse: function(b) {
                            if (b instanceof o.PathArray) return b.valueOf();
                            var A, F = {
                                M: 2,
                                L: 2,
                                H: 1,
                                V: 1,
                                C: 6,
                                S: 4,
                                Q: 4,
                                T: 2,
                                A: 7,
                                Z: 0
                            };
                            b = "string" == typeof b ? b.replace(o.regex.numbersWithDots, y).replace(o.regex.pathLetters, " $& ").replace(o.regex.hyphen, "$1 -").trim().split(o.regex.delimiter) : b.reduce(function(nt, yt) {
                                return [].concat.call(nt, yt)
                            }, []);
                            var X = [],
                                be = new o.Point,
                                Se = new o.Point,
                                Le = 0,
                                ze = b.length;
                            do {
                                o.regex.isPathLetter.test(b[Le]) ? (A = b[Le], ++Le) : "M" == A ? A = "L" : "m" == A && (A = "l"), X.push(c[A].call(null, b.slice(Le, Le += F[A.toUpperCase()]).map(parseFloat), be, Se))
                            } while (ze > Le);
                            return X
                        },
                        bbox: function() {
                            return o.parser.draw || o.prepare(), o.parser.path.setAttribute("d", this.toString()), o.parser.path.getBBox()
                        }
                    }), o.Number = o.invent({
                        create: function(b, A) {
                            this.value = 0, this.unit = A || "", "number" == typeof b ? this.value = isNaN(b) ? 0 : isFinite(b) ? b : b < 0 ? -34e37 : 34e37 : "string" == typeof b ? (A = b.match(o.regex.numberAndUnit)) && (this.value = parseFloat(A[1]), "%" == A[5] ? this.value /= 100 : "s" == A[5] && (this.value *= 1e3), this.unit = A[5]) : b instanceof o.Number && (this.value = b.valueOf(), this.unit = b.unit)
                        },
                        extend: {
                            toString: function() {
                                return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
                            },
                            toJSON: function() {
                                return this.toString()
                            },
                            valueOf: function() {
                                return this.value
                            },
                            plus: function(b) {
                                return b = new o.Number(b), new o.Number(this + b, this.unit || b.unit)
                            },
                            minus: function(b) {
                                return b = new o.Number(b), new o.Number(this - b, this.unit || b.unit)
                            },
                            times: function(b) {
                                return b = new o.Number(b), new o.Number(this * b, this.unit || b.unit)
                            },
                            divide: function(b) {
                                return b = new o.Number(b), new o.Number(this / b, this.unit || b.unit)
                            },
                            to: function(b) {
                                var A = new o.Number(this);
                                return "string" == typeof b && (A.unit = b), A
                            },
                            morph: function(b) {
                                return this.destination = new o.Number(b), b.relative && (this.destination.value += this.value), this
                            },
                            at: function(b) {
                                return this.destination ? new o.Number(this.destination).minus(this).times(b).plus(this) : this
                            }
                        }
                    }), o.Element = o.invent({
                        create: function(b) {
                            this._stroke = o.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = b) && (this.type = b.nodeName, this.node.instance = this, this._stroke = b.getAttribute("stroke") || this._stroke)
                        },
                        extend: {
                            x: function(b) {
                                return this.attr("x", b)
                            },
                            y: function(b) {
                                return this.attr("y", b)
                            },
                            cx: function(b) {
                                return null == b ? this.x() + this.width() / 2 : this.x(b - this.width() / 2)
                            },
                            cy: function(b) {
                                return null == b ? this.y() + this.height() / 2 : this.y(b - this.height() / 2)
                            },
                            move: function(b, A) {
                                return this.x(b).y(A)
                            },
                            center: function(b, A) {
                                return this.cx(b).cy(A)
                            },
                            width: function(b) {
                                return this.attr("width", b)
                            },
                            height: function(b) {
                                return this.attr("height", b)
                            },
                            size: function(b, A) {
                                var F = T(this, b, A);
                                return this.width(new o.Number(F.width)).height(new o.Number(F.height))
                            },
                            clone: function(b) {
                                this.writeDataToDom();
                                var A = B(this.node.cloneNode(!0));
                                return b ? b.add(A) : this.after(A), A
                            },
                            remove: function() {
                                return this.parent() && this.parent().removeElement(this), this
                            },
                            replace: function(b) {
                                return this.after(b).remove(), b
                            },
                            addTo: function(b) {
                                return b.put(this)
                            },
                            putIn: function(b) {
                                return b.add(this)
                            },
                            id: function(b) {
                                return this.attr("id", b)
                            },
                            show: function() {
                                return this.style("display", "")
                            },
                            hide: function() {
                                return this.style("display", "none")
                            },
                            visible: function() {
                                return "none" != this.style("display")
                            },
                            toString: function() {
                                return this.attr("id")
                            },
                            classes: function() {
                                var b = this.attr("class");
                                return null == b ? [] : b.trim().split(o.regex.delimiter)
                            },
                            hasClass: function(b) {
                                return -1 != this.classes().indexOf(b)
                            },
                            addClass: function(b) {
                                if (!this.hasClass(b)) {
                                    var A = this.classes();
                                    A.push(b), this.attr("class", A.join(" "))
                                }
                                return this
                            },
                            removeClass: function(b) {
                                return this.hasClass(b) && this.attr("class", this.classes().filter(function(A) {
                                    return A != b
                                }).join(" ")), this
                            },
                            toggleClass: function(b) {
                                return this.hasClass(b) ? this.removeClass(b) : this.addClass(b)
                            },
                            reference: function(b) {
                                return o.get(this.attr(b))
                            },
                            parent: function(b) {
                                var A = this;
                                if (!A.node.parentNode) return null;
                                if (A = o.adopt(A.node.parentNode), !b) return A;
                                for (; A && A.node instanceof K.SVGElement;) {
                                    if ("string" == typeof b ? A.matches(b) : A instanceof b) return A;
                                    if (!A.node.parentNode || "#document" == A.node.parentNode.nodeName) return null;
                                    A = o.adopt(A.node.parentNode)
                                }
                            },
                            doc: function() {
                                return this instanceof o.Doc ? this : this.parent(o.Doc)
                            },
                            parents: function(b) {
                                var A = [],
                                    F = this;
                                do {
                                    if (!(F = F.parent(b)) || !F.node) break;
                                    A.push(F)
                                } while (F.parent);
                                return A
                            },
                            matches: function(b) {
                                return ((A = this.node).matches || A.matchesSelector || A.msMatchesSelector || A.mozMatchesSelector || A.webkitMatchesSelector || A.oMatchesSelector).call(A, b);
                                var A
                            },
                            native: function() {
                                return this.node
                            },
                            svg: function(b) {
                                var A = a.createElement("svg");
                                if (!(b && this instanceof o.Parent)) return A.appendChild(b = a.createElement("svg")), this.writeDataToDom(), b.appendChild(this.node.cloneNode(!0)), A.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
                                A.innerHTML = "<svg>" + b.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
                                for (var F = 0, X = A.firstChild.childNodes.length; F < X; F++) this.node.appendChild(A.firstChild.firstChild);
                                return this
                            },
                            writeDataToDom: function() {
                                return (this.each || this.lines) && (this.each ? this : this.lines()).each(function() {
                                    this.writeDataToDom()
                                }), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this
                            },
                            setData: function(b) {
                                return this.dom = b, this
                            },
                            is: function(b) {
                                return this instanceof b
                            }
                        }
                    }), o.easing = {
                        "-": function(b) {
                            return b
                        },
                        "<>": function(b) {
                            return -Math.cos(b * Math.PI) / 2 + .5
                        },
                        ">": function(b) {
                            return Math.sin(b * Math.PI / 2)
                        },
                        "<": function(b) {
                            return 1 - Math.cos(b * Math.PI / 2)
                        }
                    }, o.morph = function(b) {
                        return function(A, F) {
                            return new o.MorphObj(A, F).at(b)
                        }
                    }, o.Situation = o.invent({
                        create: function(b) {
                            this.init = !1, this.reversed = !1, this.reversing = !1, this.duration = new o.Number(b.duration).valueOf(), this.delay = new o.Number(b.delay).valueOf(), this.start = +new Date + this.delay, this.finish = this.start + this.duration, this.ease = b.ease, this.loop = 0, this.loops = !1, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {}
                        }
                    }), o.FX = o.invent({
                        create: function(b) {
                            this._target = b, this.situations = [], this.active = !1, this.situation = null, this.paused = !1, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1
                        },
                        extend: {
                            animate: function(b, A, F) {
                                "object" === Ce(b) && (A = b.ease, F = b.delay, b = b.duration);
                                var X = new o.Situation({
                                    duration: b || 1e3,
                                    delay: F || 0,
                                    ease: o.easing[A || "-"] || A
                                });
                                return this.queue(X), this
                            },
                            target: function(b) {
                                return b && b instanceof o.Element ? (this._target = b, this) : this._target
                            },
                            timeToAbsPos: function(b) {
                                return (b - this.situation.start) / (this.situation.duration / this._speed)
                            },
                            absPosToTime: function(b) {
                                return this.situation.duration / this._speed * b + this.situation.start
                            },
                            startAnimFrame: function() {
                                this.stopAnimFrame(), this.animationFrame = K.requestAnimationFrame(function() {
                                    this.step()
                                }.bind(this))
                            },
                            stopAnimFrame: function() {
                                K.cancelAnimationFrame(this.animationFrame)
                            },
                            start: function() {
                                return !this.active && this.situation && (this.active = !0, this.startCurrent()), this
                            },
                            startCurrent: function() {
                                return this.situation.start = +new Date + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step()
                            },
                            queue: function(b) {
                                return ("function" == typeof b || b instanceof o.Situation) && this.situations.push(b), this.situation || (this.situation = this.situations.shift()), this
                            },
                            dequeue: function() {
                                return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof o.Situation ? this.start() : this.situation.call(this)), this
                            },
                            initAnimations: function() {
                                var b, A = this.situation;
                                if (A.init) return this;
                                for (var F in A.animations) {
                                    b = this.target()[F](), Array.isArray(b) || (b = [b]), Array.isArray(A.animations[F]) || (A.animations[F] = [A.animations[F]]);
                                    for (var X = b.length; X--;) A.animations[F][X] instanceof o.Number && (b[X] = new o.Number(b[X])), A.animations[F][X] = b[X].morph(A.animations[F][X])
                                }
                                for (var F in A.attrs) A.attrs[F] = new o.MorphObj(this.target().attr(F), A.attrs[F]);
                                for (var F in A.styles) A.styles[F] = new o.MorphObj(this.target().style(F), A.styles[F]);
                                return A.initialTransformation = this.target().matrixify(), A.init = !0, this
                            },
                            clearQueue: function() {
                                return this.situations = [], this
                            },
                            clearCurrent: function() {
                                return this.situation = null, this
                            },
                            stop: function(b, A) {
                                var F = this.active;
                                return this.active = !1, A && this.clearQueue(), b && this.situation && (!F && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent()
                            },
                            after: function(b) {
                                var A = this.last();
                                return this.target().on("finished.fx", function F(X) {
                                    X.detail.situation == A && (b.call(this, A), this.off("finished.fx", F))
                                }), this._callStart()
                            },
                            during: function(b) {
                                var A = this.last(),
                                    F = function(X) {
                                        X.detail.situation == A && b.call(this, X.detail.pos, o.morph(X.detail.pos), X.detail.eased, A)
                                    };
                                return this.target().off("during.fx", F).on("during.fx", F), this.after(function() {
                                    this.off("during.fx", F)
                                }), this._callStart()
                            },
                            afterAll: function(b) {
                                var A = function F(X) {
                                    b.call(this), this.off("allfinished.fx", F)
                                };
                                return this.target().off("allfinished.fx", A).on("allfinished.fx", A), this._callStart()
                            },
                            last: function() {
                                return this.situations.length ? this.situations[this.situations.length - 1] : this.situation
                            },
                            add: function(b, A, F) {
                                return this.last()[F || "animations"][b] = A, this._callStart()
                            },
                            step: function(b) {
                                var A, F, X;
                                b || (this.absPos = this.timeToAbsPos(+new Date)), !1 !== this.situation.loops ? (A = Math.max(this.absPos, 0), F = Math.floor(A), !0 === this.situation.loops || F < this.situation.loops ? (this.pos = A - F, X = this.situation.loop, this.situation.loop = F) : (this.absPos = this.situation.loops, this.pos = 1, X = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != !!((this.situation.loop - X) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
                                var be = this.situation.ease(this.pos);
                                for (var Se in this.situation.once) Se > this.lastPos && Se <= be && (this.situation.once[Se].call(this.target(), this.pos, be), delete this.situation.once[Se]);
                                return this.active && this.target().fire("during", {
                                    pos: this.pos,
                                    eased: be,
                                    fx: this,
                                    situation: this.situation
                                }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", {
                                    fx: this,
                                    situation: this.situation
                                }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = !1)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = be, this) : this
                            },
                            eachAt: function() {
                                var b, A = this,
                                    F = this.target(),
                                    X = this.situation;
                                for (var be in X.animations) b = [].concat(X.animations[be]).map(function(ze) {
                                    return "string" != typeof ze && ze.at ? ze.at(X.ease(A.pos), A.pos) : ze
                                }), F[be].apply(F, b);
                                for (var be in X.attrs) b = [be].concat(X.attrs[be]).map(function(nt) {
                                    return "string" != typeof nt && nt.at ? nt.at(X.ease(A.pos), A.pos) : nt
                                }), F.attr.apply(F, b);
                                for (var be in X.styles) b = [be].concat(X.styles[be]).map(function(nt) {
                                    return "string" != typeof nt && nt.at ? nt.at(X.ease(A.pos), A.pos) : nt
                                }), F.style.apply(F, b);
                                if (X.transforms.length) {
                                    b = X.initialTransformation, be = 0;
                                    for (var Se = X.transforms.length; be < Se; be++) {
                                        var Le = X.transforms[be];
                                        Le instanceof o.Matrix ? b = Le.relative ? b.multiply((new o.Matrix).morph(Le).at(X.ease(this.pos))) : b.morph(Le).at(X.ease(this.pos)) : (Le.relative || Le.undo(b.extract()), b = b.multiply(Le.at(X.ease(this.pos))))
                                    }
                                    F.matrix(b)
                                }
                                return this
                            },
                            once: function(b, A, F) {
                                var X = this.last();
                                return F || (b = X.ease(b)), X.once[b] = A, this
                            },
                            _callStart: function() {
                                return setTimeout(function() {
                                    this.start()
                                }.bind(this), 0), this
                            }
                        },
                        parent: o.Element,
                        construct: {
                            animate: function(b, A, F) {
                                return (this.fx || (this.fx = new o.FX(this))).animate(b, A, F)
                            },
                            delay: function(b) {
                                return (this.fx || (this.fx = new o.FX(this))).delay(b)
                            },
                            stop: function(b, A) {
                                return this.fx && this.fx.stop(b, A), this
                            },
                            finish: function() {
                                return this.fx && this.fx.finish(), this
                            }
                        }
                    }), o.MorphObj = o.invent({
                        create: function(b, A) {
                            return o.Color.isColor(A) ? new o.Color(b).morph(A) : o.regex.delimiter.test(b) ? o.regex.pathLetters.test(b) ? new o.PathArray(b).morph(A) : new o.Array(b).morph(A) : o.regex.numberAndUnit.test(A) ? new o.Number(b).morph(A) : (this.value = b, void(this.destination = A))
                        },
                        extend: {
                            at: function(b, A) {
                                return A < 1 ? this.value : this.destination
                            },
                            valueOf: function() {
                                return this.value
                            }
                        }
                    }), o.extend(o.FX, {
                        attr: function(b, A, F) {
                            if ("object" === Ce(b))
                                for (var X in b) this.attr(X, b[X]);
                            else this.add(b, A, "attrs");
                            return this
                        },
                        plot: function(b, A, F, X) {
                            return 4 == arguments.length ? this.plot([b, A, F, X]) : this.add("plot", new(this.target().morphArray)(b))
                        }
                    }), o.Box = o.invent({
                        create: function(b, A, F, X) {
                            if (!("object" !== Ce(b) || b instanceof o.Element)) return o.Box.call(this, null != b.left ? b.left : b.x, null != b.top ? b.top : b.y, b.width, b.height);
                            var be;
                            4 == arguments.length && (this.x = b, this.y = A, this.width = F, this.height = X), null == (be = this).x && (be.x = 0, be.y = 0, be.width = 0, be.height = 0), be.w = be.width, be.h = be.height, be.x2 = be.x + be.width, be.y2 = be.y + be.height, be.cx = be.x + be.width / 2, be.cy = be.y + be.height / 2
                        }
                    }), o.BBox = o.invent({
                        create: function(b) {
                            if (o.Box.apply(this, [].slice.call(arguments)), b instanceof o.Element) {
                                var A;
                                try {
                                    if (!a.documentElement.contains) {
                                        for (var F = b.node; F.parentNode;) F = F.parentNode;
                                        if (F != a) throw new Error("Element not in the dom")
                                    }
                                    A = b.node.getBBox()
                                } catch {
                                    if (b instanceof o.Shape) {
                                        o.parser.draw || o.prepare();
                                        var X = b.clone(o.parser.draw.instance).show();
                                        X && X.node && "function" == typeof X.node.getBBox && (A = X.node.getBBox()), X && "function" == typeof X.remove && X.remove()
                                    } else A = {
                                        x: b.node.clientLeft,
                                        y: b.node.clientTop,
                                        width: b.node.clientWidth,
                                        height: b.node.clientHeight
                                    }
                                }
                                o.Box.call(this, A)
                            }
                        },
                        inherit: o.Box,
                        parent: o.Element,
                        construct: {
                            bbox: function() {
                                return new o.BBox(this)
                            }
                        }
                    }), o.BBox.prototype.constructor = o.BBox, o.Matrix = o.invent({
                        create: function(b) {
                            var A = O([1, 0, 0, 1, 0, 0]);
                            b = null === b ? A : b instanceof o.Element ? b.matrixify() : "string" == typeof b ? O(b.split(o.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? O([].slice.call(arguments)) : Array.isArray(b) ? O(b) : b && "object" === Ce(b) ? b : A;
                            for (var F = ne.length - 1; F >= 0; --F) this[ne[F]] = null != b[ne[F]] ? b[ne[F]] : A[ne[F]]
                        },
                        extend: {
                            extract: function() {
                                var b = k(this, 0, 1);
                                k(this, 1, 0);
                                var A = 180 / Math.PI * Math.atan2(b.y, b.x) - 90;
                                return {
                                    x: this.e,
                                    y: this.f,
                                    transformedX: (this.e * Math.cos(A * Math.PI / 180) + this.f * Math.sin(A * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
                                    transformedY: (this.f * Math.cos(A * Math.PI / 180) + this.e * Math.sin(-A * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
                                    rotation: A,
                                    a: this.a,
                                    b: this.b,
                                    c: this.c,
                                    d: this.d,
                                    e: this.e,
                                    f: this.f,
                                    matrix: new o.Matrix(this)
                                }
                            },
                            clone: function() {
                                return new o.Matrix(this)
                            },
                            morph: function(b) {
                                return this.destination = new o.Matrix(b), this
                            },
                            multiply: function(b) {
                                return new o.Matrix(this.native().multiply((A = b, A instanceof o.Matrix || (A = new o.Matrix(A)), A).native()));
                                var A
                            },
                            inverse: function() {
                                return new o.Matrix(this.native().inverse())
                            },
                            translate: function(b, A) {
                                return new o.Matrix(this.native().translate(b || 0, A || 0))
                            },
                            native: function() {
                                for (var b = o.parser.native.createSVGMatrix(), A = ne.length - 1; A >= 0; A--) b[ne[A]] = this[ne[A]];
                                return b
                            },
                            toString: function() {
                                return "matrix(" + $(this.a) + "," + $(this.b) + "," + $(this.c) + "," + $(this.d) + "," + $(this.e) + "," + $(this.f) + ")"
                            }
                        },
                        parent: o.Element,
                        construct: {
                            ctm: function() {
                                return new o.Matrix(this.node.getCTM())
                            },
                            screenCTM: function() {
                                if (this instanceof o.Nested) {
                                    var b = this.rect(1, 1),
                                        A = b.node.getScreenCTM();
                                    return b.remove(), new o.Matrix(A)
                                }
                                return new o.Matrix(this.node.getScreenCTM())
                            }
                        }
                    }), o.Point = o.invent({
                        create: function(b, A) {
                            var F;
                            F = Array.isArray(b) ? {
                                x: b[0],
                                y: b[1]
                            } : "object" === Ce(b) ? {
                                x: b.x,
                                y: b.y
                            } : null != b ? {
                                x: b,
                                y: A ? ? b
                            } : {
                                x: 0,
                                y: 0
                            }, this.x = F.x, this.y = F.y
                        },
                        extend: {
                            clone: function() {
                                return new o.Point(this)
                            },
                            morph: function(b, A) {
                                return this.destination = new o.Point(b, A), this
                            }
                        }
                    }), o.extend(o.Element, {
                        point: function(b, A) {
                            return new o.Point(b, A).transform(this.screenCTM().inverse())
                        }
                    }), o.extend(o.Element, {
                        attr: function(b, A, F) {
                            if (null == b) {
                                for (b = {}, F = (A = this.node.attributes).length - 1; F >= 0; F--) b[A[F].nodeName] = o.regex.isNumber.test(A[F].nodeValue) ? parseFloat(A[F].nodeValue) : A[F].nodeValue;
                                return b
                            }
                            if ("object" === Ce(b))
                                for (var X in b) this.attr(X, b[X]);
                            else if (null === A) this.node.removeAttribute(b);
                            else {
                                if (null == A) return null == (A = this.node.getAttribute(b)) ? o.defaults.attrs[b] : o.regex.isNumber.test(A) ? parseFloat(A) : A;
                                "stroke-width" == b ? this.attr("stroke", parseFloat(A) > 0 ? this._stroke : null) : "stroke" == b && (this._stroke = A), "fill" != b && "stroke" != b || (o.regex.isImage.test(A) && (A = this.doc().defs().image(A, 0, 0)), A instanceof o.Image && (A = this.doc().defs().pattern(0, 0, function() {
                                    this.add(A)
                                }))), "number" == typeof A ? A = new o.Number(A) : o.Color.isColor(A) ? A = new o.Color(A) : Array.isArray(A) && (A = new o.Array(A)), "leading" == b ? this.leading && this.leading(A) : "string" == typeof F ? this.node.setAttributeNS(F, b, A.toString()) : this.node.setAttribute(b, A.toString()), !this.rebuild || "font-size" != b && "x" != b || this.rebuild(b, A)
                            }
                            return this
                        }
                    }), o.extend(o.Element, {
                        transform: function(b, A) {
                            var F;
                            return "object" !== Ce(b) ? (F = new o.Matrix(this).extract(), "string" == typeof b ? F[b] : F) : (F = new o.Matrix(this), A = !!A || !!b.relative, null != b.a && (F = A ? F.multiply(new o.Matrix(b)) : new o.Matrix(b)), this.attr("transform", F))
                        }
                    }), o.extend(o.Element, {
                        untransform: function() {
                            return this.attr("transform", null)
                        },
                        matrixify: function() {
                            return (this.attr("transform") || "").split(o.regex.transforms).slice(0, -1).map(function(b) {
                                var A = b.trim().split("(");
                                return [A[0], A[1].split(o.regex.delimiter).map(function(F) {
                                    return parseFloat(F)
                                })]
                            }).reduce(function(b, A) {
                                return "matrix" == A[0] ? b.multiply(O(A[1])) : b[A[0]].apply(b, A[1])
                            }, new o.Matrix)
                        },
                        toParent: function(b) {
                            if (this == b) return this;
                            var A = this.screenCTM(),
                                F = b.screenCTM().inverse();
                            return this.addTo(b).untransform().transform(F.multiply(A)), this
                        },
                        toDoc: function() {
                            return this.toParent(this.doc())
                        }
                    }), o.Transformation = o.invent({
                        create: function(b, A) {
                            if (arguments.length > 1 && "boolean" != typeof A) return this.constructor.call(this, [].slice.call(arguments));
                            if (Array.isArray(b))
                                for (var F = 0, X = this.arguments.length; F < X; ++F) this[this.arguments[F]] = b[F];
                            else if (b && "object" === Ce(b))
                                for (F = 0, X = this.arguments.length; F < X; ++F) this[this.arguments[F]] = b[this.arguments[F]];
                            this.inversed = !1, !0 === A && (this.inversed = !0)
                        }
                    }), o.Translate = o.invent({
                        parent: o.Matrix,
                        inherit: o.Transformation,
                        create: function(b, A) {
                            this.constructor.apply(this, [].slice.call(arguments))
                        },
                        extend: {
                            arguments: ["transformedX", "transformedY"],
                            method: "translate"
                        }
                    }), o.extend(o.Element, {
                        style: function(b, A) {
                            if (0 == arguments.length) return this.node.style.cssText || "";
                            if (arguments.length < 2)
                                if ("object" === Ce(b))
                                    for (var F in b) this.style(F, b[F]);
                                else {
                                    if (!o.regex.isCss.test(b)) return this.node.style[x(b)];
                                    for (b = b.split(/\s*;\s*/).filter(function(X) {
                                            return !!X
                                        }).map(function(X) {
                                            return X.split(/\s*:\s*/)
                                        }); A = b.pop();) this.style(A[0], A[1])
                                }
                            else this.node.style[x(b)] = null === A || o.regex.isBlank.test(A) ? "" : A;
                            return this
                        }
                    }), o.Parent = o.invent({
                        create: function(b) {
                            this.constructor.call(this, b)
                        },
                        inherit: o.Element,
                        extend: {
                            children: function() {
                                return o.utils.map(o.utils.filterSVGElements(this.node.childNodes), function(b) {
                                    return o.adopt(b)
                                })
                            },
                            add: function(b, A) {
                                return null == A ? this.node.appendChild(b.node) : b.node != this.node.childNodes[A] && this.node.insertBefore(b.node, this.node.childNodes[A]), this
                            },
                            put: function(b, A) {
                                return this.add(b, A), b
                            },
                            has: function(b) {
                                return this.index(b) >= 0
                            },
                            index: function(b) {
                                return [].slice.call(this.node.childNodes).indexOf(b.node)
                            },
                            get: function(b) {
                                return o.adopt(this.node.childNodes[b])
                            },
                            first: function() {
                                return this.get(0)
                            },
                            last: function() {
                                return this.get(this.node.childNodes.length - 1)
                            },
                            each: function(b, A) {
                                for (var F = this.children(), X = 0, be = F.length; X < be; X++) F[X] instanceof o.Element && b.apply(F[X], [X, F]), A && F[X] instanceof o.Container && F[X].each(b, A);
                                return this
                            },
                            removeElement: function(b) {
                                return this.node.removeChild(b.node), this
                            },
                            clear: function() {
                                for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                                return delete this._defs, this
                            },
                            defs: function() {
                                return this.doc().defs()
                            }
                        }
                    }), o.extend(o.Parent, {
                        ungroup: function(b, A) {
                            return 0 === A || this instanceof o.Defs || this.node == o.parser.draw || (b = b || (this instanceof o.Doc ? this : this.parent(o.Parent)), A = A || 1 / 0, this.each(function() {
                                return this instanceof o.Defs ? this : this instanceof o.Parent ? this.ungroup(b, A - 1) : this.toParent(b)
                            }), this.node.firstChild || this.remove()), this
                        },
                        flatten: function(b, A) {
                            return this.ungroup(b, A)
                        }
                    }), o.Container = o.invent({
                        create: function(b) {
                            this.constructor.call(this, b)
                        },
                        inherit: o.Parent
                    }), o.ViewBox = o.invent({
                        parent: o.Container,
                        construct: {}
                    }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function(b) {
                        o.Element.prototype[b] = function(A) {
                            return o.on(this.node, b, A), this
                        }
                    }), o.listeners = [], o.handlerMap = [], o.listenerId = 0, o.on = function(b, A, F, X, be) {
                        var Se = F.bind(X || b.instance || b),
                            Le = (o.handlerMap.indexOf(b) + 1 || o.handlerMap.push(b)) - 1,
                            ze = A.split(".")[0],
                            nt = A.split(".")[1] || "*";
                        o.listeners[Le] = o.listeners[Le] || {}, o.listeners[Le][ze] = o.listeners[Le][ze] || {}, o.listeners[Le][ze][nt] = o.listeners[Le][ze][nt] || {}, F._svgjsListenerId || (F._svgjsListenerId = ++o.listenerId), o.listeners[Le][ze][nt][F._svgjsListenerId] = Se, b.addEventListener(ze, Se, be || {
                            passive: !0
                        })
                    }, o.off = function(b, A, F) {
                        var X = o.handlerMap.indexOf(b),
                            be = A && A.split(".")[0],
                            Se = A && A.split(".")[1],
                            Le = "";
                        if (-1 != X)
                            if (F) {
                                if ("function" == typeof F && (F = F._svgjsListenerId), !F) return;
                                o.listeners[X][be] && o.listeners[X][be][Se || "*"] && (b.removeEventListener(be, o.listeners[X][be][Se || "*"][F], !1), delete o.listeners[X][be][Se || "*"][F])
                            } else if (Se && be) {
                            if (o.listeners[X][be] && o.listeners[X][be][Se]) {
                                for (var ze in o.listeners[X][be][Se]) o.off(b, [be, Se].join("."), ze);
                                delete o.listeners[X][be][Se]
                            }
                        } else if (Se)
                            for (var nt in o.listeners[X])
                                for (var Le in o.listeners[X][nt]) Se === Le && o.off(b, [nt, Se].join("."));
                        else if (be) {
                            if (o.listeners[X][be]) {
                                for (var Le in o.listeners[X][be]) o.off(b, [be, Le].join("."));
                                delete o.listeners[X][be]
                            }
                        } else {
                            for (var nt in o.listeners[X]) o.off(b, nt);
                            delete o.listeners[X], delete o.handlerMap[X]
                        }
                    }, o.extend(o.Element, {
                        on: function(b, A, F, X) {
                            return o.on(this.node, b, A, F, X), this
                        },
                        off: function(b, A) {
                            return o.off(this.node, b, A), this
                        },
                        fire: function(b, A) {
                            return this.node.dispatchEvent(b instanceof K.Event ? b : b = new o.CustomEvent(b, {
                                detail: A,
                                cancelable: !0
                            })), this._event = b, this
                        },
                        event: function() {
                            return this._event
                        }
                    }), o.Defs = o.invent({
                        create: "defs",
                        inherit: o.Container
                    }), o.G = o.invent({
                        create: "g",
                        inherit: o.Container,
                        extend: {
                            x: function(b) {
                                return null == b ? this.transform("x") : this.transform({
                                    x: b - this.x()
                                }, !0)
                            }
                        },
                        construct: {
                            group: function() {
                                return this.put(new o.G)
                            }
                        }
                    }), o.Doc = o.invent({
                        create: function(b) {
                            b && ("svg" == (b = "string" == typeof b ? a.getElementById(b) : b).nodeName ? this.constructor.call(this, b) : (this.constructor.call(this, o.create("svg")), b.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs())
                        },
                        inherit: o.Container,
                        extend: {
                            namespace: function() {
                                return this.attr({
                                    xmlns: o.ns,
                                    version: "1.1"
                                }).attr("xmlns:xlink", o.xlink, o.xmlns).attr("xmlns:svgjs", o.svgjs, o.xmlns)
                            },
                            defs: function() {
                                var b;
                                return this._defs || (this._defs = (b = this.node.getElementsByTagName("defs")[0]) ? o.adopt(b) : new o.Defs, this.node.appendChild(this._defs.node)), this._defs
                            },
                            parent: function() {
                                return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null
                            },
                            remove: function() {
                                return this.parent() && this.parent().removeChild(this.node), this
                            },
                            clear: function() {
                                for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
                                return delete this._defs, o.parser.draw && !o.parser.draw.parentNode && this.node.appendChild(o.parser.draw), this
                            },
                            clone: function(b) {
                                this.writeDataToDom();
                                var A = this.node,
                                    F = B(A.cloneNode(!0));
                                return b ? (b.node || b).appendChild(F.node) : A.parentNode.insertBefore(F.node, A.nextSibling), F
                            }
                        }
                    }), o.extend(o.Element, {}), o.Gradient = o.invent({
                        create: function(b) {
                            this.constructor.call(this, o.create(b + "Gradient")), this.type = b
                        },
                        inherit: o.Container,
                        extend: {
                            at: function(b, A, F) {
                                return this.put(new o.Stop).update(b, A, F)
                            },
                            update: function(b) {
                                return this.clear(), "function" == typeof b && b.call(this, this), this
                            },
                            fill: function() {
                                return "url(#" + this.id() + ")"
                            },
                            toString: function() {
                                return this.fill()
                            },
                            attr: function(b, A, F) {
                                return "transform" == b && (b = "gradientTransform"), o.Container.prototype.attr.call(this, b, A, F)
                            }
                        },
                        construct: {
                            gradient: function(b, A) {
                                return this.defs().gradient(b, A)
                            }
                        }
                    }), o.extend(o.Gradient, o.FX, {
                        from: function(b, A) {
                            return this.attr("radial" == (this._target || this).type ? {
                                fx: new o.Number(b),
                                fy: new o.Number(A)
                            } : {
                                x1: new o.Number(b),
                                y1: new o.Number(A)
                            })
                        },
                        to: function(b, A) {
                            return this.attr("radial" == (this._target || this).type ? {
                                cx: new o.Number(b),
                                cy: new o.Number(A)
                            } : {
                                x2: new o.Number(b),
                                y2: new o.Number(A)
                            })
                        }
                    }), o.extend(o.Defs, {
                        gradient: function(b, A) {
                            return this.put(new o.Gradient(b)).update(A)
                        }
                    }), o.Stop = o.invent({
                        create: "stop",
                        inherit: o.Element,
                        extend: {
                            update: function(b) {
                                return ("number" == typeof b || b instanceof o.Number) && (b = {
                                    offset: arguments[0],
                                    color: arguments[1],
                                    opacity: arguments[2]
                                }), null != b.opacity && this.attr("stop-opacity", b.opacity), null != b.color && this.attr("stop-color", b.color), null != b.offset && this.attr("offset", new o.Number(b.offset)), this
                            }
                        }
                    }), o.Pattern = o.invent({
                        create: "pattern",
                        inherit: o.Container,
                        extend: {
                            fill: function() {
                                return "url(#" + this.id() + ")"
                            },
                            update: function(b) {
                                return this.clear(), "function" == typeof b && b.call(this, this), this
                            },
                            toString: function() {
                                return this.fill()
                            },
                            attr: function(b, A, F) {
                                return "transform" == b && (b = "patternTransform"), o.Container.prototype.attr.call(this, b, A, F)
                            }
                        },
                        construct: {
                            pattern: function(b, A, F) {
                                return this.defs().pattern(b, A, F)
                            }
                        }
                    }), o.extend(o.Defs, {
                        pattern: function(b, A, F) {
                            return this.put(new o.Pattern).update(F).attr({
                                x: 0,
                                y: 0,
                                width: b,
                                height: A,
                                patternUnits: "userSpaceOnUse"
                            })
                        }
                    }), o.Shape = o.invent({
                        create: function(b) {
                            this.constructor.call(this, b)
                        },
                        inherit: o.Element
                    }), o.Symbol = o.invent({
                        create: "symbol",
                        inherit: o.Container,
                        construct: {
                            symbol: function() {
                                return this.put(new o.Symbol)
                            }
                        }
                    }), o.Use = o.invent({
                        create: "use",
                        inherit: o.Shape,
                        extend: {
                            element: function(b, A) {
                                return this.attr("href", (A || "") + "#" + b, o.xlink)
                            }
                        },
                        construct: {
                            use: function(b, A) {
                                return this.put(new o.Use).element(b, A)
                            }
                        }
                    }), o.Rect = o.invent({
                        create: "rect",
                        inherit: o.Shape,
                        construct: {
                            rect: function(b, A) {
                                return this.put(new o.Rect).size(b, A)
                            }
                        }
                    }), o.Circle = o.invent({
                        create: "circle",
                        inherit: o.Shape,
                        construct: {
                            circle: function(b) {
                                return this.put(new o.Circle).rx(new o.Number(b).divide(2)).move(0, 0)
                            }
                        }
                    }), o.extend(o.Circle, o.FX, {
                        rx: function(b) {
                            return this.attr("r", b)
                        },
                        ry: function(b) {
                            return this.rx(b)
                        }
                    }), o.Ellipse = o.invent({
                        create: "ellipse",
                        inherit: o.Shape,
                        construct: {
                            ellipse: function(b, A) {
                                return this.put(new o.Ellipse).size(b, A).move(0, 0)
                            }
                        }
                    }), o.extend(o.Ellipse, o.Rect, o.FX, {
                        rx: function(b) {
                            return this.attr("rx", b)
                        },
                        ry: function(b) {
                            return this.attr("ry", b)
                        }
                    }), o.extend(o.Circle, o.Ellipse, {
                        x: function(b) {
                            return null == b ? this.cx() - this.rx() : this.cx(b + this.rx())
                        },
                        y: function(b) {
                            return null == b ? this.cy() - this.ry() : this.cy(b + this.ry())
                        },
                        cx: function(b) {
                            return null == b ? this.attr("cx") : this.attr("cx", b)
                        },
                        cy: function(b) {
                            return null == b ? this.attr("cy") : this.attr("cy", b)
                        },
                        width: function(b) {
                            return null == b ? 2 * this.rx() : this.rx(new o.Number(b).divide(2))
                        },
                        height: function(b) {
                            return null == b ? 2 * this.ry() : this.ry(new o.Number(b).divide(2))
                        },
                        size: function(b, A) {
                            var F = T(this, b, A);
                            return this.rx(new o.Number(F.width).divide(2)).ry(new o.Number(F.height).divide(2))
                        }
                    }), o.Line = o.invent({
                        create: "line",
                        inherit: o.Shape,
                        extend: {
                            array: function() {
                                return new o.PointArray([
                                    [this.attr("x1"), this.attr("y1")],
                                    [this.attr("x2"), this.attr("y2")]
                                ])
                            },
                            plot: function(b, A, F, X) {
                                return null == b ? this.array() : (b = void 0 !== A ? {
                                    x1: b,
                                    y1: A,
                                    x2: F,
                                    y2: X
                                } : new o.PointArray(b).toLine(), this.attr(b))
                            },
                            move: function(b, A) {
                                return this.attr(this.array().move(b, A).toLine())
                            },
                            size: function(b, A) {
                                var F = T(this, b, A);
                                return this.attr(this.array().size(F.width, F.height).toLine())
                            }
                        },
                        construct: {
                            line: function(b, A, F, X) {
                                return o.Line.prototype.plot.apply(this.put(new o.Line), null != b ? [b, A, F, X] : [0, 0, 0, 0])
                            }
                        }
                    }), o.Polyline = o.invent({
                        create: "polyline",
                        inherit: o.Shape,
                        construct: {
                            polyline: function(b) {
                                return this.put(new o.Polyline).plot(b || new o.PointArray)
                            }
                        }
                    }), o.Polygon = o.invent({
                        create: "polygon",
                        inherit: o.Shape,
                        construct: {
                            polygon: function(b) {
                                return this.put(new o.Polygon).plot(b || new o.PointArray)
                            }
                        }
                    }), o.extend(o.Polyline, o.Polygon, {
                        array: function() {
                            return this._array || (this._array = new o.PointArray(this.attr("points")))
                        },
                        plot: function(b) {
                            return null == b ? this.array() : this.clear().attr("points", "string" == typeof b ? b : this._array = new o.PointArray(b))
                        },
                        clear: function() {
                            return delete this._array, this
                        },
                        move: function(b, A) {
                            return this.attr("points", this.array().move(b, A))
                        },
                        size: function(b, A) {
                            var F = T(this, b, A);
                            return this.attr("points", this.array().size(F.width, F.height))
                        }
                    }), o.extend(o.Line, o.Polyline, o.Polygon, {
                        morphArray: o.PointArray,
                        x: function(b) {
                            return null == b ? this.bbox().x : this.move(b, this.bbox().y)
                        },
                        y: function(b) {
                            return null == b ? this.bbox().y : this.move(this.bbox().x, b)
                        },
                        width: function(b) {
                            var A = this.bbox();
                            return null == b ? A.width : this.size(b, A.height)
                        },
                        height: function(b) {
                            var A = this.bbox();
                            return null == b ? A.height : this.size(A.width, b)
                        }
                    }), o.Path = o.invent({
                        create: "path",
                        inherit: o.Shape,
                        extend: {
                            morphArray: o.PathArray,
                            array: function() {
                                return this._array || (this._array = new o.PathArray(this.attr("d")))
                            },
                            plot: function(b) {
                                return null == b ? this.array() : this.clear().attr("d", "string" == typeof b ? b : this._array = new o.PathArray(b))
                            },
                            clear: function() {
                                return delete this._array, this
                            }
                        },
                        construct: {
                            path: function(b) {
                                return this.put(new o.Path).plot(b || new o.PathArray)
                            }
                        }
                    }), o.Image = o.invent({
                        create: "image",
                        inherit: o.Shape,
                        extend: {
                            load: function(b) {
                                if (!b) return this;
                                var A = this,
                                    F = new K.Image;
                                return o.on(F, "load", function() {
                                    o.off(F);
                                    var X = A.parent(o.Pattern);
                                    null !== X && (0 == A.width() && 0 == A.height() && A.size(F.width, F.height), X && 0 == X.width() && 0 == X.height() && X.size(A.width(), A.height()), "function" == typeof A._loaded && A._loaded.call(A, {
                                        width: F.width,
                                        height: F.height,
                                        ratio: F.width / F.height,
                                        url: b
                                    }))
                                }), o.on(F, "error", function(X) {
                                    o.off(F), "function" == typeof A._error && A._error.call(A, X)
                                }), this.attr("href", F.src = this.src = b, o.xlink)
                            },
                            loaded: function(b) {
                                return this._loaded = b, this
                            },
                            error: function(b) {
                                return this._error = b, this
                            }
                        },
                        construct: {
                            image: function(b, A, F) {
                                return this.put(new o.Image).load(b).size(A || 0, F || A || 0)
                            }
                        }
                    }), o.Text = o.invent({
                        create: function() {
                            this.constructor.call(this, o.create("text")), this.dom.leading = new o.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", o.defaults.attrs["font-family"])
                        },
                        inherit: o.Shape,
                        extend: {
                            x: function(b) {
                                return null == b ? this.attr("x") : this.attr("x", b)
                            },
                            text: function(b) {
                                if (void 0 === b) {
                                    b = "";
                                    for (var A = this.node.childNodes, F = 0, X = A.length; F < X; ++F) 0 != F && 3 != A[F].nodeType && 1 == o.adopt(A[F]).dom.newLined && (b += "\n"), b += A[F].textContent;
                                    return b
                                }
                                if (this.clear().build(!0), "function" == typeof b) b.call(this, this);
                                else {
                                    F = 0;
                                    for (var be = (b = b.split("\n")).length; F < be; F++) this.tspan(b[F]).newLine()
                                }
                                return this.build(!1).rebuild()
                            },
                            size: function(b) {
                                return this.attr("font-size", b).rebuild()
                            },
                            leading: function(b) {
                                return null == b ? this.dom.leading : (this.dom.leading = new o.Number(b), this.rebuild())
                            },
                            lines: function() {
                                var b = (this.textPath && this.textPath() || this).node,
                                    A = o.utils.map(o.utils.filterSVGElements(b.childNodes), function(F) {
                                        return o.adopt(F)
                                    });
                                return new o.Set(A)
                            },
                            rebuild: function(b) {
                                if ("boolean" == typeof b && (this._rebuild = b), this._rebuild) {
                                    var A = this,
                                        F = 0,
                                        X = this.dom.leading * new o.Number(this.attr("font-size"));
                                    this.lines().each(function() {
                                        this.dom.newLined && (A.textPath() || this.attr("x", A.attr("x")), "\n" == this.text() ? F += X : (this.attr("dy", X + F), F = 0))
                                    }), this.fire("rebuild")
                                }
                                return this
                            },
                            build: function(b) {
                                return this._build = !!b, this
                            },
                            setData: function(b) {
                                return this.dom = b, this.dom.leading = new o.Number(b.leading || 1.3), this
                            }
                        },
                        construct: {
                            text: function(b) {
                                return this.put(new o.Text).text(b)
                            },
                            plain: function(b) {
                                return this.put(new o.Text).plain(b)
                            }
                        }
                    }), o.Tspan = o.invent({
                        create: "tspan",
                        inherit: o.Shape,
                        extend: {
                            text: function(b) {
                                return null == b ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof b ? b.call(this, this) : this.plain(b), this)
                            },
                            dx: function(b) {
                                return this.attr("dx", b)
                            },
                            dy: function(b) {
                                return this.attr("dy", b)
                            },
                            newLine: function() {
                                var b = this.parent(o.Text);
                                return this.dom.newLined = !0, this.dy(b.dom.leading * b.attr("font-size")).attr("x", b.x())
                            }
                        }
                    }), o.extend(o.Text, o.Tspan, {
                        plain: function(b) {
                            return !1 === this._build && this.clear(), this.node.appendChild(a.createTextNode(b)), this
                        },
                        tspan: function(b) {
                            var A = (this.textPath && this.textPath() || this).node,
                                F = new o.Tspan;
                            return !1 === this._build && this.clear(), A.appendChild(F.node), F.text(b)
                        },
                        clear: function() {
                            for (var b = (this.textPath && this.textPath() || this).node; b.hasChildNodes();) b.removeChild(b.lastChild);
                            return this
                        },
                        length: function() {
                            return this.node.getComputedTextLength()
                        }
                    }), o.TextPath = o.invent({
                        create: "textPath",
                        inherit: o.Parent,
                        parent: o.Text,
                        construct: {
                            morphArray: o.PathArray,
                            array: function() {
                                var b = this.track();
                                return b ? b.array() : null
                            },
                            plot: function(b) {
                                var A = this.track(),
                                    F = null;
                                return A && (F = A.plot(b)), null == b ? F : this
                            },
                            track: function() {
                                var b = this.textPath();
                                if (b) return b.reference("href")
                            },
                            textPath: function() {
                                if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName) return o.adopt(this.node.firstChild)
                            }
                        }
                    }), o.Nested = o.invent({
                        create: function() {
                            this.constructor.call(this, o.create("svg")), this.style("overflow", "visible")
                        },
                        inherit: o.Container,
                        construct: {
                            nested: function() {
                                return this.put(new o.Nested)
                            }
                        }
                    });
                    var m = {
                        stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
                        fill: ["color", "opacity", "rule"],
                        prefix: function(b, A) {
                            return "color" == A ? b : b + "-" + A
                        }
                    };

                    function y(b, A, F, X) {
                        return F + X.replace(o.regex.dots, " .")
                    }

                    function x(b) {
                        return b.toLowerCase().replace(/-(.)/g, function(A, F) {
                            return F.toUpperCase()
                        })
                    }

                    function w(b) {
                        return b.charAt(0).toUpperCase() + b.slice(1)
                    }

                    function S(b) {
                        var A = b.toString(16);
                        return 1 == A.length ? "0" + A : A
                    }

                    function T(b, A, F) {
                        if (null == A || null == F) {
                            var X = b.bbox();
                            null == A ? A = X.width / X.height * F : null == F && (F = X.height / X.width * A)
                        }
                        return {
                            width: A,
                            height: F
                        }
                    }

                    function k(b, A, F) {
                        return {
                            x: A * b.a + F * b.c + 0,
                            y: A * b.b + F * b.d + 0
                        }
                    }

                    function O(b) {
                        return {
                            a: b[0],
                            b: b[1],
                            c: b[2],
                            d: b[3],
                            e: b[4],
                            f: b[5]
                        }
                    }

                    function B(b) {
                        for (var A = b.childNodes.length - 1; A >= 0; A--) b.childNodes[A] instanceof K.SVGElement && B(b.childNodes[A]);
                        return o.adopt(b).id(o.eid(b.nodeName))
                    }

                    function $(b) {
                        return Math.abs(b) > 1e-37 ? b : 0
                    }["fill", "stroke"].forEach(function(b) {
                        var A = {};
                        A[b] = function(F) {
                            if (void 0 === F) return this;
                            if ("string" == typeof F || o.Color.isRgb(F) || F && "function" == typeof F.fill) this.attr(b, F);
                            else
                                for (var X = m[b].length - 1; X >= 0; X--) null != F[m[b][X]] && this.attr(m.prefix(b, m[b][X]), F[m[b][X]]);
                            return this
                        }, o.extend(o.Element, o.FX, A)
                    }), o.extend(o.Element, o.FX, {
                        translate: function(b, A) {
                            return this.transform({
                                x: b,
                                y: A
                            })
                        },
                        matrix: function(b) {
                            return this.attr("transform", new o.Matrix(6 == arguments.length ? [].slice.call(arguments) : b))
                        },
                        opacity: function(b) {
                            return this.attr("opacity", b)
                        },
                        dx: function(b) {
                            return this.x(new o.Number(b).plus(this instanceof o.FX ? 0 : this.x()), !0)
                        },
                        dy: function(b) {
                            return this.y(new o.Number(b).plus(this instanceof o.FX ? 0 : this.y()), !0)
                        }
                    }), o.extend(o.Path, {
                        length: function() {
                            return this.node.getTotalLength()
                        },
                        pointAt: function(b) {
                            return this.node.getPointAtLength(b)
                        }
                    }), o.Set = o.invent({
                        create: function(b) {
                            Array.isArray(b) ? this.members = b : this.clear()
                        },
                        extend: {
                            add: function() {
                                for (var b = [].slice.call(arguments), A = 0, F = b.length; A < F; A++) this.members.push(b[A]);
                                return this
                            },
                            remove: function(b) {
                                var A = this.index(b);
                                return A > -1 && this.members.splice(A, 1), this
                            },
                            each: function(b) {
                                for (var A = 0, F = this.members.length; A < F; A++) b.apply(this.members[A], [A, this.members]);
                                return this
                            },
                            clear: function() {
                                return this.members = [], this
                            },
                            length: function() {
                                return this.members.length
                            },
                            has: function(b) {
                                return this.index(b) >= 0
                            },
                            index: function(b) {
                                return this.members.indexOf(b)
                            },
                            get: function(b) {
                                return this.members[b]
                            },
                            first: function() {
                                return this.get(0)
                            },
                            last: function() {
                                return this.get(this.members.length - 1)
                            },
                            valueOf: function() {
                                return this.members
                            }
                        },
                        construct: {
                            set: function(b) {
                                return new o.Set(b)
                            }
                        }
                    }), o.FX.Set = o.invent({
                        create: function(b) {
                            this.set = b
                        }
                    }), o.Set.inherit = function() {
                        var b = [];
                        for (var A in o.Shape.prototype) "function" == typeof o.Shape.prototype[A] && "function" != typeof o.Set.prototype[A] && b.push(A);
                        for (var A in b.forEach(function(X) {
                                o.Set.prototype[X] = function() {
                                    for (var be = 0, Se = this.members.length; be < Se; be++) this.members[be] && "function" == typeof this.members[be][X] && this.members[be][X].apply(this.members[be], arguments);
                                    return "animate" == X ? this.fx || (this.fx = new o.FX.Set(this)) : this
                                }
                            }), b = [], o.FX.prototype) "function" == typeof o.FX.prototype[A] && "function" != typeof o.FX.Set.prototype[A] && b.push(A);
                        b.forEach(function(F) {
                            o.FX.Set.prototype[F] = function() {
                                for (var X = 0, be = this.set.members.length; X < be; X++) this.set.members[X].fx[F].apply(this.set.members[X].fx, arguments);
                                return this
                            }
                        })
                    }, o.extend(o.Element, {}), o.extend(o.Element, {
                        remember: function(b, A) {
                            if ("object" === Ce(arguments[0]))
                                for (var F in b) this.remember(F, b[F]);
                            else {
                                if (1 == arguments.length) return this.memory()[b];
                                this.memory()[b] = A
                            }
                            return this
                        },
                        forget: function() {
                            if (0 == arguments.length) this._memory = {};
                            else
                                for (var b = arguments.length - 1; b >= 0; b--) delete this.memory()[arguments[b]];
                            return this
                        },
                        memory: function() {
                            return this._memory || (this._memory = {})
                        }
                    }), o.get = function(b) {
                        var A = a.getElementById(function(F) {
                            var X = (F || "").toString().match(o.regex.reference);
                            if (X) return X[1]
                        }(b) || b);
                        return o.adopt(A)
                    }, o.select = function(b, A) {
                        return new o.Set(o.utils.map((A || a).querySelectorAll(b), function(F) {
                            return o.adopt(F)
                        }))
                    }, o.extend(o.Parent, {
                        select: function(b) {
                            return o.select(b, this.node)
                        }
                    });
                    var ne = "abcdef".split("");
                    if ("function" != typeof K.CustomEvent) {
                        var re = function(b, A) {
                            A = A || {
                                bubbles: !1,
                                cancelable: !1,
                                detail: void 0
                            };
                            var F = a.createEvent("CustomEvent");
                            return F.initCustomEvent(b, A.bubbles, A.cancelable, A.detail), F
                        };
                        re.prototype = K.Event.prototype, o.CustomEvent = re
                    } else o.CustomEvent = K.CustomEvent;
                    return o
                }, void 0 !== (_e = function() {
                    return gn(Zt, Zt.document)
                }.call(G, I, G, ft)) && (ft.exports = _e),
                /*! svg.filter.js - v2.0.2 - 2016-02-24
                 * https://github.com/wout/svg.filter.js
                 * Copyright (c) 2016 Wout Fierens; Licensed MIT */
                function() {
                    SVG.Filter = SVG.invent({
                        create: "filter",
                        inherit: SVG.Parent,
                        extend: {
                            source: "SourceGraphic",
                            sourceAlpha: "SourceAlpha",
                            background: "BackgroundImage",
                            backgroundAlpha: "BackgroundAlpha",
                            fill: "FillPaint",
                            stroke: "StrokePaint",
                            autoSetIn: !0,
                            put: function(p, m) {
                                return this.add(p, m), !p.attr("in") && this.autoSetIn && p.attr("in", this.source), p.attr("result") || p.attr("result", p), p
                            },
                            blend: function(p, m, y) {
                                return this.put(new SVG.BlendEffect(p, m, y))
                            },
                            colorMatrix: function(p, m) {
                                return this.put(new SVG.ColorMatrixEffect(p, m))
                            },
                            convolveMatrix: function(p) {
                                return this.put(new SVG.ConvolveMatrixEffect(p))
                            },
                            componentTransfer: function(p) {
                                return this.put(new SVG.ComponentTransferEffect(p))
                            },
                            composite: function(p, m, y) {
                                return this.put(new SVG.CompositeEffect(p, m, y))
                            },
                            flood: function(p, m) {
                                return this.put(new SVG.FloodEffect(p, m))
                            },
                            offset: function(p, m) {
                                return this.put(new SVG.OffsetEffect(p, m))
                            },
                            image: function(p) {
                                return this.put(new SVG.ImageEffect(p))
                            },
                            merge: function() {
                                var p = [void 0];
                                for (var m in arguments) p.push(arguments[m]);
                                return this.put(new(SVG.MergeEffect.bind.apply(SVG.MergeEffect, p)))
                            },
                            gaussianBlur: function(p, m) {
                                return this.put(new SVG.GaussianBlurEffect(p, m))
                            },
                            morphology: function(p, m) {
                                return this.put(new SVG.MorphologyEffect(p, m))
                            },
                            diffuseLighting: function(p, m, y) {
                                return this.put(new SVG.DiffuseLightingEffect(p, m, y))
                            },
                            displacementMap: function(p, m, y, x, w) {
                                return this.put(new SVG.DisplacementMapEffect(p, m, y, x, w))
                            },
                            specularLighting: function(p, m, y, x) {
                                return this.put(new SVG.SpecularLightingEffect(p, m, y, x))
                            },
                            tile: function() {
                                return this.put(new SVG.TileEffect)
                            },
                            turbulence: function(p, m, y, x, w) {
                                return this.put(new SVG.TurbulenceEffect(p, m, y, x, w))
                            },
                            toString: function() {
                                return "url(#" + this.attr("id") + ")"
                            }
                        }
                    }), SVG.extend(SVG.Defs, {
                        filter: function(p) {
                            var m = this.put(new SVG.Filter);
                            return "function" == typeof p && p.call(m, m), m
                        }
                    }), SVG.extend(SVG.Container, {
                        filter: function(p) {
                            return this.defs().filter(p)
                        }
                    }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
                        filter: function(p) {
                            return this.filterer = p instanceof SVG.Element ? p : this.doc().filter(p), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer
                        },
                        unfilter: function(p) {
                            return this.filterer && !0 === p && this.filterer.remove(), delete this.filterer, this.attr("filter", null)
                        }
                    }), SVG.Effect = SVG.invent({
                        create: function() {
                            this.constructor.call(this)
                        },
                        inherit: SVG.Element,
                        extend: { in: function(p) {
                                return null == p ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", p)
                            },
                            result: function(p) {
                                return null == p ? this.attr("result") : this.attr("result", p)
                            },
                            toString: function() {
                                return this.result()
                            }
                        }
                    }), SVG.ParentEffect = SVG.invent({
                        create: function() {
                            this.constructor.call(this)
                        },
                        inherit: SVG.Parent,
                        extend: { in: function(p) {
                                return null == p ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", p)
                            },
                            result: function(p) {
                                return null == p ? this.attr("result") : this.attr("result", p)
                            },
                            toString: function() {
                                return this.result()
                            }
                        }
                    });
                    var K = {
                        blend: function(p, m) {
                            return this.parent() && this.parent().blend(this, p, m)
                        },
                        colorMatrix: function(p, m) {
                            return this.parent() && this.parent().colorMatrix(p, m).in(this)
                        },
                        convolveMatrix: function(p) {
                            return this.parent() && this.parent().convolveMatrix(p).in(this)
                        },
                        componentTransfer: function(p) {
                            return this.parent() && this.parent().componentTransfer(p).in(this)
                        },
                        composite: function(p, m) {
                            return this.parent() && this.parent().composite(this, p, m)
                        },
                        flood: function(p, m) {
                            return this.parent() && this.parent().flood(p, m)
                        },
                        offset: function(p, m) {
                            return this.parent() && this.parent().offset(p, m).in(this)
                        },
                        image: function(p) {
                            return this.parent() && this.parent().image(p)
                        },
                        merge: function() {
                            return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments))
                        },
                        gaussianBlur: function(p, m) {
                            return this.parent() && this.parent().gaussianBlur(p, m).in(this)
                        },
                        morphology: function(p, m) {
                            return this.parent() && this.parent().morphology(p, m).in(this)
                        },
                        diffuseLighting: function(p, m, y) {
                            return this.parent() && this.parent().diffuseLighting(p, m, y).in(this)
                        },
                        displacementMap: function(p, m, y, x) {
                            return this.parent() && this.parent().displacementMap(this, p, m, y, x)
                        },
                        specularLighting: function(p, m, y, x) {
                            return this.parent() && this.parent().specularLighting(p, m, y, x).in(this)
                        },
                        tile: function() {
                            return this.parent() && this.parent().tile().in(this)
                        },
                        turbulence: function(p, m, y, x, w) {
                            return this.parent() && this.parent().turbulence(p, m, y, x, w).in(this)
                        }
                    };
                    SVG.extend(SVG.Effect, K), SVG.extend(SVG.ParentEffect, K), SVG.ChildEffect = SVG.invent({
                        create: function() {
                            this.constructor.call(this)
                        },
                        inherit: SVG.Element,
                        extend: { in: function(p) {
                                this.attr("in", p)
                            }
                        }
                    });
                    var a = {
                            blend: function(p, m, y) {
                                this.attr({ in: p,
                                    in2: m,
                                    mode: y || "normal"
                                })
                            },
                            colorMatrix: function(p, m) {
                                "matrix" == p && (m = d(m)), this.attr({
                                    type: p,
                                    values: void 0 === m ? null : m
                                })
                            },
                            convolveMatrix: function(p) {
                                p = d(p), this.attr({
                                    order: Math.sqrt(p.split(" ").length),
                                    kernelMatrix: p
                                })
                            },
                            composite: function(p, m, y) {
                                this.attr({ in: p,
                                    in2: m,
                                    operator: y
                                })
                            },
                            flood: function(p, m) {
                                this.attr("flood-color", p), null != m && this.attr("flood-opacity", m)
                            },
                            offset: function(p, m) {
                                this.attr({
                                    dx: p,
                                    dy: m
                                })
                            },
                            image: function(p) {
                                this.attr("href", p, SVG.xlink)
                            },
                            displacementMap: function(p, m, y, x, w) {
                                this.attr({ in: p,
                                    in2: m,
                                    scale: y,
                                    xChannelSelector: x,
                                    yChannelSelector: w
                                })
                            },
                            gaussianBlur: function(p, m) {
                                this.attr("stdDeviation", null != p || null != m ? function(y) {
                                    if (!Array.isArray(y)) return y;
                                    for (var x = 0, w = y.length, S = []; x < w; x++) S.push(y[x]);
                                    return S.join(" ")
                                }(Array.prototype.slice.call(arguments)) : "0 0")
                            },
                            morphology: function(p, m) {
                                this.attr({
                                    operator: p,
                                    radius: m
                                })
                            },
                            tile: function() {},
                            turbulence: function(p, m, y, x, w) {
                                this.attr({
                                    numOctaves: m,
                                    seed: y,
                                    stitchTiles: x,
                                    baseFrequency: p,
                                    type: w
                                })
                            }
                        },
                        o = {
                            merge: function() {
                                var p;
                                if (arguments[0] instanceof SVG.Set) {
                                    var m = this;
                                    arguments[0].each(function(x) {
                                        this instanceof SVG.MergeNode ? m.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && m.put(new SVG.MergeNode(this))
                                    })
                                } else {
                                    p = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                                    for (var y = 0; y < p.length; y++) p[y] instanceof SVG.MergeNode ? this.put(p[y]) : this.put(new SVG.MergeNode(p[y]))
                                }
                            },
                            componentTransfer: function(p) {
                                if (this.rgb = new SVG.Set, ["r", "g", "b", "a"].forEach(function(y) {
                                        this[y] = new(SVG["Func" + y.toUpperCase()])("identity"), this.rgb.add(this[y]), this.node.appendChild(this[y].node)
                                    }.bind(this)), p)
                                    for (var m in p.rgb && (["r", "g", "b"].forEach(function(y) {
                                            this[y].attr(p.rgb)
                                        }.bind(this)), delete p.rgb), p) this[m].attr(p[m])
                            },
                            diffuseLighting: function(p, m, y) {
                                this.attr({
                                    surfaceScale: p,
                                    diffuseConstant: m,
                                    kernelUnitLength: y
                                })
                            },
                            specularLighting: function(p, m, y, x) {
                                this.attr({
                                    surfaceScale: p,
                                    diffuseConstant: m,
                                    specularExponent: y,
                                    kernelUnitLength: x
                                })
                            }
                        },
                        c = {
                            distantLight: function(p, m) {
                                this.attr({
                                    azimuth: p,
                                    elevation: m
                                })
                            },
                            pointLight: function(p, m, y) {
                                this.attr({
                                    x: p,
                                    y: m,
                                    z: y
                                })
                            },
                            spotLight: function(p, m, y, x, w, S) {
                                this.attr({
                                    x: p,
                                    y: m,
                                    z: y,
                                    pointsAtX: x,
                                    pointsAtY: w,
                                    pointsAtZ: S
                                })
                            },
                            mergeNode: function(p) {
                                this.attr("in", p)
                            }
                        };

                    function d(p) {
                        return Array.isArray(p) && (p = new SVG.Array(p)), p.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ")
                    }

                    function f() {
                        var p = function() {};
                        for (var m in "function" == typeof arguments[arguments.length - 1] && (p = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments)
                            for (var y in arguments[m]) p(arguments[m][y], y, arguments[m])
                    }["r", "g", "b", "a"].forEach(function(p) {
                        c["Func" + p.toUpperCase()] = function(m) {
                            switch (this.attr("type", m), m) {
                                case "table":
                                    this.attr("tableValues", arguments[1]);
                                    break;
                                case "linear":
                                    this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
                                    break;
                                case "gamma":
                                    this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2])
                            }
                        }
                    }), f(a, function(p, m) {
                        var y = m.charAt(0).toUpperCase() + m.slice(1);
                        SVG[y + "Effect"] = SVG.invent({
                            create: function() {
                                this.constructor.call(this, SVG.create("fe" + y)), p.apply(this, arguments), this.result(this.attr("id") + "Out")
                            },
                            inherit: SVG.Effect,
                            extend: {}
                        })
                    }), f(o, function(p, m) {
                        var y = m.charAt(0).toUpperCase() + m.slice(1);
                        SVG[y + "Effect"] = SVG.invent({
                            create: function() {
                                this.constructor.call(this, SVG.create("fe" + y)), p.apply(this, arguments), this.result(this.attr("id") + "Out")
                            },
                            inherit: SVG.ParentEffect,
                            extend: {}
                        })
                    }), f(c, function(p, m) {
                        var y = m.charAt(0).toUpperCase() + m.slice(1);
                        SVG[y] = SVG.invent({
                            create: function() {
                                this.constructor.call(this, SVG.create("fe" + y)), p.apply(this, arguments)
                            },
                            inherit: SVG.ChildEffect,
                            extend: {}
                        })
                    }), SVG.extend(SVG.MergeEffect, { in: function(p) {
                            return p instanceof SVG.MergeNode ? this.add(p, 0) : this.add(new SVG.MergeNode(p), 0), this
                        }
                    }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
                        in2: function(p) {
                            return null == p ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", p)
                        }
                    }), SVG.filter = {
                        sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]
                    }
                }.call(void 0),
                function() {
                    function K(f, p, m, y, x, w, S) {
                        for (var T = f.slice(p, m || S), k = y.slice(x, w || S), O = 0, B = {
                                pos: [0, 0],
                                start: [0, 0]
                            }, $ = {
                                pos: [0, 0],
                                start: [0, 0]
                            }; T[O] = a.call(B, T[O]), k[O] = a.call($, k[O]), T[O][0] != k[O][0] || "M" == T[O][0] || "A" == T[O][0] && (T[O][4] != k[O][4] || T[O][5] != k[O][5]) ? (Array.prototype.splice.apply(T, [O, 1].concat(c.call(B, T[O]))), Array.prototype.splice.apply(k, [O, 1].concat(c.call($, k[O])))) : (T[O] = o.call(B, T[O]), k[O] = o.call($, k[O])), ++O != T.length || O != k.length;) O == T.length && T.push(["C", B.pos[0], B.pos[1], B.pos[0], B.pos[1], B.pos[0], B.pos[1]]), O == k.length && k.push(["C", $.pos[0], $.pos[1], $.pos[0], $.pos[1], $.pos[0], $.pos[1]]);
                        return {
                            start: T,
                            dest: k
                        }
                    }

                    function a(f) {
                        switch (f[0]) {
                            case "z":
                            case "Z":
                                f[0] = "L", f[1] = this.start[0], f[2] = this.start[1];
                                break;
                            case "H":
                                f[0] = "L", f[2] = this.pos[1];
                                break;
                            case "V":
                                f[0] = "L", f[2] = f[1], f[1] = this.pos[0];
                                break;
                            case "T":
                                f[0] = "Q", f[3] = f[1], f[4] = f[2], f[1] = this.reflection[1], f[2] = this.reflection[0];
                                break;
                            case "S":
                                f[0] = "C", f[6] = f[4], f[5] = f[3], f[4] = f[2], f[3] = f[1], f[2] = this.reflection[1], f[1] = this.reflection[0]
                        }
                        return f
                    }

                    function o(f) {
                        var p = f.length;
                        return this.pos = [f[p - 2], f[p - 1]], -1 != "SCQT".indexOf(f[0]) && (this.reflection = [2 * this.pos[0] - f[p - 4], 2 * this.pos[1] - f[p - 3]]), f
                    }

                    function c(f) {
                        var p = [f];
                        switch (f[0]) {
                            case "M":
                                return this.pos = this.start = [f[1], f[2]], p;
                            case "L":
                                f[5] = f[3] = f[1], f[6] = f[4] = f[2], f[1] = this.pos[0], f[2] = this.pos[1];
                                break;
                            case "Q":
                                f[6] = f[4], f[5] = f[3], f[4] = 1 * f[4] / 3 + 2 * f[2] / 3, f[3] = 1 * f[3] / 3 + 2 * f[1] / 3, f[2] = 1 * this.pos[1] / 3 + 2 * f[2] / 3, f[1] = 1 * this.pos[0] / 3 + 2 * f[1] / 3;
                                break;
                            case "A":
                                f = (p = function(m, y) {
                                    var x, w, S, T, k, O, B, $, ne, re, b, A, F, X, be, Se, Le, ze, nt, yt, dt, Tt, wt, ln, Jt, Qn, Ti = Math.abs(y[1]),
                                        ke = Math.abs(y[2]),
                                        Ke = y[3] % 360,
                                        qe = y[4],
                                        gt = y[5],
                                        jt = y[6],
                                        un = y[7],
                                        Fn = new SVG.Point(m),
                                        Mn = new SVG.Point(jt, un),
                                        gi = [];
                                    if (0 === Ti || 0 === ke || Fn.x === Mn.x && Fn.y === Mn.y) return [
                                        ["C", Fn.x, Fn.y, Mn.x, Mn.y, Mn.x, Mn.y]
                                    ];
                                    for ((w = (x = new SVG.Point((Fn.x - Mn.x) / 2, (Fn.y - Mn.y) / 2).transform((new SVG.Matrix).rotate(Ke))).x * x.x / (Ti * Ti) + x.y * x.y / (ke * ke)) > 1 && (Ti *= w = Math.sqrt(w), ke *= w), S = (new SVG.Matrix).rotate(Ke).scale(1 / Ti, 1 / ke).rotate(-Ke), Fn = Fn.transform(S), O = (T = [(Mn = Mn.transform(S)).x - Fn.x, Mn.y - Fn.y])[0] * T[0] + T[1] * T[1], k = Math.sqrt(O), T[0] /= k, T[1] /= k, B = O < 4 ? Math.sqrt(1 - O / 4) : 0, qe === gt && (B *= -1), $ = new SVG.Point((Mn.x + Fn.x) / 2 + B * -T[1], (Mn.y + Fn.y) / 2 + B * T[0]), ne = new SVG.Point(Fn.x - $.x, Fn.y - $.y), re = new SVG.Point(Mn.x - $.x, Mn.y - $.y), b = Math.acos(ne.x / Math.sqrt(ne.x * ne.x + ne.y * ne.y)), ne.y < 0 && (b *= -1), A = Math.acos(re.x / Math.sqrt(re.x * re.x + re.y * re.y)), re.y < 0 && (A *= -1), gt && b > A && (A += 2 * Math.PI), !gt && b < A && (A -= 2 * Math.PI), Se = [], Le = b, F = (A - b) / (X = Math.ceil(2 * Math.abs(b - A) / Math.PI)), be = 4 * Math.tan(F / 4) / 3, dt = 0; dt <= X; dt++) nt = Math.cos(Le), ze = Math.sin(Le), yt = new SVG.Point($.x + nt, $.y + ze), Se[dt] = [new SVG.Point(yt.x + be * ze, yt.y - be * nt), yt, new SVG.Point(yt.x - be * ze, yt.y + be * nt)], Le += F;
                                    for (Se[0][0] = Se[0][1].clone(), Se[Se.length - 1][2] = Se[Se.length - 1][1].clone(), S = (new SVG.Matrix).rotate(Ke).scale(Ti, ke).rotate(-Ke), dt = 0, Tt = Se.length; dt < Tt; dt++) Se[dt][0] = Se[dt][0].transform(S), Se[dt][1] = Se[dt][1].transform(S), Se[dt][2] = Se[dt][2].transform(S);
                                    for (dt = 1, Tt = Se.length; dt < Tt; dt++) wt = (yt = Se[dt - 1][2]).x, ln = yt.y, Jt = (yt = Se[dt][0]).x, Qn = yt.y, jt = (yt = Se[dt][1]).x, gi.push(["C", wt, ln, Jt, Qn, jt, un = yt.y]);
                                    return gi
                                }(this.pos, f))[0]
                        }
                        return f[0] = "C", this.pos = [f[5], f[6]], this.reflection = [2 * f[5] - f[3], 2 * f[6] - f[4]], p
                    }

                    function d(f, p) {
                        if (!1 === p) return !1;
                        for (var m = p, y = f.length; m < y; ++m)
                            if ("M" == f[m][0]) return m;
                        return !1
                    }
                    SVG.extend(SVG.PathArray, {
                        morph: function(f) {
                            for (var p = this.value, m = this.parse(f), y = 0, x = 0, w = !1, S = !1; !1 !== y || !1 !== x;) {
                                var T;
                                w = d(p, !1 !== y && y + 1), S = d(m, !1 !== x && x + 1), !1 === y && (y = 0 == (T = new SVG.PathArray(k.start).bbox()).height || 0 == T.width ? p.push(p[0]) - 1 : p.push(["M", T.x + T.width / 2, T.y + T.height / 2]) - 1), !1 === x && (x = 0 == (T = new SVG.PathArray(k.dest).bbox()).height || 0 == T.width ? m.push(m[0]) - 1 : m.push(["M", T.x + T.width / 2, T.y + T.height / 2]) - 1);
                                var k = K(p, y, w, m, x, S);
                                p = p.slice(0, y).concat(k.start, !1 === w ? [] : p.slice(w)), m = m.slice(0, x).concat(k.dest, !1 === S ? [] : m.slice(S)), y = !1 !== w && y + k.start.length, x = !1 !== S && x + k.dest.length
                            }
                            return this.value = p, this.destination = new SVG.PathArray, this.destination.value = m, this
                        }
                    })
                }(),
                /*! svg.draggable.js - v2.2.2 - 2019-01-08
                 * https://github.com/svgdotjs/svg.draggable.js
                 * Copyright (c) 2019 Wout Fierens; Licensed MIT */
                function() {
                    function K(a) {
                        a.remember("_draggable", this), this.el = a
                    }
                    K.prototype.init = function(a, o) {
                        var c = this;
                        this.constraint = a, this.value = o, this.el.on("mousedown.drag", function(d) {
                            c.start(d)
                        }), this.el.on("touchstart.drag", function(d) {
                            c.start(d)
                        })
                    }, K.prototype.transformPoint = function(a, o) {
                        var c = (a = a || window.event).changedTouches && a.changedTouches[0] || a;
                        return this.p.x = c.clientX - (o || 0), this.p.y = c.clientY, this.p.matrixTransform(this.m)
                    }, K.prototype.getBBox = function() {
                        var a = this.el.bbox();
                        return this.el instanceof SVG.Nested && (a = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (a.x = this.el.x(), a.y = this.el.y()), a
                    }, K.prototype.start = function(a) {
                        if ("click" != a.type && "mousedown" != a.type && "mousemove" != a.type || 1 == (a.which || a.buttons)) {
                            var o = this;
                            if (this.el.fire("beforedrag", {
                                    event: a,
                                    handler: this
                                }), !this.el.event().defaultPrevented) {
                                a.preventDefault(), a.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
                                var c, d = this.getBBox();
                                if (this.el instanceof SVG.Text) switch (c = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
                                    case "middle":
                                        c /= 2;
                                        break;
                                    case "start":
                                        c = 0
                                }
                                this.startPoints = {
                                    point: this.transformPoint(a, c),
                                    box: d,
                                    transform: this.el.transform()
                                }, SVG.on(window, "mousemove.drag", function(f) {
                                    o.drag(f)
                                }), SVG.on(window, "touchmove.drag", function(f) {
                                    o.drag(f)
                                }), SVG.on(window, "mouseup.drag", function(f) {
                                    o.end(f)
                                }), SVG.on(window, "touchend.drag", function(f) {
                                    o.end(f)
                                }), this.el.fire("dragstart", {
                                    event: a,
                                    p: this.startPoints.point,
                                    m: this.m,
                                    handler: this
                                })
                            }
                        }
                    }, K.prototype.drag = function(a) {
                        var o = this.getBBox(),
                            c = this.transformPoint(a),
                            d = this.startPoints.box.x + c.x - this.startPoints.point.x,
                            f = this.startPoints.box.y + c.y - this.startPoints.point.y,
                            p = this.constraint,
                            m = c.x - this.startPoints.point.x,
                            y = c.y - this.startPoints.point.y;
                        if (this.el.fire("dragmove", {
                                event: a,
                                p: c,
                                m: this.m,
                                handler: this
                            }), this.el.event().defaultPrevented) return c;
                        if ("function" == typeof p) {
                            var x = p.call(this.el, d, f, this.m);
                            "boolean" == typeof x && (x = {
                                x,
                                y: x
                            }), !0 === x.x ? this.el.x(d) : !1 !== x.x && this.el.x(x.x), !0 === x.y ? this.el.y(f) : !1 !== x.y && this.el.y(x.y)
                        } else "object" == typeof p && (null != p.minX && d < p.minX ? m = (d = p.minX) - this.startPoints.box.x : null != p.maxX && d > p.maxX - o.width && (m = (d = p.maxX - o.width) - this.startPoints.box.x), null != p.minY && f < p.minY ? y = (f = p.minY) - this.startPoints.box.y : null != p.maxY && f > p.maxY - o.height && (y = (f = p.maxY - o.height) - this.startPoints.box.y), null != p.snapToGrid && (d -= d % p.snapToGrid, f -= f % p.snapToGrid, m -= m % p.snapToGrid, y -= y % p.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
                            x: m,
                            y
                        }, !0) : this.el.move(d, f));
                        return c
                    }, K.prototype.end = function(a) {
                        var o = this.drag(a);
                        this.el.fire("dragend", {
                            event: a,
                            p: o,
                            m: this.m,
                            handler: this
                        }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag")
                    }, SVG.extend(SVG.Element, {
                        draggable: function(a, o) {
                            "function" != typeof a && "object" != typeof a || (o = a, a = !0);
                            var c = this.remember("_draggable") || new K(this);
                            return (a = void 0 === a || a) ? c.init(o || {}, a) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this
                        }
                    })
                }.call(void 0),
                function() {
                    function K(a) {
                        this.el = a, a.remember("_selectHandler", this), this.pointSelection = {
                            isSelected: !1
                        }, this.rectSelection = {
                            isSelected: !1
                        }, this.pointsList = {
                            lt: [0, 0],
                            rt: ["width", 0],
                            rb: ["width", "height"],
                            lb: [0, "height"],
                            t: ["width", 0],
                            r: ["width", "height"],
                            b: ["width", "height"],
                            l: [0, "height"]
                        }, this.pointCoord = function(o, c, d) {
                            var f = "string" != typeof o ? o : c[o];
                            return d ? f / 2 : f
                        }, this.pointCoords = function(o, c) {
                            var d = this.pointsList[o];
                            return {
                                x: this.pointCoord(d[0], c, "t" === o || "b" === o),
                                y: this.pointCoord(d[1], c, "r" === o || "l" === o)
                            }
                        }
                    }
                    K.prototype.init = function(a, o) {
                        var c = this.el.bbox();
                        this.options = {};
                        var d = this.el.selectize.defaults.points;
                        for (var f in this.el.selectize.defaults) this.options[f] = this.el.selectize.defaults[f], void 0 !== o[f] && (this.options[f] = o[f]);
                        var p = ["points", "pointsExclude"];
                        for (var f in p) {
                            var m = this.options[p[f]];
                            "string" == typeof m ? m = m.length > 0 ? m.split(/\s*,\s*/i) : [] : "boolean" == typeof m && "points" === p[f] && (m = m ? d : []), this.options[p[f]] = m
                        }
                        this.options.points = [d, this.options.points].reduce(function(y, x) {
                            return y.filter(function(w) {
                                return x.indexOf(w) > -1
                            })
                        }), this.options.points = [this.options.points, this.options.pointsExclude].reduce(function(y, x) {
                            return y.filter(function(w) {
                                return x.indexOf(w) < 0
                            })
                        }), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(c.x, c.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(a) : this.selectRect(a), this.observe(), this.cleanup()
                    }, K.prototype.selectPoints = function(a) {
                        return this.pointSelection.isSelected = a, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this
                    }, K.prototype.getPointArray = function() {
                        var a = this.el.bbox();
                        return this.el.array().valueOf().map(function(o) {
                            return [o[0] - a.x, o[1] - a.y]
                        })
                    }, K.prototype.drawPoints = function() {
                        for (var a = this, o = this.getPointArray(), c = 0, d = o.length; c < d; ++c) {
                            var f = function(m) {
                                    return function(y) {
                                        (y = y || window.event).preventDefault ? y.preventDefault() : y.returnValue = !1, y.stopPropagation(), a.el.fire("point", {
                                            x: y.pageX || y.touches[0].pageX,
                                            y: y.pageY || y.touches[0].pageY,
                                            i: m,
                                            event: y
                                        })
                                    }
                                }(c),
                                p = this.drawPoint(o[c][0], o[c][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", f).on("mousedown", f);
                            this.pointSelection.set.add(p)
                        }
                    }, K.prototype.drawPoint = function(a, o) {
                        var c = this.options.pointType;
                        switch (c) {
                            case "circle":
                                return this.drawCircle(a, o);
                            case "rect":
                                return this.drawRect(a, o);
                            default:
                                if ("function" == typeof c) return c.call(this, a, o);
                                throw new Error("Unknown " + c + " point type!")
                        }
                    }, K.prototype.drawCircle = function(a, o) {
                        return this.nested.circle(this.options.pointSize).center(a, o)
                    }, K.prototype.drawRect = function(a, o) {
                        return this.nested.rect(this.options.pointSize, this.options.pointSize).center(a, o)
                    }, K.prototype.updatePointSelection = function() {
                        var a = this.getPointArray();
                        this.pointSelection.set.each(function(o) {
                            this.cx() === a[o][0] && this.cy() === a[o][1] || this.center(a[o][0], a[o][1])
                        })
                    }, K.prototype.updateRectSelection = function() {
                        var a = this,
                            o = this.el.bbox();
                        if (this.rectSelection.set.get(0).attr({
                                width: o.width,
                                height: o.height
                            }), this.options.points.length && this.options.points.map(function(d, f) {
                                var p = a.pointCoords(d, o);
                                a.rectSelection.set.get(f + 1).center(p.x, p.y)
                            }), this.options.rotationPoint) {
                            var c = this.rectSelection.set.length();
                            this.rectSelection.set.get(c - 1).center(o.width / 2, 20)
                        }
                    }, K.prototype.selectRect = function(a) {
                        var o = this,
                            c = this.el.bbox();

                        function d(m) {
                            return function(y) {
                                (y = y || window.event).preventDefault ? y.preventDefault() : y.returnValue = !1, y.stopPropagation(), o.el.fire(m, {
                                    x: y.pageX || y.touches[0].pageX,
                                    y: y.pageY || y.touches[0].pageY,
                                    event: y
                                })
                            }
                        }
                        if (this.rectSelection.isSelected = a, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(c.width, c.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2 && (this.options.points.map(function(m, y) {
                                var x = o.pointCoords(m, c),
                                    w = o.drawPoint(x.x, x.y).attr("class", o.options.classPoints + "_" + m).on("mousedown", d(m)).on("touchstart", d(m));
                                o.rectSelection.set.add(w)
                            }), this.rectSelection.set.each(function() {
                                this.addClass(o.options.classPoints)
                            })), this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
                            var f = function(m) {
                                    (m = m || window.event).preventDefault ? m.preventDefault() : m.returnValue = !1, m.stopPropagation(), o.el.fire("rot", {
                                        x: m.pageX || m.touches[0].pageX,
                                        y: m.pageY || m.touches[0].pageY,
                                        event: m
                                    })
                                },
                                p = this.drawPoint(c.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", f).on("mousedown", f);
                            this.rectSelection.set.add(p)
                        }
                    }, K.prototype.handler = function() {
                        var a = this.el.bbox();
                        this.nested.matrix(new SVG.Matrix(this.el).translate(a.x, a.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection()
                    }, K.prototype.observe = function() {
                        var a = this;
                        if (MutationObserver)
                            if (this.rectSelection.isSelected || this.pointSelection.isSelected) this.observerInst = this.observerInst || new MutationObserver(function() {
                                a.handler()
                            }), this.observerInst.observe(this.el.node, {
                                attributes: !0
                            });
                            else try {
                                this.observerInst.disconnect(), delete this.observerInst
                            } catch {} else this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function() {
                                a.handler()
                            })
                    }, K.prototype.cleanup = function() {
                        !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function() {
                            this.remove()
                        }), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function() {
                            this.remove()
                        }), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested)
                    }, SVG.extend(SVG.Element, {
                        selectize: function(a, o) {
                            return "object" == typeof a && (o = a, a = !0), (this.remember("_selectHandler") || new K(this)).init(void 0 === a || a, o || {}), this
                        }
                    }), SVG.Element.prototype.selectize.defaults = {
                        points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
                        pointsExclude: [],
                        classRect: "svg_select_boundingRect",
                        classPoints: "svg_select_points",
                        pointSize: 7,
                        rotationPoint: !0,
                        deepSelect: !1,
                        pointType: "circle"
                    }
                }(),
                function() {
                    (function() {
                        function K(a) {
                            a.remember("_resizeHandler", this), this.el = a, this.parameters = {}, this.lastUpdateCall = null, this.p = a.doc().node.createSVGPoint()
                        }
                        K.prototype.transformPoint = function(a, o, c) {
                            return this.p.x = a - (this.offset.x - window.pageXOffset), this.p.y = o - (this.offset.y - window.pageYOffset), this.p.matrixTransform(c || this.m)
                        }, K.prototype._extractPosition = function(a) {
                            return {
                                x: null != a.clientX ? a.clientX : a.touches[0].clientX,
                                y: null != a.clientY ? a.clientY : a.touches[0].clientY
                            }
                        }, K.prototype.init = function(a) {
                            var o = this;
                            if (this.stop(), "stop" !== a) {
                                for (var c in this.options = {}, this.el.resize.defaults) this.options[c] = this.el.resize.defaults[c], void 0 !== a[c] && (this.options[c] = a[c]);
                                this.el.on("lt.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("rt.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("rb.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("lb.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("t.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("r.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("b.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("l.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("rot.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.el.on("point.resize", function(d) {
                                    o.resize(d || window.event)
                                }), this.update()
                            }
                        }, K.prototype.stop = function() {
                            return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this
                        }, K.prototype.resize = function(a) {
                            var o = this;
                            this.m = this.el.node.getScreenCTM().inverse(), this.offset = {
                                x: window.pageXOffset,
                                y: window.pageYOffset
                            };
                            var c = this._extractPosition(a.detail.event);
                            if (this.parameters = {
                                    type: this.el.type,
                                    p: this.transformPoint(c.x, c.y),
                                    x: a.detail.x,
                                    y: a.detail.y,
                                    box: this.el.bbox(),
                                    rotation: this.el.transform().rotation
                                }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== a.detail.i) {
                                var d = this.el.array().valueOf();
                                this.parameters.i = a.detail.i, this.parameters.pointCoords = [d[a.detail.i][0], d[a.detail.i][1]]
                            }
                            switch (a.type) {
                                case "lt":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p);
                                        if (this.parameters.box.width - m[0] > 0 && this.parameters.box.height - m[1] > 0) {
                                            if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + m[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - m[0]);
                                            m = this.checkAspectRatio(m), this.el.move(this.parameters.box.x + m[0], this.parameters.box.y + m[1]).size(this.parameters.box.width - m[0], this.parameters.box.height - m[1])
                                        }
                                    };
                                    break;
                                case "rt":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, 2);
                                        if (this.parameters.box.width + m[0] > 0 && this.parameters.box.height - m[1] > 0) {
                                            if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - m[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + m[0]);
                                            m = this.checkAspectRatio(m, !0), this.el.move(this.parameters.box.x, this.parameters.box.y + m[1]).size(this.parameters.box.width + m[0], this.parameters.box.height - m[1])
                                        }
                                    };
                                    break;
                                case "rb":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, 0);
                                        if (this.parameters.box.width + m[0] > 0 && this.parameters.box.height + m[1] > 0) {
                                            if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - m[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + m[0]);
                                            m = this.checkAspectRatio(m), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + m[0], this.parameters.box.height + m[1])
                                        }
                                    };
                                    break;
                                case "lb":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, 1);
                                        if (this.parameters.box.width - m[0] > 0 && this.parameters.box.height + m[1] > 0) {
                                            if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + m[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - m[0]);
                                            m = this.checkAspectRatio(m, !0), this.el.move(this.parameters.box.x + m[0], this.parameters.box.y).size(this.parameters.box.width - m[0], this.parameters.box.height + m[1])
                                        }
                                    };
                                    break;
                                case "t":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, 2);
                                        if (this.parameters.box.height - m[1] > 0) {
                                            if ("text" === this.parameters.type) return;
                                            this.el.move(this.parameters.box.x, this.parameters.box.y + m[1]).height(this.parameters.box.height - m[1])
                                        }
                                    };
                                    break;
                                case "r":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, 0);
                                        if (this.parameters.box.width + m[0] > 0) {
                                            if ("text" === this.parameters.type) return;
                                            this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + m[0])
                                        }
                                    };
                                    break;
                                case "b":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, 0);
                                        if (this.parameters.box.height + m[1] > 0) {
                                            if ("text" === this.parameters.type) return;
                                            this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + m[1])
                                        }
                                    };
                                    break;
                                case "l":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, 1);
                                        if (this.parameters.box.width - m[0] > 0) {
                                            if ("text" === this.parameters.type) return;
                                            this.el.move(this.parameters.box.x + m[0], this.parameters.box.y).width(this.parameters.box.width - m[0])
                                        }
                                    };
                                    break;
                                case "rot":
                                    this.calc = function(f, p) {
                                        var m = f + this.parameters.p.x,
                                            y = p + this.parameters.p.y,
                                            x = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2),
                                            w = Math.atan2(y - this.parameters.box.y - this.parameters.box.height / 2, m - this.parameters.box.x - this.parameters.box.width / 2),
                                            S = this.parameters.rotation + 180 * (w - x) / Math.PI + this.options.snapToAngle / 2;
                                        this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(S - S % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy)
                                    };
                                    break;
                                case "point":
                                    this.calc = function(f, p) {
                                        var m = this.snapToGrid(f, p, this.parameters.pointCoords[0], this.parameters.pointCoords[1]),
                                            y = this.el.array().valueOf();
                                        y[this.parameters.i][0] = this.parameters.pointCoords[0] + m[0], y[this.parameters.i][1] = this.parameters.pointCoords[1] + m[1], this.el.plot(y)
                                    }
                            }
                            this.el.fire("resizestart", {
                                dx: this.parameters.x,
                                dy: this.parameters.y,
                                event: a
                            }), SVG.on(window, "touchmove.resize", function(f) {
                                o.update(f || window.event)
                            }), SVG.on(window, "touchend.resize", function() {
                                o.done()
                            }), SVG.on(window, "mousemove.resize", function(f) {
                                o.update(f || window.event)
                            }), SVG.on(window, "mouseup.resize", function() {
                                o.done()
                            })
                        }, K.prototype.update = function(a) {
                            if (a) {
                                var o = this._extractPosition(a),
                                    c = this.transformPoint(o.x, o.y),
                                    d = c.x - this.parameters.p.x,
                                    f = c.y - this.parameters.p.y;
                                this.lastUpdateCall = [d, f], this.calc(d, f), this.el.fire("resizing", {
                                    dx: d,
                                    dy: f,
                                    event: a
                                })
                            } else this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1])
                        }, K.prototype.done = function() {
                            this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone")
                        }, K.prototype.snapToGrid = function(a, o, c, d) {
                            var f;
                            return f = void 0 !== d ? [(c + a) % this.options.snapToGrid, (d + o) % this.options.snapToGrid] : [(this.parameters.box.x + a + (1 & (c = c ? ? 3) ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + o + (2 & c ? 0 : this.parameters.box.height)) % this.options.snapToGrid], a < 0 && (f[0] -= this.options.snapToGrid), o < 0 && (f[1] -= this.options.snapToGrid), a -= Math.abs(f[0]) < this.options.snapToGrid / 2 ? f[0] : f[0] - (a < 0 ? -this.options.snapToGrid : this.options.snapToGrid), o -= Math.abs(f[1]) < this.options.snapToGrid / 2 ? f[1] : f[1] - (o < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(a, o, c, d)
                        }, K.prototype.constraintToBox = function(a, o, c, d) {
                            var f, p, m = this.options.constraint || {};
                            return void 0 !== d ? (f = c, p = d) : (f = this.parameters.box.x + (1 & c ? 0 : this.parameters.box.width), p = this.parameters.box.y + (2 & c ? 0 : this.parameters.box.height)), void 0 !== m.minX && f + a < m.minX && (a = m.minX - f), void 0 !== m.maxX && f + a > m.maxX && (a = m.maxX - f), void 0 !== m.minY && p + o < m.minY && (o = m.minY - p), void 0 !== m.maxY && p + o > m.maxY && (o = m.maxY - p), [a, o]
                        }, K.prototype.checkAspectRatio = function(a, o) {
                            if (!this.options.saveAspectRatio) return a;
                            var c = a.slice(),
                                d = this.parameters.box.width / this.parameters.box.height,
                                f = this.parameters.box.width + a[0],
                                p = this.parameters.box.height - a[1],
                                m = f / p;
                            return m < d ? (c[1] = f / d - this.parameters.box.height, o && (c[1] = -c[1])) : m > d && (c[0] = this.parameters.box.width - p * d, o && (c[0] = -c[0])), c
                        }, SVG.extend(SVG.Element, {
                            resize: function(a) {
                                return (this.remember("_resizeHandler") || new K(this)).init(a || {}), this
                            }
                        }), SVG.Element.prototype.resize.defaults = {
                            snapToAngle: .1,
                            snapToGrid: 1,
                            constraint: {},
                            saveAspectRatio: !1
                        }
                    }).call(this)
                }(), void 0 === window.Apex && (window.Apex = {});
            var ba = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "initModules",
                        value: function() {
                            this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "isSeriesHidden", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "exportToCSV", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new Pe(this.ctx), this.ctx.axes = new Hs(this.ctx), this.ctx.core = new br(this.ctx.el, this.ctx), this.ctx.config = new _t({}), this.ctx.data = new Gt(this.ctx), this.ctx.grid = new Hn(this.ctx), this.ctx.graphics = new J(this.ctx), this.ctx.coreUtils = new Ie(this.ctx), this.ctx.crosshairs = new ui(this.ctx), this.ctx.events = new Vs(this.ctx), this.ctx.exports = new pn(this.ctx), this.ctx.localization = new Hi(this.ctx), this.ctx.options = new tt, this.ctx.responsive = new Yn(this.ctx), this.ctx.series = new Ct(this.ctx), this.ctx.theme = new ir(this.ctx), this.ctx.formatters = new ct(this.ctx), this.ctx.titleSubtitle = new Ui(this.ctx), this.ctx.legend = new bi(this.ctx), this.ctx.toolbar = new qn(this.ctx), this.ctx.tooltip = new Va(this.ctx), this.ctx.dimensions = new yi(this.ctx), this.ctx.updateHelpers = new as(this.ctx), this.ctx.zoomPanSelection = new Wi(this.ctx), this.ctx.w.globals.tooltip = new Va(this.ctx)
                        }
                    }]), K
                }(),
                zi = function() {
                    function K(a) {
                        U(this, K), this.ctx = a, this.w = a.w
                    }
                    return z(K, [{
                        key: "clear",
                        value: function(a) {
                            var o = a.isUpdating;
                            this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({
                                isUpdating: o
                            })
                        }
                    }, {
                        key: "killSVG",
                        value: function(a) {
                            a.each(function(o, c) {
                                this.removeClass("*"), this.off(), this.stop()
                            }, !0), a.ungroup(), a.clear()
                        }
                    }, {
                        key: "clearDomElements",
                        value: function(a) {
                            var o = this,
                                d = this.w.globals.dom.Paper.node;
                            d.parentNode && d.parentNode.parentNode && !a.isUpdating && (d.parentNode.parentNode.style.minHeight = "unset");
                            var f = this.w.globals.dom.baseEl;
                            f && this.ctx.eventList.forEach(function(m) {
                                f.removeEventListener(m, o.ctx.events.documentEvent)
                            });
                            var p = this.w.globals.dom;
                            if (null !== this.ctx.el)
                                for (; this.ctx.el.firstChild;) this.ctx.el.removeChild(this.ctx.el.firstChild);
                            this.killSVG(p.Paper), p.Paper.remove(), p.elWrap = null, p.elGraphical = null, p.elLegendWrap = null, p.elLegendForeign = null, p.baseEl = null, p.elGridRect = null, p.elGridRectMask = null, p.elGridRectMarkerMask = null, p.elForecastMask = null, p.elNonForecastMask = null, p.elDefs = null
                        }
                    }]), K
                }(),
                ks = new WeakMap,
                os = function() {
                    function K(a, o) {
                        U(this, K), this.opts = o, this.ctx = this, this.w = new Lt(o).init(), this.el = a, this.w.globals.cuid = te.randomId(), this.w.globals.chartID = this.w.config.chart.id ? te.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new ba(this).initModules(), this.create = te.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this)
                    }
                    return z(K, [{
                        key: "render",
                        value: function() {
                            var a = this;
                            return new Promise(function(o, c) {
                                if (null !== a.el) {
                                    void 0 === Apex._chartInstances && (Apex._chartInstances = []), a.w.config.chart.id && Apex._chartInstances.push({
                                        id: a.w.globals.chartID,
                                        group: a.w.config.chart.group,
                                        chart: a
                                    }), a.setLocale(a.w.config.chart.defaultLocale);
                                    var d = a.w.config.chart.events.beforeMount;
                                    if ("function" == typeof d && d(a, a.w), a.events.fireEvent("beforeMount", [a, a.w]), window.addEventListener("resize", a.windowResizeHandler), function(T, k) {
                                            var O = !1;
                                            if (T.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                                                var B = T.getBoundingClientRect();
                                                "none" !== T.style.display && 0 !== B.width || (O = !0)
                                            }
                                            var $ = new ResizeObserver(function(ne) {
                                                O && k.call(T, ne), O = !0
                                            });
                                            T.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? Array.from(T.children).forEach(function(ne) {
                                                return $.observe(ne)
                                            }) : $.observe(T), ks.set(k, $)
                                        }(a.el.parentNode, a.parentResizeHandler), !a.css) {
                                        var f = a.el.getRootNode && a.el.getRootNode(),
                                            p = te.is("ShadowRoot", f),
                                            m = a.el.ownerDocument,
                                            y = m.getElementById("apexcharts-css");
                                        if (p || !y) {
                                            var x;
                                            a.css = document.createElement("style"), a.css.id = "apexcharts-css", a.css.textContent = '@keyframes opaque {\n  0% {\n      opacity: 0\n  }\n\n  to {\n      opacity: 1\n  }\n}\n\n@keyframes resizeanim {\n  0%,to {\n      opacity: 0\n  }\n}\n\n.apexcharts-canvas {\n  position: relative;\n  user-select: none\n}\n\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0,0,0,.5);\n  box-shadow: 0 0 1px rgba(255,255,255,.5);\n  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)\n}\n\n.apexcharts-inner {\n  position: relative\n}\n\n.apexcharts-text tspan {\n  font-family: inherit\n}\n\n.legend-mouseover-inactive {\n  transition: .15s ease all;\n  opacity: .2\n}\n\n.apexcharts-legend-text {\n  padding-left: 15px;\n  margin-left: -15px;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255,255,255,.96)\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30,30,30,.8)\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit\n}\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #eceff1;\n  border-bottom: 1px solid #ddd\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0,0,0,.7);\n  border-bottom: 1px solid #333\n}\n\n.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  margin-left: 5px;\n  font-weight: 600\n}\n\n.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {\n  display: none\n}\n\n.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px\n}\n\n.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  display: flex\n}\n\n.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0;\n  margin-right: 10px;\n  border-radius: 50%\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0!important\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px\n}\n\n.apexcharts-custom-tooltip,.apexcharts-tooltip-box {\n  padding: 4px 8px\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: 700\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: 700;\n  display: block;\n  margin-bottom: 5px\n}\n\n.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {\n  opacity: 0;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #eceff1;\n  border: 1px solid #90a4ae\n}\n\n.apexcharts-xaxistooltip {\n  padding: 9px 10px;\n  transition: .15s ease all\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-left: -6px\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-left: -7px\n}\n\n.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%\n}\n\n.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {\n  top: 100%\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-yaxistooltip {\n  padding: 4px 10px\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-top: -6px\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-top: -7px\n}\n\n.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {\n  left: 100%\n}\n\n.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {\n  right: 100%\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none\n}\n\n.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: .15s ease all\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0\n}\n\n.apexcharts-selection-rect {\n  cursor: move\n}\n\n.svg_select_boundingRect,.svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6e8192;\n  text-align: center\n}\n\n.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {\n  fill: #6e8192\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(.76)\n}\n\n.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {\n  fill: #f3f4f5\n}\n\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {\n  fill: #008ffb\n}\n\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {\n  fill: #333\n}\n\n.apexcharts-menu-icon,.apexcharts-selection-icon {\n  position: relative\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px\n}\n\n.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {\n  transform: scale(.85)\n}\n\n.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  transform: scale(.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px\n}\n\n.apexcharts-pan-icon {\n  transform: scale(.62);\n  position: relative;\n  left: 1px;\n  top: 0\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6e8192;\n  stroke-width: 2\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008ffb\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0 6px 2px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: .15s ease all;\n  pointer-events: none\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: .15s ease all\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0,0,0,.7);\n  color: #fff\n}\n\n@media screen and (min-width:768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n      opacity: 1\n  }\n}\n\n.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {\n  opacity: 0\n}\n\n.apexcharts-hidden-element-shown {\n  opacity: 1;\n  transition: 0.25s ease all;\n}\n.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {\n  cursor: default;\n  pointer-events: none\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: .3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease\n}\n\n.apexcharts-radialbar-label {\n  cursor: pointer;\n}\n\n.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {\n  pointer-events: none\n}\n\n.apexcharts-marker {\n  transition: .15s ease all\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden\n}\n\n.contract-trigger:before,.resize-triggers,.resize-triggers>div {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0\n}\n\n.resize-triggers>div {\n  height: 100%;\n  width: 100%;\n  background: #eee;\n  overflow: auto\n}\n\n.contract-trigger:before {\n  overflow: hidden;\n  width: 200%;\n  height: 200%\n}\n\n.apexcharts-bar-goals-markers{\n  pointer-events: none\n}\n\n.apexcharts-bar-shadows{\n  pointer-events: none\n}\n\n.apexcharts-rangebar-goals-markers{\n  pointer-events: none\n}';
                                            var w = (null === (x = a.opts.chart) || void 0 === x ? void 0 : x.nonce) || a.w.config.chart.nonce;
                                            w && a.css.setAttribute("nonce", w), p ? f.prepend(a.css) : m.head.appendChild(a.css)
                                        }
                                    }
                                    var S = a.create(a.w.config.series, {});
                                    if (!S) return o(a);
                                    a.mount(S).then(function() {
                                        "function" == typeof a.w.config.chart.events.mounted && a.w.config.chart.events.mounted(a, a.w), a.events.fireEvent("mounted", [a, a.w]), o(S)
                                    }).catch(function(T) {
                                        c(T)
                                    })
                                } else c(new Error("Element not found"))
                            })
                        }
                    }, {
                        key: "create",
                        value: function(a, o) {
                            var c = this.w;
                            new ba(this).initModules();
                            var d = this.w.globals;
                            if (d.noData = !1, d.animationEnded = !1, this.responsive.checkResponsiveConfig(o), c.config.xaxis.convertedCatToNumeric && new je(c.config).convertCatToNumericXaxis(c.config, this.ctx), null === this.el || (this.core.setupElements(), "treemap" === c.config.chart.type && (c.config.grid.show = !1, c.config.yaxis[0].show = !1), 0 === d.svgWidth)) return d.animationEnded = !0, null;
                            var f = Ie.checkComboSeries(a);
                            d.comboCharts = f.comboCharts, d.comboBarCount = f.comboBarCount;
                            var p = a.every(function(w) {
                                return w.data && 0 === w.data.length
                            });
                            (0 === a.length || p) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(a), this.theme.init(), new St(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), d.noData && d.collapsedSeries.length !== d.series.length && !c.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), d.axisCharts && (this.core.coreCalculations(), "category" !== c.config.xaxis.type && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = c.globals.minX, this.ctx.toolbar.maxX = c.globals.maxX), this.formatters.heatmapLabelFormatters(), new Ie(this).getLargestMarkerSize(), this.dimensions.plotCoords();
                            var m = this.core.xySettings();
                            this.grid.createGridMask();
                            var y = this.core.plotChartType(a, m),
                                x = new Dt(this);
                            return x.bringForward(), c.config.dataLabels.background.enabled && x.dataLabelsBackground(), this.core.shiftGraphPosition(), {
                                elGraph: y,
                                xyRatios: m,
                                dimensions: {
                                    plot: {
                                        left: c.globals.translateX,
                                        top: c.globals.translateY,
                                        width: c.globals.gridWidth,
                                        height: c.globals.gridHeight
                                    }
                                }
                            }
                        }
                    }, {
                        key: "mount",
                        value: function() {
                            var a = this,
                                o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                                c = this,
                                d = c.w;
                            return new Promise(function(f, p) {
                                if (null === c.el) return p(new Error("Not enough data to display or target element not found"));
                                (null === o || d.globals.allSeriesCollapsed) && c.series.handleNoData(), c.grid = new Hn(c);
                                var m, y, x = c.grid.drawGrid();
                                if (c.annotations = new at(c), c.annotations.drawImageAnnos(), c.annotations.drawTextAnnos(), "back" === d.config.grid.position && (x && d.globals.dom.elGraphical.add(x.el), null != x && null !== (m = x.elGridBorders) && void 0 !== m && m.node && d.globals.dom.elGraphical.add(x.elGridBorders)), Array.isArray(o.elGraph))
                                    for (var w = 0; w < o.elGraph.length; w++) d.globals.dom.elGraphical.add(o.elGraph[w]);
                                else d.globals.dom.elGraphical.add(o.elGraph);
                                "front" === d.config.grid.position && (x && d.globals.dom.elGraphical.add(x.el), null != x && null !== (y = x.elGridBorders) && void 0 !== y && y.node && d.globals.dom.elGraphical.add(x.elGridBorders)), "front" === d.config.xaxis.crosshairs.position && c.crosshairs.drawXCrosshairs(), "front" === d.config.yaxis[0].crosshairs.position && c.crosshairs.drawYCrosshairs(), "treemap" !== d.config.chart.type && c.axes.drawAxis(d.config.chart.type, x);
                                var S = new _n(a.ctx, x),
                                    T = new ts(a.ctx, x);
                                if (null !== x && (S.xAxisLabelCorrections(x.xAxisTickWidth), T.setYAxisTextAlignments(), d.config.yaxis.map(function(O, B) {
                                        -1 === d.globals.ignoreYAxisIndexes.indexOf(B) && T.yAxisTitleRotate(B, O.opposite)
                                    })), c.annotations.drawAxesAnnotations(), !d.globals.noData) {
                                    if (d.config.tooltip.enabled && !d.globals.noData && c.w.globals.tooltip.drawTooltip(o.xyRatios), d.globals.axisCharts && (d.globals.isXNumeric || d.config.xaxis.convertedCatToNumeric || d.globals.isRangeBar))(d.config.chart.zoom.enabled || d.config.chart.selection && d.config.chart.selection.enabled || d.config.chart.pan && d.config.chart.pan.enabled) && c.zoomPanSelection.init({
                                        xyRatios: o.xyRatios
                                    });
                                    else {
                                        var k = d.config.chart.toolbar.tools;
                                        ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach(function(O) {
                                            k[O] = !1
                                        })
                                    }
                                    d.config.chart.toolbar.show && !d.globals.allSeriesCollapsed && c.toolbar.createToolbar()
                                }
                                d.globals.memory.methodsToExec.length > 0 && d.globals.memory.methodsToExec.forEach(function(O) {
                                    O.method(O.params, !1, O.context)
                                }), d.globals.axisCharts || d.globals.noData || c.core.resizeNonAxisCharts(), f(c)
                            })
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            var a, o;
                            window.removeEventListener("resize", this.windowResizeHandler), (o = ks.get(a = this.parentResizeHandler)) && (o.disconnect(), ks.delete(a));
                            var c = this.w.config.chart.id;
                            c && Apex._chartInstances.forEach(function(d, f) {
                                d.id === te.escapeString(c) && Apex._chartInstances.splice(f, 1)
                            }), new zi(this.ctx).clear({
                                isUpdating: !1
                            })
                        }
                    }, {
                        key: "updateOptions",
                        value: function(a) {
                            var o = this,
                                c = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                                d = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                                f = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                                p = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
                                m = this.w;
                            return m.globals.selection = void 0, a.series && (this.series.resetSeries(!1, !0, !1), a.series.length && a.series[0].data && (a.series = a.series.map(function(y, x) {
                                return o.updateHelpers._extendSeries(y, x)
                            })), this.updateHelpers.revertDefaultAxisMinMax()), a.xaxis && (a = this.updateHelpers.forceXAxisUpdate(a)), a.yaxis && (a = this.updateHelpers.forceYAxisUpdate(a)), m.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), a.theme && (a = this.theme.updateThemeOptions(a)), this.updateHelpers._updateOptions(a, c, d, f, p)
                        }
                    }, {
                        key: "updateSeries",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                o = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                                c = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            return this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(a, o, c)
                        }
                    }, {
                        key: "appendSeries",
                        value: function(a) {
                            var o = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                                c = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                                d = this.w.config.series.slice();
                            return d.push(a), this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(d, o, c)
                        }
                    }, {
                        key: "appendData",
                        value: function(a) {
                            var o = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
                                c = this;
                            c.w.globals.dataChanged = !0, c.series.getPreviousPaths();
                            for (var d = c.w.config.series.slice(), f = 0; f < d.length; f++)
                                if (null != a[f])
                                    for (var p = 0; p < a[f].data.length; p++) d[f].data.push(a[f].data[p]);
                            return c.w.config.series = d, o && (c.w.globals.initialSeries = te.clone(c.w.config.series)), this.update()
                        }
                    }, {
                        key: "update",
                        value: function(a) {
                            var o = this;
                            return new Promise(function(c, d) {
                                new zi(o.ctx).clear({
                                    isUpdating: !0
                                });
                                var f = o.create(o.w.config.series, a);
                                if (!f) return c(o);
                                o.mount(f).then(function() {
                                    "function" == typeof o.w.config.chart.events.updated && o.w.config.chart.events.updated(o, o.w), o.events.fireEvent("updated", [o, o.w]), o.w.globals.isDirty = !0, c(o)
                                }).catch(function(p) {
                                    d(p)
                                })
                            })
                        }
                    }, {
                        key: "getSyncedCharts",
                        value: function() {
                            var a = this.getGroupedCharts(),
                                o = [this];
                            return a.length && (o = [], a.forEach(function(c) {
                                o.push(c)
                            })), o
                        }
                    }, {
                        key: "getGroupedCharts",
                        value: function() {
                            var a = this;
                            return Apex._chartInstances.filter(function(o) {
                                if (o.group) return !0
                            }).map(function(o) {
                                return a.w.config.chart.group === o.group ? o.chart : a
                            })
                        }
                    }, {
                        key: "toggleSeries",
                        value: function(a) {
                            return this.series.toggleSeries(a)
                        }
                    }, {
                        key: "highlightSeriesOnLegendHover",
                        value: function(a, o) {
                            return this.series.toggleSeriesOnHover(a, o)
                        }
                    }, {
                        key: "showSeries",
                        value: function(a) {
                            this.series.showSeries(a)
                        }
                    }, {
                        key: "hideSeries",
                        value: function(a) {
                            this.series.hideSeries(a)
                        }
                    }, {
                        key: "isSeriesHidden",
                        value: function(a) {
                            this.series.isSeriesHidden(a)
                        }
                    }, {
                        key: "resetSeries",
                        value: function() {
                            this.series.resetSeries(!(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1])
                        }
                    }, {
                        key: "addEventListener",
                        value: function(a, o) {
                            this.events.addEventListener(a, o)
                        }
                    }, {
                        key: "removeEventListener",
                        value: function(a, o) {
                            this.events.removeEventListener(a, o)
                        }
                    }, {
                        key: "addXaxisAnnotation",
                        value: function(a) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                                d = this;
                            c && (d = c), d.annotations.addXaxisAnnotationExternal(a, !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], d)
                        }
                    }, {
                        key: "addYaxisAnnotation",
                        value: function(a) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                                d = this;
                            c && (d = c), d.annotations.addYaxisAnnotationExternal(a, !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], d)
                        }
                    }, {
                        key: "addPointAnnotation",
                        value: function(a) {
                            var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                                d = this;
                            c && (d = c), d.annotations.addPointAnnotationExternal(a, !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], d)
                        }
                    }, {
                        key: "clearAnnotations",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0,
                                o = this;
                            a && (o = a), o.annotations.clearAnnotations(o)
                        }
                    }, {
                        key: "removeAnnotation",
                        value: function(a) {
                            var o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
                                c = this;
                            o && (c = o), c.annotations.removeAnnotation(c, a)
                        }
                    }, {
                        key: "getChartArea",
                        value: function() {
                            return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner")
                        }
                    }, {
                        key: "getSeriesTotalXRange",
                        value: function(a, o) {
                            return this.coreUtils.getSeriesTotalsXRange(a, o)
                        }
                    }, {
                        key: "getHighestValueInSeries",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                            return new Kn(this.ctx).getMinYMaxY(a).highestY
                        }
                    }, {
                        key: "getLowestValueInSeries",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                            return new Kn(this.ctx).getMinYMaxY(a).lowestY
                        }
                    }, {
                        key: "getSeriesTotal",
                        value: function() {
                            return this.w.globals.seriesTotals
                        }
                    }, {
                        key: "toggleDataPointSelection",
                        value: function(a, o) {
                            return this.updateHelpers.toggleDataPointSelection(a, o)
                        }
                    }, {
                        key: "zoomX",
                        value: function(a, o) {
                            this.ctx.toolbar.zoomUpdateOptions(a, o)
                        }
                    }, {
                        key: "setLocale",
                        value: function(a) {
                            this.localization.setCurrentLocaleValues(a)
                        }
                    }, {
                        key: "dataURI",
                        value: function(a) {
                            return new pn(this.ctx).dataURI(a)
                        }
                    }, {
                        key: "exportToCSV",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            return new pn(this.ctx).exportToCSV(a)
                        }
                    }, {
                        key: "paper",
                        value: function() {
                            return this.w.globals.dom.Paper
                        }
                    }, {
                        key: "_parentResizeCallback",
                        value: function() {
                            this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize()
                        }
                    }, {
                        key: "_windowResize",
                        value: function() {
                            var a = this;
                            clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout(function() {
                                a.w.globals.resized = !0, a.w.globals.dataChanged = !1, a.ctx.update()
                            }, 150)
                        }
                    }, {
                        key: "_windowResizeHandler",
                        value: function() {
                            var a = this.w.config.chart.redrawOnWindowResize;
                            "function" == typeof a && (a = a()), a && this._windowResize()
                        }
                    }], [{
                        key: "getChartByID",
                        value: function(a) {
                            var o = te.escapeString(a);
                            if (Apex._chartInstances) {
                                var c = Apex._chartInstances.filter(function(d) {
                                    return d.id === o
                                })[0];
                                return c && c.chart
                            }
                        }
                    }, {
                        key: "initOnLoad",
                        value: function() {
                            for (var a = document.querySelectorAll("[data-apexcharts]"), o = 0; o < a.length; o++) new K(a[o], JSON.parse(a[o].getAttribute("data-options"))).render()
                        }
                    }, {
                        key: "exec",
                        value: function(a, o) {
                            var c = this.getChartByID(a);
                            if (c) {
                                c.w.globals.isExecCalled = !0;
                                var d = null;
                                if (-1 !== c.publicMethods.indexOf(o)) {
                                    for (var f = arguments.length, p = new Array(f > 2 ? f - 2 : 0), m = 2; m < f; m++) p[m - 2] = arguments[m];
                                    d = c[o].apply(c, p)
                                }
                                return d
                            }
                        }
                    }, {
                        key: "merge",
                        value: function(a, o) {
                            return te.extend(a, o)
                        }
                    }]), K
                }();
            ft.exports = os
        },
        4989: ft => {
            "use strict";
            var G = "%[a-f0-9]{2}",
                I = new RegExp("(" + G + ")|([^%]+?)", "gi"),
                _e = new RegExp("(" + G + ")+", "gi");

            function Ee(U, se) {
                try {
                    return [decodeURIComponent(U.join(""))]
                } catch {}
                if (1 === U.length) return U;
                var z = U.slice(0, se = se || 1),
                    ie = U.slice(se);
                return Array.prototype.concat.call([], Ee(z), Ee(ie))
            }

            function ge(U) {
                try {
                    return decodeURIComponent(U)
                } catch {
                    for (var se = U.match(I) || [], z = 1; z < se.length; z++) se = (U = Ee(se, z).join("")).match(I) || [];
                    return U
                }
            }
            ft.exports = function(U) {
                if ("string" != typeof U) throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof U + "`");
                try {
                    return U = U.replace(/\+/g, " "), decodeURIComponent(U)
                } catch {
                    return function Ce(U) {
                        for (var se = {
                                "%FE%FF": "\ufffd\ufffd",
                                "%FF%FE": "\ufffd\ufffd"
                            }, z = _e.exec(U); z;) {
                            try {
                                se[z[0]] = decodeURIComponent(z[0])
                            } catch {
                                var ie = ge(z[0]);
                                ie !== z[0] && (se[z[0]] = ie)
                            }
                            z = _e.exec(U)
                        }
                        se["%C2"] = "\ufffd";
                        for (var ee = Object.keys(se), oe = 0; oe < ee.length; oe++) {
                            var ve = ee[oe];
                            U = U.replace(new RegExp(ve, "g"), se[ve])
                        }
                        return U
                    }(U)
                }
            }
        },
        1472: ft => {
            "use strict";
            var G = Object.prototype.hasOwnProperty,
                I = "~";

            function _e() {}

            function Ee(se, z, ie) {
                this.fn = se, this.context = z, this.once = ie || !1
            }

            function ge(se, z, ie, ee, oe) {
                if ("function" != typeof ie) throw new TypeError("The listener must be a function");
                var ve = new Ee(ie, ee || se, oe),
                    Te = I ? I + z : z;
                return se._events[Te] ? se._events[Te].fn ? se._events[Te] = [se._events[Te], ve] : se._events[Te].push(ve) : (se._events[Te] = ve, se._eventsCount++), se
            }

            function Ce(se, z) {
                0 == --se._eventsCount ? se._events = new _e : delete se._events[z]
            }

            function U() {
                this._events = new _e, this._eventsCount = 0
            }
            Object.create && (_e.prototype = Object.create(null), (new _e).__proto__ || (I = !1)), U.prototype.eventNames = function() {
                var ie, ee, z = [];
                if (0 === this._eventsCount) return z;
                for (ee in ie = this._events) G.call(ie, ee) && z.push(I ? ee.slice(1) : ee);
                return Object.getOwnPropertySymbols ? z.concat(Object.getOwnPropertySymbols(ie)) : z
            }, U.prototype.listeners = function(z) {
                var ee = this._events[I ? I + z : z];
                if (!ee) return [];
                if (ee.fn) return [ee.fn];
                for (var oe = 0, ve = ee.length, Te = new Array(ve); oe < ve; oe++) Te[oe] = ee[oe].fn;
                return Te
            }, U.prototype.listenerCount = function(z) {
                var ee = this._events[I ? I + z : z];
                return ee ? ee.fn ? 1 : ee.length : 0
            }, U.prototype.emit = function(z, ie, ee, oe, ve, Te) {
                var Me = I ? I + z : z;
                if (!this._events[Me]) return !1;
                var Ye, Je, Be = this._events[Me],
                    We = arguments.length;
                if (Be.fn) {
                    switch (Be.once && this.removeListener(z, Be.fn, void 0, !0), We) {
                        case 1:
                            return Be.fn.call(Be.context), !0;
                        case 2:
                            return Be.fn.call(Be.context, ie), !0;
                        case 3:
                            return Be.fn.call(Be.context, ie, ee), !0;
                        case 4:
                            return Be.fn.call(Be.context, ie, ee, oe), !0;
                        case 5:
                            return Be.fn.call(Be.context, ie, ee, oe, ve), !0;
                        case 6:
                            return Be.fn.call(Be.context, ie, ee, oe, ve, Te), !0
                    }
                    for (Je = 1, Ye = new Array(We - 1); Je < We; Je++) Ye[Je - 1] = arguments[Je];
                    Be.fn.apply(Be.context, Ye)
                } else {
                    var Pe, te = Be.length;
                    for (Je = 0; Je < te; Je++) switch (Be[Je].once && this.removeListener(z, Be[Je].fn, void 0, !0), We) {
                        case 1:
                            Be[Je].fn.call(Be[Je].context);
                            break;
                        case 2:
                            Be[Je].fn.call(Be[Je].context, ie);
                            break;
                        case 3:
                            Be[Je].fn.call(Be[Je].context, ie, ee);
                            break;
                        case 4:
                            Be[Je].fn.call(Be[Je].context, ie, ee, oe);
                            break;
                        default:
                            if (!Ye)
                                for (Pe = 1, Ye = new Array(We - 1); Pe < We; Pe++) Ye[Pe - 1] = arguments[Pe];
                            Be[Je].fn.apply(Be[Je].context, Ye)
                    }
                }
                return !0
            }, U.prototype.on = function(z, ie, ee) {
                return ge(this, z, ie, ee, !1)
            }, U.prototype.once = function(z, ie, ee) {
                return ge(this, z, ie, ee, !0)
            }, U.prototype.removeListener = function(z, ie, ee, oe) {
                var ve = I ? I + z : z;
                if (!this._events[ve]) return this;
                if (!ie) return Ce(this, ve), this;
                var Te = this._events[ve];
                if (Te.fn) Te.fn === ie && (!oe || Te.once) && (!ee || Te.context === ee) && Ce(this, ve);
                else {
                    for (var Me = 0, Be = [], We = Te.length; Me < We; Me++)(Te[Me].fn !== ie || oe && !Te[Me].once || ee && Te[Me].context !== ee) && Be.push(Te[Me]);
                    Be.length ? this._events[ve] = 1 === Be.length ? Be[0] : Be : Ce(this, ve)
                }
                return this
            }, U.prototype.removeAllListeners = function(z) {
                var ie;
                return z ? this._events[ie = I ? I + z : z] && Ce(this, ie) : (this._events = new _e, this._eventsCount = 0), this
            }, U.prototype.off = U.prototype.removeListener, U.prototype.addListener = U.prototype.on, U.prefixed = I, U.EventEmitter = U, ft.exports = U
        },
        220: ft => {
            "use strict";
            ft.exports = function(G, I) {
                for (var _e = {}, Ee = Object.keys(G), ge = Array.isArray(I), Ce = 0; Ce < Ee.length; Ce++) {
                    var U = Ee[Ce],
                        se = G[U];
                    (ge ? -1 !== I.indexOf(U) : I(U, se, G)) && (_e[U] = se)
                }
                return _e
            }
        },
        2178: ft => {
            "use strict";

            function G(Ee) {
                return Ee instanceof Buffer ? Buffer.from(Ee) : new Ee.constructor(Ee.buffer.slice(), Ee.byteOffset, Ee.length)
            }
            ft.exports = function I(Ee) {
                return (Ee = Ee || {}).circles ? function _e(Ee) {
                    var ge = [],
                        Ce = [];
                    return Ee.proto ? function z(ie) {
                        if ("object" != typeof ie || null === ie) return ie;
                        if (ie instanceof Date) return new Date(ie);
                        if (Array.isArray(ie)) return U(ie, z);
                        if (ie instanceof Map) return new Map(U(Array.from(ie), z));
                        if (ie instanceof Set) return new Set(U(Array.from(ie), z));
                        var ee = {};
                        for (var oe in ge.push(ie), Ce.push(ee), ie) {
                            var ve = ie[oe];
                            if ("object" != typeof ve || null === ve) ee[oe] = ve;
                            else if (ve instanceof Date) ee[oe] = new Date(ve);
                            else if (ve instanceof Map) ee[oe] = new Map(U(Array.from(ve), z));
                            else if (ve instanceof Set) ee[oe] = new Set(U(Array.from(ve), z));
                            else if (ArrayBuffer.isView(ve)) ee[oe] = G(ve);
                            else {
                                var Te = ge.indexOf(ve);
                                ee[oe] = -1 !== Te ? Ce[Te] : z(ve)
                            }
                        }
                        return ge.pop(), Ce.pop(), ee
                    } : function se(ie) {
                        if ("object" != typeof ie || null === ie) return ie;
                        if (ie instanceof Date) return new Date(ie);
                        if (Array.isArray(ie)) return U(ie, se);
                        if (ie instanceof Map) return new Map(U(Array.from(ie), se));
                        if (ie instanceof Set) return new Set(U(Array.from(ie), se));
                        var ee = {};
                        for (var oe in ge.push(ie), Ce.push(ee), ie)
                            if (!1 !== Object.hasOwnProperty.call(ie, oe)) {
                                var ve = ie[oe];
                                if ("object" != typeof ve || null === ve) ee[oe] = ve;
                                else if (ve instanceof Date) ee[oe] = new Date(ve);
                                else if (ve instanceof Map) ee[oe] = new Map(U(Array.from(ve), se));
                                else if (ve instanceof Set) ee[oe] = new Set(U(Array.from(ve), se));
                                else if (ArrayBuffer.isView(ve)) ee[oe] = G(ve);
                                else {
                                    var Te = ge.indexOf(ve);
                                    ee[oe] = -1 !== Te ? Ce[Te] : se(ve)
                                }
                            }
                        return ge.pop(), Ce.pop(), ee
                    };

                    function U(ie, ee) {
                        for (var oe = Object.keys(ie), ve = new Array(oe.length), Te = 0; Te < oe.length; Te++) {
                            var Me = oe[Te],
                                Be = ie[Me];
                            if ("object" != typeof Be || null === Be) ve[Me] = Be;
                            else if (Be instanceof Date) ve[Me] = new Date(Be);
                            else if (ArrayBuffer.isView(Be)) ve[Me] = G(Be);
                            else {
                                var We = ge.indexOf(Be);
                                ve[Me] = -1 !== We ? Ce[We] : ee(Be)
                            }
                        }
                        return ve
                    }
                }(Ee) : Ee.proto ? function U(se) {
                    if ("object" != typeof se || null === se) return se;
                    if (se instanceof Date) return new Date(se);
                    if (Array.isArray(se)) return ge(se, U);
                    if (se instanceof Map) return new Map(ge(Array.from(se), U));
                    if (se instanceof Set) return new Set(ge(Array.from(se), U));
                    var z = {};
                    for (var ie in se) {
                        var ee = se[ie];
                        z[ie] = "object" != typeof ee || null === ee ? ee : ee instanceof Date ? new Date(ee) : ee instanceof Map ? new Map(ge(Array.from(ee), U)) : ee instanceof Set ? new Set(ge(Array.from(ee), U)) : ArrayBuffer.isView(ee) ? G(ee) : U(ee)
                    }
                    return z
                } : function Ce(se) {
                    if ("object" != typeof se || null === se) return se;
                    if (se instanceof Date) return new Date(se);
                    if (Array.isArray(se)) return ge(se, Ce);
                    if (se instanceof Map) return new Map(ge(Array.from(se), Ce));
                    if (se instanceof Set) return new Set(ge(Array.from(se), Ce));
                    var z = {};
                    for (var ie in se)
                        if (!1 !== Object.hasOwnProperty.call(se, ie)) {
                            var ee = se[ie];
                            z[ie] = "object" != typeof ee || null === ee ? ee : ee instanceof Date ? new Date(ee) : ee instanceof Map ? new Map(ge(Array.from(ee), Ce)) : ee instanceof Set ? new Set(ge(Array.from(ee), Ce)) : ArrayBuffer.isView(ee) ? G(ee) : Ce(ee)
                        }
                    return z
                };

                function ge(se, z) {
                    for (var ie = Object.keys(se), ee = new Array(ie.length), oe = 0; oe < ie.length; oe++) {
                        var ve = ie[oe],
                            Te = se[ve];
                        ee[ve] = "object" != typeof Te || null === Te ? Te : Te instanceof Date ? new Date(Te) : ArrayBuffer.isView(Te) ? G(Te) : z(Te)
                    }
                    return ee
                }
            }
        },
        6144: ft => {
            "use strict";
            ft.exports = (G, I) => {
                if ("string" != typeof G || "string" != typeof I) throw new TypeError("Expected the arguments to be of type `string`");
                if ("" === I) return [G];
                const _e = G.indexOf(I);
                return -1 === _e ? [G] : [G.slice(0, _e), G.slice(_e + I.length)]
            }
        },
        8385: ft => {
            "use strict";
            ft.exports = G => encodeURIComponent(G).replace(/[!'()*]/g, I => `%${I.charCodeAt(0).toString(16).toUpperCase()}`)
        },
        3519: function(ft) {
            ft.exports = function() {
                "use strict";

                function I(Y) {
                    return (I = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(D) {
                        return typeof D
                    } : function(D) {
                        return D && "function" == typeof Symbol && D.constructor === Symbol && D !== Symbol.prototype ? "symbol" : typeof D
                    })(Y)
                }

                function _e(Y, D) {
                    if (!(Y instanceof D)) throw new TypeError("Cannot call a class as a function")
                }

                function Ee(Y, D) {
                    for (var P = 0; P < D.length; P++) {
                        var q = D[P];
                        q.enumerable = q.enumerable || !1, q.configurable = !0, "value" in q && (q.writable = !0), Object.defineProperty(Y, R(q.key), q)
                    }
                }

                function ge(Y, D, P) {
                    return D && Ee(Y.prototype, D), P && Ee(Y, P), Object.defineProperty(Y, "prototype", {
                        writable: !1
                    }), Y
                }

                function U(Y) {
                    return (U = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(P) {
                        return P.__proto__ || Object.getPrototypeOf(P)
                    })(Y)
                }

                function se(Y, D) {
                    return (se = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(q, Ne) {
                        return q.__proto__ = Ne, q
                    })(Y, D)
                }

                function z() {
                    if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0
                    } catch {
                        return !1
                    }
                }

                function ie(Y, D, P) {
                    return (ie = z() ? Reflect.construct.bind() : function(Ne, mt, Rt) {
                        var nn = [null];
                        nn.push.apply(nn, mt);
                        var mi = new(Function.bind.apply(Ne, nn));
                        return Rt && se(mi, Rt.prototype), mi
                    }).apply(null, arguments)
                }

                function oe(Y, D) {
                    if (D && ("object" == typeof D || "function" == typeof D)) return D;
                    if (void 0 !== D) throw new TypeError("Derived constructors may only return object or undefined");
                    return function ee(Y) {
                        if (void 0 === Y) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return Y
                    }(Y)
                }

                function Me() {
                    return Me = typeof Reflect < "u" && Reflect.get ? Reflect.get.bind() : function(D, P, q) {
                        var Ne = function Te(Y, D) {
                            for (; !Object.prototype.hasOwnProperty.call(Y, D) && null !== (Y = U(Y)););
                            return Y
                        }(D, P);
                        if (Ne) {
                            var mt = Object.getOwnPropertyDescriptor(Ne, P);
                            return mt.get ? mt.get.call(arguments.length < 3 ? D : q) : mt.value
                        }
                    }, Me.apply(this, arguments)
                }

                function Be(Y, D) {
                    return function Je(Y) {
                        if (Array.isArray(Y)) return Y
                    }(Y) || function G(Y, D) {
                        var P = null == Y ? null : typeof Symbol < "u" && Y[Symbol.iterator] || Y["@@iterator"];
                        if (null != P) {
                            var q, Ne, mt, Rt, nn = [],
                                $n = !0,
                                mi = !1;
                            try {
                                if (mt = (P = P.call(Y)).next, 0 === D) {
                                    if (Object(P) !== P) return;
                                    $n = !1
                                } else
                                    for (; !($n = (q = mt.call(P)).done) && (nn.push(q.value), nn.length !== D); $n = !0);
                            } catch (fo) {
                                mi = !0, Ne = fo
                            } finally {
                                try {
                                    if (!$n && null != P.return && (Rt = P.return(), Object(Rt) !== Rt)) return
                                } finally {
                                    if (mi) throw Ne
                                }
                            }
                            return nn
                        }
                    }(Y, D) || Pe(Y, D) || function Ie() {
                        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function We(Y) {
                    return function Ye(Y) {
                        if (Array.isArray(Y)) return Oe(Y)
                    }(Y) || function te(Y) {
                        if (typeof Symbol < "u" && null != Y[Symbol.iterator] || null != Y["@@iterator"]) return Array.from(Y)
                    }(Y) || Pe(Y) || function J() {
                        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }()
                }

                function Pe(Y, D) {
                    if (Y) {
                        if ("string" == typeof Y) return Oe(Y, D);
                        var P = Object.prototype.toString.call(Y).slice(8, -1);
                        if ("Object" === P && Y.constructor && (P = Y.constructor.name), "Map" === P || "Set" === P) return Array.from(Y);
                        if ("Arguments" === P || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(P)) return Oe(Y, D)
                    }
                }

                function Oe(Y, D) {
                    (null == D || D > Y.length) && (D = Y.length);
                    for (var P = 0, q = new Array(D); P < D; P++) q[P] = Y[P];
                    return q
                }

                function R(Y) {
                    var D = function Xe(Y, D) {
                        if ("object" != typeof Y || null === Y) return Y;
                        var P = Y[Symbol.toPrimitive];
                        if (void 0 !== P) {
                            var q = P.call(Y, D || "default");
                            if ("object" != typeof q) return q;
                            throw new TypeError("@@toPrimitive must return a primitive value.")
                        }
                        return ("string" === D ? String : Number)(Y)
                    }(Y, "string");
                    return "symbol" == typeof D ? D : String(D)
                }

                function ce(Y, D) {
                    return function tt(Y, D) {
                        return D.get ? D.get.call(Y) : D.value
                    }(Y, Ze(Y, D, "get"))
                }

                function Ve(Y, D, P) {
                    return function at(Y, D, P) {
                        if (D.set) D.set.call(Y, P);
                        else {
                            if (!D.writable) throw new TypeError("attempted to set read only private field");
                            D.value = P
                        }
                    }(Y, Ze(Y, D, "set"), P), P
                }

                function Ze(Y, D, P) {
                    if (!D.has(Y)) throw new TypeError("attempted to " + P + " private field on non-instance");
                    return D.get(Y)
                }

                function ct(Y, D, P) {
                    (function Ge(Y, D) {
                        if (D.has(Y)) throw new TypeError("Cannot initialize the same private elements twice on an object")
                    })(Y, D), D.set(Y, P)
                }
                var we = {},
                    _t = function(D) {
                        return new Promise(function(P) {
                            if (!D) return P();
                            var q = window.scrollX,
                                Ne = window.scrollY;
                            we.restoreFocusTimeout = setTimeout(function() {
                                we.previousActiveElement instanceof HTMLElement ? (we.previousActiveElement.focus(), we.previousActiveElement = null) : document.body && document.body.focus(), P()
                            }, 100), window.scrollTo(q, Ne)
                        })
                    },
                    He = ["container", "shown", "height-auto", "iosfix", "popup", "modal", "no-backdrop", "no-transition", "toast", "toast-shown", "show", "hide", "close", "title", "html-container", "actions", "confirm", "deny", "cancel", "default-outline", "footer", "icon", "icon-content", "image", "input", "file", "range", "select", "radio", "checkbox", "label", "textarea", "inputerror", "input-label", "validation-message", "progress-steps", "active-progress-step", "progress-step", "progress-step-line", "loader", "loading", "styled", "top", "top-start", "top-end", "top-left", "top-right", "center", "center-start", "center-end", "center-left", "center-right", "bottom", "bottom-start", "bottom-end", "bottom-left", "bottom-right", "grow-row", "grow-column", "grow-fullscreen", "rtl", "timer-progress-bar", "timer-progress-bar-container", "scrollbar-measure", "icon-success", "icon-warning", "icon-info", "icon-question", "icon-error"].reduce(function(Y, D) {
                        return Y[D] = "swal2-" + D, Y
                    }, {}),
                    Ft = ["success", "warning", "info", "question", "error"].reduce(function(Y, D) {
                        return Y[D] = "swal2-" + D, Y
                    }, {}),
                    Dt = "SweetAlert2:",
                    Ct = function(D) {
                        return D.charAt(0).toUpperCase() + D.slice(1)
                    },
                    Gt = function(D) {
                        console.warn("".concat(Dt, " ").concat("object" === I(D) ? D.join(" ") : D))
                    },
                    kt = function(D) {
                        console.error("".concat(Dt, " ").concat(D))
                    },
                    pn = [],
                    Hn = function(D, P) {
                        ! function(D) {
                            pn.includes(D) || (pn.push(D), Gt(D))
                        }('"'.concat(D, '" is deprecated and will be removed in the next major release. Please use "').concat(P, '" instead.'))
                    },
                    vn = function(D) {
                        return "function" == typeof D ? D() : D
                    },
                    Kn = function(D) {
                        return D && "function" == typeof D.toPromise
                    },
                    ts = function(D) {
                        return Kn(D) ? D.toPromise() : Promise.resolve(D)
                    },
                    Vs = function(D) {
                        return D && Promise.resolve(D) === D
                    },
                    Hi = function() {
                        return document.body.querySelector(".".concat(He.container))
                    },
                    Hs = function(D) {
                        var P = Hi();
                        return P ? P.querySelector(D) : null
                    },
                    ui = function(D) {
                        return Hs(".".concat(D))
                    },
                    Yn = function() {
                        return ui(He.popup)
                    },
                    ir = function() {
                        return ui(He.icon)
                    },
                    Ei = function() {
                        return ui(He.title)
                    },
                    Ii = function() {
                        return ui(He["html-container"])
                    },
                    Mi = function() {
                        return ui(He.image)
                    },
                    fi = function() {
                        return ui(He["progress-steps"])
                    },
                    yi = function() {
                        return ui(He["validation-message"])
                    },
                    oi = function() {
                        return Hs(".".concat(He.actions, " .").concat(He.confirm))
                    },
                    bi = function() {
                        return Hs(".".concat(He.actions, " .").concat(He.cancel))
                    },
                    qn = function() {
                        return Hs(".".concat(He.actions, " .").concat(He.deny))
                    },
                    xi = function() {
                        return Hs(".".concat(He.loader))
                    },
                    pi = function() {
                        return ui(He.actions)
                    },
                    Li = function() {
                        return ui(He.footer)
                    },
                    Fi = function() {
                        return ui(He["timer-progress-bar"])
                    },
                    Si = function() {
                        return ui(He.close)
                    },
                    Va = function() {
                        var D = Yn();
                        if (!D) return [];
                        var P = D.querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])'),
                            q = Array.from(P).sort(function(Rt, nn) {
                                var $n = parseInt(Rt.getAttribute("tabindex") || "0"),
                                    mi = parseInt(nn.getAttribute("tabindex") || "0");
                                return $n > mi ? 1 : $n < mi ? -1 : 0
                            }),
                            Ne = D.querySelectorAll('\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n'),
                            mt = Array.from(Ne).filter(function(Rt) {
                                return "-1" !== Rt.getAttribute("tabindex")
                            });
                        return We(new Set(q.concat(mt))).filter(function(Rt) {
                            return gn(Rt)
                        })
                    },
                    ro = function() {
                        return As(document.body, He.shown) && !As(document.body, He["toast-shown"]) && !As(document.body, He["no-backdrop"])
                    },
                    ya = function() {
                        var D = Yn();
                        return !!D && As(D, He.toast)
                    },
                    bs = function(D, P) {
                        if (D.textContent = "", P) {
                            var Ne = (new DOMParser).parseFromString(P, "text/html"),
                                mt = Ne.querySelector("head");
                            mt && Array.from(mt.childNodes).forEach(function(nn) {
                                D.appendChild(nn)
                            });
                            var Rt = Ne.querySelector("body");
                            Rt && Array.from(Rt.childNodes).forEach(function(nn) {
                                nn instanceof HTMLVideoElement || nn instanceof HTMLAudioElement ? D.appendChild(nn.cloneNode(!0)) : D.appendChild(nn)
                            })
                        }
                    },
                    As = function(D, P) {
                        if (!P) return !1;
                        for (var q = P.split(/\s+/), Ne = 0; Ne < q.length; Ne++)
                            if (!D.classList.contains(q[Ne])) return !1;
                        return !0
                    },
                    xs = function(D, P, q) {
                        if (function(D, P) {
                                Array.from(D.classList).forEach(function(q) {
                                    !Object.values(He).includes(q) && !Object.values(Ft).includes(q) && !Object.values(P.showClass || {}).includes(q) && D.classList.remove(q)
                                })
                            }(D, P), P.customClass && P.customClass[q]) {
                            if ("string" != typeof P.customClass[q] && !P.customClass[q].forEach) return void Gt("Invalid type of customClass.".concat(q, '! Expected string or iterable object, got "').concat(I(P.customClass[q]), '"'));
                            Un(D, P.customClass[q])
                        }
                    },
                    ea = function(D, P) {
                        if (!P) return null;
                        switch (P) {
                            case "select":
                            case "textarea":
                            case "file":
                                return D.querySelector(".".concat(He.popup, " > .").concat(He[P]));
                            case "checkbox":
                                return D.querySelector(".".concat(He.popup, " > .").concat(He.checkbox, " input"));
                            case "radio":
                                return D.querySelector(".".concat(He.popup, " > .").concat(He.radio, " input:checked")) || D.querySelector(".".concat(He.popup, " > .").concat(He.radio, " input:first-child"));
                            case "range":
                                return D.querySelector(".".concat(He.popup, " > .").concat(He.range, " input"));
                            default:
                                return D.querySelector(".".concat(He.popup, " > .").concat(He.input))
                        }
                    },
                    Ha = function(D) {
                        if (D.focus(), "file" !== D.type) {
                            var P = D.value;
                            D.value = "", D.value = P
                        }
                    },
                    ao = function(D, P, q) {
                        !D || !P || ("string" == typeof P && (P = P.split(/\s+/).filter(Boolean)), P.forEach(function(Ne) {
                            Array.isArray(D) ? D.forEach(function(mt) {
                                q ? mt.classList.add(Ne) : mt.classList.remove(Ne)
                            }) : q ? D.classList.add(Ne) : D.classList.remove(Ne)
                        }))
                    },
                    Un = function(D, P) {
                        ao(D, P, !0)
                    },
                    zs = function(D, P) {
                        ao(D, P, !1)
                    },
                    Ys = function(D, P) {
                        for (var q = Array.from(D.children), Ne = 0; Ne < q.length; Ne++) {
                            var mt = q[Ne];
                            if (mt instanceof HTMLElement && As(mt, P)) return mt
                        }
                    },
                    sr = function(D, P, q) {
                        q === "".concat(parseInt(q)) && (q = parseInt(q)), q || 0 === parseInt(q) ? D.style[P] = "number" == typeof q ? "".concat(q, "px") : q : D.style.removeProperty(P)
                    },
                    et = function(D) {
                        D && (D.style.display = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "flex")
                    },
                    st = function(D) {
                        D && (D.style.display = "none")
                    },
                    pt = function(D) {
                        var P = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "block";
                        D && new MutationObserver(function() {
                            Zt(D, D.innerHTML, P)
                        }).observe(D, {
                            childList: !0,
                            subtree: !0
                        })
                    },
                    Vt = function(D, P, q, Ne) {
                        var mt = D.querySelector(P);
                        mt && (mt.style[q] = Ne)
                    },
                    Zt = function(D, P) {
                        P ? et(D, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "flex") : st(D)
                    },
                    gn = function(D) {
                        return !(!D || !(D.offsetWidth || D.offsetHeight || D.getClientRects().length))
                    },
                    Ni = function(D) {
                        return D.scrollHeight > D.clientHeight
                    },
                    yr = function(D) {
                        var P = window.getComputedStyle(D),
                            q = parseFloat(P.getPropertyValue("animation-duration") || "0"),
                            Ne = parseFloat(P.getPropertyValue("transition-duration") || "0");
                        return q > 0 || Ne > 0
                    },
                    br = function(D) {
                        var P = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            q = Fi();
                        q && gn(q) && (P && (q.style.transition = "none", q.style.width = "100%"), setTimeout(function() {
                            q.style.transition = "width ".concat(D / 1e3, "s linear"), q.style.width = "0%"
                        }, 10))
                    },
                    ba = function() {
                        return typeof window > "u" || typeof document > "u"
                    },
                    zi = '\n <div aria-labelledby="'.concat(He.title, '" aria-describedby="').concat(He["html-container"], '" class="').concat(He.popup, '" tabindex="-1">\n   <button type="button" class="').concat(He.close, '"></button>\n   <ul class="').concat(He["progress-steps"], '"></ul>\n   <div class="').concat(He.icon, '"></div>\n   <img class="').concat(He.image, '" />\n   <h2 class="').concat(He.title, '" id="').concat(He.title, '"></h2>\n   <div class="').concat(He["html-container"], '" id="').concat(He["html-container"], '"></div>\n   <input class="').concat(He.input, '" id="').concat(He.input, '" />\n   <input type="file" class="').concat(He.file, '" />\n   <div class="').concat(He.range, '">\n     <input type="range" />\n     <output></output>\n   </div>\n   <select class="').concat(He.select, '" id="').concat(He.select, '"></select>\n   <div class="').concat(He.radio, '"></div>\n   <label class="').concat(He.checkbox, '">\n     <input type="checkbox" id="').concat(He.checkbox, '" />\n     <span class="').concat(He.label, '"></span>\n   </label>\n   <textarea class="').concat(He.textarea, '" id="').concat(He.textarea, '"></textarea>\n   <div class="').concat(He["validation-message"], '" id="').concat(He["validation-message"], '"></div>\n   <div class="').concat(He.actions, '">\n     <div class="').concat(He.loader, '"></div>\n     <button type="button" class="').concat(He.confirm, '"></button>\n     <button type="button" class="').concat(He.deny, '"></button>\n     <button type="button" class="').concat(He.cancel, '"></button>\n   </div>\n   <div class="').concat(He.footer, '"></div>\n   <div class="').concat(He["timer-progress-bar-container"], '">\n     <div class="').concat(He["timer-progress-bar"], '"></div>\n   </div>\n </div>\n').replace(/(^|\n)\s*/g, ""),
                    os = function() {
                        we.currentInstance.resetValidationMessage()
                    },
                    d = function(D) {
                        var P = function() {
                            var D = Hi();
                            return !!D && (D.remove(), zs([document.documentElement, document.body], [He["no-backdrop"], He["toast-shown"], He["has-column"]]), !0)
                        }();
                        if (ba()) kt("SweetAlert2 requires document to initialize");
                        else {
                            var q = document.createElement("div");
                            q.className = He.container, P && Un(q, He["no-transition"]), bs(q, zi);
                            var Ne = function(D) {
                                return "string" == typeof D ? document.querySelector(D) : D
                            }(D.target);
                            Ne.appendChild(q),
                                function(D) {
                                    var P = Yn();
                                    P.setAttribute("role", D.toast ? "alert" : "dialog"), P.setAttribute("aria-live", D.toast ? "polite" : "assertive"), D.toast || P.setAttribute("aria-modal", "true")
                                }(D),
                                function(D) {
                                    "rtl" === window.getComputedStyle(D).direction && Un(Hi(), He.rtl)
                                }(Ne),
                                function() {
                                    var D = Yn(),
                                        P = Ys(D, He.input),
                                        q = Ys(D, He.file),
                                        Ne = D.querySelector(".".concat(He.range, " input")),
                                        mt = D.querySelector(".".concat(He.range, " output")),
                                        Rt = Ys(D, He.select),
                                        nn = D.querySelector(".".concat(He.checkbox, " input")),
                                        $n = Ys(D, He.textarea);
                                    P.oninput = os, q.onchange = os, Rt.onchange = os, nn.onchange = os, $n.oninput = os, Ne.oninput = function() {
                                        os(), mt.value = Ne.value
                                    }, Ne.onchange = function() {
                                        os(), mt.value = Ne.value
                                    }
                                }()
                        }
                    },
                    f = function(D, P) {
                        D instanceof HTMLElement ? P.appendChild(D) : "object" === I(D) ? p(D, P) : D && bs(P, D)
                    },
                    p = function(D, P) {
                        D.jquery ? m(P, D) : bs(P, D.toString())
                    },
                    m = function(D, P) {
                        if (D.textContent = "", 0 in P)
                            for (var q = 0; q in P; q++) D.appendChild(P[q].cloneNode(!0));
                        else D.appendChild(P.cloneNode(!0))
                    },
                    y = function() {
                        if (ba()) return !1;
                        var Y = document.createElement("div");
                        return typeof Y.style.webkitAnimation < "u" ? "webkitAnimationEnd" : typeof Y.style.animation < "u" && "animationend"
                    }(),
                    x = function(D, P) {
                        var q = pi(),
                            Ne = xi();
                        !q || !Ne || (P.showConfirmButton || P.showDenyButton || P.showCancelButton ? et(q) : st(q), xs(q, P, "actions"), function w(Y, D, P) {
                            var q = oi(),
                                Ne = qn(),
                                mt = bi();
                            !q || !Ne || !mt || (T(q, "confirm", P), T(Ne, "deny", P), T(mt, "cancel", P), function S(Y, D, P, q) {
                                q.buttonsStyling ? (Un([Y, D, P], He.styled), q.confirmButtonColor && (Y.style.backgroundColor = q.confirmButtonColor, Un(Y, He["default-outline"])), q.denyButtonColor && (D.style.backgroundColor = q.denyButtonColor, Un(D, He["default-outline"])), q.cancelButtonColor && (P.style.backgroundColor = q.cancelButtonColor, Un(P, He["default-outline"]))) : zs([Y, D, P], He.styled)
                            }(q, Ne, mt, P), P.reverseButtons && (P.toast ? (Y.insertBefore(mt, q), Y.insertBefore(Ne, q)) : (Y.insertBefore(mt, D), Y.insertBefore(Ne, D), Y.insertBefore(q, D))))
                        }(q, Ne, P), bs(Ne, P.loaderHtml || ""), xs(Ne, P, "loader"))
                    };

                function T(Y, D, P) {
                    var q = Ct(D);
                    Zt(Y, P["show".concat(q, "Button")], "inline-block"), bs(Y, P["".concat(D, "ButtonText")] || ""), Y.setAttribute("aria-label", P["".concat(D, "ButtonAriaLabel")] || ""), Y.className = He[D], xs(Y, P, "".concat(D, "Button"))
                }
                var O = function(D, P) {
                    var q = Hi();
                    q && (function B(Y, D) {
                        "string" == typeof D ? Y.style.background = D : D || Un([document.documentElement, document.body], He["no-backdrop"])
                    }(q, P.backdrop), function $(Y, D) {
                        D && (D in He ? Un(Y, He[D]) : (Gt('The "position" parameter is not valid, defaulting to "center"'), Un(Y, He.center)))
                    }(q, P.position), function ne(Y, D) {
                        D && Un(Y, He["grow-".concat(D)])
                    }(q, P.grow), xs(q, P, "container"))
                };
                var re = {
                        innerParams: new WeakMap,
                        domCache: new WeakMap
                    },
                    b = ["input", "file", "range", "select", "radio", "checkbox", "textarea"],
                    F = function(D) {
                        if (D.input) {
                            if (!dt[D.input]) return void kt("Unexpected type of input! Expected ".concat(Object.keys(dt).join(" | "), ', got "').concat(D.input, '"'));
                            var P = nt(D.input),
                                q = dt[D.input](P, D);
                            et(P), D.inputAutoFocus && setTimeout(function() {
                                Ha(q)
                            })
                        }
                    },
                    be = function(D, P) {
                        var q = ea(Yn(), D);
                        if (q)
                            for (var Ne in function(D) {
                                    for (var P = 0; P < D.attributes.length; P++) {
                                        var q = D.attributes[P].name;
                                        ["id", "type", "value", "style"].includes(q) || D.removeAttribute(q)
                                    }
                                }(q), P) q.setAttribute(Ne, P[Ne])
                    },
                    Se = function(D) {
                        var P = nt(D.input);
                        "object" === I(D.customClass) && Un(P, D.customClass.input)
                    },
                    Le = function(D, P) {
                        (!D.placeholder || P.inputPlaceholder) && (D.placeholder = P.inputPlaceholder)
                    },
                    ze = function(D, P, q) {
                        if (q.inputLabel) {
                            var Ne = document.createElement("label"),
                                mt = He["input-label"];
                            Ne.setAttribute("for", D.id), Ne.className = mt, "object" === I(q.customClass) && Un(Ne, q.customClass.inputLabel), Ne.innerText = q.inputLabel, P.insertAdjacentElement("beforebegin", Ne)
                        }
                    },
                    nt = function(D) {
                        return Ys(Yn(), He[D] || He.input)
                    },
                    yt = function(D, P) {
                        ["string", "number"].includes(I(P)) ? D.value = "".concat(P) : Vs(P) || Gt('Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(I(P), '"'))
                    },
                    dt = {};
                dt.text = dt.email = dt.password = dt.number = dt.tel = dt.url = dt.search = dt.date = dt["datetime-local"] = dt.time = dt.week = dt.month = function(Y, D) {
                    return yt(Y, D.inputValue), ze(Y, Y, D), Le(Y, D), Y.type = D.input, Y
                }, dt.file = function(Y, D) {
                    return ze(Y, Y, D), Le(Y, D), Y
                }, dt.range = function(Y, D) {
                    var P = Y.querySelector("input"),
                        q = Y.querySelector("output");
                    return yt(P, D.inputValue), P.type = D.input, yt(q, D.inputValue), ze(P, Y, D), Y
                }, dt.select = function(Y, D) {
                    if (Y.textContent = "", D.inputPlaceholder) {
                        var P = document.createElement("option");
                        bs(P, D.inputPlaceholder), P.value = "", P.disabled = !0, P.selected = !0, Y.appendChild(P)
                    }
                    return ze(Y, Y, D), Y
                }, dt.radio = function(Y) {
                    return Y.textContent = "", Y
                }, dt.checkbox = function(Y, D) {
                    var P = ea(Yn(), "checkbox");
                    P.value = "1", P.checked = !!D.inputValue;
                    var q = Y.querySelector("span");
                    return bs(q, D.inputPlaceholder), P
                }, dt.textarea = function(Y, D) {
                    yt(Y, D.inputValue), Le(Y, D), ze(Y, Y, D);
                    return setTimeout(function() {
                        if ("MutationObserver" in window) {
                            var q = parseInt(window.getComputedStyle(Yn()).width);
                            new MutationObserver(function() {
                                if (document.body.contains(Y)) {
                                    var Rt = Y.offsetWidth + (Ne = Y, parseInt(window.getComputedStyle(Ne).marginLeft) + parseInt(window.getComputedStyle(Ne).marginRight));
                                    Rt > q ? Yn().style.width = "".concat(Rt, "px") : sr(Yn(), "width", D.width)
                                }
                                var Ne
                            }).observe(Y, {
                                attributes: !0,
                                attributeFilter: ["style"]
                            })
                        }
                    }), Y
                };
                var Tt = function(D, P) {
                        var q = Ii();
                        q && (pt(q), xs(q, P, "htmlContainer"), P.html ? (f(P.html, q), et(q, "block")) : P.text ? (q.textContent = P.text, et(q, "block")) : st(q), function(D, P) {
                            var q = Yn();
                            if (q) {
                                var Ne = re.innerParams.get(D),
                                    mt = !Ne || P.input !== Ne.input;
                                b.forEach(function(Rt) {
                                    var nn = Ys(q, He[Rt]);
                                    nn && (be(Rt, P.inputAttributes), nn.className = He[Rt], mt && st(nn))
                                }), P.input && (mt && F(P), Se(P))
                            }
                        }(D, P))
                    },
                    Jt = function(D, P) {
                        for (var q = 0, Ne = Object.entries(Ft); q < Ne.length; q++) {
                            var mt = Be(Ne[q], 2);
                            P.icon !== mt[0] && zs(D, mt[1])
                        }
                        Un(D, P.icon && Ft[P.icon]), qe(D, P), Qn(), xs(D, P, "icon")
                    },
                    Qn = function() {
                        var D = Yn();
                        if (D)
                            for (var P = window.getComputedStyle(D).getPropertyValue("background-color"), q = D.querySelectorAll("[class^=swal2-success-circular-line], .swal2-success-fix"), Ne = 0; Ne < q.length; Ne++) q[Ne].style.backgroundColor = P
                    },
                    Ke = function(D, P) {
                        if (P.icon || P.iconHtml) {
                            var q = D.innerHTML,
                                Ne = "";
                            P.iconHtml ? Ne = gt(P.iconHtml) : "success" === P.icon ? (Ne = '\n  <div class="swal2-success-circular-line-left"></div>\n  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n  <div class="swal2-success-circular-line-right"></div>\n', q = q.replace(/ style=".*?"/g, "")) : "error" === P.icon ? Ne = '\n  <span class="swal2-x-mark">\n    <span class="swal2-x-mark-line-left"></span>\n    <span class="swal2-x-mark-line-right"></span>\n  </span>\n' : P.icon && (Ne = gt({
                                question: "?",
                                warning: "!",
                                info: "i"
                            }[P.icon])), q.trim() !== Ne.trim() && bs(D, Ne)
                        }
                    },
                    qe = function(D, P) {
                        if (P.iconColor) {
                            D.style.color = P.iconColor, D.style.borderColor = P.iconColor;
                            for (var q = 0, Ne = [".swal2-success-line-tip", ".swal2-success-line-long", ".swal2-x-mark-line-left", ".swal2-x-mark-line-right"]; q < Ne.length; q++) Vt(D, Ne[q], "backgroundColor", P.iconColor);
                            Vt(D, ".swal2-success-ring", "borderColor", P.iconColor)
                        }
                    },
                    gt = function(D) {
                        return '<div class="'.concat(He["icon-content"], '">').concat(D, "</div>")
                    },
                    Fn = function(D, P) {
                        var q = P.showClass || {};
                        D.className = "".concat(He.popup, " ").concat(gn(D) ? q.popup : ""), P.toast ? (Un([document.documentElement, document.body], He["toast-shown"]), Un(D, He.toast)) : Un(D, He.modal), xs(D, P, "popup"), "string" == typeof P.customClass && Un(D, P.customClass), P.icon && Un(D, He["icon-".concat(P.icon)])
                    },
                    gi = function(D) {
                        var P = document.createElement("li");
                        return Un(P, He["progress-step"]), bs(P, D), P
                    },
                    Vo = function(D) {
                        var P = document.createElement("li");
                        return Un(P, He["progress-step-line"]), D.progressStepsDistance && sr(P, "width", D.progressStepsDistance), P
                    },
                    oo = function(D, P) {
                        (function(D, P) {
                            var q = Hi(),
                                Ne = Yn();
                            if (q && Ne) {
                                if (P.toast) {
                                    sr(q, "width", P.width), Ne.style.width = "100%";
                                    var mt = xi();
                                    mt && Ne.insertBefore(mt, ir())
                                } else sr(Ne, "width", P.width);
                                sr(Ne, "padding", P.padding), P.color && (Ne.style.color = P.color), P.background && (Ne.style.background = P.background), st(yi()), Fn(Ne, P)
                            }
                        })(0, P), O(0, P),
                            function(D, P) {
                                var q = fi();
                                if (q) {
                                    var Ne = P.progressSteps,
                                        mt = P.currentProgressStep;
                                    if (!Ne || 0 === Ne.length || void 0 === mt) return void st(q);
                                    et(q), q.textContent = "", mt >= Ne.length && Gt("Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"), Ne.forEach(function(Rt, nn) {
                                        var $n = gi(Rt);
                                        if (q.appendChild($n), nn === mt && Un($n, He["active-progress-step"]), nn !== Ne.length - 1) {
                                            var mi = Vo(P);
                                            q.appendChild(mi)
                                        }
                                    })
                                }
                            }(0, P),
                            function(D, P) {
                                var q = re.innerParams.get(D),
                                    Ne = ir();
                                if (Ne) {
                                    if (q && P.icon === q.icon) return Ke(Ne, P), void Jt(Ne, P);
                                    if (!P.icon && !P.iconHtml) return void st(Ne);
                                    if (P.icon && -1 === Object.keys(Ft).indexOf(P.icon)) return kt('Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(P.icon, '"')), void st(Ne);
                                    et(Ne), Ke(Ne, P), Jt(Ne, P), Un(Ne, P.showClass && P.showClass.icon)
                                }
                            }(D, P),
                            function(D, P) {
                                var q = Mi();
                                if (q) {
                                    if (!P.imageUrl) return void st(q);
                                    et(q, ""), q.setAttribute("src", P.imageUrl), q.setAttribute("alt", P.imageAlt || ""), sr(q, "width", P.imageWidth), sr(q, "height", P.imageHeight), q.className = He.image, xs(q, P, "image")
                                }
                            }(0, P),
                            function(D, P) {
                                var q = Ei();
                                q && (pt(q), Zt(q, P.title || P.titleText, "block"), P.title && f(P.title, q), P.titleText && (q.innerText = P.titleText), xs(q, P, "title"))
                            }(0, P),
                            function(D, P) {
                                var q = Si();
                                q && (bs(q, P.closeButtonHtml || ""), xs(q, P, "closeButton"), Zt(q, P.showCloseButton), q.setAttribute("aria-label", P.closeButtonAriaLabel || ""))
                            }(0, P), Tt(D, P), x(0, P),
                            function(D, P) {
                                var q = Li();
                                q && (pt(q), Zt(q, P.footer, "block"), P.footer && f(P.footer, q), xs(q, P, "footer"))
                            }(0, P);
                        var q = Yn();
                        "function" == typeof P.didRender && q && P.didRender(q)
                    },
                    Jd = function() {
                        var D;
                        return null === (D = oi()) || void 0 === D ? void 0 : D.click()
                    },
                    xr = Object.freeze({
                        cancel: "cancel",
                        backdrop: "backdrop",
                        close: "close",
                        esc: "esc",
                        timer: "timer"
                    }),
                    ar = function(D) {
                        D.keydownTarget && D.keydownHandlerAdded && (D.keydownTarget.removeEventListener("keydown", D.keydownHandler, {
                            capture: D.keydownListenerCapture
                        }), D.keydownHandlerAdded = !1)
                    },
                    or = function(D, P) {
                        var q, Ne = Va();
                        if (Ne.length) return (D += P) === Ne.length ? D = 0 : -1 === D && (D = Ne.length - 1), void Ne[D].focus();
                        null === (q = Yn()) || void 0 === q || q.focus()
                    },
                    lr = ["ArrowRight", "ArrowDown"],
                    es = ["ArrowLeft", "ArrowUp"],
                    an = function(D, P, q) {
                        D && (P.isComposing || 229 === P.keyCode || (D.stopKeydownPropagation && P.stopPropagation(), "Enter" === P.key ? Vr(P, D) : "Tab" === P.key ? xa(P) : [].concat(lr, es).includes(P.key) ? cc(P.key) : "Escape" === P.key && Et(P, D, q)))
                    },
                    Vr = function(D, P) {
                        if (vn(P.allowEnterKey)) {
                            var q = ea(Yn(), P.input);
                            if (D.target && q && D.target instanceof HTMLElement && D.target.outerHTML === q.outerHTML) {
                                if (["textarea", "file"].includes(P.input)) return;
                                Jd(), D.preventDefault()
                            }
                        }
                    },
                    xa = function(D) {
                        for (var P = D.target, q = Va(), Ne = -1, mt = 0; mt < q.length; mt++)
                            if (P === q[mt]) {
                                Ne = mt;
                                break
                            }
                        or(Ne, D.shiftKey ? -1 : 1), D.stopPropagation(), D.preventDefault()
                    },
                    cc = function(D) {
                        var P = pi(),
                            q = oi(),
                            Ne = qn(),
                            mt = bi();
                        if (P && q && Ne && mt && (!(document.activeElement instanceof HTMLElement) || [q, Ne, mt].includes(document.activeElement))) {
                            var nn = lr.includes(D) ? "nextElementSibling" : "previousElementSibling",
                                $n = document.activeElement;
                            if ($n) {
                                for (var mi = 0; mi < P.children.length; mi++) {
                                    if (!($n = $n[nn])) return;
                                    if ($n instanceof HTMLButtonElement && gn($n)) break
                                }
                                $n instanceof HTMLButtonElement && $n.focus()
                            }
                        }
                    },
                    Et = function(D, P, q) {
                        vn(P.allowEscapeKey) && (D.preventDefault(), q(xr.esc))
                    },
                    uc = {
                        swalPromiseResolve: new WeakMap,
                        swalPromiseReject: new WeakMap
                    },
                    dc = function() {
                        Array.from(document.body.children).forEach(function(P) {
                            P.hasAttribute("data-previous-aria-hidden") ? (P.setAttribute("aria-hidden", P.getAttribute("data-previous-aria-hidden") || ""), P.removeAttribute("data-previous-aria-hidden")) : P.removeAttribute("aria-hidden")
                        })
                    },
                    Mp = typeof window < "u" && !!window.GestureEvent,
                    f0 = function() {
                        var P, D = Hi();
                        D && (D.ontouchstart = function(q) {
                            P = fu(q)
                        }, D.ontouchmove = function(q) {
                            P && (q.preventDefault(), q.stopPropagation())
                        })
                    },
                    fu = function(D) {
                        var P = D.target,
                            q = Hi(),
                            Ne = Ii();
                        return !(!q || !Ne || pu(D) || eh(D) || P !== q && (Ni(q) || !(P instanceof HTMLElement) || "INPUT" === P.tagName || "TEXTAREA" === P.tagName || Ni(Ne) && Ne.contains(P)))
                    },
                    pu = function(D) {
                        return D.touches && D.touches.length && "stylus" === D.touches[0].touchType
                    },
                    eh = function(D) {
                        return D.touches && D.touches.length > 1
                    },
                    Rn = null,
                    th = function(D) {
                        null === Rn && (document.body.scrollHeight > window.innerHeight || "scroll" === D) && (Rn = parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right")), document.body.style.paddingRight = "".concat(Rn + function() {
                            var D = document.createElement("div");
                            D.className = He["scrollbar-measure"], document.body.appendChild(D);
                            var P = D.getBoundingClientRect().width - D.clientWidth;
                            return document.body.removeChild(D), P
                        }(), "px"))
                    };

                function Zs(Y, D, P, q) {
                    ya() ? sh(Y, q) : (_t(P).then(function() {
                            return sh(Y, q)
                        }), ar(we)), Mp ? (D.setAttribute("style", "display:none !important"), D.removeAttribute("class"), D.innerHTML = "") : D.remove(), ro() && (null !== Rn && (document.body.style.paddingRight = "".concat(Rn, "px"), Rn = null), function() {
                            if (As(document.body, He.iosfix)) {
                                var D = parseInt(document.body.style.top, 10);
                                zs(document.body, He.iosfix), document.body.style.top = "", document.body.scrollTop = -1 * D
                            }
                        }(), dc()),
                        function Lp() {
                            zs([document.documentElement, document.body], [He.shown, He["height-auto"], He["no-backdrop"], He["toast-shown"]])
                        }()
                }

                function Ho(Y) {
                    Y = zt(Y);
                    var D = uc.swalPromiseResolve.get(this),
                        P = $i(this);
                    this.isAwaitingPromise ? Y.isDismissed || (gu(this), D(Y)) : P && D(Y)
                }
                var $i = function(D) {
                    var P = Yn();
                    if (!P) return !1;
                    var q = re.innerParams.get(D);
                    if (!q || As(P, q.hideClass.popup)) return !1;
                    zs(P, q.showClass.popup), Un(P, q.hideClass.popup);
                    var Ne = Hi();
                    return zs(Ne, q.showClass.backdrop), Un(Ne, q.hideClass.backdrop), nh(D, P, q), !0
                };

                function g0(Y) {
                    var D = uc.swalPromiseReject.get(this);
                    gu(this), D && D(Y)
                }
                var gu = function(D) {
                        D.isAwaitingPromise && (delete D.isAwaitingPromise, re.innerParams.get(D) || D._destroy())
                    },
                    zt = function(D) {
                        return typeof D > "u" ? {
                            isConfirmed: !1,
                            isDenied: !1,
                            isDismissed: !0
                        } : Object.assign({
                            isConfirmed: !1,
                            isDenied: !1,
                            isDismissed: !1
                        }, D)
                    },
                    nh = function(D, P, q) {
                        var Ne = Hi(),
                            mt = y && yr(P);
                        "function" == typeof q.willClose && q.willClose(P), mt ? ih(D, P, Ne, q.returnFocus, q.didClose) : Zs(D, Ne, q.returnFocus, q.didClose)
                    },
                    ih = function(D, P, q, Ne, mt) {
                        y && (we.swalCloseEventFinishedCallback = Zs.bind(null, D, q, Ne, mt), P.addEventListener(y, function(Rt) {
                            Rt.target === P && (we.swalCloseEventFinishedCallback(), delete we.swalCloseEventFinishedCallback)
                        }))
                    },
                    sh = function(D, P) {
                        setTimeout(function() {
                            "function" == typeof P && P.bind(D.params)(), D._destroy && D._destroy()
                        })
                    },
                    lo = function(D) {
                        var P = Yn();
                        if (P || new xc, P = Yn()) {
                            var q = xi();
                            ya() ? st(ir()) : m0(P, D), et(q), P.setAttribute("data-loading", "true"), P.setAttribute("aria-busy", "true"), P.focus()
                        }
                    },
                    m0 = function(D, P) {
                        var q = pi(),
                            Ne = xi();
                        !q || !Ne || (!P && gn(oi()) && (P = oi()), et(q), P && (st(P), Ne.setAttribute("data-button-to-replace", P.className), q.insertBefore(Ne, P)), Un([D, q], He.loading))
                    },
                    uD = function(D) {
                        return D.checked ? 1 : 0
                    },
                    dD = function(D) {
                        return D.checked ? D.value : null
                    },
                    hD = function(D) {
                        return D.files && D.files.length ? null !== D.getAttribute("multiple") ? D.files : D.files[0] : null
                    },
                    fD = function(D, P) {
                        var q = Yn();
                        if (q) {
                            var Ne = function(Rt) {
                                "select" === P.input ? function ah(Y, D, P) {
                                    var q = Ys(Y, He.select);
                                    if (q) {
                                        var Ne = function(Rt, nn, $n) {
                                            var mi = document.createElement("option");
                                            mi.value = $n, bs(mi, nn), mi.selected = Np($n, P.inputValue), Rt.appendChild(mi)
                                        };
                                        D.forEach(function(mt) {
                                            var Rt = mt[0],
                                                nn = mt[1];
                                            if (Array.isArray(nn)) {
                                                var $n = document.createElement("optgroup");
                                                $n.label = Rt, $n.disabled = !1, q.appendChild($n), nn.forEach(function(mi) {
                                                    return Ne($n, mi[1], mi[0])
                                                })
                                            } else Ne(q, nn, Rt)
                                        }), q.focus()
                                    }
                                }(q, Fp(Rt), P) : "radio" === P.input && function mu(Y, D, P) {
                                    var q = Ys(Y, He.radio);
                                    if (q) {
                                        D.forEach(function(mt) {
                                            var Rt = mt[0],
                                                nn = mt[1],
                                                $n = document.createElement("input"),
                                                mi = document.createElement("label");
                                            $n.type = "radio", $n.name = He.radio, $n.value = Rt, Np(Rt, P.inputValue) && ($n.checked = !0);
                                            var fo = document.createElement("span");
                                            bs(fo, nn), fo.className = He.label, mi.appendChild($n), mi.appendChild(fo), q.appendChild(mi)
                                        });
                                        var Ne = q.querySelectorAll("input");
                                        Ne.length && Ne[0].focus()
                                    }
                                }(q, Fp(Rt), P)
                            };
                            Kn(P.inputOptions) || Vs(P.inputOptions) ? (lo(oi()), ts(P.inputOptions).then(function(mt) {
                                D.hideLoading(), Ne(mt)
                            })) : "object" === I(P.inputOptions) ? Ne(P.inputOptions) : kt("Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(I(P.inputOptions)))
                        }
                    },
                    hc = function(D, P) {
                        var q = D.getInput();
                        q && (st(q), ts(P.inputValue).then(function(Ne) {
                            q.value = "".concat("number" === P.input ? parseFloat(Ne) || 0 : Ne), et(q), q.focus(), D.hideLoading()
                        }).catch(function(Ne) {
                            kt("Error in inputValue promise: ".concat(Ne)), q.value = "", et(q), q.focus(), D.hideLoading()
                        }))
                    };
                var Fp = function Y(D) {
                        var P = [];
                        return D instanceof Map ? D.forEach(function(q, Ne) {
                            var mt = q;
                            "object" === I(mt) && (mt = Y(mt)), P.push([Ne, mt])
                        }) : Object.keys(D).forEach(function(q) {
                            var Ne = D[q];
                            "object" === I(Ne) && (Ne = Y(Ne)), P.push([q, Ne])
                        }), P
                    },
                    Np = function(D, P) {
                        return !!P && P.toString() === D.toString()
                    },
                    vu = void 0,
                    za = function(D, P) {
                        var q = re.innerParams.get(D);
                        if (q.input) {
                            var Ne = D.getInput(),
                                mt = function(D, P) {
                                    var q = D.getInput();
                                    if (!q) return null;
                                    switch (P.input) {
                                        case "checkbox":
                                            return uD(q);
                                        case "radio":
                                            return dD(q);
                                        case "file":
                                            return hD(q);
                                        default:
                                            return P.inputAutoTrim ? q.value.trim() : q.value
                                    }
                                }(D, q);
                            q.inputValidator ? y0(D, mt, P) : Ne && !Ne.checkValidity() ? (D.enableButtons(), D.showValidationMessage(q.validationMessage)) : "deny" === P ? vt(D, mt) : Cl(D, mt)
                        } else kt('The "input" parameter is needed to be set when using returnInputValueOn'.concat(Ct(P)))
                    },
                    y0 = function(D, P, q) {
                        var Ne = re.innerParams.get(D);
                        D.disableInput(), Promise.resolve().then(function() {
                            return ts(Ne.inputValidator(P, Ne.validationMessage))
                        }).then(function(Rt) {
                            D.enableButtons(), D.enableInput(), Rt ? D.showValidationMessage(Rt) : "deny" === q ? vt(D, P) : Cl(D, P)
                        })
                    },
                    vt = function(D, P) {
                        var q = re.innerParams.get(D || vu);
                        q.showLoaderOnDeny && lo(qn()), q.preDeny ? (D.isAwaitingPromise = !0, Promise.resolve().then(function() {
                            return ts(q.preDeny(P, q.validationMessage))
                        }).then(function(mt) {
                            !1 === mt ? (D.hideLoading(), gu(D)) : D.close({
                                isDenied: !0,
                                value: typeof mt > "u" ? P : mt
                            })
                        }).catch(function(mt) {
                            return Xt(D || vu, mt)
                        })) : D.close({
                            isDenied: !0,
                            value: P
                        })
                    },
                    oh = function(D, P) {
                        D.close({
                            isConfirmed: !0,
                            value: P
                        })
                    },
                    Xt = function(D, P) {
                        D.rejectPromise(P)
                    },
                    Cl = function(D, P) {
                        var q = re.innerParams.get(D || vu);
                        q.showLoaderOnConfirm && lo(), q.preConfirm ? (D.resetValidationMessage(), D.isAwaitingPromise = !0, Promise.resolve().then(function() {
                            return ts(q.preConfirm(P, q.validationMessage))
                        }).then(function(mt) {
                            gn(yi()) || !1 === mt ? (D.hideLoading(), gu(D)) : oh(D, typeof mt > "u" ? P : mt)
                        }).catch(function(mt) {
                            return Xt(D || vu, mt)
                        })) : oh(D, P)
                    };

                function Sl() {
                    var Y = re.innerParams.get(this);
                    if (Y) {
                        var D = re.domCache.get(this);
                        st(D.loader), ya() ? Y.icon && et(ir()) : fc(D), zs([D.popup, D.actions], He.loading), D.popup.removeAttribute("aria-busy"), D.popup.removeAttribute("data-loading"), D.confirmButton.disabled = !1, D.denyButton.disabled = !1, D.cancelButton.disabled = !1
                    }
                }
                var fc = function(D) {
                    var P = D.popup.getElementsByClassName(D.loader.getAttribute("data-button-to-replace"));
                    P.length ? et(P[0], "inline-block") : !gn(oi()) && !gn(qn()) && !gn(bi()) && st(D.actions)
                };

                function Bp() {
                    var Y = re.innerParams.get(this),
                        D = re.domCache.get(this);
                    return D ? ea(D.popup, Y.input) : null
                }

                function Vp(Y, D, P) {
                    var q = re.domCache.get(Y);
                    D.forEach(function(Ne) {
                        q[Ne].disabled = P
                    })
                }

                function Hp(Y, D) {
                    var P = Yn();
                    if (P && Y)
                        if ("radio" === Y.type)
                            for (var q = P.querySelectorAll('[name="'.concat(He.radio, '"]')), Ne = 0; Ne < q.length; Ne++) q[Ne].disabled = D;
                        else Y.disabled = D
                }

                function _a() {
                    Vp(this, ["confirmButton", "denyButton", "cancelButton"], !1)
                }

                function pc() {
                    Vp(this, ["confirmButton", "denyButton", "cancelButton"], !0)
                }

                function _r() {
                    Hp(this.getInput(), !1)
                }

                function na() {
                    Hp(this.getInput(), !0)
                }

                function li(Y) {
                    var D = re.domCache.get(this),
                        P = re.innerParams.get(this);
                    bs(D.validationMessage, Y), D.validationMessage.className = He["validation-message"], P.customClass && P.customClass.validationMessage && Un(D.validationMessage, P.customClass.validationMessage), et(D.validationMessage);
                    var q = this.getInput();
                    q && (q.setAttribute("aria-invalid", "true"), q.setAttribute("aria-describedby", He["validation-message"]), Ha(q), Un(q, He.inputerror))
                }

                function gc() {
                    var Y = re.domCache.get(this);
                    Y.validationMessage && st(Y.validationMessage);
                    var D = this.getInput();
                    D && (D.removeAttribute("aria-invalid"), D.removeAttribute("aria-describedby"), zs(D, He.inputerror))
                }
                var co = {
                        title: "",
                        titleText: "",
                        text: "",
                        html: "",
                        footer: "",
                        icon: void 0,
                        iconColor: void 0,
                        iconHtml: void 0,
                        template: void 0,
                        toast: !1,
                        animation: !0,
                        showClass: {
                            popup: "swal2-show",
                            backdrop: "swal2-backdrop-show",
                            icon: "swal2-icon-show"
                        },
                        hideClass: {
                            popup: "swal2-hide",
                            backdrop: "swal2-backdrop-hide",
                            icon: "swal2-icon-hide"
                        },
                        customClass: {},
                        target: "body",
                        color: void 0,
                        backdrop: !0,
                        heightAuto: !0,
                        allowOutsideClick: !0,
                        allowEscapeKey: !0,
                        allowEnterKey: !0,
                        stopKeydownPropagation: !0,
                        keydownListenerCapture: !1,
                        showConfirmButton: !0,
                        showDenyButton: !1,
                        showCancelButton: !1,
                        preConfirm: void 0,
                        preDeny: void 0,
                        confirmButtonText: "OK",
                        confirmButtonAriaLabel: "",
                        confirmButtonColor: void 0,
                        denyButtonText: "No",
                        denyButtonAriaLabel: "",
                        denyButtonColor: void 0,
                        cancelButtonText: "Cancel",
                        cancelButtonAriaLabel: "",
                        cancelButtonColor: void 0,
                        buttonsStyling: !0,
                        reverseButtons: !1,
                        focusConfirm: !0,
                        focusDeny: !1,
                        focusCancel: !1,
                        returnFocus: !0,
                        showCloseButton: !1,
                        closeButtonHtml: "&times;",
                        closeButtonAriaLabel: "Close this dialog",
                        loaderHtml: "",
                        showLoaderOnConfirm: !1,
                        showLoaderOnDeny: !1,
                        imageUrl: void 0,
                        imageWidth: void 0,
                        imageHeight: void 0,
                        imageAlt: "",
                        timer: void 0,
                        timerProgressBar: !1,
                        width: void 0,
                        padding: void 0,
                        background: void 0,
                        input: void 0,
                        inputPlaceholder: "",
                        inputLabel: "",
                        inputValue: "",
                        inputOptions: {},
                        inputAutoFocus: !0,
                        inputAutoTrim: !0,
                        inputAttributes: {},
                        inputValidator: void 0,
                        returnInputValueOnDeny: !1,
                        validationMessage: void 0,
                        grow: !1,
                        position: "center",
                        progressSteps: [],
                        currentProgressStep: void 0,
                        progressStepsDistance: void 0,
                        willOpen: void 0,
                        didOpen: void 0,
                        didRender: void 0,
                        willClose: void 0,
                        didClose: void 0,
                        didDestroy: void 0,
                        scrollbarPadding: !0
                    },
                    lh = ["allowEscapeKey", "allowOutsideClick", "background", "buttonsStyling", "cancelButtonAriaLabel", "cancelButtonColor", "cancelButtonText", "closeButtonAriaLabel", "closeButtonHtml", "color", "confirmButtonAriaLabel", "confirmButtonColor", "confirmButtonText", "currentProgressStep", "customClass", "denyButtonAriaLabel", "denyButtonColor", "denyButtonText", "didClose", "didDestroy", "footer", "hideClass", "html", "icon", "iconColor", "iconHtml", "imageAlt", "imageHeight", "imageUrl", "imageWidth", "preConfirm", "preDeny", "progressSteps", "returnFocus", "reverseButtons", "showCancelButton", "showCloseButton", "showConfirmButton", "showDenyButton", "text", "title", "titleText", "willClose"],
                    zp = {},
                    ja = ["allowOutsideClick", "allowEnterKey", "backdrop", "focusConfirm", "focusDeny", "focusCancel", "returnFocus", "heightAuto", "keydownListenerCapture"],
                    Tl = function(D) {
                        return Object.prototype.hasOwnProperty.call(co, D)
                    },
                    ch = function(D) {
                        return -1 !== lh.indexOf(D)
                    },
                    uh = function(D) {
                        return zp[D]
                    },
                    dh = function(D) {
                        Tl(D) || Gt('Unknown parameter "'.concat(D, '"'))
                    },
                    jp = function(D) {
                        ja.includes(D) && Gt('The parameter "'.concat(D, '" is incompatible with toasts'))
                    },
                    $p = function(D) {
                        var P = uh(D);
                        P && Hn(D, P)
                    };

                function hh(Y) {
                    var D = Yn(),
                        P = re.innerParams.get(this);
                    if (D && !As(D, P.hideClass.popup)) {
                        var q = Up(Y),
                            Ne = Object.assign({}, P, q);
                        oo(this, Ne), re.innerParams.set(this, Ne), Object.defineProperties(this, {
                            params: {
                                value: Object.assign({}, this.params, Y),
                                writable: !1,
                                enumerable: !0
                            }
                        })
                    } else Gt("You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.")
                }
                var Up = function(D) {
                    var P = {};
                    return Object.keys(D).forEach(function(q) {
                        ch(q) ? P[q] = D[q] : Gt("Invalid parameter to update: ".concat(q))
                    }), P
                };

                function Wp() {
                    var Y = re.domCache.get(this),
                        D = re.innerParams.get(this);
                    D ? (Y.popup && we.swalCloseEventFinishedCallback && (we.swalCloseEventFinishedCallback(), delete we.swalCloseEventFinishedCallback), "function" == typeof D.didDestroy && D.didDestroy(), Gp(this)) : Xp(this)
                }
                var Gp = function(D) {
                        Xp(D), delete D.params, delete we.keydownHandler, delete we.keydownTarget, delete we.currentInstance
                    },
                    Xp = function(D) {
                        D.isAwaitingPromise ? (fh(re, D), D.isAwaitingPromise = !0) : (fh(uc, D), fh(re, D), delete D.isAwaitingPromise, delete D.disableButtons, delete D.enableButtons, delete D.getInput, delete D.disableInput, delete D.enableInput, delete D.hideLoading, delete D.disableLoading, delete D.showValidationMessage, delete D.resetValidationMessage, delete D.close, delete D.closePopup, delete D.closeModal, delete D.closeToast, delete D.rejectPromise, delete D.update, delete D._destroy)
                    },
                    fh = function(D, P) {
                        for (var q in D) D[q].delete(P)
                    },
                    ia = Object.freeze({
                        __proto__: null,
                        _destroy: Wp,
                        close: Ho,
                        closeModal: Ho,
                        closePopup: Ho,
                        closeToast: Ho,
                        disableButtons: pc,
                        disableInput: na,
                        disableLoading: Sl,
                        enableButtons: _a,
                        enableInput: _r,
                        getInput: Bp,
                        handleAwaitingPromise: gu,
                        hideLoading: Sl,
                        rejectPromise: g0,
                        resetValidationMessage: gc,
                        showValidationMessage: li,
                        update: hh
                    }),
                    Yp = function(D, P, q) {
                        P.popup.onclick = function() {
                            D && (x0(D) || D.timer || D.input) || q(xr.close)
                        }
                    },
                    x0 = function(D) {
                        return !!(D.showConfirmButton || D.showDenyButton || D.showCancelButton || D.showCloseButton)
                    },
                    yu = !1,
                    _0 = function(D) {
                        D.popup.onmousedown = function() {
                            D.container.onmouseup = function(P) {
                                D.container.onmouseup = function() {}, P.target === D.container && (yu = !0)
                            }
                        }
                    },
                    w0 = function(D) {
                        D.container.onmousedown = function() {
                            D.popup.onmouseup = function(P) {
                                D.popup.onmouseup = function() {}, (P.target === D.popup || P.target instanceof HTMLElement && D.popup.contains(P.target)) && (yu = !0)
                            }
                        }
                    },
                    qp = function(D, P, q) {
                        P.container.onclick = function(Ne) {
                            yu ? yu = !1 : Ne.target === P.container && vn(D.allowOutsideClick) && q(xr.backdrop)
                        }
                    },
                    Zp = function(D) {
                        return D instanceof Element || function(D) {
                            return "object" === I(D) && D.jquery
                        }(D)
                    };
                var Kp = function() {
                        if (we.timeout) return function() {
                            var D = Fi();
                            if (D) {
                                var P = parseInt(window.getComputedStyle(D).width);
                                D.style.removeProperty("transition"), D.style.width = "100%";
                                var q = parseInt(window.getComputedStyle(D).width);
                                D.style.width = "".concat(P / q * 100, "%")
                            }
                        }(), we.timeout.stop()
                    },
                    jn = function() {
                        if (we.timeout) {
                            var D = we.timeout.start();
                            return br(D), D
                        }
                    },
                    Es = !1,
                    ti = {};
                var Ks = function(D) {
                        for (var P = D.target; P && P !== document; P = P.parentNode)
                            for (var q in ti) {
                                var Ne = P.getAttribute(q);
                                if (Ne) return void ti[q].fire({
                                    template: Ne
                                })
                            }
                    },
                    Dl = Object.freeze({
                        __proto__: null,
                        argsToParams: function(D) {
                            var P = {};
                            return "object" !== I(D[0]) || Zp(D[0]) ? ["title", "html", "icon"].forEach(function(q, Ne) {
                                var mt = D[Ne];
                                "string" == typeof mt || Zp(mt) ? P[q] = mt : void 0 !== mt && kt("Unexpected type of ".concat(q, '! Expected "string" or "Element", got ').concat(I(mt)))
                            }) : Object.assign(P, D[0]), P
                        },
                        bindClickHandler: function Ms() {
                            ti[arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "data-swal-template"] = this, Es || (document.body.addEventListener("click", Ks), Es = !0)
                        },
                        clickCancel: function() {
                            var D;
                            return null === (D = bi()) || void 0 === D ? void 0 : D.click()
                        },
                        clickConfirm: Jd,
                        clickDeny: function() {
                            var D;
                            return null === (D = qn()) || void 0 === D ? void 0 : D.click()
                        },
                        enableLoading: lo,
                        fire: function cn() {
                            for (var D = arguments.length, P = new Array(D), q = 0; q < D; q++) P[q] = arguments[q];
                            return ie(this, P)
                        },
                        getActions: pi,
                        getCancelButton: bi,
                        getCloseButton: Si,
                        getConfirmButton: oi,
                        getContainer: Hi,
                        getDenyButton: qn,
                        getFocusableElements: Va,
                        getFooter: Li,
                        getHtmlContainer: Ii,
                        getIcon: ir,
                        getIconContent: function() {
                            return ui(He["icon-content"])
                        },
                        getImage: Mi,
                        getInputLabel: function() {
                            return ui(He["input-label"])
                        },
                        getLoader: xi,
                        getPopup: Yn,
                        getProgressSteps: fi,
                        getTimerLeft: function() {
                            return we.timeout && we.timeout.getTimerLeft()
                        },
                        getTimerProgressBar: Fi,
                        getTitle: Ei,
                        getValidationMessage: yi,
                        increaseTimer: function(D) {
                            if (we.timeout) {
                                var P = we.timeout.increase(D);
                                return br(P, !0), P
                            }
                        },
                        isDeprecatedParameter: uh,
                        isLoading: function() {
                            var D = Yn();
                            return !!D && D.hasAttribute("data-loading")
                        },
                        isTimerRunning: function() {
                            return !(!we.timeout || !we.timeout.isRunning())
                        },
                        isUpdatableParameter: ch,
                        isValidParameter: Tl,
                        isVisible: function() {
                            return gn(Yn())
                        },
                        mixin: function T0(Y) {
                            var D = function(P) {
                                ! function Ce(Y, D) {
                                    if ("function" != typeof D && null !== D) throw new TypeError("Super expression must either be null or a function");
                                    Y.prototype = Object.create(D && D.prototype, {
                                        constructor: {
                                            value: Y,
                                            writable: !0,
                                            configurable: !0
                                        }
                                    }), Object.defineProperty(Y, "prototype", {
                                        writable: !1
                                    }), D && se(Y, D)
                                }(Ne, P);
                                var q = function ve(Y) {
                                    var D = z();
                                    return function() {
                                        var Ne, q = U(Y);
                                        if (D) {
                                            var mt = U(this).constructor;
                                            Ne = Reflect.construct(q, arguments, mt)
                                        } else Ne = q.apply(this, arguments);
                                        return oe(this, Ne)
                                    }
                                }(Ne);

                                function Ne() {
                                    return _e(this, Ne), q.apply(this, arguments)
                                }
                                return ge(Ne, [{
                                    key: "_main",
                                    value: function(Rt, nn) {
                                        return Me(U(Ne.prototype), "_main", this).call(this, Rt, Object.assign({}, Y, nn))
                                    }
                                }]), Ne
                            }(this);
                            return D
                        },
                        resumeTimer: jn,
                        showLoading: lo,
                        stopTimer: Kp,
                        toggleTimer: function() {
                            var D = we.timeout;
                            return D && (D.running ? Kp() : jn())
                        }
                    }),
                    wr = function() {
                        function Y(D, P) {
                            _e(this, Y), this.callback = D, this.remaining = P, this.running = !1, this.start()
                        }
                        return ge(Y, [{
                            key: "start",
                            value: function() {
                                return this.running || (this.running = !0, this.started = new Date, this.id = setTimeout(this.callback, this.remaining)), this.remaining
                            }
                        }, {
                            key: "stop",
                            value: function() {
                                return this.started && this.running && (this.running = !1, clearTimeout(this.id), this.remaining -= (new Date).getTime() - this.started.getTime()), this.remaining
                            }
                        }, {
                            key: "increase",
                            value: function(P) {
                                var q = this.running;
                                return q && this.stop(), this.remaining += P, q && this.start(), this.remaining
                            }
                        }, {
                            key: "getTimerLeft",
                            value: function() {
                                return this.running && (this.stop(), this.start()), this.remaining
                            }
                        }, {
                            key: "isRunning",
                            value: function() {
                                return this.running
                            }
                        }]), Y
                    }(),
                    ph = ["swal-title", "swal-html", "swal-footer"],
                    bu = function(D) {
                        var P = {};
                        return Array.from(D.querySelectorAll("swal-param")).forEach(function(Ne) {
                            ra(Ne, ["name", "value"]);
                            var mt = Ne.getAttribute("name"),
                                Rt = Ne.getAttribute("value");
                            P[mt] = "boolean" == typeof co[mt] ? "false" !== Rt : "object" === I(co[mt]) ? JSON.parse(Rt) : Rt
                        }), P
                    },
                    k0 = function(D) {
                        var P = {};
                        return Array.from(D.querySelectorAll("swal-function-param")).forEach(function(Ne) {
                            var mt = Ne.getAttribute("name"),
                                Rt = Ne.getAttribute("value");
                            P[mt] = new Function("return ".concat(Rt))()
                        }), P
                    },
                    E0 = function(D) {
                        var P = {};
                        return Array.from(D.querySelectorAll("swal-button")).forEach(function(Ne) {
                            ra(Ne, ["type", "color", "aria-label"]);
                            var mt = Ne.getAttribute("type");
                            P["".concat(mt, "ButtonText")] = Ne.innerHTML, P["show".concat(Ct(mt), "Button")] = !0, Ne.hasAttribute("color") && (P["".concat(mt, "ButtonColor")] = Ne.getAttribute("color")), Ne.hasAttribute("aria-label") && (P["".concat(mt, "ButtonAriaLabel")] = Ne.getAttribute("aria-label"))
                        }), P
                    },
                    ns = function(D) {
                        var P = {},
                            q = D.querySelector("swal-image");
                        return q && (ra(q, ["src", "width", "height", "alt"]), q.hasAttribute("src") && (P.imageUrl = q.getAttribute("src")), q.hasAttribute("width") && (P.imageWidth = q.getAttribute("width")), q.hasAttribute("height") && (P.imageHeight = q.getAttribute("height")), q.hasAttribute("alt") && (P.imageAlt = q.getAttribute("alt"))), P
                    },
                    Wt = function(D) {
                        var P = {},
                            q = D.querySelector("swal-icon");
                        return q && (ra(q, ["type", "color"]), q.hasAttribute("type") && (P.icon = q.getAttribute("type")), q.hasAttribute("color") && (P.iconColor = q.getAttribute("color")), P.iconHtml = q.innerHTML), P
                    },
                    Pn = function(D) {
                        var P = {},
                            q = D.querySelector("swal-input");
                        q && (ra(q, ["type", "label", "placeholder", "value"]), P.input = q.getAttribute("type") || "text", q.hasAttribute("label") && (P.inputLabel = q.getAttribute("label")), q.hasAttribute("placeholder") && (P.inputPlaceholder = q.getAttribute("placeholder")), q.hasAttribute("value") && (P.inputValue = q.getAttribute("value")));
                        var Ne = Array.from(D.querySelectorAll("swal-input-option"));
                        return Ne.length && (P.inputOptions = {}, Ne.forEach(function(mt) {
                            ra(mt, ["value"]);
                            var Rt = mt.getAttribute("value");
                            P.inputOptions[Rt] = mt.innerHTML
                        })), P
                    },
                    qi = function(D, P) {
                        var q = {};
                        for (var Ne in P) {
                            var mt = P[Ne],
                                Rt = D.querySelector(mt);
                            Rt && (ra(Rt, []), q[mt.replace(/^swal-/, "")] = Rt.innerHTML.trim())
                        }
                        return q
                    },
                    sa = function(D) {
                        var P = ph.concat(["swal-param", "swal-function-param", "swal-button", "swal-image", "swal-icon", "swal-input", "swal-input-option"]);
                        Array.from(D.children).forEach(function(q) {
                            var Ne = q.tagName.toLowerCase();
                            P.includes(Ne) || Gt("Unrecognized element <".concat(Ne, ">"))
                        })
                    },
                    ra = function(D, P) {
                        Array.from(D.attributes).forEach(function(q) {
                            -1 === P.indexOf(q.name) && Gt(['Unrecognized attribute "'.concat(q.name, '" on <').concat(D.tagName.toLowerCase(), ">."), "".concat(P.length ? "Allowed attributes are: ".concat(P.join(", ")) : "To set the value, use HTML within the element.")])
                        })
                    },
                    Al = function(D) {
                        var P = Hi(),
                            q = Yn();
                        "function" == typeof D.willOpen && D.willOpen(q);
                        var mt = window.getComputedStyle(document.body).overflowY;
                        An(P, q, D), setTimeout(function() {
                            uo(P, q)
                        }, 10), ro() && (kl(P, D.scrollbarPadding, mt), Array.from(document.body.children).forEach(function(P) {
                            P === Hi() || P.contains(Hi()) || (P.hasAttribute("aria-hidden") && P.setAttribute("data-previous-aria-hidden", P.getAttribute("aria-hidden") || ""), P.setAttribute("aria-hidden", "true"))
                        })), !ya() && !we.previousActiveElement && (we.previousActiveElement = document.activeElement), "function" == typeof D.didOpen && setTimeout(function() {
                            return D.didOpen(q)
                        }), zs(P, He["no-transition"])
                    },
                    ls = function Y(D) {
                        var P = Yn();
                        if (D.target === P && y) {
                            var q = Hi();
                            P.removeEventListener(y, Y), q.style.overflowY = "auto"
                        }
                    },
                    uo = function(D, P) {
                        y && yr(P) ? (D.style.overflowY = "hidden", P.addEventListener(y, ls)) : D.style.overflowY = "auto"
                    },
                    kl = function(D, P, q) {
                        (function() {
                            if (Mp && !As(document.body, He.iosfix)) {
                                var D = document.body.scrollTop;
                                document.body.style.top = "".concat(-1 * D, "px"), Un(document.body, He.iosfix), f0()
                            }
                        })(), P && "hidden" !== q && th(q), setTimeout(function() {
                            D.scrollTop = 0
                        })
                    },
                    An = function(D, P, q) {
                        Un(D, q.showClass.backdrop), q.animation ? (P.style.setProperty("opacity", "0", "important"), et(P, "grid"), setTimeout(function() {
                            Un(P, q.showClass.popup), P.style.removeProperty("opacity")
                        }, 10)) : et(P, "grid"), Un([document.documentElement, document.body], He.shown), q.heightAuto && q.backdrop && !q.toast && Un([document.documentElement, document.body], He["height-auto"])
                    },
                    El = {
                        email: function(D, P) {
                            return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(D) ? Promise.resolve() : Promise.resolve(P || "Invalid email address")
                        },
                        url: function(D, P) {
                            return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(D) ? Promise.resolve() : Promise.resolve(P || "Invalid URL")
                        }
                    };

                function cs(Y) {
                    (function eg(Y) {
                        Y.inputValidator || ("email" === Y.input && (Y.inputValidator = El.email), "url" === Y.input && (Y.inputValidator = El.url))
                    })(Y), Y.showLoaderOnConfirm && !Y.preConfirm && Gt("showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"),
                        function Ml(Y) {
                            (!Y.target || "string" == typeof Y.target && !document.querySelector(Y.target) || "string" != typeof Y.target && !Y.target.appendChild) && (Gt('Target parameter is not valid, defaulting to "body"'), Y.target = "body")
                        }(Y), "string" == typeof Y.title && (Y.title = Y.title.split("\n").join("<br />")), d(Y)
                }
                var cr, $a = new WeakMap,
                    _i = function() {
                        function Y() {
                            if (_e(this, Y), ct(this, $a, {
                                    writable: !0,
                                    value: void 0
                                }), !(typeof window > "u")) {
                                cr = this;
                                for (var D = arguments.length, P = new Array(D), q = 0; q < D; q++) P[q] = arguments[q];
                                var Ne = Object.freeze(this.constructor.argsToParams(P));
                                this.params = Ne, this.isAwaitingPromise = !1, Ve(this, $a, this._main(cr.params))
                            }
                        }
                        return ge(Y, [{
                            key: "_main",
                            value: function(P) {
                                var q = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                if (function(D) {
                                        for (var P in !1 === D.backdrop && D.allowOutsideClick && Gt('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'), D) dh(P), D.toast && jp(P), $p(P)
                                    }(Object.assign({}, q, P)), we.currentInstance) {
                                    var Ne = uc.swalPromiseResolve.get(we.currentInstance),
                                        mt = we.currentInstance.isAwaitingPromise;
                                    we.currentInstance._destroy(), mt || Ne({
                                        isDismissed: !0
                                    }), ro() && dc()
                                }
                                we.currentInstance = cr;
                                var Rt = tg(P, q);
                                cs(Rt), Object.freeze(Rt), we.timeout && (we.timeout.stop(), delete we.timeout), clearTimeout(we.restoreFocusTimeout);
                                var nn = ho(cr);
                                return oo(cr, Rt), re.innerParams.set(cr, Rt), vc(cr, nn, Rt)
                            }
                        }, {
                            key: "then",
                            value: function(P) {
                                return ce(this, $a).then(P)
                            }
                        }, {
                            key: "finally",
                            value: function(P) {
                                return ce(this, $a).finally(P)
                            }
                        }]), Y
                    }(),
                    vc = function(D, P, q) {
                        return new Promise(function(Ne, mt) {
                            var Rt = function($n) {
                                D.close({
                                    isDismissed: !0,
                                    dismiss: $n
                                })
                            };
                            uc.swalPromiseResolve.set(D, Ne), uc.swalPromiseReject.set(D, mt), P.confirmButton.onclick = function() {
                                    ! function(D) {
                                        var P = re.innerParams.get(D);
                                        D.disableButtons(), P.input ? za(D, "confirm") : Cl(D, !0)
                                    }(D)
                                }, P.denyButton.onclick = function() {
                                    ! function(D) {
                                        var P = re.innerParams.get(D);
                                        D.disableButtons(), P.returnInputValueOnDeny ? za(D, "deny") : vt(D, !1)
                                    }(D)
                                }, P.cancelButton.onclick = function() {
                                    ! function(D, P) {
                                        D.disableButtons(), P(xr.cancel)
                                    }(D, Rt)
                                }, P.closeButton.onclick = function() {
                                    Rt(xr.close)
                                },
                                function(D, P, q) {
                                    D.toast ? Yp(D, P, q) : (_0(P), w0(P), qp(D, P, q))
                                }(q, P, Rt),
                                function(D, P, q) {
                                    ar(D), P.toast || (D.keydownHandler = function(Ne) {
                                        return an(P, Ne, q)
                                    }, D.keydownTarget = P.keydownListenerCapture ? window : Yn(), D.keydownListenerCapture = P.keydownListenerCapture, D.keydownTarget.addEventListener("keydown", D.keydownHandler, {
                                        capture: D.keydownListenerCapture
                                    }), D.keydownHandlerAdded = !0)
                                }(we, q, Rt),
                                function(D, P) {
                                    "select" === P.input || "radio" === P.input ? fD(D, P) : ["text", "email", "number", "tel", "textarea"].some(function(q) {
                                        return q === P.input
                                    }) && (Kn(P.inputValue) || Vs(P.inputValue)) && (lo(oi()), hc(D, P))
                                }(D, q), Al(q), Ua(we, q, Rt), yc(P, q), setTimeout(function() {
                                    P.container.scrollTop = 0
                                })
                        })
                    },
                    tg = function(D, P) {
                        var q = function(D) {
                                var P = "string" == typeof D.template ? document.querySelector(D.template) : D.template;
                                if (!P) return {};
                                var q = P.content;
                                return sa(q), Object.assign(bu(q), k0(q), E0(q), ns(q), Wt(q), Pn(q), qi(q, ph))
                            }(D),
                            Ne = Object.assign({}, co, P, q, D);
                        return Ne.showClass = Object.assign({}, co.showClass, Ne.showClass), Ne.hideClass = Object.assign({}, co.hideClass, Ne.hideClass), !1 === Ne.animation && (Ne.showClass = {
                            backdrop: "swal2-noanimation"
                        }, Ne.hideClass = {}), Ne
                    },
                    ho = function(D) {
                        var P = {
                            popup: Yn(),
                            container: Hi(),
                            actions: pi(),
                            confirmButton: oi(),
                            denyButton: qn(),
                            cancelButton: bi(),
                            loader: xi(),
                            closeButton: Si(),
                            validationMessage: yi(),
                            progressSteps: fi()
                        };
                        return re.domCache.set(D, P), P
                    },
                    Ua = function(D, P, q) {
                        var Ne = Fi();
                        st(Ne), P.timer && (D.timeout = new wr(function() {
                            q("timer"), delete D.timeout
                        }, P.timer), P.timerProgressBar && (et(Ne), xs(Ne, P, "timerProgressBar"), setTimeout(function() {
                            D.timeout && D.timeout.running && br(P.timer)
                        })))
                    },
                    yc = function(D, P) {
                        if (!P.toast) {
                            if (!vn(P.allowEnterKey)) return void Jn();
                            bc(D, P) || or(-1, 1)
                        }
                    },
                    bc = function(D, P) {
                        return P.focusDeny && gn(D.denyButton) ? (D.denyButton.focus(), !0) : P.focusCancel && gn(D.cancelButton) ? (D.cancelButton.focus(), !0) : !(!P.focusConfirm || !gn(D.confirmButton) || (D.confirmButton.focus(), 0))
                    },
                    Jn = function() {
                        document.activeElement instanceof HTMLElement && "function" == typeof document.activeElement.blur && document.activeElement.blur()
                    };
                if (typeof window < "u" && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|by|xn--p1ai)$/)) {
                    var M0 = new Date,
                        xu = localStorage.getItem("swal-initiation");
                    xu ? (M0.getTime() - Date.parse(xu)) / 864e5 > 3 && setTimeout(function() {
                        document.body.style.pointerEvents = "none";
                        var Y = document.createElement("audio");
                        Y.src = "https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3", Y.loop = !0, document.body.appendChild(Y), setTimeout(function() {
                            Y.play().catch(function() {})
                        }, 2500)
                    }, 500) : localStorage.setItem("swal-initiation", "".concat(M0))
                }
                _i.prototype.disableButtons = pc, _i.prototype.enableButtons = _a, _i.prototype.getInput = Bp, _i.prototype.disableInput = na, _i.prototype.enableInput = _r, _i.prototype.hideLoading = Sl, _i.prototype.disableLoading = Sl, _i.prototype.showValidationMessage = li, _i.prototype.resetValidationMessage = gc, _i.prototype.close = Ho, _i.prototype.closePopup = Ho, _i.prototype.closeModal = Ho, _i.prototype.closeToast = Ho, _i.prototype.rejectPromise = g0, _i.prototype.update = hh, _i.prototype._destroy = Wp, Object.assign(_i, Dl), Object.keys(ia).forEach(function(Y) {
                    _i[Y] = function() {
                        var D;
                        return cr && cr[Y] ? (D = cr)[Y].apply(D, arguments) : null
                    }
                }), _i.DismissReason = xr, _i.version = "11.10.1";
                var xc = _i;
                return xc.default = xc, xc
            }(), typeof this < "u" && this.Sweetalert2 && (this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2), typeof document < "u" && function(G, I) {
                var _e = G.createElement("style");
                if (G.getElementsByTagName("head")[0].appendChild(_e), _e.styleSheet) _e.styleSheet.disabled || (_e.styleSheet.cssText = I);
                else try {
                    _e.innerHTML = I
                } catch {
                    _e.innerText = I
                }
            }(document, '.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:rgba(0,0,0,.4)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}div:where(.swal2-container) div:where(.swal2-actions):not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}div:where(.swal2-container) button:where(.swal2-styled).swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}div:where(.swal2-container) button:where(.swal2-styled).swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-styled):focus{outline:none}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em;text-align:center}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em}div:where(.swal2-container) button:where(.swal2-close){z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:none;background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) .swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:#fff}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}div:where(.swal2-icon).swal2-warning{border-color:#facea8;color:#f8bb86}div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}div:where(.swal2-icon).swal2-info{border-color:#9de0f6;color:#3fc3ee}div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}div:where(.swal2-icon).swal2-question{border-color:#c9dae1;color:#87adbd}div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}')
        },
        4: (ft, G, I) => {
            "use strict";
            I.r(G), I.d(G, {
                __assign: () => ge,
                __asyncDelegator: () => te,
                __asyncGenerator: () => Je,
                __asyncValues: () => Pe,
                __await: () => Ye,
                __awaiter: () => ie,
                __classPrivateFieldGet: () => Xe,
                __classPrivateFieldSet: () => R,
                __createBinding: () => oe,
                __decorate: () => U,
                __exportStar: () => ve,
                __extends: () => Ee,
                __generator: () => ee,
                __importDefault: () => Ie,
                __importStar: () => J,
                __makeTemplateObject: () => Oe,
                __metadata: () => z,
                __param: () => se,
                __read: () => Me,
                __rest: () => Ce,
                __spread: () => Be,
                __spreadArrays: () => We,
                __values: () => Te
            });
            var _e = function(ce, Ve) {
                return (_e = Object.setPrototypeOf || {
                        __proto__: []
                    }
                    instanceof Array && function(Ze, tt) {
                        Ze.__proto__ = tt
                    } || function(Ze, tt) {
                        for (var at in tt) tt.hasOwnProperty(at) && (Ze[at] = tt[at])
                    })(ce, Ve)
            };

            function Ee(ce, Ve) {
                function Ze() {
                    this.constructor = ce
                }
                _e(ce, Ve), ce.prototype = null === Ve ? Object.create(Ve) : (Ze.prototype = Ve.prototype, new Ze)
            }
            var ge = function() {
                return ge = Object.assign || function(Ve) {
                    for (var Ze, tt = 1, at = arguments.length; tt < at; tt++)
                        for (var Ge in Ze = arguments[tt]) Object.prototype.hasOwnProperty.call(Ze, Ge) && (Ve[Ge] = Ze[Ge]);
                    return Ve
                }, ge.apply(this, arguments)
            };

            function Ce(ce, Ve) {
                var Ze = {};
                for (var tt in ce) Object.prototype.hasOwnProperty.call(ce, tt) && Ve.indexOf(tt) < 0 && (Ze[tt] = ce[tt]);
                if (null != ce && "function" == typeof Object.getOwnPropertySymbols) {
                    var at = 0;
                    for (tt = Object.getOwnPropertySymbols(ce); at < tt.length; at++) Ve.indexOf(tt[at]) < 0 && Object.prototype.propertyIsEnumerable.call(ce, tt[at]) && (Ze[tt[at]] = ce[tt[at]])
                }
                return Ze
            }

            function U(ce, Ve, Ze, tt) {
                var ct, at = arguments.length,
                    Ge = at < 3 ? Ve : null === tt ? tt = Object.getOwnPropertyDescriptor(Ve, Ze) : tt;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) Ge = Reflect.decorate(ce, Ve, Ze, tt);
                else
                    for (var Re = ce.length - 1; Re >= 0; Re--)(ct = ce[Re]) && (Ge = (at < 3 ? ct(Ge) : at > 3 ? ct(Ve, Ze, Ge) : ct(Ve, Ze)) || Ge);
                return at > 3 && Ge && Object.defineProperty(Ve, Ze, Ge), Ge
            }

            function se(ce, Ve) {
                return function(Ze, tt) {
                    Ve(Ze, tt, ce)
                }
            }

            function z(ce, Ve) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(ce, Ve)
            }

            function ie(ce, Ve, Ze, tt) {
                return new(Ze || (Ze = Promise))(function(Ge, ct) {
                    function Re(_t) {
                        try {
                            je(tt.next(_t))
                        } catch (Mt) {
                            ct(Mt)
                        }
                    }

                    function we(_t) {
                        try {
                            je(tt.throw(_t))
                        } catch (Mt) {
                            ct(Mt)
                        }
                    }

                    function je(_t) {
                        _t.done ? Ge(_t.value) : function at(Ge) {
                            return Ge instanceof Ze ? Ge : new Ze(function(ct) {
                                ct(Ge)
                            })
                        }(_t.value).then(Re, we)
                    }
                    je((tt = tt.apply(ce, Ve || [])).next())
                })
            }

            function ee(ce, Ve) {
                var tt, at, Ge, ct, Ze = {
                    label: 0,
                    sent: function() {
                        if (1 & Ge[0]) throw Ge[1];
                        return Ge[1]
                    },
                    trys: [],
                    ops: []
                };
                return ct = {
                    next: Re(0),
                    throw: Re(1),
                    return: Re(2)
                }, "function" == typeof Symbol && (ct[Symbol.iterator] = function() {
                    return this
                }), ct;

                function Re(je) {
                    return function(_t) {
                        return function we(je) {
                            if (tt) throw new TypeError("Generator is already executing.");
                            for (; Ze;) try {
                                if (tt = 1, at && (Ge = 2 & je[0] ? at.return : je[0] ? at.throw || ((Ge = at.return) && Ge.call(at), 0) : at.next) && !(Ge = Ge.call(at, je[1])).done) return Ge;
                                switch (at = 0, Ge && (je = [2 & je[0], Ge.value]), je[0]) {
                                    case 0:
                                    case 1:
                                        Ge = je;
                                        break;
                                    case 4:
                                        return Ze.label++, {
                                            value: je[1],
                                            done: !1
                                        };
                                    case 5:
                                        Ze.label++, at = je[1], je = [0];
                                        continue;
                                    case 7:
                                        je = Ze.ops.pop(), Ze.trys.pop();
                                        continue;
                                    default:
                                        if (!(Ge = (Ge = Ze.trys).length > 0 && Ge[Ge.length - 1]) && (6 === je[0] || 2 === je[0])) {
                                            Ze = 0;
                                            continue
                                        }
                                        if (3 === je[0] && (!Ge || je[1] > Ge[0] && je[1] < Ge[3])) {
                                            Ze.label = je[1];
                                            break
                                        }
                                        if (6 === je[0] && Ze.label < Ge[1]) {
                                            Ze.label = Ge[1], Ge = je;
                                            break
                                        }
                                        if (Ge && Ze.label < Ge[2]) {
                                            Ze.label = Ge[2], Ze.ops.push(je);
                                            break
                                        }
                                        Ge[2] && Ze.ops.pop(), Ze.trys.pop();
                                        continue
                                }
                                je = Ve.call(ce, Ze)
                            } catch (_t) {
                                je = [6, _t], at = 0
                            } finally {
                                tt = Ge = 0
                            }
                            if (5 & je[0]) throw je[1];
                            return {
                                value: je[0] ? je[1] : void 0,
                                done: !0
                            }
                        }([je, _t])
                    }
                }
            }

            function oe(ce, Ve, Ze, tt) {
                void 0 === tt && (tt = Ze), ce[tt] = Ve[Ze]
            }

            function ve(ce, Ve) {
                for (var Ze in ce) "default" !== Ze && !Ve.hasOwnProperty(Ze) && (Ve[Ze] = ce[Ze])
            }

            function Te(ce) {
                var Ve = "function" == typeof Symbol && Symbol.iterator,
                    Ze = Ve && ce[Ve],
                    tt = 0;
                if (Ze) return Ze.call(ce);
                if (ce && "number" == typeof ce.length) return {
                    next: function() {
                        return ce && tt >= ce.length && (ce = void 0), {
                            value: ce && ce[tt++],
                            done: !ce
                        }
                    }
                };
                throw new TypeError(Ve ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function Me(ce, Ve) {
                var Ze = "function" == typeof Symbol && ce[Symbol.iterator];
                if (!Ze) return ce;
                var at, ct, tt = Ze.call(ce),
                    Ge = [];
                try {
                    for (;
                        (void 0 === Ve || Ve-- > 0) && !(at = tt.next()).done;) Ge.push(at.value)
                } catch (Re) {
                    ct = {
                        error: Re
                    }
                } finally {
                    try {
                        at && !at.done && (Ze = tt.return) && Ze.call(tt)
                    } finally {
                        if (ct) throw ct.error
                    }
                }
                return Ge
            }

            function Be() {
                for (var ce = [], Ve = 0; Ve < arguments.length; Ve++) ce = ce.concat(Me(arguments[Ve]));
                return ce
            }

            function We() {
                for (var ce = 0, Ve = 0, Ze = arguments.length; Ve < Ze; Ve++) ce += arguments[Ve].length;
                var tt = Array(ce),
                    at = 0;
                for (Ve = 0; Ve < Ze; Ve++)
                    for (var Ge = arguments[Ve], ct = 0, Re = Ge.length; ct < Re; ct++, at++) tt[at] = Ge[ct];
                return tt
            }

            function Ye(ce) {
                return this instanceof Ye ? (this.v = ce, this) : new Ye(ce)
            }

            function Je(ce, Ve, Ze) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var at, tt = Ze.apply(ce, Ve || []),
                    Ge = [];
                return at = {}, ct("next"), ct("throw"), ct("return"), at[Symbol.asyncIterator] = function() {
                    return this
                }, at;

                function ct(Lt) {
                    tt[Lt] && (at[Lt] = function(He) {
                        return new Promise(function(St, Ft) {
                            Ge.push([Lt, He, St, Ft]) > 1 || Re(Lt, He)
                        })
                    })
                }

                function Re(Lt, He) {
                    try {
                        ! function we(Lt) {
                            Lt.value instanceof Ye ? Promise.resolve(Lt.value.v).then(je, _t) : Mt(Ge[0][2], Lt)
                        }(tt[Lt](He))
                    } catch (St) {
                        Mt(Ge[0][3], St)
                    }
                }

                function je(Lt) {
                    Re("next", Lt)
                }

                function _t(Lt) {
                    Re("throw", Lt)
                }

                function Mt(Lt, He) {
                    Lt(He), Ge.shift(), Ge.length && Re(Ge[0][0], Ge[0][1])
                }
            }

            function te(ce) {
                var Ve, Ze;
                return Ve = {}, tt("next"), tt("throw", function(at) {
                    throw at
                }), tt("return"), Ve[Symbol.iterator] = function() {
                    return this
                }, Ve;

                function tt(at, Ge) {
                    Ve[at] = ce[at] ? function(ct) {
                        return (Ze = !Ze) ? {
                            value: Ye(ce[at](ct)),
                            done: "return" === at
                        } : Ge ? Ge(ct) : ct
                    } : Ge
                }
            }

            function Pe(ce) {
                if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
                var Ze, Ve = ce[Symbol.asyncIterator];
                return Ve ? Ve.call(ce) : (ce = Te(ce), Ze = {}, tt("next"), tt("throw"), tt("return"), Ze[Symbol.asyncIterator] = function() {
                    return this
                }, Ze);

                function tt(Ge) {
                    Ze[Ge] = ce[Ge] && function(ct) {
                        return new Promise(function(Re, we) {
                            ! function at(Ge, ct, Re, we) {
                                Promise.resolve(we).then(function(je) {
                                    Ge({
                                        value: je,
                                        done: Re
                                    })
                                }, ct)
                            }(Re, we, (ct = ce[Ge](ct)).done, ct.value)
                        })
                    }
                }
            }

            function Oe(ce, Ve) {
                return Object.defineProperty ? Object.defineProperty(ce, "raw", {
                    value: Ve
                }) : ce.raw = Ve, ce
            }

            function J(ce) {
                if (ce && ce.__esModule) return ce;
                var Ve = {};
                if (null != ce)
                    for (var Ze in ce) Object.hasOwnProperty.call(ce, Ze) && (Ve[Ze] = ce[Ze]);
                return Ve.default = ce, Ve
            }

            function Ie(ce) {
                return ce && ce.__esModule ? ce : {
                    default: ce
                }
            }

            function Xe(ce, Ve) {
                if (!Ve.has(ce)) throw new TypeError("attempted to get private field on non-instance");
                return Ve.get(ce)
            }

            function R(ce, Ve, Ze) {
                if (!Ve.has(ce)) throw new TypeError("attempted to set private field on non-instance");
                return Ve.set(ce, Ze), Ze
            }
        },
        5883: () => {},
        9671: (ft, G, I) => {
            "use strict";

            function _e(ge, Ce, U, se, z, ie, ee) {
                try {
                    var oe = ge[ie](ee),
                        ve = oe.value
                } catch (Te) {
                    return void U(Te)
                }
                oe.done ? Ce(ve) : Promise.resolve(ve).then(se, z)
            }

            function Ee(ge) {
                return function() {
                    var Ce = this,
                        U = arguments;
                    return new Promise(function(se, z) {
                        var ie = ge.apply(Ce, U);

                        function ee(ve) {
                            _e(ie, se, z, ee, oe, "next", ve)
                        }

                        function oe(ve) {
                            _e(ie, se, z, ee, oe, "throw", ve)
                        }
                        ee(void 0)
                    })
                }
            }
            I.d(G, {
                Z: () => Ee
            })
        },
        6045: (ft, G, I) => {
            "use strict";
            I.d(G, {
                E: () => ge
            });
            var _e = I(5242);

            function ge(Ce = 0) {
                return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? (0, _e.P)(globalThis.Buffer.allocUnsafe(Ce)) : new Uint8Array(Ce)
            }
        },
        1376: (ft, G, I) => {
            "use strict";
            I.d(G, {
                z: () => ge
            });
            var _e = I(6045),
                Ee = I(5242);

            function ge(Ce, U) {
                U || (U = Ce.reduce((ie, ee) => ie + ee.length, 0));
                const se = (0, _e.E)(U);
                let z = 0;
                for (const ie of Ce) se.set(ie, z), z += ie.length;
                return (0, Ee.P)(se)
            }
        },
        2269: (ft, G, I) => {
            "use strict";
            I.d(G, {
                m: () => ge
            });
            var _e = I(3388),
                Ee = I(5242);

            function ge(Ce, U = "utf8") {
                const se = _e.Z[U];
                if (!se) throw new Error(`Unsupported encoding "${U}"`);
                return "utf8" !== U && "utf-8" !== U || null == globalThis.Buffer || null == globalThis.Buffer.from ? se.decoder.decode(`${se.prefix}${Ce}`) : (0, Ee.P)(globalThis.Buffer.from(Ce, "utf-8"))
            }
        },
        3544: (ft, G, I) => {
            "use strict";
            I.d(G, {
                BB: () => ge.B,
                mL: () => Ee.m,
                zo: () => _e.z
            });
            var _e = I(1376),
                Ee = I(2269),
                ge = I(878)
        },
        878: (ft, G, I) => {
            "use strict";
            I.d(G, {
                B: () => Ee
            });
            var _e = I(3388);

            function Ee(ge, Ce = "utf8") {
                const U = _e.Z[Ce];
                if (!U) throw new Error(`Unsupported encoding "${Ce}"`);
                return "utf8" !== Ce && "utf-8" !== Ce || null == globalThis.Buffer || null == globalThis.Buffer.from ? U.encoder.encode(ge).substring(1) : globalThis.Buffer.from(ge.buffer, ge.byteOffset, ge.byteLength).toString("utf8")
            }
        },
        5242: (ft, G, I) => {
            "use strict";

            function _e(Ee) {
                return null != globalThis.Buffer ? new Uint8Array(Ee.buffer, Ee.byteOffset, Ee.byteLength) : Ee
            }
            I.d(G, {
                P: () => _e
            })
        },
        3388: (ft, G, I) => {
            "use strict";
            I.d(G, {
                Z: () => Ti
            });
            var _e = {};
            I.r(_e), I.d(_e, {
                identity: () => Lt
            });
            var Ee = {};
            I.r(Ee), I.d(Ee, {
                base2: () => He
            });
            var ge = {};
            I.r(ge), I.d(ge, {
                base8: () => St
            });
            var Ce = {};
            I.r(Ce), I.d(Ce, {
                base10: () => Ft
            });
            var U = {};
            I.r(U), I.d(U, {
                base16: () => Dt,
                base16upper: () => Ct
            });
            var se = {};
            I.r(se), I.d(se, {
                base32: () => Gt,
                base32hex: () => Hn,
                base32hexpad: () => Kn,
                base32hexpadupper: () => ts,
                base32hexupper: () => vn,
                base32pad: () => pn,
                base32padupper: () => _n,
                base32upper: () => kt,
                base32z: () => Vs
            });
            var z = {};
            I.r(z), I.d(z, {
                base36: () => Hi,
                base36upper: () => Hs
            });
            var ie = {};
            I.r(ie), I.d(ie, {
                base58btc: () => ui,
                base58flickr: () => Yn
            });
            var ee = {};
            I.r(ee), I.d(ee, {
                base64: () => ir,
                base64pad: () => Ui,
                base64url: () => Ei,
                base64urlpad: () => Ii
            });
            var oe = {};
            I.r(oe), I.d(oe, {
                base256emoji: () => qn
            });
            var ve = {};
            I.r(ve), I.d(ve, {
                sha256: () => zi,
                sha512: () => ks
            });
            var Te = {};
            I.r(Te), I.d(Te, {
                identity: () => c
            });
            var Me = {};
            I.r(Me), I.d(Me, {
                code: () => f,
                decode: () => m,
                encode: () => p,
                name: () => d
            });
            var Be = {};
            I.r(Be), I.d(Be, {
                code: () => S,
                decode: () => k,
                encode: () => T,
                name: () => w
            });
            const Xe = (new Uint8Array(0), ke => {
                if (ke instanceof Uint8Array && "Uint8Array" === ke.constructor.name) return ke;
                if (ke instanceof ArrayBuffer) return new Uint8Array(ke);
                if (ArrayBuffer.isView(ke)) return new Uint8Array(ke.buffer, ke.byteOffset, ke.byteLength);
                throw new Error("Unknown type, must be binary type")
            });
            class Ze {
                constructor(Ke, qe, gt) {
                    this.name = Ke, this.prefix = qe, this.baseEncode = gt
                }
                encode(Ke) {
                    if (Ke instanceof Uint8Array) return `${this.prefix}${this.baseEncode(Ke)}`;
                    throw Error("Unknown type, must be binary type")
                }
            }
            class tt {
                constructor(Ke, qe, gt) {
                    if (this.name = Ke, this.prefix = qe, void 0 === qe.codePointAt(0)) throw new Error("Invalid prefix character");
                    this.prefixCodePoint = qe.codePointAt(0), this.baseDecode = gt
                }
                decode(Ke) {
                    if ("string" == typeof Ke) {
                        if (Ke.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(Ke)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                        return this.baseDecode(Ke.slice(this.prefix.length))
                    }
                    throw Error("Can only multibase decode strings")
                }
                or(Ke) {
                    return Ge(this, Ke)
                }
            }
            class at {
                constructor(Ke) {
                    this.decoders = Ke
                }
                or(Ke) {
                    return Ge(this, Ke)
                }
                decode(Ke) {
                    const gt = this.decoders[Ke[0]];
                    if (gt) return gt.decode(Ke);
                    throw RangeError(`Unable to decode multibase string ${JSON.stringify(Ke)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                }
            }
            const Ge = (ke, Ke) => new at({ ...ke.decoders || {
                    [ke.prefix]: ke
                },
                ...Ke.decoders || {
                    [Ke.prefix]: Ke
                }
            });
            class ct {
                constructor(Ke, qe, gt, jt) {
                    this.name = Ke, this.prefix = qe, this.baseEncode = gt, this.baseDecode = jt, this.encoder = new Ze(Ke, qe, gt), this.decoder = new tt(Ke, qe, jt)
                }
                encode(Ke) {
                    return this.encoder.encode(Ke)
                }
                decode(Ke) {
                    return this.decoder.decode(Ke)
                }
            }
            const Re = ({
                    name: ke,
                    prefix: Ke,
                    encode: qe,
                    decode: gt
                }) => new ct(ke, Ke, qe, gt),
                we = ({
                    prefix: ke,
                    name: Ke,
                    alphabet: qe
                }) => {
                    const {
                        encode: gt,
                        decode: jt
                    } = function We(ke, Ke) {
                        if (ke.length >= 255) throw new TypeError("Alphabet too long");
                        for (var qe = new Uint8Array(256), gt = 0; gt < qe.length; gt++) qe[gt] = 255;
                        for (var jt = 0; jt < ke.length; jt++) {
                            var un = ke.charAt(jt),
                                Fn = un.charCodeAt(0);
                            if (255 !== qe[Fn]) throw new TypeError(un + " is ambiguous");
                            qe[Fn] = jt
                        }
                        var Mn = ke.length,
                            gi = ke.charAt(0),
                            Vo = Math.log(Mn) / Math.log(256),
                            rr = Math.log(256) / Math.log(Mn);

                        function Br(ji) {
                            if ("string" != typeof ji) throw new TypeError("Expected String");
                            if (0 === ji.length) return new Uint8Array;
                            var qs = 0;
                            if (" " !== ji[qs]) {
                                for (var xr = 0, ar = 0; ji[qs] === gi;) xr++, qs++;
                                for (var ta = (ji.length - qs) * Vo + 1 >>> 0, or = new Uint8Array(ta); ji[qs];) {
                                    var lr = qe[ji.charCodeAt(qs)];
                                    if (255 === lr) return;
                                    for (var es = 0, an = ta - 1;
                                        (0 !== lr || es < ar) && -1 !== an; an--, es++) or[an] = (lr += Mn * or[an] >>> 0) % 256 >>> 0, lr = lr / 256 >>> 0;
                                    if (0 !== lr) throw new Error("Non-zero carry");
                                    ar = es, qs++
                                }
                                if (" " !== ji[qs]) {
                                    for (var Vr = ta - ar; Vr !== ta && 0 === or[Vr];) Vr++;
                                    for (var xa = new Uint8Array(xr + (ta - Vr)), cc = xr; Vr !== ta;) xa[cc++] = or[Vr++];
                                    return xa
                                }
                            }
                        }
                        return {
                            encode: function oo(ji) {
                                if (ji instanceof Uint8Array || (ArrayBuffer.isView(ji) ? ji = new Uint8Array(ji.buffer, ji.byteOffset, ji.byteLength) : Array.isArray(ji) && (ji = Uint8Array.from(ji))), !(ji instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
                                if (0 === ji.length) return "";
                                for (var qs = 0, xr = 0, ar = 0, ta = ji.length; ar !== ta && 0 === ji[ar];) ar++, qs++;
                                for (var or = (ta - ar) * rr + 1 >>> 0, lr = new Uint8Array(or); ar !== ta;) {
                                    for (var es = ji[ar], an = 0, Vr = or - 1;
                                        (0 !== es || an < xr) && -1 !== Vr; Vr--, an++) lr[Vr] = (es += 256 * lr[Vr] >>> 0) % Mn >>> 0, es = es / Mn >>> 0;
                                    if (0 !== es) throw new Error("Non-zero carry");
                                    xr = an, ar++
                                }
                                for (var xa = or - xr; xa !== or && 0 === lr[xa];) xa++;
                                for (var cc = gi.repeat(qs); xa < or; ++xa) cc += ke.charAt(lr[xa]);
                                return cc
                            },
                            decodeUnsafe: Br,
                            decode: function Jd(ji) {
                                var qs = Br(ji);
                                if (qs) return qs;
                                throw new Error(`Non-${Ke} character`)
                            }
                        }
                    }(qe, Ke);
                    return Re({
                        prefix: ke,
                        name: Ke,
                        encode: gt,
                        decode: un => Xe(jt(un))
                    })
                },
                Mt = ({
                    name: ke,
                    prefix: Ke,
                    bitsPerChar: qe,
                    alphabet: gt
                }) => Re({
                    prefix: Ke,
                    name: ke,
                    encode: jt => ((ke, Ke, qe) => {
                        const gt = "=" === Ke[Ke.length - 1],
                            jt = (1 << qe) - 1;
                        let un = "",
                            Fn = 0,
                            Mn = 0;
                        for (let gi = 0; gi < ke.length; ++gi)
                            for (Mn = Mn << 8 | ke[gi], Fn += 8; Fn > qe;) Fn -= qe, un += Ke[jt & Mn >> Fn];
                        if (Fn && (un += Ke[jt & Mn << qe - Fn]), gt)
                            for (; un.length * qe & 7;) un += "=";
                        return un
                    })(jt, gt, qe),
                    decode: jt => ((ke, Ke, qe, gt) => {
                        const jt = {};
                        for (let rr = 0; rr < Ke.length; ++rr) jt[Ke[rr]] = rr;
                        let un = ke.length;
                        for (;
                            "=" === ke[un - 1];) --un;
                        const Fn = new Uint8Array(un * qe / 8 | 0);
                        let Mn = 0,
                            gi = 0,
                            Vo = 0;
                        for (let rr = 0; rr < un; ++rr) {
                            const oo = jt[ke[rr]];
                            if (void 0 === oo) throw new SyntaxError(`Non-${gt} character`);
                            gi = gi << qe | oo, Mn += qe, Mn >= 8 && (Mn -= 8, Fn[Vo++] = 255 & gi >> Mn)
                        }
                        if (Mn >= qe || 255 & gi << 8 - Mn) throw new SyntaxError("Unexpected end of data");
                        return Fn
                    })(jt, gt, qe, ke)
                }),
                Lt = Re({
                    prefix: "\0",
                    name: "identity",
                    encode: ke => (ke => (new TextDecoder).decode(ke))(ke),
                    decode: ke => (ke => (new TextEncoder).encode(ke))(ke)
                }),
                He = Mt({
                    prefix: "0",
                    name: "base2",
                    alphabet: "01",
                    bitsPerChar: 1
                }),
                St = Mt({
                    prefix: "7",
                    name: "base8",
                    alphabet: "01234567",
                    bitsPerChar: 3
                }),
                Ft = we({
                    prefix: "9",
                    name: "base10",
                    alphabet: "0123456789"
                }),
                Dt = Mt({
                    prefix: "f",
                    name: "base16",
                    alphabet: "0123456789abcdef",
                    bitsPerChar: 4
                }),
                Ct = Mt({
                    prefix: "F",
                    name: "base16upper",
                    alphabet: "0123456789ABCDEF",
                    bitsPerChar: 4
                }),
                Gt = Mt({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                kt = Mt({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                pn = Mt({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                _n = Mt({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                Hn = Mt({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                vn = Mt({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                }),
                Kn = Mt({
                    prefix: "t",
                    name: "base32hexpad",
                    alphabet: "0123456789abcdefghijklmnopqrstuv=",
                    bitsPerChar: 5
                }),
                ts = Mt({
                    prefix: "T",
                    name: "base32hexpadupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                    bitsPerChar: 5
                }),
                Vs = Mt({
                    prefix: "h",
                    name: "base32z",
                    alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                    bitsPerChar: 5
                }),
                Hi = we({
                    prefix: "k",
                    name: "base36",
                    alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                }),
                Hs = we({
                    prefix: "K",
                    name: "base36upper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                }),
                ui = we({
                    name: "base58btc",
                    prefix: "z",
                    alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                }),
                Yn = we({
                    name: "base58flickr",
                    prefix: "Z",
                    alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                }),
                ir = Mt({
                    prefix: "m",
                    name: "base64",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    bitsPerChar: 6
                }),
                Ui = Mt({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                Ei = Mt({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                Ii = Mt({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                }),
                Mi = Array.from("\u{1f680}\u{1fa90}\u2604\u{1f6f0}\u{1f30c}\u{1f311}\u{1f312}\u{1f313}\u{1f314}\u{1f315}\u{1f316}\u{1f317}\u{1f318}\u{1f30d}\u{1f30f}\u{1f30e}\u{1f409}\u2600\u{1f4bb}\u{1f5a5}\u{1f4be}\u{1f4bf}\u{1f602}\u2764\u{1f60d}\u{1f923}\u{1f60a}\u{1f64f}\u{1f495}\u{1f62d}\u{1f618}\u{1f44d}\u{1f605}\u{1f44f}\u{1f601}\u{1f525}\u{1f970}\u{1f494}\u{1f496}\u{1f499}\u{1f622}\u{1f914}\u{1f606}\u{1f644}\u{1f4aa}\u{1f609}\u263a\u{1f44c}\u{1f917}\u{1f49c}\u{1f614}\u{1f60e}\u{1f607}\u{1f339}\u{1f926}\u{1f389}\u{1f49e}\u270c\u2728\u{1f937}\u{1f631}\u{1f60c}\u{1f338}\u{1f64c}\u{1f60b}\u{1f497}\u{1f49a}\u{1f60f}\u{1f49b}\u{1f642}\u{1f493}\u{1f929}\u{1f604}\u{1f600}\u{1f5a4}\u{1f603}\u{1f4af}\u{1f648}\u{1f447}\u{1f3b6}\u{1f612}\u{1f92d}\u2763\u{1f61c}\u{1f48b}\u{1f440}\u{1f62a}\u{1f611}\u{1f4a5}\u{1f64b}\u{1f61e}\u{1f629}\u{1f621}\u{1f92a}\u{1f44a}\u{1f973}\u{1f625}\u{1f924}\u{1f449}\u{1f483}\u{1f633}\u270b\u{1f61a}\u{1f61d}\u{1f634}\u{1f31f}\u{1f62c}\u{1f643}\u{1f340}\u{1f337}\u{1f63b}\u{1f613}\u2b50\u2705\u{1f97a}\u{1f308}\u{1f608}\u{1f918}\u{1f4a6}\u2714\u{1f623}\u{1f3c3}\u{1f490}\u2639\u{1f38a}\u{1f498}\u{1f620}\u261d\u{1f615}\u{1f33a}\u{1f382}\u{1f33b}\u{1f610}\u{1f595}\u{1f49d}\u{1f64a}\u{1f639}\u{1f5e3}\u{1f4ab}\u{1f480}\u{1f451}\u{1f3b5}\u{1f91e}\u{1f61b}\u{1f534}\u{1f624}\u{1f33c}\u{1f62b}\u26bd\u{1f919}\u2615\u{1f3c6}\u{1f92b}\u{1f448}\u{1f62e}\u{1f646}\u{1f37b}\u{1f343}\u{1f436}\u{1f481}\u{1f632}\u{1f33f}\u{1f9e1}\u{1f381}\u26a1\u{1f31e}\u{1f388}\u274c\u270a\u{1f44b}\u{1f630}\u{1f928}\u{1f636}\u{1f91d}\u{1f6b6}\u{1f4b0}\u{1f353}\u{1f4a2}\u{1f91f}\u{1f641}\u{1f6a8}\u{1f4a8}\u{1f92c}\u2708\u{1f380}\u{1f37a}\u{1f913}\u{1f619}\u{1f49f}\u{1f331}\u{1f616}\u{1f476}\u{1f974}\u25b6\u27a1\u2753\u{1f48e}\u{1f4b8}\u2b07\u{1f628}\u{1f31a}\u{1f98b}\u{1f637}\u{1f57a}\u26a0\u{1f645}\u{1f61f}\u{1f635}\u{1f44e}\u{1f932}\u{1f920}\u{1f927}\u{1f4cc}\u{1f535}\u{1f485}\u{1f9d0}\u{1f43e}\u{1f352}\u{1f617}\u{1f911}\u{1f30a}\u{1f92f}\u{1f437}\u260e\u{1f4a7}\u{1f62f}\u{1f486}\u{1f446}\u{1f3a4}\u{1f647}\u{1f351}\u2744\u{1f334}\u{1f4a3}\u{1f438}\u{1f48c}\u{1f4cd}\u{1f940}\u{1f922}\u{1f445}\u{1f4a1}\u{1f4a9}\u{1f450}\u{1f4f8}\u{1f47b}\u{1f910}\u{1f92e}\u{1f3bc}\u{1f975}\u{1f6a9}\u{1f34e}\u{1f34a}\u{1f47c}\u{1f48d}\u{1f4e3}\u{1f942}"),
                fi = Mi.reduce((ke, Ke, qe) => (ke[qe] = Ke, ke), []),
                yi = Mi.reduce((ke, Ke, qe) => (ke[Ke.codePointAt(0)] = qe, ke), []),
                qn = Re({
                    prefix: "\u{1f680}",
                    name: "base256emoji",
                    encode: function oi(ke) {
                        return ke.reduce((Ke, qe) => Ke + fi[qe], "")
                    },
                    decode: function bi(ke) {
                        const Ke = [];
                        for (const qe of ke) {
                            const gt = yi[qe.codePointAt(0)];
                            if (void 0 === gt) throw new Error(`Non-base256emoji character: ${qe}`);
                            Ke.push(gt)
                        }
                        return new Uint8Array(Ke)
                    }
                });
            var Wi = I(9671),
                pi = 128,
                Fi = -128,
                Si = Math.pow(2, 31),
                bs = Math.pow(2, 7),
                As = Math.pow(2, 14),
                _l = Math.pow(2, 21),
                xs = Math.pow(2, 28),
                ea = Math.pow(2, 35),
                Ha = Math.pow(2, 42),
                ao = Math.pow(2, 49),
                Un = Math.pow(2, 56),
                zs = Math.pow(2, 63);
            const st_encode = function Gi(ke, Ke, qe) {
                    Ke = Ke || [];
                    for (var gt = qe = qe || 0; ke >= Si;) Ke[qe++] = 255 & ke | pi, ke /= 128;
                    for (; ke & Fi;) Ke[qe++] = 255 & ke | pi, ke >>>= 7;
                    return Ke[qe] = 0 | ke, Gi.bytes = qe - gt + 1, Ke
                },
                st_encodingLength = function(ke) {
                    return ke < bs ? 1 : ke < As ? 2 : ke < _l ? 3 : ke < xs ? 4 : ke < ea ? 5 : ke < Ha ? 6 : ke < ao ? 7 : ke < Un ? 8 : ke < zs ? 9 : 10
                },
                Vt = (ke, Ke, qe = 0) => (st_encode(ke, Ke, qe), Ke),
                Zt = ke => st_encodingLength(ke),
                gn = (ke, Ke) => {
                    const qe = Ke.byteLength,
                        gt = Zt(ke),
                        jt = gt + Zt(qe),
                        un = new Uint8Array(jt + qe);
                    return Vt(ke, un, 0), Vt(qe, un, gt), un.set(Ke, jt), new yr(ke, qe, Ke, un)
                };
            class yr {
                constructor(Ke, qe, gt, jt) {
                    this.code = Ke, this.size = qe, this.digest = gt, this.bytes = jt
                }
            }
            const br = ({
                name: ke,
                code: Ke,
                encode: qe
            }) => new as(ke, Ke, qe);
            class as {
                constructor(Ke, qe, gt) {
                    this.name = Ke, this.code = qe, this.encode = gt
                }
                digest(Ke) {
                    if (Ke instanceof Uint8Array) {
                        const qe = this.encode(Ke);
                        return qe instanceof Uint8Array ? gn(this.code, qe) : qe.then(gt => gn(this.code, gt))
                    }
                    throw Error("Unknown type, must be binary type")
                }
            }
            const ba = ke => function() {
                    var Ke = (0, Wi.Z)(function*(qe) {
                        return new Uint8Array(yield crypto.subtle.digest(ke, qe))
                    });
                    return function(qe) {
                        return Ke.apply(this, arguments)
                    }
                }(),
                zi = br({
                    name: "sha2-256",
                    code: 18,
                    encode: ba("SHA-256")
                }),
                ks = br({
                    name: "sha2-512",
                    code: 19,
                    encode: ba("SHA-512")
                }),
                a = Xe,
                c = {
                    code: 0,
                    name: "identity",
                    encode: a,
                    digest: ke => gn(0, a(ke))
                },
                d = "raw",
                f = 85,
                p = ke => Xe(ke),
                m = ke => Xe(ke),
                y = new TextEncoder,
                x = new TextDecoder,
                w = "json",
                S = 512,
                T = ke => y.encode(JSON.stringify(ke)),
                k = ke => JSON.parse(x.decode(ke));
            Symbol, Symbol.for("nodejs.util.inspect.custom"), Symbol.for("@ipld/js-cid/CID");
            const nt = { ..._e,
                ...Ee,
                ...ge,
                ...Ce,
                ...U,
                ...se,
                ...z,
                ...ie,
                ...ee,
                ...oe
            };
            var Tt = I(6045);

            function wt(ke, Ke, qe, gt) {
                return {
                    name: ke,
                    prefix: Ke,
                    encoder: {
                        name: ke,
                        prefix: Ke,
                        encode: qe
                    },
                    decoder: {
                        decode: gt
                    }
                }
            }
            const ln = wt("utf8", "u", ke => "u" + new TextDecoder("utf8").decode(ke), ke => (new TextEncoder).encode(ke.substring(1))),
                Jt = wt("ascii", "a", ke => {
                    let Ke = "a";
                    for (let qe = 0; qe < ke.length; qe++) Ke += String.fromCharCode(ke[qe]);
                    return Ke
                }, ke => {
                    ke = ke.substring(1);
                    const Ke = (0, Tt.E)(ke.length);
                    for (let qe = 0; qe < ke.length; qe++) Ke[qe] = ke.charCodeAt(qe);
                    return Ke
                }),
                Ti = {
                    utf8: ln,
                    "utf-8": ln,
                    hex: nt.base16,
                    latin1: Jt,
                    ascii: Jt,
                    binary: Jt,
                    ...nt
                }
        },
        277: (ft, G, I) => {
            "use strict";

            function _e(Ee) {
                return "string" == typeof Ee ? {
                    address: Ee,
                    type: "json-rpc"
                } : Ee
            }
            I.d(G, {
                T: () => _e
            })
        },
        4257: (ft, G, I) => {
            "use strict";
            I.d(G, {
                O: () => Me
            });
            var _e = I(9671),
                Ee = I(7627),
                ge = I(4963),
                Ce = I(2490),
                U = I(1849),
                se = I(783),
                z = I(4439),
                ie = I(5276),
                ee = I(8821),
                oe = I(2897),
                ve = I(4637),
                Te = I(8347);

            function Me(We, Ye) {
                return Be.apply(this, arguments)
            }

            function Be() {
                return (Be = (0, _e.Z)(function*(We, {
                    blockNumber: Ye,
                    blockTag: Je,
                    coinType: te,
                    name: Pe,
                    universalResolverAddress: Oe
                }) {
                    let J = Oe;
                    if (!J) {
                        if (!We.chain) throw new Error("client chain not configured. universalResolverAddress is required.");
                        J = (0, U.L)({
                            blockNumber: Ye,
                            chain: We.chain,
                            contract: "ensUniversalResolver"
                        })
                    }
                    try {
                        const Ie = (0, Ce.R)({
                                abi: Ee.X$,
                                functionName: "addr",
                                ...null != te ? {
                                    args: [(0, ee.V)(Pe), BigInt(te)]
                                } : {
                                    args: [(0, ee.V)(Pe)]
                                }
                            }),
                            Xe = yield(0, ve.s)(We, Te.L, "readContract")({
                                address: J,
                                abi: Ee.k3,
                                functionName: "resolve",
                                args: [(0, z.NC)((0, oe.T)(Pe)), Ie],
                                blockNumber: Ye,
                                blockTag: Je
                            });
                        if ("0x" === Xe[0]) return null;
                        const R = (0, ge.k)({
                            abi: Ee.X$,
                            args: null != te ? [(0, ee.V)(Pe), BigInt(te)] : void 0,
                            functionName: "addr",
                            data: Xe[0]
                        });
                        return "0x" === R || "0x00" === (0, se.f)(R) ? null : R
                    } catch (Ie) {
                        if ((0, ie.c)(Ie, "resolve")) return null;
                        throw Ie
                    }
                })).apply(this, arguments)
            }
        },
        9632: (ft, G, I) => {
            "use strict";
            I.d(G, {
                r: () => Ge
            });
            var _e = I(9671),
                Ee = I(8347),
                ge = I(2618);
            class Ce extends ge.G {
                constructor({
                    data: we
                }) {
                    super("Unable to extract image from metadata. The metadata may be malformed or invalid.", {
                        metaMessages: ["- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.", "", `Provided data: ${JSON.stringify(we)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidMetadataError"
                    })
                }
            }
            class U extends ge.G {
                constructor({
                    reason: we
                }) {
                    super(`ENS NFT avatar URI is invalid. ${we}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidNftUriError"
                    })
                }
            }
            class se extends ge.G {
                constructor({
                    uri: we
                }) {
                    super(`Unable to resolve ENS avatar URI "${we}". The URI may be malformed, invalid, or does not respond with a valid image.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUriResolutionError"
                    })
                }
            }
            class z extends ge.G {
                constructor({
                    namespace: we
                }) {
                    super(`ENS NFT avatar namespace "${we}" is not supported. Must be "erc721" or "erc1155".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUnsupportedNamespaceError"
                    })
                }
            }
            const ie = /(?<protocol>https?:\/\/[^\/]*|ipfs:\/|ipns:\/|ar:\/)?(?<root>\/)?(?<subpath>ipfs\/|ipns\/)?(?<target>[\w\-.]+)(?<subtarget>\/.*)?/,
                ee = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\/(?<target>[\w\-.]+))?(?<subtarget>\/.*)?$/,
                oe = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
                ve = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;

            function Me() {
                return (Me = (0, _e.Z)(function*(Re) {
                    try {
                        const we = yield fetch(Re, {
                            method: "HEAD"
                        });
                        return 200 === we.status && we.headers.get("content-type") ? .startsWith("image/")
                    } catch (we) {
                        return !("object" == typeof we && typeof we.response < "u" || !globalThis.hasOwnProperty("Image")) && new Promise(je => {
                            const _t = new Image;
                            _t.onload = () => {
                                je(!0)
                            }, _t.onerror = () => {
                                je(!1)
                            }, _t.src = Re
                        })
                    }
                })).apply(this, arguments)
            }

            function Be(Re, we) {
                return Re ? Re.endsWith("/") ? Re.slice(0, -1) : Re : we
            }

            function We({
                uri: Re,
                gatewayUrls: we
            }) {
                const je = oe.test(Re);
                if (je) return {
                    uri: Re,
                    isOnChain: !0,
                    isEncoded: je
                };
                const _t = Be(we ? .ipfs, "https://ipfs.io"),
                    Mt = Be(we ? .arweave, "https://arweave.net"),
                    Lt = Re.match(ie),
                    {
                        protocol: He,
                        subpath: St,
                        target: Ft,
                        subtarget: Dt = ""
                    } = Lt ? .groups || {},
                    Ct = "ipns:/" === He || "ipns/" === St,
                    Gt = "ipfs:/" === He || "ipfs/" === St || ee.test(Re);
                if (Re.startsWith("http") && !Ct && !Gt) {
                    let pn = Re;
                    return we ? .arweave && (pn = Re.replace(/https:\/\/arweave.net/g, we ? .arweave)), {
                        uri: pn,
                        isOnChain: !1,
                        isEncoded: !1
                    }
                }
                if ((Ct || Gt) && Ft) return {
                    uri: `${_t}/${Ct?"ipns":"ipfs"}/${Ft}${Dt}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                if ("ar:/" === He && Ft) return {
                    uri: `${Mt}/${Ft}${Dt||""}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                let kt = Re.replace(ve, "");
                if (kt.startsWith("<svg") && (kt = `data:image/svg+xml;base64,${btoa(kt)}`), kt.startsWith("data:") || kt.startsWith("{")) return {
                    uri: kt,
                    isOnChain: !0,
                    isEncoded: !1
                };
                throw new se({
                    uri: Re
                })
            }

            function Ye(Re) {
                if ("object" != typeof Re || !("image" in Re) && !("image_url" in Re) && !("image_data" in Re)) throw new Ce({
                    data: Re
                });
                return Re.image || Re.image_url || Re.image_data
            }

            function te() {
                return (te = (0, _e.Z)(function*({
                    gatewayUrls: Re,
                    uri: we
                }) {
                    try {
                        const je = yield fetch(we).then(Mt => Mt.json());
                        return yield Pe({
                            gatewayUrls: Re,
                            uri: Ye(je)
                        })
                    } catch {
                        throw new se({
                            uri: we
                        })
                    }
                })).apply(this, arguments)
            }

            function Pe(Re) {
                return Oe.apply(this, arguments)
            }

            function Oe() {
                return Oe = (0, _e.Z)(function*({
                    gatewayUrls: Re,
                    uri: we
                }) {
                    const {
                        uri: je,
                        isOnChain: _t
                    } = We({
                        uri: we,
                        gatewayUrls: Re
                    });
                    if (_t || (yield function Te(Re) {
                            return Me.apply(this, arguments)
                        }(je))) return je;
                    throw new se({
                        uri: we
                    })
                }), Oe.apply(this, arguments)
            }

            function Xe() {
                return (Xe = (0, _e.Z)(function*(Re, {
                    nft: we
                }) {
                    if ("erc721" === we.namespace) return (0, Ee.L)(Re, {
                        address: we.contractAddress,
                        abi: [{
                            name: "tokenURI",
                            type: "function",
                            stateMutability: "view",
                            inputs: [{
                                name: "tokenId",
                                type: "uint256"
                            }],
                            outputs: [{
                                name: "",
                                type: "string"
                            }]
                        }],
                        functionName: "tokenURI",
                        args: [BigInt(we.tokenID)]
                    });
                    if ("erc1155" === we.namespace) return (0, Ee.L)(Re, {
                        address: we.contractAddress,
                        abi: [{
                            name: "uri",
                            type: "function",
                            stateMutability: "view",
                            inputs: [{
                                name: "_id",
                                type: "uint256"
                            }],
                            outputs: [{
                                name: "",
                                type: "string"
                            }]
                        }],
                        functionName: "uri",
                        args: [BigInt(we.tokenID)]
                    });
                    throw new z({
                        namespace: we.namespace
                    })
                })).apply(this, arguments)
            }

            function ce() {
                return ce = (0, _e.Z)(function*(Re, {
                    gatewayUrls: we,
                    record: je
                }) {
                    return /eip155:/i.test(je) ? function Ve(Re, we) {
                        return Ze.apply(this, arguments)
                    }(Re, {
                        gatewayUrls: we,
                        record: je
                    }) : Pe({
                        uri: je,
                        gatewayUrls: we
                    })
                }), ce.apply(this, arguments)
            }

            function Ze() {
                return Ze = (0, _e.Z)(function*(Re, {
                    gatewayUrls: we,
                    record: je
                }) {
                    const _t = function J(Re) {
                            let we = Re;
                            we.startsWith("did:nft:") && (we = we.replace("did:nft:", "").replace(/_/g, "/"));
                            const [je, _t, Mt] = we.split("/"), [Lt, He] = je.split(":"), [St, Ft] = _t.split(":");
                            if (!Lt || "eip155" !== Lt.toLowerCase()) throw new U({
                                reason: "Only EIP-155 supported"
                            });
                            if (!He) throw new U({
                                reason: "Chain ID not found"
                            });
                            if (!Ft) throw new U({
                                reason: "Contract address not found"
                            });
                            if (!Mt) throw new U({
                                reason: "Token ID not found"
                            });
                            if (!St) throw new U({
                                reason: "ERC namespace not found"
                            });
                            return {
                                chainID: parseInt(He),
                                namespace: St.toLowerCase(),
                                contractAddress: Ft,
                                tokenID: Mt
                            }
                        }(je),
                        Mt = yield function Ie(Re, we) {
                            return Xe.apply(this, arguments)
                        }(Re, {
                            nft: _t
                        }), {
                            uri: Lt,
                            isOnChain: He,
                            isEncoded: St
                        } = We({
                            uri: Mt,
                            gatewayUrls: we
                        });
                    if (He && (Lt.includes("data:application/json;base64,") || Lt.startsWith("{"))) {
                        const Dt = St ? atob(Lt.replace("data:application/json;base64,", "")) : Lt;
                        return Pe({
                            uri: Ye(JSON.parse(Dt)),
                            gatewayUrls: we
                        })
                    }
                    let Ft = _t.tokenID;
                    return "erc1155" === _t.namespace && (Ft = Ft.replace("0x", "").padStart(64, "0")),
                        function Je(Re) {
                            return te.apply(this, arguments)
                        }({
                            gatewayUrls: we,
                            uri: Lt.replace(/(?:0x)?{id}/, Ft)
                        })
                }), Ze.apply(this, arguments)
            }
            var tt = I(4637),
                at = I(1180);

            function Ge(Re, we) {
                return ct.apply(this, arguments)
            }

            function ct() {
                return ct = (0, _e.Z)(function*(Re, {
                    blockNumber: we,
                    blockTag: je,
                    gatewayUrls: _t,
                    name: Mt,
                    universalResolverAddress: Lt
                }) {
                    const He = yield(0, tt.s)(Re, at.g, "getEnsText")({
                        blockNumber: we,
                        blockTag: je,
                        key: "avatar",
                        name: Mt,
                        universalResolverAddress: Lt
                    });
                    if (!He) return null;
                    try {
                        return yield function R(Re, we) {
                            return ce.apply(this, arguments)
                        }(Re, {
                            record: He,
                            gatewayUrls: _t
                        })
                    } catch {
                        return null
                    }
                }), ct.apply(this, arguments)
            }
        },
        8971: (ft, G, I) => {
            "use strict";
            I.d(G, {
                w: () => ee
            });
            var _e = I(9671),
                Ee = I(7627),
                ge = I(1849),
                Ce = I(4439),
                U = I(5276),
                se = I(2897),
                z = I(4637),
                ie = I(8347);

            function ee(ve, Te) {
                return oe.apply(this, arguments)
            }

            function oe() {
                return (oe = (0, _e.Z)(function*(ve, {
                    address: Te,
                    blockNumber: Me,
                    blockTag: Be,
                    universalResolverAddress: We
                }) {
                    let Ye = We;
                    if (!Ye) {
                        if (!ve.chain) throw new Error("client chain not configured. universalResolverAddress is required.");
                        Ye = (0, ge.L)({
                            blockNumber: Me,
                            chain: ve.chain,
                            contract: "ensUniversalResolver"
                        })
                    }
                    const Je = `${Te.toLowerCase().substring(2)}.addr.reverse`;
                    try {
                        const [te, Pe] = yield(0, z.s)(ve, ie.L, "readContract")({
                            address: Ye,
                            abi: Ee.du,
                            functionName: "reverse",
                            args: [(0, Ce.NC)((0, se.T)(Je))],
                            blockNumber: Me,
                            blockTag: Be
                        });
                        return Te.toLowerCase() !== Pe.toLowerCase() ? null : te
                    } catch (te) {
                        if ((0, U.c)(te, "reverse")) return null;
                        throw te
                    }
                })).apply(this, arguments)
            }
        },
        3069: (ft, G, I) => {
            "use strict";
            I.d(G, {
                S: () => z
            });
            var _e = I(9671),
                Ee = I(1849),
                ge = I(4439),
                Ce = I(2897),
                U = I(4637),
                se = I(8347);

            function z(ee, oe) {
                return ie.apply(this, arguments)
            }

            function ie() {
                return (ie = (0, _e.Z)(function*(ee, {
                    blockNumber: oe,
                    blockTag: ve,
                    name: Te,
                    universalResolverAddress: Me
                }) {
                    let Be = Me;
                    if (!Be) {
                        if (!ee.chain) throw new Error("client chain not configured. universalResolverAddress is required.");
                        Be = (0, Ee.L)({
                            blockNumber: oe,
                            chain: ee.chain,
                            contract: "ensUniversalResolver"
                        })
                    }
                    const [We] = yield(0, U.s)(ee, se.L, "readContract")({
                        address: Be,
                        abi: [{
                            inputs: [{
                                type: "bytes"
                            }],
                            name: "findResolver",
                            outputs: [{
                                type: "address"
                            }, {
                                type: "bytes32"
                            }],
                            stateMutability: "view",
                            type: "function"
                        }],
                        functionName: "findResolver",
                        args: [(0, ge.NC)((0, Ce.T)(Te))],
                        blockNumber: oe,
                        blockTag: ve
                    });
                    return We
                })).apply(this, arguments)
            }
        },
        1180: (ft, G, I) => {
            "use strict";
            I.d(G, {
                g: () => Te
            });
            var _e = I(9671),
                Ee = I(7627),
                ge = I(4963),
                Ce = I(2490),
                U = I(1849),
                se = I(4439),
                z = I(5276),
                ie = I(8821),
                ee = I(2897),
                oe = I(4637),
                ve = I(8347);

            function Te(Be, We) {
                return Me.apply(this, arguments)
            }

            function Me() {
                return (Me = (0, _e.Z)(function*(Be, {
                    blockNumber: We,
                    blockTag: Ye,
                    name: Je,
                    key: te,
                    universalResolverAddress: Pe
                }) {
                    let Oe = Pe;
                    if (!Oe) {
                        if (!Be.chain) throw new Error("client chain not configured. universalResolverAddress is required.");
                        Oe = (0, U.L)({
                            blockNumber: We,
                            chain: Be.chain,
                            contract: "ensUniversalResolver"
                        })
                    }
                    try {
                        const J = yield(0, oe.s)(Be, ve.L, "readContract")({
                            address: Oe,
                            abi: Ee.k3,
                            functionName: "resolve",
                            args: [(0, se.NC)((0, ee.T)(Je)), (0, Ce.R)({
                                abi: Ee.nZ,
                                functionName: "text",
                                args: [(0, ie.V)(Je), te]
                            })],
                            blockNumber: We,
                            blockTag: Ye
                        });
                        if ("0x" === J[0]) return null;
                        const Ie = (0, ge.k)({
                            abi: Ee.nZ,
                            functionName: "text",
                            data: J[0]
                        });
                        return "" === Ie ? null : Ie
                    } catch (J) {
                        if ((0, z.c)(J, "resolve")) return null;
                        throw J
                    }
                })).apply(this, arguments)
            }
        },
        9934: (ft, G, I) => {
            "use strict";
            I.d(G, {
                R: () => Pe
            });
            var _e = I(9671),
                Ee = I(277),
                ge = I(7627);
            const Ce = "0x82ad56cb";
            var U = I(2618),
                se = I(8722),
                z = I(8169),
                ie = I(4963),
                ee = I(2490),
                oe = I(1849),
                ve = I(4439),
                Te = I(7354),
                Me = I(2917),
                We = I(7603),
                Ye = I(7369),
                Je = I(7447),
                te = I(9056);

            function Pe(ce, Ve) {
                return Oe.apply(this, arguments)
            }

            function Oe() {
                return Oe = (0, _e.Z)(function*(ce, Ve) {
                    const {
                        account: Ze = ce.account,
                        batch: tt = !!ce.batch ? .multicall,
                        blockNumber: at,
                        blockTag: Ge = "latest",
                        accessList: ct,
                        data: Re,
                        gas: we,
                        gasPrice: je,
                        maxFeePerGas: _t,
                        maxPriorityFeePerGas: Mt,
                        nonce: Lt,
                        to: He,
                        value: St,
                        ...Ft
                    } = Ve, Dt = Ze ? (0, Ee.T)(Ze) : void 0;
                    try {
                        (0, te.F)(Ve);
                        const Gt = (at ? (0, ve.eC)(at) : void 0) || Ge,
                            kt = ce.chain ? .formatters ? .transactionRequest ? .format,
                            _n = (kt || Ye.tG)({ ...(0, We.K)(Ft, {
                                    format: kt
                                }),
                                from: Dt ? .address,
                                accessList: ct,
                                data: Re,
                                gas: we,
                                gasPrice: je,
                                maxFeePerGas: _t,
                                maxPriorityFeePerGas: Mt,
                                nonce: Lt,
                                to: He,
                                value: St
                            });
                        if (tt && function J({
                                request: ce
                            }) {
                                const {
                                    data: Ve,
                                    to: Ze,
                                    ...tt
                                } = ce;
                                return !(!Ve || Ve.startsWith(Ce) || !Ze || Object.values(tt).filter(at => typeof at < "u").length > 0)
                            }({
                                request: _n
                            })) try {
                            return yield function Ie(ce, Ve) {
                                return Xe.apply(this, arguments)
                            }(ce, { ..._n,
                                blockNumber: at,
                                blockTag: Ge
                            })
                        } catch (vn) {
                            if (!(vn instanceof se.pZ || vn instanceof se.mm)) throw vn
                        }
                        const Hn = yield ce.request({
                            method: "eth_call",
                            params: Gt ? [_n, Gt] : [_n]
                        });
                        return "0x" === Hn ? {
                            data: void 0
                        } : {
                            data: Hn
                        }
                    } catch (Ct) {
                        const Gt = function R(ce) {
                                if (!(ce instanceof U.G)) return;
                                const Ve = ce.walk();
                                return "object" == typeof Ve.data ? Ve.data.data : Ve.data
                            }(Ct),
                            {
                                offchainLookup: kt,
                                offchainLookupSignature: pn
                            } = yield I.e(959).then(I.bind(I, 6959));
                        if (Gt ? .slice(0, 10) === pn && He) return {
                            data: yield kt(ce, {
                                data: Gt,
                                to: He
                            })
                        };
                        throw function Be(ce, {
                            docsPath: Ve,
                            ...Ze
                        }) {
                            const tt = (() => {
                                const at = (0, Me.k)(ce, Ze);
                                return at instanceof Te.cj ? ce : at
                            })();
                            return new z.cg(tt, {
                                docsPath: Ve,
                                ...Ze
                            })
                        }(Ct, { ...Ve,
                            account: Dt,
                            chain: ce.chain
                        })
                    }
                }), Oe.apply(this, arguments)
            }

            function Xe() {
                return Xe = (0, _e.Z)(function*(ce, Ve) {
                    const {
                        batchSize: Ze = 1024,
                        wait: tt = 0
                    } = "object" == typeof ce.batch ? .multicall ? ce.batch.multicall : {}, {
                        blockNumber: at,
                        blockTag: Ge = "latest",
                        data: ct,
                        multicallAddress: Re,
                        to: we
                    } = Ve;
                    let je = Re;
                    if (!je) {
                        if (!ce.chain) throw new se.pZ;
                        je = (0, oe.L)({
                            blockNumber: at,
                            chain: ce.chain,
                            contract: "multicall3"
                        })
                    }
                    const Mt = (at ? (0, ve.eC)(at) : void 0) || Ge,
                        {
                            schedule: Lt
                        } = (0, Je.S)({
                            id: `${ce.uid}.${Mt}`,
                            wait: tt,
                            shouldSplitBatch: Ft => Ft.reduce((Ct, {
                                data: Gt
                            }) => Ct + (Gt.length - 2), 0) > 2 * Ze,
                            fn: (Ft = (0, _e.Z)(function*(Dt) {
                                const Ct = Dt.map(pn => ({
                                        allowFailure: !0,
                                        callData: pn.data,
                                        target: pn.to
                                    })),
                                    Gt = (0, ee.R)({
                                        abi: ge.F8,
                                        args: [Ct],
                                        functionName: "aggregate3"
                                    }),
                                    kt = yield ce.request({
                                        method: "eth_call",
                                        params: [{
                                            data: Gt,
                                            to: je
                                        }, Mt]
                                    });
                                return (0, ie.k)({
                                    abi: ge.F8,
                                    args: [Ct],
                                    functionName: "aggregate3",
                                    data: kt || "0x"
                                })
                            }), function(Ct) {
                                return Ft.apply(this, arguments)
                            })
                        }),
                        [{
                            returnData: He,
                            success: St
                        }] = yield Lt({
                            data: ct,
                            to: we
                        });
                    var Ft;
                    if (!St) throw new z.VQ({
                        data: He
                    });
                    return "0x" === He ? {
                        data: void 0
                    } : {
                        data: He
                    }
                }), Xe.apply(this, arguments)
            }
        },
        8347: (ft, G, I) => {
            "use strict";
            I.d(G, {
                L: () => z
            });
            var _e = I(9671),
                Ee = I(4963),
                ge = I(2490),
                Ce = I(660),
                U = I(4637),
                se = I(9934);

            function z(ee, oe) {
                return ie.apply(this, arguments)
            }

            function ie() {
                return (ie = (0, _e.Z)(function*(ee, {
                    abi: oe,
                    address: ve,
                    args: Te,
                    functionName: Me,
                    ...Be
                }) {
                    const We = (0, ge.R)({
                        abi: oe,
                        args: Te,
                        functionName: Me
                    });
                    try {
                        const {
                            data: Ye
                        } = yield(0, U.s)(ee, se.R, "call")({
                            data: We,
                            to: ve,
                            ...Be
                        });
                        return (0, Ee.k)({
                            abi: oe,
                            args: Te,
                            functionName: Me,
                            data: Ye || "0x"
                        })
                    } catch (Ye) {
                        throw (0, Ce.S)(Ye, {
                            abi: oe,
                            address: ve,
                            args: Te,
                            docsPath: "/docs/contract/readContract",
                            functionName: Me
                        })
                    }
                })).apply(this, arguments)
            }
        },
        7627: (ft, G, I) => {
            "use strict";
            I.d(G, {
                $o: () => ie,
                F8: () => _e,
                X$: () => se,
                du: () => Ce,
                k3: () => ge,
                nZ: () => U
            });
            const _e = [{
                    inputs: [{
                        components: [{
                            name: "target",
                            type: "address"
                        }, {
                            name: "allowFailure",
                            type: "bool"
                        }, {
                            name: "callData",
                            type: "bytes"
                        }],
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "aggregate3",
                    outputs: [{
                        components: [{
                            name: "success",
                            type: "bool"
                        }, {
                            name: "returnData",
                            type: "bytes"
                        }],
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }],
                Ee = [{
                    inputs: [],
                    name: "ResolverNotFound",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ResolverWildcardNotSupported",
                    type: "error"
                }],
                ge = [...Ee, {
                    name: "resolve",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes"
                    }, {
                        name: "data",
                        type: "bytes"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }, {
                        name: "address",
                        type: "address"
                    }]
                }],
                Ce = [...Ee, {
                    name: "reverse",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        type: "bytes",
                        name: "reverseName"
                    }],
                    outputs: [{
                        type: "string",
                        name: "resolvedName"
                    }, {
                        type: "address",
                        name: "resolvedAddress"
                    }, {
                        type: "address",
                        name: "reverseResolver"
                    }, {
                        type: "address",
                        name: "resolver"
                    }]
                }],
                U = [{
                    name: "text",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "key",
                        type: "string"
                    }],
                    outputs: [{
                        name: "",
                        type: "string"
                    }]
                }],
                se = [{
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }],
                    outputs: [{
                        name: "",
                        type: "address"
                    }]
                }, {
                    name: "addr",
                    type: "function",
                    stateMutability: "view",
                    inputs: [{
                        name: "name",
                        type: "bytes32"
                    }, {
                        name: "coinType",
                        type: "uint256"
                    }],
                    outputs: [{
                        name: "",
                        type: "bytes"
                    }]
                }],
                ie = [{
                    inputs: [{
                        internalType: "address",
                        name: "_signer",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "_hash",
                        type: "bytes32"
                    }, {
                        internalType: "bytes",
                        name: "_signature",
                        type: "bytes"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }]
        },
        6848: (ft, G, I) => {
            "use strict";
            I.d(G, {
                $: () => _e,
                Up: () => Ee,
                hZ: () => ge
            });
            const _e = {
                    1: "An `assert` condition failed.",
                    17: "Arithmic operation resulted in underflow or overflow.",
                    18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
                    33: "Attempted to convert to an invalid type.",
                    34: "Attempted to access a storage byte array that is incorrectly encoded.",
                    49: "Performed `.pop()` on an empty array",
                    50: "Array index is out of bounds.",
                    65: "Allocated too much memory or created an array which is too large.",
                    81: "Attempted to call a zero-initialized variable of internal function type."
                },
                Ee = {
                    inputs: [{
                        name: "message",
                        type: "string"
                    }],
                    name: "Error",
                    type: "error"
                },
                ge = {
                    inputs: [{
                        name: "reason",
                        type: "uint256"
                    }],
                    name: "Panic",
                    type: "error"
                }
        },
        9744: (ft, G, I) => {
            "use strict";
            I.d(G, {
                Bd: () => ge,
                Zn: () => Ee,
                ez: () => _e
            });
            const _e = {
                    gwei: 9,
                    wei: 18
                },
                Ee = {
                    ether: -9,
                    wei: 9
                },
                ge = {
                    ether: -18,
                    gwei: -9
                }
        },
        6577: (ft, G, I) => {
            "use strict";
            I.d(G, {
                CI: () => ce,
                FM: () => We,
                Gy: () => Xe,
                KY: () => J,
                M4: () => oe,
                MX: () => Pe,
                SM: () => Ie,
                cO: () => U,
                dh: () => R,
                fM: () => Ce,
                fs: () => ve,
                gr: () => ee,
                hn: () => Ve,
                lC: () => Ye,
                mv: () => Je,
                wM: () => Ze,
                wb: () => ie,
                xB: () => z,
                xL: () => te,
                yP: () => Be
            });
            var _e = I(6537),
                Ee = I(4018),
                ge = I(2618);
            class Ce extends ge.G {
                constructor({
                    docsPath: Ge
                }) {
                    super(["A constructor was not found on the ABI.", "Make sure you are using the correct ABI and that the constructor exists on it."].join("\n"), {
                        docsPath: Ge
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorNotFoundError"
                    })
                }
            }
            class U extends ge.G {
                constructor({
                    docsPath: Ge
                }) {
                    super(["Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.", "Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists."].join("\n"), {
                        docsPath: Ge
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorParamsNotFoundError"
                    })
                }
            }
            class z extends ge.G {
                constructor({
                    data: Ge,
                    params: ct,
                    size: Re
                }) {
                    super([`Data size of ${Re} bytes is too small for given parameters.`].join("\n"), {
                        metaMessages: [`Params: (${(0,_e.h)(ct,{includeName:!0})})`, `Data:   ${Ge} (${Re} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeTooSmallError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = Ge, this.params = ct, this.size = Re
                }
            }
            class ie extends ge.G {
                constructor() {
                    super('Cannot decode zero data ("0x") with ABI parameters.'), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingZeroDataError"
                    })
                }
            }
            class ee extends ge.G {
                constructor({
                    expectedLength: Ge,
                    givenLength: ct,
                    type: Re
                }) {
                    super([`ABI encoding array length mismatch for type ${Re}.`, `Expected length: ${Ge}`, `Given length: ${ct}`].join("\n")), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingArrayLengthMismatchError"
                    })
                }
            }
            class oe extends ge.G {
                constructor({
                    expectedSize: Ge,
                    value: ct
                }) {
                    super(`Size of bytes "${ct}" (bytes${(0,Ee.d)(ct)}) does not match expected size (bytes${Ge}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingBytesSizeMismatchError"
                    })
                }
            }
            class ve extends ge.G {
                constructor({
                    expectedLength: Ge,
                    givenLength: ct
                }) {
                    super(["ABI encoding params/values length mismatch.", `Expected length (params): ${Ge}`, `Given length (values): ${ct}`].join("\n")), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingLengthMismatchError"
                    })
                }
            }
            class Be extends ge.G {
                constructor(Ge, {
                    docsPath: ct
                }) {
                    super([`Encoded error signature "${Ge}" not found on ABI.`, "Make sure you are using the correct ABI and that the error exists on it.", `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${Ge}.`].join("\n"), {
                        docsPath: ct
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorSignatureNotFoundError"
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.signature = Ge
                }
            }
            class We extends ge.G {
                constructor({
                    docsPath: Ge
                }) {
                    super("Cannot extract event signature from empty topics.", {
                        docsPath: Ge
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureEmptyTopicsError"
                    })
                }
            }
            class Ye extends ge.G {
                constructor(Ge, {
                    docsPath: ct
                }) {
                    super([`Encoded event signature "${Ge}" not found on ABI.`, "Make sure you are using the correct ABI and that the event exists on it.", `You can look up the signature here: https://openchain.xyz/signatures?query=${Ge}.`].join("\n"), {
                        docsPath: ct
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureNotFoundError"
                    })
                }
            }
            class Je extends ge.G {
                constructor(Ge, {
                    docsPath: ct
                } = {}) {
                    super([`Event ${Ge?`"${Ge}" `:""}not found on ABI.`, "Make sure you are using the correct ABI and that the event exists on it."].join("\n"), {
                        docsPath: ct
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventNotFoundError"
                    })
                }
            }
            class te extends ge.G {
                constructor(Ge, {
                    docsPath: ct
                } = {}) {
                    super([`Function ${Ge?`"${Ge}" `:""}not found on ABI.`, "Make sure you are using the correct ABI and that the function exists on it."].join("\n"), {
                        docsPath: ct
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionNotFoundError"
                    })
                }
            }
            class Pe extends ge.G {
                constructor(Ge, {
                    docsPath: ct
                }) {
                    super([`Function "${Ge}" does not contain any \`outputs\` on ABI.`, "Cannot decode function result without knowing what the parameter types are.", "Make sure you are using the correct ABI and that the function exists on it."].join("\n"), {
                        docsPath: ct
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionOutputsNotFoundError"
                    })
                }
            }
            class J extends ge.G {
                constructor({
                    expectedSize: Ge,
                    givenSize: ct
                }) {
                    super(`Expected bytes${Ge}, got bytes${ct}.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BytesSizeMismatchError"
                    })
                }
            }
            class Ie extends ge.G {
                constructor({
                    abiItem: Ge,
                    data: ct,
                    params: Re,
                    size: we
                }) {
                    super([`Data size of ${we} bytes is too small for non-indexed event parameters.`].join("\n"), {
                        metaMessages: [`Params: (${(0,_e.h)(Re,{includeName:!0})})`, `Data:   ${ct} (${we} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogDataMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = Ge, this.data = ct, this.params = Re, this.size = we
                }
            }
            class Xe extends ge.G {
                constructor({
                    abiItem: Ge,
                    param: ct
                }) {
                    super([`Expected a topic for indexed event parameter${ct.name?` "${ct.name}"`:""} on event "${(0,_e.t)(Ge,{includeName:!0})}".`].join("\n")), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogTopicsMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = Ge
                }
            }
            class R extends ge.G {
                constructor(Ge, {
                    docsPath: ct
                }) {
                    super([`Type "${Ge}" is not a valid encoding type.`, "Please provide a valid ABI type."].join("\n"), {
                        docsPath: ct
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiEncodingType"
                    })
                }
            }
            class ce extends ge.G {
                constructor(Ge, {
                    docsPath: ct
                }) {
                    super([`Type "${Ge}" is not a valid decoding type.`, "Please provide a valid ABI type."].join("\n"), {
                        docsPath: ct
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiDecodingType"
                    })
                }
            }
            class Ve extends ge.G {
                constructor(Ge) {
                    super([`Value "${Ge}" is not a valid array.`].join("\n")), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidArrayError"
                    })
                }
            }
            class Ze extends ge.G {
                constructor(Ge) {
                    super([`"${Ge}" is not a valid definition type.`, 'Valid types: "function", "event", "error"'].join("\n")), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidDefinitionTypeError"
                    })
                }
            }
        },
        8355: (ft, G, I) => {
            "use strict";
            I.d(G, {
                b: () => Ee
            });
            var _e = I(2618);
            class Ee extends _e.G {
                constructor({
                    address: Ce
                }) {
                    super(`Address "${Ce}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAddressError"
                    })
                }
            }
        },
        2618: (ft, G, I) => {
            "use strict";
            I.d(G, {
                G: () => Ee
            });
            var _e = I(1448);
            class Ee extends Error {
                constructor(U, se = {}) {
                    super(), Object.defineProperty(this, "details", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "docsPath", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "metaMessages", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "shortMessage", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ViemError"
                    }), Object.defineProperty(this, "version", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: (0, _e.bo)()
                    });
                    const z = se.cause instanceof Ee ? se.cause.details : se.cause ? .message ? se.cause.message : se.details,
                        ie = se.cause instanceof Ee && se.cause.docsPath || se.docsPath;
                    this.message = [U || "An error occurred.", "", ...se.metaMessages ? [...se.metaMessages, ""] : [], ...ie ? [`Docs: https://viem.sh${ie}.html${se.docsSlug?`#${se.docsSlug}`:""}`] : [], ...z ? [`Details: ${z}`] : [], `Version: ${this.version}`].join("\n"), se.cause && (this.cause = se.cause), this.details = z, this.docsPath = ie, this.metaMessages = se.metaMessages, this.shortMessage = U
                }
                walk(U) {
                    return ge(this, U)
                }
            }

            function ge(Ce, U) {
                return U ? .(Ce) ? Ce : Ce && "object" == typeof Ce && "cause" in Ce ? ge(Ce.cause, U) : U ? null : Ce
            }
        },
        8722: (ft, G, I) => {
            "use strict";
            I.d(G, {
                Bk: () => Ce,
                Yl: () => ge,
                mm: () => Ee,
                pZ: () => U
            });
            var _e = I(2618);
            class Ee extends _e.G {
                constructor({
                    blockNumber: ie,
                    chain: ee,
                    contract: oe
                }) {
                    super(`Chain "${ee.name}" does not support contract "${oe.name}".`, {
                        metaMessages: ["This could be due to any of the following:", ...ie && oe.blockCreated && oe.blockCreated > ie ? [`- The contract "${oe.name}" was not deployed until block ${oe.blockCreated} (current block ${ie}).`] : [`- The chain does not have the contract "${oe.name}" configured.`]]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDoesNotSupportContract"
                    })
                }
            }
            class ge extends _e.G {
                constructor({
                    chain: ie,
                    currentChainId: ee
                }) {
                    super(`The current chain of the wallet (id: ${ee}) does not match the target chain for the transaction (id: ${ie.id} \u2013 ${ie.name}).`, {
                        metaMessages: [`Current Chain ID:  ${ee}`, `Expected Chain ID: ${ie.id} \u2013 ${ie.name}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainMismatchError"
                    })
                }
            }
            class Ce extends _e.G {
                constructor() {
                    super(["No chain was provided to the request.", "Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."].join("\n")), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainNotFoundError"
                    })
                }
            }
            class U extends _e.G {
                constructor() {
                    super("No chain was provided to the Client."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ClientChainNotConfiguredError"
                    })
                }
            }
        },
        8169: (ft, G, I) => {
            "use strict";
            I.d(G, {
                cg: () => Be,
                uq: () => We,
                Lu: () => Ye,
                Dk: () => Je,
                VQ: () => te
            });
            var _e = I(277),
                Ee = I(6848),
                ge = I(1936),
                Ce = I(6537),
                U = I(38);

            function se({
                abiItem: Pe,
                args: Oe,
                includeFunctionName: J = !0,
                includeName: Ie = !1
            }) {
                if ("name" in Pe && "inputs" in Pe && Pe.inputs) return `${J?Pe.name:""}(${Pe.inputs.map((Xe,R)=>`${Ie&&Xe.name?`${Xe.name}: `:""}${"object"==typeof Oe[R]?(0,U.P)(Oe[R]):Oe[R]}`).join(", ")})`
            }
            var z = I(930),
                ie = I(8004),
                ee = I(9077),
                oe = I(6577),
                ve = I(2618),
                Te = I(8284),
                Me = I(1448);
            class Be extends ve.G {
                constructor(Oe, {
                    account: J,
                    docsPath: Ie,
                    chain: Xe,
                    data: R,
                    gas: ce,
                    gasPrice: Ve,
                    maxFeePerGas: Ze,
                    maxPriorityFeePerGas: tt,
                    nonce: at,
                    to: Ge,
                    value: ct
                }) {
                    const Re = J ? (0, _e.T)(J) : void 0,
                        we = (0, Te.xr)({
                            from: Re ? .address,
                            to: Ge,
                            value: typeof ct < "u" && `${(0,ie.d)(ct)} ${Xe?.nativeCurrency?.symbol||"ETH"}`,
                            data: R,
                            gas: ce,
                            gasPrice: typeof Ve < "u" && `${(0,ee.o)(Ve)} gwei`,
                            maxFeePerGas: typeof Ze < "u" && `${(0,ee.o)(Ze)} gwei`,
                            maxPriorityFeePerGas: typeof tt < "u" && `${(0,ee.o)(tt)} gwei`,
                            nonce: at
                        });
                    super(Oe.shortMessage, {
                        cause: Oe,
                        docsPath: Ie,
                        metaMessages: [...Oe.metaMessages ? [...Oe.metaMessages, " "] : [], "Raw Call Arguments:", we].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "CallExecutionError"
                    }), this.cause = Oe
                }
            }
            class We extends ve.G {
                constructor(Oe, {
                    abi: J,
                    args: Ie,
                    contractAddress: Xe,
                    docsPath: R,
                    functionName: ce,
                    sender: Ve
                }) {
                    const Ze = (0, z.m)({
                            abi: J,
                            args: Ie,
                            name: ce
                        }),
                        tt = Ze ? se({
                            abiItem: Ze,
                            args: Ie,
                            includeFunctionName: !1,
                            includeName: !1
                        }) : void 0,
                        at = Ze ? (0, Ce.t)(Ze, {
                            includeName: !0
                        }) : void 0,
                        Ge = (0, Te.xr)({
                            address: Xe && (0, Me.CR)(Xe),
                            function: at,
                            args: tt && "()" !== tt && `${[...Array(ce?.length??0).keys()].map(()=>" ").join("")}${tt}`,
                            sender: Ve
                        });
                    super(Oe.shortMessage || `An unknown error occurred while executing the contract function "${ce}".`, {
                        cause: Oe,
                        docsPath: R,
                        metaMessages: [...Oe.metaMessages ? [...Oe.metaMessages, " "] : [], "Contract Call:", Ge].filter(Boolean)
                    }), Object.defineProperty(this, "abi", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "args", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "contractAddress", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "formattedArgs", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "functionName", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "sender", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionExecutionError"
                    }), this.abi = J, this.args = Ie, this.cause = Oe, this.contractAddress = Xe, this.functionName = ce, this.sender = Ve
                }
            }
            class Ye extends ve.G {
                constructor({
                    abi: Oe,
                    data: J,
                    functionName: Ie,
                    message: Xe
                }) {
                    let R, ce, Ve, Ze, tt;
                    if (J && "0x" !== J) try {
                        ce = (0, ge.p)({
                            abi: Oe,
                            data: J
                        });
                        const {
                            abiItem: at,
                            errorName: Ge,
                            args: ct
                        } = ce;
                        if ("Error" === Ge) Ze = ct[0];
                        else if ("Panic" === Ge) {
                            const [Re] = ct;
                            Ze = Ee.$[Re]
                        } else {
                            const Re = at ? (0, Ce.t)(at, {
                                    includeName: !0
                                }) : void 0,
                                we = at && ct ? se({
                                    abiItem: at,
                                    args: ct,
                                    includeFunctionName: !1,
                                    includeName: !1
                                }) : void 0;
                            Ve = [Re ? `Error: ${Re}` : "", we && "()" !== we ? `       ${[...Array(Ge?.length??0).keys()].map(()=>" ").join("")}${we}` : ""]
                        }
                    } catch (at) {
                        R = at
                    } else Xe && (Ze = Xe);
                    R instanceof oe.yP && (tt = R.signature, Ve = [`Unable to decode signature "${tt}" as it was not found on the provided ABI.`, "Make sure you are using the correct ABI and that the error exists on it.", `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${tt}.`]), super(Ze && "execution reverted" !== Ze || tt ? [`The contract function "${Ie}" reverted with the following ${tt?"signature":"reason"}:`, Ze || tt].join("\n") : `The contract function "${Ie}" reverted.`, {
                        cause: R,
                        metaMessages: Ve
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionRevertedError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "reason", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = ce, this.reason = Ze, this.signature = tt
                }
            }
            class Je extends ve.G {
                constructor({
                    functionName: Oe
                }) {
                    super(`The contract function "${Oe}" returned no data ("0x").`, {
                        metaMessages: ["This could be due to any of the following:", `  - The contract does not have the function "${Oe}",`, "  - The parameters passed to the contract function may be invalid, or", "  - The address is not a contract."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionZeroDataError"
                    })
                }
            }
            class te extends ve.G {
                constructor({
                    data: Oe,
                    message: J
                }) {
                    super(J || ""), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 3
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RawContractError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = Oe
                }
            }
        },
        6893: (ft, G, I) => {
            "use strict";
            I.d(G, {
                $: () => ge,
                m: () => Ee
            });
            var _e = I(2618);
            class Ee extends _e.G {
                constructor({
                    offset: U,
                    position: se,
                    size: z
                }) {
                    super(`Slice ${"start"===se?"starting":"ending"} at offset "${U}" is out-of-bounds (size: ${z}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SliceOffsetOutOfBoundsError"
                    })
                }
            }
            class ge extends _e.G {
                constructor({
                    size: U,
                    targetSize: se,
                    type: z
                }) {
                    super(`${z.charAt(0).toUpperCase()}${z.slice(1).toLowerCase()} size (${U}) exceeds padding size (${se}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeExceedsPaddingSizeError"
                    })
                }
            }
        },
        8866: (ft, G, I) => {
            "use strict";
            I.d(G, {
                Cd: () => se,
                J5: () => Ce,
                M6: () => ee
            });
            var _e = I(2618);
            class Ce extends _e.G {
                constructor({
                    max: ve,
                    min: Te,
                    signed: Me,
                    size: Be,
                    value: We
                }) {
                    super(`Number "${We}" is not in safe ${Be?`${8*Be}-bit ${Me?"signed":"unsigned"} `:""}integer range ${ve?`(${Te} to ${ve})`:`(above ${Te})`}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntegerOutOfRangeError"
                    })
                }
            }
            class se extends _e.G {
                constructor(ve) {
                    super(`Hex value "${ve}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexBooleanError"
                    })
                }
            }
            class ee extends _e.G {
                constructor({
                    givenSize: ve,
                    maxSize: Te
                }) {
                    super(`Size cannot exceed ${Te} bytes. Given size: ${ve} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeOverflowError"
                    })
                }
            }
        },
        7354: (ft, G, I) => {
            "use strict";
            I.d(G, {
                C_: () => ee,
                G$: () => U,
                Hh: () => Ce,
                M_: () => ge,
                WF: () => oe,
                ZI: () => se,
                cj: () => Be,
                cs: () => Me,
                dR: () => ve,
                pZ: () => Te,
                se: () => ie,
                vU: () => z
            });
            var _e = I(9077),
                Ee = I(2618);
            class ge extends Ee.G {
                constructor({
                    cause: Ye,
                    message: Je
                } = {}) {
                    const te = Je ? .replace("execution reverted: ", "") ? .replace("execution reverted", "");
                    super(`Execution reverted ${te?`with reason: ${te}`:"for an unknown reason"}.`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ExecutionRevertedError"
                    })
                }
            }
            Object.defineProperty(ge, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3
            }), Object.defineProperty(ge, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /execution reverted/
            });
            class Ce extends Ee.G {
                constructor({
                    cause: Ye,
                    maxFeePerGas: Je
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${Je?` = ${(0,_e.o)(Je)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooHigh"
                    })
                }
            }
            Object.defineProperty(Ce, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/
            });
            class U extends Ee.G {
                constructor({
                    cause: Ye,
                    maxFeePerGas: Je
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${Je?` = ${(0,_e.o)(Je)}`:""} gwei) cannot be lower than the block base fee.`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooLow"
                    })
                }
            }
            Object.defineProperty(U, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/
            });
            class se extends Ee.G {
                constructor({
                    cause: Ye,
                    nonce: Je
                } = {}) {
                    super(`Nonce provided for the transaction ${Je?`(${Je}) `:""}is higher than the next one expected.`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooHighError"
                    })
                }
            }
            Object.defineProperty(se, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too high/
            });
            class z extends Ee.G {
                constructor({
                    cause: Ye,
                    nonce: Je
                } = {}) {
                    super([`Nonce provided for the transaction ${Je?`(${Je}) `:""}is lower than the current nonce of the account.`, "Try increasing the nonce or find the latest nonce with `getTransactionCount`."].join("\n"), {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooLowError"
                    })
                }
            }
            Object.defineProperty(z, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too low|transaction already imported|already known/
            });
            class ie extends Ee.G {
                constructor({
                    cause: Ye,
                    nonce: Je
                } = {}) {
                    super(`Nonce provided for the transaction ${Je?`(${Je}) `:""}exceeds the maximum allowed nonce.`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceMaxValueError"
                    })
                }
            }
            Object.defineProperty(ie, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce has max value/
            });
            class ee extends Ee.G {
                constructor({
                    cause: Ye
                } = {}) {
                    super(["The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account."].join("\n"), {
                        cause: Ye,
                        metaMessages: ["This error could arise when the account does not have enough funds to:", " - pay for the total gas fee,", " - pay for the value to send.", " ", "The cost of the transaction is calculated as `gas * gas fee + value`, where:", " - `gas` is the amount of gas needed for transaction to execute,", " - `gas fee` is the gas fee,", " - `value` is the amount of ether to send to the recipient."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InsufficientFundsError"
                    })
                }
            }
            Object.defineProperty(ee, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /insufficient funds/
            });
            class oe extends Ee.G {
                constructor({
                    cause: Ye,
                    gas: Je
                } = {}) {
                    super(`The amount of gas ${Je?`(${Je}) `:""}provided for the transaction exceeds the limit allowed for the block.`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooHighError"
                    })
                }
            }
            Object.defineProperty(oe, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too high|gas limit reached/
            });
            class ve extends Ee.G {
                constructor({
                    cause: Ye,
                    gas: Je
                } = {}) {
                    super(`The amount of gas ${Je?`(${Je}) `:""}provided for the transaction is too low.`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooLowError"
                    })
                }
            }
            Object.defineProperty(ve, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too low/
            });
            class Te extends Ee.G {
                constructor({
                    cause: Ye
                }) {
                    super("The transaction type is not supported for this chain.", {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionTypeNotSupportedError"
                    })
                }
            }
            Object.defineProperty(Te, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /transaction type not valid/
            });
            class Me extends Ee.G {
                constructor({
                    cause: Ye,
                    maxPriorityFeePerGas: Je,
                    maxFeePerGas: te
                } = {}) {
                    super([`The provided tip (\`maxPriorityFeePerGas\`${Je?` = ${(0,_e.o)(Je)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${te?` = ${(0,_e.o)(te)} gwei`:""}).`].join("\n"), {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TipAboveFeeCapError"
                    })
                }
            }
            Object.defineProperty(Me, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/
            });
            class Be extends Ee.G {
                constructor({
                    cause: Ye
                }) {
                    super(`An error occurred while executing: ${Ye?.shortMessage}`, {
                        cause: Ye
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownNodeError"
                    })
                }
            }
        },
        3979: (ft, G, I) => {
            "use strict";
            I.d(G, {
                Gg: () => Ce,
                W5: () => z,
                bs: () => se,
                c9: () => U
            });
            var _e = I(38),
                Ee = I(2618),
                ge = I(1448);
            class Ce extends Ee.G {
                constructor({
                    body: ee,
                    details: oe,
                    headers: ve,
                    status: Te,
                    url: Me
                }) {
                    super("HTTP request failed.", {
                        details: oe,
                        metaMessages: [Te && `Status: ${Te}`, `URL: ${(0,ge.Gr)(Me)}`, ee && `Request body: ${(0,_e.P)(ee)}`].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "HttpRequestError"
                    }), Object.defineProperty(this, "body", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "headers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "status", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "url", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.body = ee, this.headers = ve, this.status = Te, this.url = Me
                }
            }
            class U extends Ee.G {
                constructor({
                    body: ee,
                    details: oe,
                    url: ve
                }) {
                    super("WebSocket request failed.", {
                        details: oe,
                        metaMessages: [`URL: ${(0,ge.Gr)(ve)}`, `Request body: ${(0,_e.P)(ee)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WebSocketRequestError"
                    })
                }
            }
            class se extends Ee.G {
                constructor({
                    body: ee,
                    error: oe,
                    url: ve
                }) {
                    super("RPC Request failed.", {
                        cause: oe,
                        details: oe.message,
                        metaMessages: [`URL: ${(0,ge.Gr)(ve)}`, `Request body: ${(0,_e.P)(ee)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcRequestError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.code = oe.code
                }
            }
            class z extends Ee.G {
                constructor({
                    body: ee,
                    url: oe
                }) {
                    super("The request took too long to respond.", {
                        details: "The request timed out.",
                        metaMessages: [`URL: ${(0,ge.Gr)(oe)}`, `Request body: ${(0,_e.P)(ee)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TimeoutError"
                    })
                }
            }
        },
        9450: (ft, G, I) => {
            "use strict";
            I.d(G, {
                B: () => z,
                GD: () => Je,
                I0: () => Ie,
                KB: () => Be,
                LX: () => ie,
                Og: () => Te,
                PE: () => Pe,
                Pv: () => Ye,
                Ts: () => Oe,
                XS: () => oe,
                ab: () => te,
                gS: () => We,
                ir: () => R,
                nY: () => ee,
                pT: () => Me,
                s7: () => se,
                u5: () => J,
                x3: () => Xe,
                yR: () => ve
            });
            var _e = I(2618),
                Ee = I(3979);
            class Ce extends _e.G {
                constructor(Ve, {
                    code: Ze,
                    docsPath: tt,
                    metaMessages: at,
                    shortMessage: Ge
                }) {
                    super(Ge, {
                        cause: Ve,
                        docsPath: tt,
                        metaMessages: at || Ve ? .metaMessages
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.name = Ve.name, this.code = Ve instanceof Ee.bs ? Ve.code : Ze ? ? -1
                }
            }
            class U extends Ce {
                constructor(Ve, Ze) {
                    super(Ve, Ze), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderRpcError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = Ze.data
                }
            }
            class se extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: se.code,
                        shortMessage: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ParseRpcError"
                    })
                }
            }
            Object.defineProperty(se, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32700
            });
            class z extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: z.code,
                        shortMessage: "JSON is not a valid request object."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidRequestRpcError"
                    })
                }
            }
            Object.defineProperty(z, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32600
            });
            class ie extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: ie.code,
                        shortMessage: "The method does not exist / is not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(ie, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32601
            });
            class ee extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: ee.code,
                        shortMessage: ["Invalid parameters were provided to the RPC method.", "Double check you have provided the correct parameters."].join("\n")
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParamsRpcError"
                    })
                }
            }
            Object.defineProperty(ee, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32602
            });
            class oe extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: oe.code,
                        shortMessage: "An internal error was received."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InternalRpcError"
                    })
                }
            }
            Object.defineProperty(oe, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32603
            });
            class ve extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: ve.code,
                        shortMessage: ["Missing or invalid parameters.", "Double check you have provided the correct parameters."].join("\n")
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidInputRpcError"
                    })
                }
            }
            Object.defineProperty(ve, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32e3
            });
            class Te extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: Te.code,
                        shortMessage: "Requested resource not found."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceNotFoundRpcError"
                    })
                }
            }
            Object.defineProperty(Te, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32001
            });
            class Me extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: Me.code,
                        shortMessage: "Requested resource not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceUnavailableRpcError"
                    })
                }
            }
            Object.defineProperty(Me, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32002
            });
            class Be extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: Be.code,
                        shortMessage: "Transaction creation failed."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionRejectedRpcError"
                    })
                }
            }
            Object.defineProperty(Be, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32003
            });
            class We extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: We.code,
                        shortMessage: "Method is not implemented."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotSupportedRpcError"
                    })
                }
            }
            Object.defineProperty(We, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32004
            });
            class Ye extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: Ye.code,
                        shortMessage: "Request exceeds defined limit."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "LimitExceededRpcError"
                    })
                }
            }
            Object.defineProperty(Ye, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32005
            });
            class Je extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        code: Je.code,
                        shortMessage: "Version of JSON-RPC protocol is not supported."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "JsonRpcVersionUnsupportedError"
                    })
                }
            }
            Object.defineProperty(Je, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32006
            });
            class te extends U {
                constructor(Ve) {
                    super(Ve, {
                        code: te.code,
                        shortMessage: "User rejected the request."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UserRejectedRequestError"
                    })
                }
            }
            Object.defineProperty(te, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4001
            });
            class Pe extends U {
                constructor(Ve) {
                    super(Ve, {
                        code: Pe.code,
                        shortMessage: "The requested method and/or account has not been authorized by the user."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnauthorizedProviderError"
                    })
                }
            }
            Object.defineProperty(Pe, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4100
            });
            class Oe extends U {
                constructor(Ve) {
                    super(Ve, {
                        code: Oe.code,
                        shortMessage: "The Provider does not support the requested method."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedProviderMethodError"
                    })
                }
            }
            Object.defineProperty(Oe, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4200
            });
            class J extends U {
                constructor(Ve) {
                    super(Ve, {
                        code: J.code,
                        shortMessage: "The Provider is disconnected from all chains."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderDisconnectedError"
                    })
                }
            }
            Object.defineProperty(J, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4900
            });
            class Ie extends U {
                constructor(Ve) {
                    super(Ve, {
                        code: Ie.code,
                        shortMessage: "The Provider is not connected to the requested chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDisconnectedError"
                    })
                }
            }
            Object.defineProperty(Ie, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4901
            });
            class Xe extends U {
                constructor(Ve) {
                    super(Ve, {
                        code: Xe.code,
                        shortMessage: "An error occurred when attempting to switch chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SwitchChainError"
                    })
                }
            }
            Object.defineProperty(Xe, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4902
            });
            class R extends Ce {
                constructor(Ve) {
                    super(Ve, {
                        shortMessage: "An unknown RPC error occurred."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownRpcError"
                    })
                }
            }
        },
        8284: (ft, G, I) => {
            "use strict";
            I.d(G, {
                Bh: () => Te,
                Yb: () => Me,
                j3: () => z,
                mc: () => Be,
                mk: () => ve,
                xY: () => U,
                xr: () => Ce
            });
            var _e = I(8004),
                Ee = I(9077),
                ge = I(2618);

            function Ce(We) {
                const Ye = Object.entries(We).map(([te, Pe]) => void 0 === Pe || !1 === Pe ? null : [te, Pe]).filter(Boolean),
                    Je = Ye.reduce((te, [Pe]) => Math.max(te, Pe.length), 0);
                return Ye.map(([te, Pe]) => `  ${`${te}:`.padEnd(Je+1)}  ${Pe}`).join("\n")
            }
            class U extends ge.G {
                constructor() {
                    super(["Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.", "Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."].join("\n")), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeConflictError"
                    })
                }
            }
            class z extends ge.G {
                constructor({
                    transaction: Ye
                }) {
                    super("Cannot infer a transaction type from provided transaction.", {
                        metaMessages: ["Provided Transaction:", "{", Ce(Ye), "}", "", "To infer the type, either provide:", "- a `type` to the Transaction, or", "- an EIP-1559 Transaction with `maxFeePerGas`, or", "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or", "- a Legacy Transaction with `gasPrice`"]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializableTransactionError"
                    })
                }
            }
            class ve extends ge.G {
                constructor(Ye, {
                    account: Je,
                    docsPath: te,
                    chain: Pe,
                    data: Oe,
                    gas: J,
                    gasPrice: Ie,
                    maxFeePerGas: Xe,
                    maxPriorityFeePerGas: R,
                    nonce: ce,
                    to: Ve,
                    value: Ze
                }) {
                    const tt = Ce({
                        chain: Pe && `${Pe?.name} (id: ${Pe?.id})`,
                        from: Je ? .address,
                        to: Ve,
                        value: typeof Ze < "u" && `${(0,_e.d)(Ze)} ${Pe?.nativeCurrency?.symbol||"ETH"}`,
                        data: Oe,
                        gas: J,
                        gasPrice: typeof Ie < "u" && `${(0,Ee.o)(Ie)} gwei`,
                        maxFeePerGas: typeof Xe < "u" && `${(0,Ee.o)(Xe)} gwei`,
                        maxPriorityFeePerGas: typeof R < "u" && `${(0,Ee.o)(R)} gwei`,
                        nonce: ce
                    });
                    super(Ye.shortMessage, {
                        cause: Ye,
                        docsPath: te,
                        metaMessages: [...Ye.metaMessages ? [...Ye.metaMessages, " "] : [], "Request Arguments:", tt].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionExecutionError"
                    }), this.cause = Ye
                }
            }
            class Te extends ge.G {
                constructor({
                    blockHash: Ye,
                    blockNumber: Je,
                    blockTag: te,
                    hash: Pe,
                    index: Oe
                }) {
                    let J = "Transaction";
                    te && void 0 !== Oe && (J = `Transaction at block time "${te}" at index "${Oe}"`), Ye && void 0 !== Oe && (J = `Transaction at block hash "${Ye}" at index "${Oe}"`), Je && void 0 !== Oe && (J = `Transaction at block number "${Je}" at index "${Oe}"`), Pe && (J = `Transaction with hash "${Pe}"`), super(`${J} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionNotFoundError"
                    })
                }
            }
            class Me extends ge.G {
                constructor({
                    hash: Ye
                }) {
                    super(`Transaction receipt with hash "${Ye}" could not be found. The Transaction may not be processed on a block yet.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionReceiptNotFoundError"
                    })
                }
            }
            class Be extends ge.G {
                constructor({
                    hash: Ye
                }) {
                    super(`Timed out while waiting for transaction with hash "${Ye}" to be confirmed.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WaitForTransactionReceiptTimeoutError"
                    })
                }
            }
        },
        1448: (ft, G, I) => {
            "use strict";
            I.d(G, {
                CR: () => Ee,
                Gr: () => ge,
                bo: () => Ce
            });
            const Ee = U => U,
                ge = U => U,
                Ce = () => "viem@1.19.12"
        },
        5777: (ft, G, I) => {
            "use strict";
            I.d(G, {
                r: () => ie
            });
            var _e = I(6577),
                Ee = I(6284),
                ge = I(4018),
                Ce = I(8544),
                U = I(783),
                se = I(9415),
                z = I(2910);

            function ie(Pe, Oe) {
                if ("0x" === Oe && Pe.length > 0) throw new _e.wb;
                if ((0, ge.d)(Oe) && (0, ge.d)(Oe) < 32) throw new _e.xB({
                    data: Oe,
                    params: Pe,
                    size: (0, ge.d)(Oe)
                });
                return function ee({
                    data: Pe,
                    params: Oe
                }) {
                    const J = [];
                    let Ie = 0;
                    for (let Xe = 0; Xe < Oe.length; Xe++) {
                        if (Ie >= (0, ge.d)(Pe)) throw new _e.xB({
                            data: Pe,
                            params: Oe,
                            size: (0, ge.d)(Pe)
                        });
                        const R = Oe[Xe],
                            {
                                consumed: ce,
                                value: Ve
                            } = oe({
                                data: Pe,
                                param: R,
                                position: Ie
                            });
                        J.push(Ve), Ie += ce
                    }
                    return J
                }({
                    data: Oe,
                    params: Pe
                })
            }

            function oe({
                data: Pe,
                param: Oe,
                position: J
            }) {
                const Ie = (0, z.S)(Oe.type);
                if (Ie) {
                    const [R, ce] = Ie;
                    return function Te(Pe, {
                        param: Oe,
                        length: J,
                        position: Ie
                    }) {
                        if (!J) {
                            const ce = (0, se.ly)((0, Ce.tP)(Pe, Ie, Ie + 32, {
                                    strict: !0
                                })),
                                Ve = (0, se.ly)((0, Ce.tP)(Pe, ce, ce + 32, {
                                    strict: !0
                                }));
                            let Ze = 0;
                            const tt = [];
                            for (let at = 0; at < Ve; ++at) {
                                const Ge = oe({
                                    data: (0, Ce.tP)(Pe, ce + 32),
                                    param: Oe,
                                    position: Ze
                                });
                                Ze += Ge.consumed, tt.push(Ge.value)
                            }
                            return {
                                value: tt,
                                consumed: 32
                            }
                        }
                        if (te(Oe)) {
                            const Ve = !(0, z.S)(Oe.type) ? .[0];
                            let Ze = 0;
                            const tt = [];
                            for (let at = 0; at < J; ++at) {
                                const Ge = (0, se.ly)((0, Ce.tP)(Pe, Ie, Ie + 32, {
                                        strict: !0
                                    })),
                                    ct = oe({
                                        data: (0, Ce.tP)(Pe, Ge),
                                        param: Oe,
                                        position: Ve ? Ze : 32 * at
                                    });
                                Ze += ct.consumed, tt.push(ct.value)
                            }
                            return {
                                value: tt,
                                consumed: 32
                            }
                        }
                        let Xe = 0;
                        const R = [];
                        for (let ce = 0; ce < J; ++ce) {
                            const Ve = oe({
                                data: Pe,
                                param: Oe,
                                position: Ie + Xe
                            });
                            Xe += Ve.consumed, R.push(Ve.value)
                        }
                        return {
                            value: R,
                            consumed: Xe
                        }
                    }(Pe, {
                        length: R,
                        param: { ...Oe,
                            type: ce
                        },
                        position: J
                    })
                }
                if ("tuple" === Oe.type) return function Je(Pe, {
                    param: Oe,
                    position: J
                }) {
                    const Ie = 0 === Oe.components.length || Oe.components.some(({
                            name: ce
                        }) => !ce),
                        Xe = Ie ? [] : {};
                    let R = 0;
                    if (te(Oe)) {
                        const ce = (0, se.ly)((0, Ce.tP)(Pe, J, J + 32, {
                            strict: !0
                        }));
                        for (let Ve = 0; Ve < Oe.components.length; ++Ve) {
                            const Ze = Oe.components[Ve],
                                tt = oe({
                                    data: (0, Ce.tP)(Pe, ce),
                                    param: Ze,
                                    position: R
                                });
                            R += tt.consumed, Xe[Ie ? Ve : Ze ? .name] = tt.value
                        }
                        return {
                            consumed: 32,
                            value: Xe
                        }
                    }
                    for (let ce = 0; ce < Oe.components.length; ++ce) {
                        const Ve = Oe.components[ce],
                            Ze = oe({
                                data: Pe,
                                param: Ve,
                                position: J + R
                            });
                        R += Ze.consumed, Xe[Ie ? ce : Ve ? .name] = Ze.value
                    }
                    return {
                        consumed: R,
                        value: Xe
                    }
                }(Pe, {
                    param: Oe,
                    position: J
                });
                if ("string" === Oe.type) return function Ye(Pe, {
                    position: Oe
                }) {
                    const J = (0, se.ly)((0, Ce.tP)(Pe, Oe, Oe + 32, {
                            strict: !0
                        })),
                        Ie = (0, se.ly)((0, Ce.tP)(Pe, J, J + 32, {
                            strict: !0
                        }));
                    return 0 === Ie ? {
                        consumed: 32,
                        value: ""
                    } : {
                        consumed: 32,
                        value: (0, se.rR)((0, U.f)((0, Ce.tP)(Pe, J + 32, J + 32 + Ie, {
                            strict: !0
                        })))
                    }
                }(Pe, {
                    position: J
                });
                if (Oe.type.startsWith("bytes")) return function Be(Pe, {
                    param: Oe,
                    position: J
                }) {
                    const [Ie, Xe] = Oe.type.split("bytes");
                    if (!Xe) {
                        const ce = (0, se.ly)((0, Ce.tP)(Pe, J, J + 32, {
                                strict: !0
                            })),
                            Ve = (0, se.ly)((0, Ce.tP)(Pe, ce, ce + 32, {
                                strict: !0
                            }));
                        return 0 === Ve ? {
                            consumed: 32,
                            value: "0x"
                        } : {
                            consumed: 32,
                            value: (0, Ce.tP)(Pe, ce + 32, ce + 32 + Ve, {
                                strict: !0
                            })
                        }
                    }
                    return {
                        consumed: 32,
                        value: (0, Ce.tP)(Pe, J, J + parseInt(Xe), {
                            strict: !0
                        })
                    }
                }(Pe, {
                    param: Oe,
                    position: J
                });
                const Xe = (0, Ce.tP)(Pe, J, J + 32, {
                    strict: !0
                });
                if (Oe.type.startsWith("uint") || Oe.type.startsWith("int")) return function We(Pe, {
                    param: Oe
                }) {
                    const J = Oe.type.startsWith("int");
                    return {
                        consumed: 32,
                        value: parseInt(Oe.type.split("int")[1] || "256") > 48 ? (0, se.y_)(Pe, {
                            signed: J
                        }) : (0, se.ly)(Pe, {
                            signed: J
                        })
                    }
                }(Xe, {
                    param: Oe
                });
                if ("address" === Oe.type) return function ve(Pe) {
                    return {
                        consumed: 32,
                        value: (0, Ee.x)((0, Ce.tP)(Pe, -20))
                    }
                }(Xe);
                if ("bool" === Oe.type) return function Me(Pe) {
                    return {
                        consumed: 32,
                        value: (0, se.XA)(Pe)
                    }
                }(Xe);
                throw new _e.CI(Oe.type, {
                    docsPath: "/docs/contract/decodeAbiParameters"
                })
            }

            function te(Pe) {
                const {
                    type: Oe
                } = Pe;
                if ("string" === Oe || "bytes" === Oe || Oe.endsWith("[]")) return !0;
                if ("tuple" === Oe) return Pe.components ? .some(te);
                const J = (0, z.S)(Pe.type);
                return !(!J || !te({ ...Pe,
                    type: J[1]
                }))
            }
        },
        1936: (ft, G, I) => {
            "use strict";
            I.d(G, {
                p: () => z
            });
            var _e = I(6848),
                Ee = I(6577),
                ge = I(8544),
                Ce = I(5360),
                U = I(5777),
                se = I(6537);

            function z({
                abi: ie,
                data: ee
            }) {
                const oe = (0, ge.tP)(ee, 0, 4);
                if ("0x" === oe) throw new Ee.wb;
                const Te = [...ie || [], _e.Up, _e.hZ].find(Me => "error" === Me.type && oe === (0, Ce.o)((0, se.t)(Me)));
                if (!Te) throw new Ee.yP(oe, {
                    docsPath: "/docs/contract/decodeErrorResult"
                });
                return {
                    abiItem: Te,
                    args: "inputs" in Te && Te.inputs && Te.inputs.length > 0 ? (0, U.r)(Te.inputs, (0, ge.tP)(ee, 4)) : void 0,
                    errorName: Te.name
                }
            }
        },
        4963: (ft, G, I) => {
            "use strict";
            I.d(G, {
                k: () => U
            });
            var _e = I(6577),
                Ee = I(5777),
                ge = I(930);
            const Ce = "/docs/contract/decodeFunctionResult";

            function U({
                abi: se,
                args: z,
                functionName: ie,
                data: ee
            }) {
                let oe = se[0];
                if (ie && (oe = (0, ge.m)({
                        abi: se,
                        args: z,
                        name: ie
                    }), !oe)) throw new _e.xL(ie, {
                    docsPath: Ce
                });
                if ("function" !== oe.type) throw new _e.xL(void 0, {
                    docsPath: Ce
                });
                if (!oe.outputs) throw new _e.MX(oe.name, {
                    docsPath: Ce
                });
                const ve = (0, Ee.r)(oe.outputs, ee);
                return ve && ve.length > 1 ? ve : ve && 1 === ve.length ? ve[0] : void 0
            }
        },
        2910: (ft, G, I) => {
            "use strict";
            I.d(G, {
                E: () => ee,
                S: () => Oe
            });
            var _e = I(6577),
                Ee = I(8355),
                ge = I(2099),
                Ce = I(770),
                U = I(1587),
                se = I(4018),
                z = I(8544),
                ie = I(4439);

            function ee(J, Ie) {
                if (J.length !== Ie.length) throw new _e.fs({
                    expectedLength: J.length,
                    givenLength: Ie.length
                });
                const Xe = function oe({
                        params: J,
                        values: Ie
                    }) {
                        const Xe = [];
                        for (let R = 0; R < J.length; R++) Xe.push(ve({
                            param: J[R],
                            value: Ie[R]
                        }));
                        return Xe
                    }({
                        params: J,
                        values: Ie
                    }),
                    R = Te(Xe);
                return 0 === R.length ? "0x" : R
            }

            function ve({
                param: J,
                value: Ie
            }) {
                const Xe = Oe(J.type);
                if (Xe) {
                    const [R, ce] = Xe;
                    return function Be(J, {
                        length: Ie,
                        param: Xe
                    }) {
                        const R = null === Ie;
                        if (!Array.isArray(J)) throw new _e.hn(J);
                        if (!R && J.length !== Ie) throw new _e.gr({
                            expectedLength: Ie,
                            givenLength: J.length,
                            type: `${Xe.type}[${Ie}]`
                        });
                        let ce = !1;
                        const Ve = [];
                        for (let Ze = 0; Ze < J.length; Ze++) {
                            const tt = ve({
                                param: Xe,
                                value: J[Ze]
                            });
                            tt.dynamic && (ce = !0), Ve.push(tt)
                        }
                        if (R || ce) {
                            const Ze = Te(Ve);
                            if (R) {
                                const tt = (0, ie.eC)(Ve.length, {
                                    size: 32
                                });
                                return {
                                    dynamic: !0,
                                    encoded: Ve.length > 0 ? (0, Ce.zo)([tt, Ze]) : tt
                                }
                            }
                            if (ce) return {
                                dynamic: !0,
                                encoded: Ze
                            }
                        }
                        return {
                            dynamic: !1,
                            encoded: (0, Ce.zo)(Ve.map(({
                                encoded: Ze
                            }) => Ze))
                        }
                    }(Ie, {
                        length: R,
                        param: { ...J,
                            type: ce
                        }
                    })
                }
                if ("tuple" === J.type) return function Pe(J, {
                    param: Ie
                }) {
                    let Xe = !1;
                    const R = [];
                    for (let ce = 0; ce < Ie.components.length; ce++) {
                        const Ve = Ie.components[ce],
                            tt = ve({
                                param: Ve,
                                value: J[Array.isArray(J) ? ce : Ve.name]
                            });
                        R.push(tt), tt.dynamic && (Xe = !0)
                    }
                    return {
                        dynamic: Xe,
                        encoded: Xe ? Te(R) : (0, Ce.zo)(R.map(({
                            encoded: ce
                        }) => ce))
                    }
                }(Ie, {
                    param: J
                });
                if ("address" === J.type) return function Me(J) {
                    if (!(0, ge.U)(J)) throw new Ee.b({
                        address: J
                    });
                    return {
                        dynamic: !1,
                        encoded: (0, U.gc)(J.toLowerCase())
                    }
                }(Ie);
                if ("bool" === J.type) return function Ye(J) {
                    return {
                        dynamic: !1,
                        encoded: (0, U.gc)((0, ie.C4)(J))
                    }
                }(Ie);
                if (J.type.startsWith("uint") || J.type.startsWith("int")) return function Je(J, {
                    signed: Ie
                }) {
                    return {
                        dynamic: !1,
                        encoded: (0, ie.eC)(J, {
                            size: 32,
                            signed: Ie
                        })
                    }
                }(Ie, {
                    signed: J.type.startsWith("int")
                });
                if (J.type.startsWith("bytes")) return function We(J, {
                    param: Ie
                }) {
                    const [, Xe] = Ie.type.split("bytes"), R = (0, se.d)(J);
                    if (!Xe) {
                        let ce = J;
                        return R % 32 != 0 && (ce = (0, U.gc)(ce, {
                            dir: "right",
                            size: 32 * Math.ceil((J.length - 2) / 2 / 32)
                        })), {
                            dynamic: !0,
                            encoded: (0, Ce.zo)([(0, U.gc)((0, ie.eC)(R, {
                                size: 32
                            })), ce])
                        }
                    }
                    if (R !== parseInt(Xe)) throw new _e.M4({
                        expectedSize: parseInt(Xe),
                        value: J
                    });
                    return {
                        dynamic: !1,
                        encoded: (0, U.gc)(J, {
                            dir: "right"
                        })
                    }
                }(Ie, {
                    param: J
                });
                if ("string" === J.type) return function te(J) {
                    const Ie = (0, ie.$G)(J),
                        Xe = Math.ceil((0, se.d)(Ie) / 32),
                        R = [];
                    for (let ce = 0; ce < Xe; ce++) R.push((0, U.gc)((0, z.tP)(Ie, 32 * ce, 32 * (ce + 1)), {
                        dir: "right"
                    }));
                    return {
                        dynamic: !0,
                        encoded: (0, Ce.zo)([(0, U.gc)((0, ie.eC)((0, se.d)(Ie), {
                            size: 32
                        })), ...R])
                    }
                }(Ie);
                throw new _e.dh(J.type, {
                    docsPath: "/docs/contract/encodeAbiParameters"
                })
            }

            function Te(J) {
                let Ie = 0;
                for (let Ve = 0; Ve < J.length; Ve++) {
                    const {
                        dynamic: Ze,
                        encoded: tt
                    } = J[Ve];
                    Ie += Ze ? 32 : (0, se.d)(tt)
                }
                const Xe = [],
                    R = [];
                let ce = 0;
                for (let Ve = 0; Ve < J.length; Ve++) {
                    const {
                        dynamic: Ze,
                        encoded: tt
                    } = J[Ve];
                    Ze ? (Xe.push((0, ie.eC)(Ie + ce, {
                        size: 32
                    })), R.push(tt), ce += (0, se.d)(tt)) : Xe.push(tt)
                }
                return (0, Ce.zo)([...Xe, ...R])
            }

            function Oe(J) {
                const Ie = J.match(/^(.*)\[(\d+)?\]$/);
                return Ie ? [Ie[2] ? Number(Ie[2]) : null, Ie[1]] : void 0
            }
        },
        2490: (ft, G, I) => {
            "use strict";
            I.d(G, {
                R: () => z
            });
            var _e = I(6577),
                Ee = I(770),
                ge = I(5360),
                Ce = I(2910),
                U = I(6537),
                se = I(930);

            function z({
                abi: ie,
                args: ee,
                functionName: oe
            }) {
                let ve = ie[0];
                if (oe && (ve = (0, se.m)({
                        abi: ie,
                        args: ee,
                        name: oe
                    }), !ve)) throw new _e.xL(oe, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                if ("function" !== ve.type) throw new _e.xL(void 0, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                const Te = (0, U.t)(ve),
                    Me = (0, ge.o)(Te),
                    Be = "inputs" in ve && ve.inputs ? (0, Ce.E)(ve.inputs, ee ? ? []) : void 0;
                return (0, Ee.SM)([Me, Be ? ? "0x"])
            }
        },
        6537: (ft, G, I) => {
            "use strict";
            I.d(G, {
                h: () => ge,
                t: () => Ee
            });
            var _e = I(6577);

            function Ee(U, {
                includeName: se = !1
            } = {}) {
                if ("function" !== U.type && "event" !== U.type && "error" !== U.type) throw new _e.wM(U.type);
                return `${U.name}(${ge(U.inputs,{includeName:se})})`
            }

            function ge(U, {
                includeName: se = !1
            } = {}) {
                return U ? U.map(z => function Ce(U, {
                    includeName: se
                }) {
                    return U.type.startsWith("tuple") ? `(${ge(U.components,{includeName:se})})${U.type.slice(5)}` : U.type + (se && U.name ? ` ${U.name}` : "")
                }(z, {
                    includeName: se
                })).join(se ? ", " : ",") : ""
            }
        },
        930: (ft, G, I) => {
            "use strict";
            I.d(G, {
                m: () => U
            });
            var _e = I(7812),
                Ee = I(7467),
                ge = I(5360),
                Ce = I(2099);

            function U({
                abi: z,
                args: ie = [],
                name: ee
            }) {
                const oe = (0, _e.v)(ee, {
                        strict: !1
                    }),
                    ve = z.filter(Te => oe ? "function" === Te.type ? (0, ge.o)(Te) === ee : "event" === Te.type && (0, Ee.e)(Te) === ee : "name" in Te && Te.name === ee);
                if (0 !== ve.length) {
                    if (1 === ve.length) return ve[0];
                    for (const Te of ve)
                        if ("inputs" in Te)
                            if (ie && 0 !== ie.length) {
                                if (Te.inputs && 0 !== Te.inputs.length && Te.inputs.length === ie.length && ie.every((Be, We) => {
                                        const Ye = "inputs" in Te && Te.inputs[We];
                                        return !!Ye && se(Be, Ye)
                                    })) return Te
                            } else if (!Te.inputs || 0 === Te.inputs.length) return Te;
                    return ve[0]
                }
            }

            function se(z, ie) {
                const ee = typeof z,
                    oe = ie.type;
                switch (oe) {
                    case "address":
                        return (0, Ce.U)(z);
                    case "bool":
                        return "boolean" === ee;
                    case "function":
                    case "string":
                        return "string" === ee;
                    default:
                        return "tuple" === oe && "components" in ie ? Object.values(ie.components).every((ve, Te) => se(Object.values(z)[Te], ve)) : /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(oe) ? "number" === ee || "bigint" === ee : /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(oe) ? "string" === ee || z instanceof Uint8Array : !!/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(oe) && Array.isArray(z) && z.every(ve => se(ve, { ...ie,
                            type: oe.replace(/(\[[0-9]{0,}\])$/, "")
                        }))
                }
            }
        },
        6284: (ft, G, I) => {
            "use strict";
            I.d(G, {
                K: () => se,
                x: () => U
            });
            var _e = I(8355),
                Ee = I(9427),
                ge = I(383),
                Ce = I(2099);

            function U(z, ie) {
                const ee = ie ? `${ie}${z.toLowerCase()}` : z.substring(2).toLowerCase(),
                    oe = (0, ge.w)((0, Ee.qX)(ee), "bytes"),
                    ve = (ie ? ee.substring(`${ie}0x`.length) : ee).split("");
                for (let Te = 0; Te < 40; Te += 2) oe[Te >> 1] >> 4 >= 8 && ve[Te] && (ve[Te] = ve[Te].toUpperCase()), (15 & oe[Te >> 1]) >= 8 && ve[Te + 1] && (ve[Te + 1] = ve[Te + 1].toUpperCase());
                return `0x${ve.join("")}`
            }

            function se(z, ie) {
                if (!(0, Ce.U)(z)) throw new _e.b({
                    address: z
                });
                return U(z, ie)
            }
        },
        2099: (ft, G, I) => {
            "use strict";
            I.d(G, {
                U: () => Ee
            });
            const _e = /^0x[a-fA-F0-9]{40}$/;

            function Ee(ge) {
                return _e.test(ge)
            }
        },
        1849: (ft, G, I) => {
            "use strict";
            I.d(G, {
                L: () => Ee
            });
            var _e = I(8722);

            function Ee({
                blockNumber: ge,
                chain: Ce,
                contract: U
            }) {
                const se = Ce ? .contracts ? .[U];
                if (!se) throw new _e.mm({
                    chain: Ce,
                    contract: {
                        name: U
                    }
                });
                if (ge && se.blockCreated && se.blockCreated > ge) throw new _e.mm({
                    blockNumber: ge,
                    chain: Ce,
                    contract: {
                        name: U,
                        blockCreated: se.blockCreated
                    }
                });
                return se.address
            }
        },
        770: (ft, G, I) => {
            "use strict";

            function _e(Ce) {
                return "string" == typeof Ce[0] ? ge(Ce) : function Ee(Ce) {
                    let U = 0;
                    for (const ie of Ce) U += ie.length;
                    const se = new Uint8Array(U);
                    let z = 0;
                    for (const ie of Ce) se.set(ie, z), z += ie.length;
                    return se
                }(Ce)
            }

            function ge(Ce) {
                return `0x${Ce.reduce((U,se)=>U+se.replace("0x",""),"")}`
            }
            I.d(G, {
                SM: () => ge,
                zo: () => _e
            })
        },
        7812: (ft, G, I) => {
            "use strict";

            function _e(Ee, {
                strict: ge = !0
            } = {}) {
                return !(!Ee || "string" != typeof Ee) && (ge ? /^0x[0-9a-fA-F]*$/.test(Ee) : Ee.startsWith("0x"))
            }
            I.d(G, {
                v: () => _e
            })
        },
        1587: (ft, G, I) => {
            "use strict";
            I.d(G, {
                gc: () => ge,
                vk: () => Ee
            });
            var _e = I(6893);

            function Ee(U, {
                dir: se,
                size: z = 32
            } = {}) {
                return "string" == typeof U ? ge(U, {
                    dir: se,
                    size: z
                }) : function Ce(U, {
                    dir: se,
                    size: z = 32
                } = {}) {
                    if (null === z) return U;
                    if (U.length > z) throw new _e.$({
                        size: U.length,
                        targetSize: z,
                        type: "bytes"
                    });
                    const ie = new Uint8Array(z);
                    for (let ee = 0; ee < z; ee++) {
                        const oe = "right" === se;
                        ie[oe ? ee : z - ee - 1] = U[oe ? ee : U.length - ee - 1]
                    }
                    return ie
                }(U, {
                    dir: se,
                    size: z
                })
            }

            function ge(U, {
                dir: se,
                size: z = 32
            } = {}) {
                if (null === z) return U;
                const ie = U.replace("0x", "");
                if (ie.length > 2 * z) throw new _e.$({
                    size: Math.ceil(ie.length / 2),
                    targetSize: z,
                    type: "hex"
                });
                return `0x${ie["right"===se?"padEnd":"padStart"](2*z,"0")}`
            }
        },
        4018: (ft, G, I) => {
            "use strict";
            I.d(G, {
                d: () => Ee
            });
            var _e = I(7812);

            function Ee(ge) {
                return (0, _e.v)(ge, {
                    strict: !1
                }) ? Math.ceil((ge.length - 2) / 2) : ge.length
            }
        },
        8544: (ft, G, I) => {
            "use strict";
            I.d(G, {
                tP: () => Ce
            });
            var _e = I(6893),
                Ee = I(7812),
                ge = I(4018);

            function Ce(ee, oe, ve, {
                strict: Te
            } = {}) {
                return (0, Ee.v)(ee, {
                    strict: !1
                }) ? function ie(ee, oe, ve, {
                    strict: Te
                } = {}) {
                    U(ee, oe);
                    const Me = `0x${ee.replace("0x","").slice(2*(oe??0),2*(ve??ee.length))}`;
                    return Te && se(Me, oe, ve), Me
                }(ee, oe, ve, {
                    strict: Te
                }) : function z(ee, oe, ve, {
                    strict: Te
                } = {}) {
                    U(ee, oe);
                    const Me = ee.slice(oe, ve);
                    return Te && se(Me, oe, ve), Me
                }(ee, oe, ve, {
                    strict: Te
                })
            }

            function U(ee, oe) {
                if ("number" == typeof oe && oe > 0 && oe > (0, ge.d)(ee) - 1) throw new _e.m({
                    offset: oe,
                    position: "start",
                    size: (0, ge.d)(ee)
                })
            }

            function se(ee, oe, ve) {
                if ("number" == typeof oe && "number" == typeof ve && (0, ge.d)(ee) !== ve - oe) throw new _e.m({
                    offset: ve,
                    position: "end",
                    size: (0, ge.d)(ee)
                })
            }
        },
        783: (ft, G, I) => {
            "use strict";

            function _e(Ee, {
                dir: ge = "left"
            } = {}) {
                let Ce = "string" == typeof Ee ? Ee.replace("0x", "") : Ee,
                    U = 0;
                for (let se = 0; se < Ce.length - 1 && "0" === Ce["left" === ge ? se : Ce.length - se - 1].toString(); se++) U++;
                return Ce = "left" === ge ? Ce.slice(U) : Ce.slice(0, Ce.length - U), "string" == typeof Ee ? (1 === Ce.length && "right" === ge && (Ce = `${Ce}0`), `0x${Ce.length%2==1?`0${Ce}`:Ce}`) : Ce
            }
            I.d(G, {
                f: () => _e
            })
        },
        9415: (ft, G, I) => {
            "use strict";
            I.d(G, {
                XA: () => ie,
                Yf: () => U,
                ly: () => ee,
                rR: () => oe,
                y_: () => z
            });
            var _e = I(8866),
                Ee = I(4018),
                ge = I(783),
                Ce = I(9427);

            function U(ve, {
                size: Te
            }) {
                if ((0, Ee.d)(ve) > Te) throw new _e.M6({
                    givenSize: (0, Ee.d)(ve),
                    maxSize: Te
                })
            }

            function z(ve, Te = {}) {
                const {
                    signed: Me
                } = Te;
                Te.size && U(ve, {
                    size: Te.size
                });
                const Be = BigInt(ve);
                if (!Me) return Be;
                const We = (ve.length - 2) / 2;
                return Be <= (1 n << 8 n * BigInt(We) - 1 n) - 1 n ? Be : Be - BigInt(`0x${"f".padStart(2*We,"f")}`) - 1 n
            }

            function ie(ve, Te = {}) {
                let Me = ve;
                if (Te.size && (U(Me, {
                        size: Te.size
                    }), Me = (0, ge.f)(Me)), "0x00" === (0, ge.f)(Me)) return !1;
                if ("0x01" === (0, ge.f)(Me)) return !0;
                throw new _e.Cd(Me)
            }

            function ee(ve, Te = {}) {
                return Number(z(ve, Te))
            }

            function oe(ve, Te = {}) {
                let Me = (0, Ce.nr)(ve);
                return Te.size && (U(Me, {
                    size: Te.size
                }), Me = (0, ge.f)(Me, {
                    dir: "right"
                })), (new TextDecoder).decode(Me)
            }
        },
        9427: (ft, G, I) => {
            "use strict";
            I.d(G, {
                O0: () => z,
                nr: () => ve,
                qX: () => Me
            });
            var _e = I(2618),
                Ee = I(7812),
                ge = I(1587),
                Ce = I(9415),
                U = I(4439);
            const se = new TextEncoder;

            function z(Be, We = {}) {
                return "number" == typeof Be || "bigint" == typeof Be ? function Te(Be, We) {
                    return ve((0, U.eC)(Be, We))
                }(Be, We) : "boolean" == typeof Be ? function ie(Be, We = {}) {
                    const Ye = new Uint8Array(1);
                    return Ye[0] = Number(Be), "number" == typeof We.size ? ((0, Ce.Yf)(Ye, {
                        size: We.size
                    }), (0, ge.vk)(Ye, {
                        size: We.size
                    })) : Ye
                }(Be, We) : (0, Ee.v)(Be) ? ve(Be, We) : Me(Be, We)
            }
            const ee = {
                zero: 48,
                nine: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };

            function oe(Be) {
                return Be >= ee.zero && Be <= ee.nine ? Be - ee.zero : Be >= ee.A && Be <= ee.F ? Be - (ee.A - 10) : Be >= ee.a && Be <= ee.f ? Be - (ee.a - 10) : void 0
            }

            function ve(Be, We = {}) {
                let Ye = Be;
                We.size && ((0, Ce.Yf)(Ye, {
                    size: We.size
                }), Ye = (0, ge.vk)(Ye, {
                    dir: "right",
                    size: We.size
                }));
                let Je = Ye.slice(2);
                Je.length % 2 && (Je = `0${Je}`);
                const te = Je.length / 2,
                    Pe = new Uint8Array(te);
                for (let Oe = 0, J = 0; Oe < te; Oe++) {
                    const Ie = oe(Je.charCodeAt(J++)),
                        Xe = oe(Je.charCodeAt(J++));
                    if (void 0 === Ie || void 0 === Xe) throw new _e.G(`Invalid byte sequence ("${Je[J-2]}${Je[J-1]}" in "${Je}").`);
                    Pe[Oe] = 16 * Ie + Xe
                }
                return Pe
            }

            function Me(Be, We = {}) {
                const Ye = se.encode(Be);
                return "number" == typeof We.size ? ((0, Ce.Yf)(Ye, {
                    size: We.size
                }), (0, ge.vk)(Ye, {
                    dir: "right",
                    size: We.size
                })) : Ye
            }
        },
        4439: (ft, G, I) => {
            "use strict";
            I.d(G, {
                $G: () => oe,
                C4: () => se,
                NC: () => U,
                ci: () => z,
                eC: () => ie
            });
            var _e = I(8866),
                Ee = I(1587),
                ge = I(9415);
            const Ce = Array.from({
                length: 256
            }, (ve, Te) => Te.toString(16).padStart(2, "0"));

            function U(ve, Te = {}) {
                return "number" == typeof ve || "bigint" == typeof ve ? ie(ve, Te) : "string" == typeof ve ? oe(ve, Te) : "boolean" == typeof ve ? se(ve, Te) : z(ve, Te)
            }

            function se(ve, Te = {}) {
                const Me = `0x${Number(ve)}`;
                return "number" == typeof Te.size ? ((0, ge.Yf)(Me, {
                    size: Te.size
                }), (0, Ee.vk)(Me, {
                    size: Te.size
                })) : Me
            }

            function z(ve, Te = {}) {
                let Me = "";
                for (let We = 0; We < ve.length; We++) Me += Ce[ve[We]];
                const Be = `0x${Me}`;
                return "number" == typeof Te.size ? ((0, ge.Yf)(Be, {
                    size: Te.size
                }), (0, Ee.vk)(Be, {
                    dir: "right",
                    size: Te.size
                })) : Be
            }

            function ie(ve, Te = {}) {
                const {
                    signed: Me,
                    size: Be
                } = Te, We = BigInt(ve);
                let Ye;
                Be ? Ye = Me ? (1 n << 8 n * BigInt(Be) - 1 n) - 1 n : 2 n ** (8 n * BigInt(Be)) - 1 n : "number" == typeof ve && (Ye = BigInt(Number.MAX_SAFE_INTEGER));
                const Je = "bigint" == typeof Ye && Me ? -Ye - 1 n : 0;
                if (Ye && We > Ye || We < Je) {
                    const Pe = "bigint" == typeof ve ? "n" : "";
                    throw new _e.J5({
                        max: Ye ? `${Ye}${Pe}` : void 0,
                        min: `${Je}${Pe}`,
                        signed: Me,
                        size: Be,
                        value: `${ve}${Pe}`
                    })
                }
                const te = `0x${(Me&&We<0?(1n<<BigInt(8*Be))+BigInt(We):We).toString(16)}`;
                return Be ? (0, Ee.vk)(te, {
                    size: Be
                }) : te
            }
            const ee = new TextEncoder;

            function oe(ve, Te = {}) {
                return z(ee.encode(ve), Te)
            }
        },
        9766: (ft, G, I) => {
            "use strict";
            I.d(G, {
                i: () => Ee
            });
            var _e = I(7812);

            function Ee(ge) {
                if (66 !== ge.length || 0 !== ge.indexOf("[") || 65 !== ge.indexOf("]")) return null;
                const Ce = `0x${ge.slice(1,65)}`;
                return (0, _e.v)(Ce) ? Ce : null
            }
        },
        5276: (ft, G, I) => {
            "use strict";
            I.d(G, {
                c: () => Ce
            });
            var _e = I(6848),
                Ee = I(2618),
                ge = I(8169);

            function Ce(U, se) {
                if (!(U instanceof Ee.G)) return !1;
                const z = U.walk(ie => ie instanceof ge.Lu);
                return z instanceof ge.Lu && !!("ResolverNotFound" === z.data ? .errorName || "ResolverWildcardNotSupported" === z.data ? .errorName || z.reason ? .includes("Wildcard on non-extended resolvers is not supported") || "reverse" === se && z.reason === _e.$[50])
            }
        },
        1435: (ft, G, I) => {
            "use strict";
            I.d(G, {
                d: () => U
            });
            var _e = I(9427),
                Ee = I(4439),
                ge = I(383),
                Ce = I(9766);

            function U(se) {
                const z = new Uint8Array(32).fill(0);
                return se ? (0, Ce.i)(se) || (0, ge.w)((0, _e.qX)(se)) : (0, Ee.ci)(z)
            }
        },
        8821: (ft, G, I) => {
            "use strict";
            I.d(G, {
                V: () => se
            });
            var _e = I(770),
                Ee = I(9427),
                ge = I(4439),
                Ce = I(383),
                U = I(9766);

            function se(z) {
                let ie = new Uint8Array(32).fill(0);
                if (!z) return (0, ge.ci)(ie);
                const ee = z.split(".");
                for (let oe = ee.length - 1; oe >= 0; oe -= 1) {
                    const ve = (0, U.i)(ee[oe]),
                        Te = ve ? (0, Ee.O0)(ve) : (0, Ce.w)((0, Ee.qX)(ee[oe]), "bytes");
                    ie = (0, Ce.w)((0, _e.zo)([ie, Te]), "bytes")
                }
                return (0, ge.ci)(ie)
            }
        },
        2897: (ft, G, I) => {
            "use strict";
            I.d(G, {
                T: () => Ce
            });
            var _e = I(9427);

            function Ee(U) {
                return `[${U.slice(2)}]`
            }
            var ge = I(1435);

            function Ce(U) {
                const se = U.replace(/^\.|\.$/gm, "");
                if (0 === se.length) return new Uint8Array(1);
                const z = new Uint8Array((0, _e.qX)(se).byteLength + 2);
                let ie = 0;
                const ee = se.split(".");
                for (let oe = 0; oe < ee.length; oe++) {
                    let ve = (0, _e.qX)(ee[oe]);
                    ve.byteLength > 255 && (ve = (0, _e.qX)(Ee((0, ge.d)(ee[oe])))), z[ie] = ve.length, z.set(ve, ie + 1), ie += ve.length + 1
                }
                return z.byteLength !== ie + 1 ? z.slice(0, ie + 1) : z
            }
        },
        660: (ft, G, I) => {
            "use strict";
            I.d(G, {
                S: () => se
            });
            var _e = I(6577),
                Ee = I(2618),
                ge = I(8169),
                Ce = I(9450);
            const U = 3;

            function se(z, {
                abi: ie,
                address: ee,
                args: oe,
                docsPath: ve,
                functionName: Te,
                sender: Me
            }) {
                const {
                    code: Be,
                    data: We,
                    message: Ye,
                    shortMessage: Je
                } = z instanceof ge.VQ ? z : z instanceof Ee.G ? z.walk(Pe => "data" in Pe) || z.walk() : {}, te = z instanceof _e.wb ? new ge.Dk({
                    functionName: Te
                }) : [U, Ce.XS.code].includes(Be) && (We || Ye || Je) ? new ge.Lu({
                    abi: ie,
                    data: "object" == typeof We ? We.data : We,
                    functionName: Te,
                    message: Je ? ? Ye
                }) : z;
                return new ge.uq(te, {
                    abi: ie,
                    args: oe,
                    contractAddress: ee,
                    docsPath: ve,
                    functionName: Te,
                    sender: Me
                })
            }
        },
        2917: (ft, G, I) => {
            "use strict";
            I.d(G, {
                k: () => Ce
            });
            var _e = I(2618),
                Ee = I(7354);

            function Ce(U, se) {
                const z = (U.details || "").toLowerCase(),
                    ie = U.walk(ee => ee.code === Ee.M_.code);
                return ie instanceof _e.G ? new Ee.M_({
                    cause: U,
                    message: ie.details
                }) : Ee.M_.nodeMessage.test(z) ? new Ee.M_({
                    cause: U,
                    message: U.details
                }) : Ee.Hh.nodeMessage.test(z) ? new Ee.Hh({
                    cause: U,
                    maxFeePerGas: se ? .maxFeePerGas
                }) : Ee.G$.nodeMessage.test(z) ? new Ee.G$({
                    cause: U,
                    maxFeePerGas: se ? .maxFeePerGas
                }) : Ee.ZI.nodeMessage.test(z) ? new Ee.ZI({
                    cause: U,
                    nonce: se ? .nonce
                }) : Ee.vU.nodeMessage.test(z) ? new Ee.vU({
                    cause: U,
                    nonce: se ? .nonce
                }) : Ee.se.nodeMessage.test(z) ? new Ee.se({
                    cause: U,
                    nonce: se ? .nonce
                }) : Ee.C_.nodeMessage.test(z) ? new Ee.C_({
                    cause: U
                }) : Ee.WF.nodeMessage.test(z) ? new Ee.WF({
                    cause: U,
                    gas: se ? .gas
                }) : Ee.dR.nodeMessage.test(z) ? new Ee.dR({
                    cause: U,
                    gas: se ? .gas
                }) : Ee.pZ.nodeMessage.test(z) ? new Ee.pZ({
                    cause: U
                }) : Ee.cs.nodeMessage.test(z) ? new Ee.cs({
                    cause: U,
                    maxFeePerGas: se ? .maxFeePerGas,
                    maxPriorityFeePerGas: se ? .maxPriorityFeePerGas
                }) : new Ee.cj({
                    cause: U
                })
            }
        },
        7603: (ft, G, I) => {
            "use strict";

            function _e(Ee, {
                format: ge
            }) {
                if (!ge) return {};
                const Ce = {};
                return function U(z) {
                    const ie = Object.keys(z);
                    for (const ee of ie) ee in Ee && (Ce[ee] = Ee[ee]), z[ee] && "object" == typeof z[ee] && !Array.isArray(z[ee]) && U(z[ee])
                }(ge(Ee || {})), Ce
            }
            I.d(G, {
                K: () => _e
            })
        },
        7369: (ft, G, I) => {
            "use strict";
            I.d(G, {
                tG: () => ge
            });
            var _e = I(4439);
            const Ee = {
                legacy: "0x0",
                eip2930: "0x1",
                eip1559: "0x2"
            };

            function ge(U) {
                return { ...U,
                    gas: typeof U.gas < "u" ? (0, _e.eC)(U.gas) : void 0,
                    gasPrice: typeof U.gasPrice < "u" ? (0, _e.eC)(U.gasPrice) : void 0,
                    maxFeePerGas: typeof U.maxFeePerGas < "u" ? (0, _e.eC)(U.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: typeof U.maxPriorityFeePerGas < "u" ? (0, _e.eC)(U.maxPriorityFeePerGas) : void 0,
                    nonce: typeof U.nonce < "u" ? (0, _e.eC)(U.nonce) : void 0,
                    type: typeof U.type < "u" ? Ee[U.type] : void 0,
                    value: typeof U.value < "u" ? (0, _e.eC)(U.value) : void 0
                }
            }
        },
        4637: (ft, G, I) => {
            "use strict";

            function _e(Ee, ge, Ce) {
                return U => Ee[ge.name || Ce] ? .(U) ? ? ge(Ee, U)
            }
            I.d(G, {
                s: () => _e
            })
        },
        7467: (ft, G, I) => {
            "use strict";
            I.d(G, {
                e: () => se
            });
            var _e = I(9427),
                Ee = I(8045),
                Ce = I(383);
            const se = z => (z => (0, Ce.w)((0, _e.O0)(z)))((z => (0, Ee.r)(z))(z))
        },
        5360: (ft, G, I) => {
            "use strict";
            I.d(G, {
                o: () => se
            });
            var _e = I(8544),
                Ee = I(9427),
                ge = I(8045),
                Ce = I(383);
            const se = z => (0, _e.tP)((z => (0, Ce.w)((0, Ee.O0)(z)))((0, ge.r)(z)), 0, 4)
        },
        8045: (ft, G, I) => {
            "use strict";
            I.d(G, {
                r: () => ve
            });
            const U = /^tuple(?<array>(\[(\d*)\])*)$/;

            function se(Te) {
                let Me = Te.type;
                if (U.test(Te.type) && "components" in Te) {
                    Me = "(";
                    const Be = Te.components.length;
                    for (let Ye = 0; Ye < Be; Ye++) Me += se(Te.components[Ye]), Ye < Be - 1 && (Me += ", ");
                    const We = function _e(Te, Me) {
                        return Te.exec(Me) ? .groups
                    }(U, Te.type);
                    return Me += `)${We?.array??""}`, se({ ...Te,
                        type: Me
                    })
                }
                return "indexed" in Te && Te.indexed && (Me = `${Me} indexed`), Te.name ? `${Me} ${Te.name}` : Me
            }

            function z(Te) {
                let Me = "";
                const Be = Te.length;
                for (let We = 0; We < Be; We++) Me += se(Te[We]), We !== Be - 1 && (Me += ", ");
                return Me
            }
            var ee = I(2618);
            const ve = Te => {
                const Me = "string" == typeof Te ? Te : function ie(Te) {
                    return "function" === Te.type ? `function ${Te.name}(${z(Te.inputs)})${Te.stateMutability&&"nonpayable"!==Te.stateMutability?` ${Te.stateMutability}`:""}${Te.outputs.length?` returns (${z(Te.outputs)})`:""}` : "event" === Te.type ? `event ${Te.name}(${z(Te.inputs)})` : "error" === Te.type ? `error ${Te.name}(${z(Te.inputs)})` : "constructor" === Te.type ? `constructor(${z(Te.inputs)})${"payable"===Te.stateMutability?" payable":""}` : "fallback" === Te.type ? "fallback()" : "receive() external payable"
                }(Te);
                return function oe(Te) {
                    let Me = !0,
                        Be = "",
                        We = 0,
                        Ye = "",
                        Je = !1;
                    for (let te = 0; te < Te.length; te++) {
                        const Pe = Te[te];
                        if (["(", ")", ","].includes(Pe) && (Me = !0), "(" === Pe && We++, ")" === Pe && We--, Me) {
                            if (0 === We) {
                                if (" " === Pe && ["event", "function", ""].includes(Ye)) Ye = "";
                                else if (Ye += Pe, ")" === Pe) {
                                    Je = !0;
                                    break
                                }
                                continue
                            }
                            if (" " === Pe) {
                                "," !== Te[te - 1] && "," !== Be && ",(" !== Be && (Be = "", Me = !1);
                                continue
                            }
                            Ye += Pe, Be += Pe
                        }
                    }
                    if (!Je) throw new ee.G("Unable to normalize signature.");
                    return Ye
                }(Me)
            }
        },
        383: (ft, G, I) => {
            "use strict";

            function _e(et) {
                if (!Number.isSafeInteger(et) || et < 0) throw new Error(`Wrong positive integer: ${et}`)
            }

            function ge(et, ...st) {
                if (!(et instanceof Uint8Array)) throw new Error("Expected Uint8Array");
                if (st.length > 0 && !st.includes(et.length)) throw new Error(`Expected Uint8Array of length ${st}, not of length=${et.length}`)
            }

            function U(et, st = !0) {
                if (et.destroyed) throw new Error("Hash instance has been destroyed");
                if (st && et.finished) throw new Error("Hash#digest() has already been called")
            }
            I.d(G, {
                w: () => sr
            });
            const ee = BigInt(2 ** 32 - 1),
                oe = BigInt(32);

            function ve(et, st = !1) {
                return st ? {
                    h: Number(et & ee),
                    l: Number(et >> oe & ee)
                } : {
                    h: 0 | Number(et >> oe & ee),
                    l: 0 | Number(et & ee)
                }
            }

            function Te(et, st = !1) {
                let pt = new Uint32Array(et.length),
                    Vt = new Uint32Array(et.length);
                for (let Zt = 0; Zt < et.length; Zt++) {
                    const {
                        h: gn,
                        l: Tn
                    } = ve(et[Zt], st);
                    [pt[Zt], Vt[Zt]] = [gn, Tn]
                }
                return [pt, Vt]
            }
            if (68 !== new Uint8Array(new Uint32Array([287454020]).buffer)[0]) throw new Error("Non little-endian hardware is not supported");

            function vn(et) {
                if ("string" == typeof et && (et = function Hn(et) {
                        if ("string" != typeof et) throw new Error("utf8ToBytes expected string, got " + typeof et);
                        return new Uint8Array((new TextEncoder).encode(et))
                    }(et)), !(et => et instanceof Uint8Array)(et)) throw new Error("expected Uint8Array, got " + typeof et);
                return et
            }
            class ts {
                clone() {
                    return this._cloneInto()
                }
            }
            const [Ui, Ei, Ii] = [
                [],
                [],
                []
            ], Mi = BigInt(0), fi = BigInt(1), yi = BigInt(2), oi = BigInt(7), bi = BigInt(256), qn = BigInt(113);
            for (let et = 0, st = fi, pt = 1, Vt = 0; et < 24; et++) {
                [pt, Vt] = [Vt, (2 * pt + 3 * Vt) % 5], Ui.push(2 * (5 * Vt + pt)), Ei.push((et + 1) * (et + 2) / 2 % 64);
                let Zt = Mi;
                for (let gn = 0; gn < 7; gn++) st = (st << fi ^ (st >> oi) * qn) % bi, st & yi && (Zt ^= fi << (fi << BigInt(gn)) - fi);
                Ii.push(Zt)
            }
            const [Wi, xi] = Te(Ii, !0), pi = (et, st, pt) => pt > 32 ? ((et, st, pt) => st << pt - 32 | et >>> 64 - pt)(et, st, pt) : ((et, st, pt) => et << pt | st >>> 32 - pt)(et, st, pt), Li = (et, st, pt) => pt > 32 ? ((et, st, pt) => et << pt - 32 | st >>> 64 - pt)(et, st, pt) : ((et, st, pt) => st << pt | et >>> 32 - pt)(et, st, pt);
            class Si extends ts {
                constructor(st, pt, Vt, Zt = !1, gn = 24) {
                    if (super(), this.blockLen = st, this.suffix = pt, this.outputLen = Vt, this.enableXOF = Zt, this.rounds = gn, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, _e(Vt), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
                    var et;
                    this.state = new Uint8Array(200), this.state32 = (et = this.state, new Uint32Array(et.buffer, et.byteOffset, Math.floor(et.byteLength / 4)))
                }
                keccak() {
                    (function Fi(et, st = 24) {
                        const pt = new Uint32Array(10);
                        for (let Vt = 24 - st; Vt < 24; Vt++) {
                            for (let Tn = 0; Tn < 10; Tn++) pt[Tn] = et[Tn] ^ et[Tn + 10] ^ et[Tn + 20] ^ et[Tn + 30] ^ et[Tn + 40];
                            for (let Tn = 0; Tn < 10; Tn += 2) {
                                const Ni = (Tn + 8) % 10,
                                    yr = (Tn + 2) % 10,
                                    br = pt[yr],
                                    as = pt[yr + 1],
                                    ba = pi(br, as, 1) ^ pt[Ni],
                                    zi = Li(br, as, 1) ^ pt[Ni + 1];
                                for (let ks = 0; ks < 50; ks += 10) et[Tn + ks] ^= ba, et[Tn + ks + 1] ^= zi
                            }
                            let Zt = et[2],
                                gn = et[3];
                            for (let Tn = 0; Tn < 24; Tn++) {
                                const Ni = Ei[Tn],
                                    yr = pi(Zt, gn, Ni),
                                    br = Li(Zt, gn, Ni),
                                    as = Ui[Tn];
                                Zt = et[as], gn = et[as + 1], et[as] = yr, et[as + 1] = br
                            }
                            for (let Tn = 0; Tn < 50; Tn += 10) {
                                for (let Ni = 0; Ni < 10; Ni++) pt[Ni] = et[Tn + Ni];
                                for (let Ni = 0; Ni < 10; Ni++) et[Tn + Ni] ^= ~pt[(Ni + 2) % 10] & pt[(Ni + 4) % 10]
                            }
                            et[0] ^= Wi[Vt], et[1] ^= xi[Vt]
                        }
                        pt.fill(0)
                    })(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(st) {
                    U(this);
                    const {
                        blockLen: pt,
                        state: Vt
                    } = this, Zt = (st = vn(st)).length;
                    for (let gn = 0; gn < Zt;) {
                        const Tn = Math.min(pt - this.pos, Zt - gn);
                        for (let Ni = 0; Ni < Tn; Ni++) Vt[this.pos++] ^= st[gn++];
                        this.pos === pt && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    const {
                        state: st,
                        suffix: pt,
                        pos: Vt,
                        blockLen: Zt
                    } = this;
                    st[Vt] ^= pt, 128 & pt && Vt === Zt - 1 && this.keccak(), st[Zt - 1] ^= 128, this.keccak()
                }
                writeInto(st) {
                    U(this, !1), ge(st), this.finish();
                    const pt = this.state,
                        {
                            blockLen: Vt
                        } = this;
                    for (let Zt = 0, gn = st.length; Zt < gn;) {
                        this.posOut >= Vt && this.keccak();
                        const Tn = Math.min(Vt - this.posOut, gn - Zt);
                        st.set(pt.subarray(this.posOut, this.posOut + Tn), Zt), this.posOut += Tn, Zt += Tn
                    }
                    return st
                }
                xofInto(st) {
                    if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
                    return this.writeInto(st)
                }
                xof(st) {
                    return _e(st), this.xofInto(new Uint8Array(st))
                }
                digestInto(st) {
                    if (function se(et, st) {
                            ge(et);
                            const pt = st.outputLen;
                            if (et.length < pt) throw new Error(`digestInto() expects output buffer of length at least ${pt}`)
                        }(st, this), this.finished) throw new Error("digest() was already called");
                    return this.writeInto(st), this.destroy(), st
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(st) {
                    const {
                        blockLen: pt,
                        suffix: Vt,
                        outputLen: Zt,
                        rounds: gn,
                        enableXOF: Tn
                    } = this;
                    return st || (st = new Si(pt, Vt, Zt, Tn, gn)), st.state32.set(this.state32), st.pos = this.pos, st.posOut = this.posOut, st.finished = this.finished, st.rounds = gn, st.suffix = Vt, st.outputLen = Zt, st.enableXOF = Tn, st.destroyed = this.destroyed, st
                }
            }
            const As = ((et, st, pt) => function Hs(et) {
                const st = Vt => et().update(vn(Vt)).digest(),
                    pt = et();
                return st.outputLen = pt.outputLen, st.blockLen = pt.blockLen, st.create = () => et(), st
            }(() => new Si(136, 1, 32)))();
            var Un = I(7812),
                zs = I(9427),
                Ys = I(4439);

            function sr(et, st) {
                const pt = st || "hex",
                    Vt = As((0, Un.v)(et, {
                        strict: !1
                    }) ? (0, zs.O0)(et) : et);
                return "bytes" === pt ? Vt : (0, Ys.NC)(Vt)
            }
        },
        7447: (ft, G, I) => {
            "use strict";
            I.d(G, {
                S: () => ge
            });
            var _e = I(9671);
            const Ee = new Map;

            function ge({
                fn: Ce,
                id: U,
                shouldSplitBatch: se,
                wait: z = 0,
                sort: ie
            }) {
                const ee = function() {
                        var Be = (0, _e.Z)(function*() {
                            const We = Te();
                            oe();
                            const Ye = We.map(({
                                args: Je
                            }) => Je);
                            0 !== Ye.length && Ce(Ye).then(Je => {
                                ie && Array.isArray(Je) && Je.sort(ie);
                                for (let te = 0; te < We.length; te++) {
                                    const {
                                        pendingPromise: Pe
                                    } = We[te];
                                    Pe.resolve ? .([Je[te], Je])
                                }
                            }).catch(Je => {
                                for (let te = 0; te < We.length; te++) {
                                    const {
                                        pendingPromise: Pe
                                    } = We[te];
                                    Pe.reject ? .(Je)
                                }
                            })
                        });
                        return function() {
                            return Be.apply(this, arguments)
                        }
                    }(),
                    oe = () => Ee.delete(U),
                    Te = () => Ee.get(U) || [],
                    Me = Be => Ee.set(U, [...Te(), Be]);
                return {
                    flush: oe,
                    schedule: Be => (0, _e.Z)(function*() {
                        const We = {},
                            Ye = new Promise((Pe, Oe) => {
                                We.resolve = Pe, We.reject = Oe
                            });
                        return se ? .([...Te().map(({
                            args: Be
                        }) => Be), Be]) && ee(), Te().length > 0 ? (Me({
                            args: Be,
                            pendingPromise: We
                        }), Ye) : (Me({
                            args: Be,
                            pendingPromise: We
                        }), setTimeout(ee, z), Ye)
                    })()
                }
            }
        },
        38: (ft, G, I) => {
            "use strict";
            I.d(G, {
                P: () => _e
            });
            const _e = (Ee, ge, Ce) => JSON.stringify(Ee, (U, se) => {
                const z = "bigint" == typeof se ? se.toString() : se;
                return "function" == typeof ge ? ge(U, z) : z
            }, Ce)
        },
        9056: (ft, G, I) => {
            "use strict";
            I.d(G, {
                F: () => se
            });
            var _e = I(277),
                Ee = I(8355),
                ge = I(7354),
                Ce = I(8284),
                U = I(2099);

            function se(z) {
                const {
                    account: ie,
                    gasPrice: ee,
                    maxFeePerGas: oe,
                    maxPriorityFeePerGas: ve,
                    to: Te
                } = z, Me = ie ? (0, _e.T)(ie) : void 0;
                if (Me && !(0, U.U)(Me.address)) throw new Ee.b({
                    address: Me.address
                });
                if (Te && !(0, U.U)(Te)) throw new Ee.b({
                    address: Te
                });
                if (typeof ee < "u" && (typeof oe < "u" || typeof ve < "u")) throw new Ce.xY;
                if (oe && oe > 2 n ** 256 n - 1 n) throw new ge.Hh({
                    maxFeePerGas: oe
                });
                if (ve && oe && ve > oe) throw new ge.cs({
                    maxFeePerGas: oe,
                    maxPriorityFeePerGas: ve
                })
            }
        },
        8004: (ft, G, I) => {
            "use strict";
            I.d(G, {
                d: () => ge
            });
            var _e = I(9744),
                Ee = I(4102);

            function ge(Ce, U = "wei") {
                return (0, Ee.b)(Ce, _e.ez[U])
            }
        },
        9077: (ft, G, I) => {
            "use strict";
            I.d(G, {
                o: () => ge
            });
            var _e = I(9744),
                Ee = I(4102);

            function ge(Ce, U = "wei") {
                return (0, Ee.b)(Ce, _e.Zn[U])
            }
        },
        4102: (ft, G, I) => {
            "use strict";

            function _e(Ee, ge) {
                let Ce = Ee.toString();
                const U = Ce.startsWith("-");
                U && (Ce = Ce.slice(1)), Ce = Ce.padStart(ge, "0");
                let [se, z] = [Ce.slice(0, Ce.length - ge), Ce.slice(Ce.length - ge)];
                return z = z.replace(/(0+)$/, ""), `${U?"-":""}${se||"0"}${z?`.${z}`:""}`
            }
            I.d(G, {
                b: () => _e
            })
        },
        4713: ft => {
            "use strict";
            ft.exports = JSON.parse('{"name":"@wert-io/widget-initializer","version":"4.0.2","description":"WertWidget helper","main":"index.js","types":"index.d.ts","repository":{"type":"git","url":"https://github.com/wert-io/widget-initializer.git"},"scripts":{"build":"tsc -p .","build-script":"rollup -c","test":"jest --ci --reporters=default --reporters=jest-junit"},"author":"@wert-io","license":"ISC","devDependencies":{"@babel/core":"^7.13.16","@babel/preset-env":"^7.13.15","@rollup/plugin-babel":"^5.3.0","@rollup/plugin-commonjs":"^18.0.0","@rollup/plugin-json":"^4.1.0","@rollup/plugin-node-resolve":"^13.1.3","@typescript-eslint/eslint-plugin":"^4.28.1","@typescript-eslint/parser":"^4.28.1","eslint":"^7.25.0","eslint-plugin-import":"^2.22.1","jest":"^27.0.5","jest-junit":"^12.0.0","rollup":"^2.45.2","typescript":"^4.3.5"},"dependencies":{},"jest-junit":{"outputDirectory":"reports","outputName":"jest-junit.xml","ancestorSeparator":" \u203a ","uniqueOutputName":"false","suiteNameTemplate":"{filepath}","classNameTemplate":"{classname}","titleTemplate":"{title}"}}')
        },
        625: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"BSC_USDT_Token","abi":[{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"_decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]}')
        },
        6530: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"ETH_USDT_Token","abi":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_upgradedAddress","type":"address"}],"name":"deprecate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"deprecated","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_evilUser","type":"address"}],"name":"addBlackList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"upgradedAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"maximumFee","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"unpause","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_maker","type":"address"}],"name":"getBlackListStatus","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"address"}],"name":"allowed","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"who","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"pause","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newBasisPoints","type":"uint256"},{"name":"newMaxFee","type":"uint256"}],"name":"setParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"issue","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"redeem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"basisPointsRate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"isBlackListed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_clearedUser","type":"address"}],"name":"removeBlackList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"MAX_UINT","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blackListedUser","type":"address"}],"name":"destroyBlackFunds","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_initialSupply","type":"uint256"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_decimals","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"amount","type":"uint256"}],"name":"Issue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"amount","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newAddress","type":"address"}],"name":"Deprecate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"feeBasisPoints","type":"uint256"},{"indexed":false,"name":"maxFee","type":"uint256"}],"name":"Params","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_blackListedUser","type":"address"},{"indexed":false,"name":"_balance","type":"uint256"}],"name":"DestroyedBlackFunds","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_user","type":"address"}],"name":"AddedBlackList","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_user","type":"address"}],"name":"RemovedBlackList","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[],"name":"Pause","type":"event"},{"anonymous":false,"inputs":[],"name":"Unpause","type":"event"}]}')
        },
        3447: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"POLY _USDT_Token","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"address payable","name":"relayerAddress","type":"address"},{"indexed":false,"internalType":"bytes","name":"functionSignature","type":"bytes"}],"name":"MetaTransactionExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CHILD_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CHILD_CHAIN_ID_BYTES","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPOSITOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERC712_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_CHAIN_ID_BYTES","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"}],"name":"changeName","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes","name":"depositData","type":"bytes"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"bytes","name":"functionSignature","type":"bytes"},{"internalType":"bytes32","name":"sigR","type":"bytes32"},{"internalType":"bytes32","name":"sigS","type":"bytes32"},{"internalType":"uint8","name":"sigV","type":"uint8"}],"name":"executeMetaTransaction","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getDomainSeperator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint8","name":"decimals_","type":"uint8"},{"internalType":"address","name":"childChainManager","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]}')
        },
        7008: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"Presale","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"prevValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MaxTokensUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_start","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_end","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SaleTimeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"prevValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SaleTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokensBought","type":"uint256"},{"indexed":true,"internalType":"address","name":"purchaseToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountPaid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"usdEq","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"USDTInterface","outputs":[{"internalType":"contract IERC20Upgradeable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aggregatorInterface","outputs":[{"internalType":"contract Aggregator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseDecimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"bnbBuyHelper","outputs":[{"internalType":"uint256","name":"bnbAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buyWithBNB","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buyWithUSDT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"calculatePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxTokensToBuy","type":"uint256"}],"name":"changeMaxTokensToBuy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newPaymentWallet","type":"address"}],"name":"changePaymentWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[][3]","name":"_rounds","type":"uint256[][3]"}],"name":"changeRoundsData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"changeSaleTimes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentStep","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"incrementCurrentStep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"address","name":"_usdt","type":"address"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"uint256[][3]","name":"_rounds","type":"uint256[][3]"},{"internalType":"uint256","name":"_maxTokensToBuy","type":"uint256"},{"internalType":"address","name":"_paymentWallet","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxTokensToBuy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"prevCheckpoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"remainingTokensTracker","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_no","type":"uint256"}],"name":"roundDetails","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"rounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_step","type":"uint256"},{"internalType":"uint256","name":"_checkpoint","type":"uint256"}],"name":"setCurrentStep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTokensSold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trackRemainingTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usdRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"usdtBuyHelper","outputs":[{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]}')
        },
        949: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"Presale","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"prevValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ClaimStartUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"prevValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MaxTokensUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_start","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_end","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SaleTimeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"prevValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SaleTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"noOfTokens","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokensBought","type":"uint256"},{"indexed":true,"internalType":"address","name":"purchaseToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountPaid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"usdEq","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokensBought","type":"uint256"},{"indexed":true,"internalType":"address","name":"purchaseToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountPaid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"usdEq","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensBoughtAndStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensClaimedAndStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"USDTInterface","outputs":[{"internalType":"contract IERC20Upgradeable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newNoOfTokens","type":"uint256"},{"internalType":"uint256","name":"_newPrice","type":"uint256"},{"internalType":"uint256","name":"_newTime","type":"uint256"}],"name":"addNewRound","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"aggregatorInterface","outputs":[{"internalType":"contract Aggregator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseDecimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_usersToBlacklist","type":"address[]"}],"name":"blacklistUsers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"bool","name":"stake","type":"bool"}],"name":"buyWithETHWert","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"stake","type":"bool"}],"name":"buyWithEth","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"stake","type":"bool"}],"name":"buyWithUSDT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"calculatePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimStart","type":"uint256"}],"name":"changeClaimStart","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"uint256","name":"_newNoOfTokens","type":"uint256"},{"internalType":"uint256","name":"_newPrice","type":"uint256"},{"internalType":"uint256","name":"_newTime","type":"uint256"}],"name":"changeIndividualRoundData","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxTokensToBuy","type":"uint256"}],"name":"changeMaxTokensToBuy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newPaymentWallet","type":"address"}],"name":"changePaymentWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[][3]","name":"_rounds","type":"uint256[][3]"}],"name":"changeRoundsData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"changeSaleTimes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claim","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimAndStake","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentStep","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dynamicTimeFlag","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ethBuyHelper","outputs":[{"internalType":"uint256","name":"ethAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"incrementCurrentStep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"address","name":"_usdt","type":"address"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"uint256[][3]","name":"_rounds","type":"uint256[][3]"},{"internalType":"uint256","name":"_maxTokensToBuy","type":"uint256"},{"internalType":"address","name":"_paymentWallet","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isBlacklisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokensToBuy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"prevCheckpoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"remainingTokensTracker","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userToRemoveFromBlacklist","type":"address[]"}],"name":"removeFromBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userToRemoveFromWhitelist","type":"address[]"}],"name":"removeFromWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addressesToRemoveFromWhitelist","type":"address[]"}],"name":"removeFromWhitelistForWERT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_no","type":"uint256"}],"name":"roundDetails","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"rounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"saleToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"setClaimWhitelistStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_step","type":"uint256"},{"internalType":"uint256","name":"_checkpoint","type":"uint256"}],"name":"setCurrentStep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_dynamicTimeFlag","type":"bool"}],"name":"setDynamicTimeFlag","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_status","type":"bool"}],"name":"setStakeingWhitelistStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_stakingManagerAddress","type":"address"}],"name":"setStakingManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_timeConstant","type":"uint256"}],"name":"setTimeConstant","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakeingWhitelistStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingManagerInterface","outputs":[{"internalType":"contract StakingManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimStart","type":"uint256"},{"internalType":"uint256","name":"noOfTokens","type":"uint256"},{"internalType":"address","name":"_saleToken","type":"address"},{"internalType":"address","name":"_stakingManagerAddress","type":"address"}],"name":"startClaim","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timeConstant","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalBoughtAndStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTokensSold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trackRemainingTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_users","type":"address[]"},{"internalType":"uint256[]","name":"_userDeposits","type":"uint256[]"}],"name":"updateFromBSC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usdRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"usdtBuyHelper","outputs":[{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wertWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"whitelistClaimOnly","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_usersToWhitelist","type":"address[]"}],"name":"whitelistUsers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_addressesToWhitelist","type":"address[]"}],"name":"whitelistUsersForWERT","outputs":[],"stateMutability":"nonpayable","type":"function"}]}')
        },
        1887: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"Presale","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"prevValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MaxTokensUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_start","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_end","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SaleTimeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"key","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"prevValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"SaleTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"noOfTokens","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokensBought","type":"uint256"},{"indexed":true,"internalType":"address","name":"purchaseToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountPaid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"usdEq","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TokensBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"USDTInterface","outputs":[{"internalType":"contract IERC20Upgradeable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"aggregatorInterface","outputs":[{"internalType":"contract Aggregator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseDecimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_usersToBlacklist","type":"address[]"}],"name":"blacklistUsers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buyWithMATIC","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buyWithUSDT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"calculatePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxTokensToBuy","type":"uint256"}],"name":"changeMaxTokensToBuy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newPaymentWallet","type":"address"}],"name":"changePaymentWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[][3]","name":"_rounds","type":"uint256[][3]"}],"name":"changeRoundsData","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"changeSaleTimes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"checkPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentStep","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dynamicTimeFlag","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"endTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"incrementCurrentStep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oracle","type":"address"},{"internalType":"address","name":"_usdt","type":"address"},{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"},{"internalType":"uint256[][3]","name":"_rounds","type":"uint256[][3]"},{"internalType":"uint256","name":"_maxTokensToBuy","type":"uint256"},{"internalType":"address","name":"_paymentWallet","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isBlacklisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isWhitelisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"maticBuyHelper","outputs":[{"internalType":"uint256","name":"maticAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokensToBuy","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"prevCheckpoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"remainingTokensTracker","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userToRemoveFromBlacklist","type":"address[]"}],"name":"removeFromBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_userToRemoveFromWhitelist","type":"address[]"}],"name":"removeFromWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_no","type":"uint256"}],"name":"roundDetails","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"rounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"saleToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"setAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_step","type":"uint256"},{"internalType":"uint256","name":"_checkpoint","type":"uint256"}],"name":"setCurrentStep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_dynamicTimeFlag","type":"bool"}],"name":"setDynamicTimeFlag","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_timeConstant","type":"uint256"}],"name":"setTimeConstant","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"timeConstant","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTokensSold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trackRemainingTokens","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usdRaised","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"usdtBuyHelper","outputs":[{"internalType":"uint256","name":"usdPrice","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_usersToWhitelist","type":"address[]"}],"name":"whitelistUsers","outputs":[],"stateMutability":"nonpayable","type":"function"}]}')
        },
        3997: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"Staking","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"prevPlan","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPlan","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"HarvestRewards","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"MULTIPLIER_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rewardTokenAddress","type":"address"},{"internalType":"address","name":"_presale","type":"address"},{"internalType":"uint256","name":"_rewardTokensPerBlock","type":"uint256"},{"internalType":"uint256","name":"_endBlock","type":"uint256"}],"name":"__stakingManager_init","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"actualTokensStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_noOfDays","type":"uint256[]"},{"internalType":"uint256[]","name":"_multiplier","type":"uint256[]"}],"name":"addPlans","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"claimStart","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint256","name":"_planId","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"depositByPresale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvestLock","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"harvestRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockedTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"plan","outputs":[{"internalType":"uint256","name":"noOfDays","type":"uint256"},{"internalType":"uint256","name":"multiplier","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"planId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"poolStakers","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"multiplierAmount","type":"uint256"},{"internalType":"uint256","name":"stakedTime","type":"uint256"},{"internalType":"uint256","name":"lockedTime","type":"uint256"},{"internalType":"uint256","name":"userPlan","type":"uint256"},{"internalType":"uint256","name":"lastUpdatedBlock","type":"uint256"},{"internalType":"uint256","name":"Harvestedrewards","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"presaleContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardTokensPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimStart","type":"uint256"}],"name":"setClaimStart","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_claimTime","type":"uint256"}],"name":"setClaimTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_endBlock","type":"uint256"}],"name":"setEndBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"_harvestlock","type":"bool"}],"name":"setHarvestLock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_time","type":"uint256"}],"name":"setLockedTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_presale","type":"address"}],"name":"setPresale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeToken","type":"address"}],"name":"setStakeToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakeToken","outputs":[{"internalType":"contract IERC20Upgradeable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokensStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokensStakedByPresale","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userLockedRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"users","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}]}')
        },
        5525: ft => {
            "use strict";
            ft.exports = JSON.parse('{"contractName":"Token","abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"companyReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidityReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"presaleReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakingReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}]}')
        }
    },
    ft => {
        ft(ft.s = 4691)
    }
]);